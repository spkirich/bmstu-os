      Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 1

020A:0000  1828			data_66		dw	1828h
020A:0002  0010			data_67		dw	10h
020A:0004  0808			data_68		dw	808h
020A:0006  0003			data_69		dw	3
020A:0008  02 67 2D				add	ah,[bx+2Dh]
020A:000B  27					daa				; Decimal adjust
020A:000C			loc_4:
020A:000C  9028			data_71		dw	9028h
020A:000E  A02B			data_72		dw	0A02Bh
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_10		proc	near
020A:0010  1FBF			data_73		dw	1FBFh
020A:0012  00 4F 0D				add	[bx+0Dh],cl
020A:0015  0E					push	cs
020A:0016  0000 0000		data_75		dw	0, 0
020A:001A  AE9C 148F		data_79		dw	0AE9Ch, 148Fh
020A:001E  961F A3B9		data_81		dw	961Fh, 0A3B9h
020A:0022  00FF 0201		data_84		dd	20100FFh
020A:0026  03			data_85		db	3
020A:0027  04			data_86		db	4
020A:0028  05 0714				add	ax,714h
020A:002B  38			data_88		db	38h
020A:002C  3A39			data_89		dw	3A39h
020A:002E  3B 3C				cmp	di,[si]
020A:0030  3D 3F3E				cmp	ax,3F3Eh
020A:0033  000C			data_92		dw	0Ch
020A:0035  080F			data_93		dw	80Fh
020A:0037  0000			data_94		dw	0
020A:0039  00 00				add	[bx+si],al
020A:003B  00			data_96		db	0
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:003C			loc_6:
020A:003C  10			data_97		db	10h
020A:003D  0E					push	cs
020A:003E  00 FF				add	bh,bh
020A:0040  50					push	ax
020A:0041  18 10				sbb	[bx+si],dl
020A:0043  00 10				add	[bx+si],dl
020A:0045  00 03				add	[bp+di],al
020A:0047  00 02				add	[bp+si],al
020A:0049  67					db	67h
020A:004A  5F					pop	di
020A:004B  4F					dec	di
020A:004C  50					push	ax
020A:004D  82 55 81 BF				adc	byte ptr [di-7Fh],0BFh
020A:0051  1F					pop	ds
020A:0052  00 4F 0D				add	[bx+0Dh],cl
020A:0055  0E					push	cs
020A:0056  00 00				add	[bx+si],al
020A:0058  00 00				add	[bx+si],al
020A:005A  9C					pushf				; Push flags
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 2

020A:005B  8E					db	8Eh
020A:005C  8F			data_100	db	8Fh
020A:005D  28 1F				sub	[bx],bl
020A:005F  96					xchg	ax,si
020A:0060  B9 FFA3				mov	cx,0FFA3h
020A:0063  00 01				add	[bx+di],al
020A:0065  02 03				add	al,[bp+di]
020A:0067  04 05				add	al,5
020A:0069  14 07				adc	al,7
020A:006B  38 39				cmp	[bx+di],bh
020A:006D  3A 3B				cmp	bh,[bp+di]
020A:006F  3C 3D				cmp	al,3Dh			; '='
020A:0071  3E					db	3Eh
020A:0072  0C3F 0F00		data_107	dw	0C3Fh, 0F00h
020A:0076  0008 0000		data_108	dw	8, 0
020A:007A  00 00				add	[bx+si],al
020A:007C  10 0E FF00				adc	byte ptr ds:[0FF00h],cl	; (0700:FF00=9Ah)
020A:0080  1850			data_109	dw	1850h
020A:0082  0010			data_110	dw	10h
020A:0084  10 00				adc	[bx+si],al
020A:0086  03 00				add	ax,[bx+si]
020A:0088  03 A6 4F5F				add	sp,[bp+4F5Fh]
020A:008C  50					push	ax
020A:008D  82 55 81 BF				adc	byte ptr [di-7Fh],0BFh
020A:0091  1F					pop	ds
020A:0092  4D00			data_113	dw	4D00h
020A:0094  0B 0C				or	cx,[si]
020A:0096  0000			data_114	dw	0
020A:0098  00 00				add	[bx+si],al
020A:009A  83 A5 285D 0D			and	word ptr ds:[285Dh][di],0Dh	; (4FD6:285D=20Ah)
020A:009F  63					db	63h
020A:00A0  BA FFA3				mov	dx,0FFA3h
020A:00A3  00 08				add	[bx+si],cl
020A:00A5  08 08				or	[bx+si],cl
020A:00A7  08 08				or	[bx+si],cl
020A:00A9  08 08				or	[bx+si],cl
020A:00AB  10 18				adc	[bx+si],bl
020A:00AD  18 18				sbb	[bx+si],bl
020A:00AF  18 18				sbb	[bx+si],bl
020A:00B1  18 18				sbb	[bx+si],bl
020A:00B3  0E					push	cs
020A:00B4  00 0F				add	[bx],cl
020A:00B6  08 00				or	[bx+si],al
020A:00B8  00 00				add	[bx+si],al
020A:00BA  00 00				add	[bx+si],al
020A:00BC  10 0A				adc	[bp+si],cl
020A:00BE  00 FF				add	bh,bh
020A:00C0  5E					pop	si
020A:00C1  32 08				xor	cl,[bx+si]
020A:00C3  00 97 0F01				add	byte ptr ds:[0F01h][bx],dl	; (4FD6:0F01=0)
020A:00C7  00 06 6DE7				add	byte ptr ds:[6DE7h],al	; (4FD6:6DE7=0FFh)
020A:00CB			loc_9:
020A:00CB  5D					pop	bp
020A:00CC  5E					pop	si
020A:00CD  90					nop
020A:00CE  61					db	61h
020A:00CF  8F					db	8Fh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 3

020A:00D0  BF 001F				mov	di,1Fh
020A:00D3  0040			data_116	dw	40h			; Data table (indexed access)
020A:00D5  00 00				add	[bx+si],al
020A:00D7  00 00				add	[bx+si],al
020A:00D9  00 A2 998E				add	[bp+si-6672h],ah
020A:00DD  2F					das				; Decimal adjust
020A:00DE  00 A1 E3B9				add	byte ptr ds:[0E3B9h][bx+di],ah	; (4FD6:E3B9=0FFh)
020A:00E2  FF 00				inc	word ptr [bx+si]
020A:00E4  01 02				add	[bp+si],ax
020A:00E6  03 04				add	ax,[si]
020A:00E8  05 0714				add	ax,714h
020A:00EB  38 39				cmp	[bx+di],bh
020A:00ED  3A 3B				cmp	bh,[bp+di]
020A:00EF  3C 3D				cmp	al,3Dh			; '='
020A:00F1  3E					db	3Eh
020A:00F2  3F					aas				; Ascii adjust
020A:00F3  01 00				add	[bx+si],ax
020A:00F5  0F					pop	cs			; Dangerous 8088 only
020A:00F6  0007[00]				db	7 dup (0)
020A:00FD  05 FF0F				add	ax,0FF0Fh
020A:0100  28			data_118	db	28h			; Data table (indexed access)
020A:0101  18 0E 0800				sbb	byte ptr ds:[800h],cl	; (4FD6:0800=40h)
020A:0105  09 03				or	[bp+di],ax
020A:0107  00 02				add	[bp+si],al
020A:0109  A3 272D				mov	word ptr ds:[272Dh],ax	; (4FD6:272D=7688h)
020A:010C  9028 A02B		data_121	dd	0A02B9028h
020A:0110  1FBF 4D00		data_122	dd	4D001FBFh
020A:0114  0C0B 0000		data_124	dd	00C0Bh
020A:0118  0000 A583		data_128	dd	0A5830000h
020A:011C  145D 631F		data_131	dd	631F145Dh
020A:0120  A3BA 00FF		data_132	dd	0FFA3BAh
020A:0124  0201 0403		data_134	dd	4030201h
020A:0128  1405 3807		data_138	dd	38071405h
020A:012C  3A39 3C3B		data_140	dd	3C3B3A39h
020A:0130  3E3D 083F		data_141	dd	83F3E3Dh
020A:0134  00			data_142	db	0
020A:0135  0F					pop	cs			; Dangerous 8088 only
020A:0136  00 00				add	[bx+si],al
020A:0138  00 00				add	[bx+si],al
020A:013A  00 00				add	[bx+si],al
020A:013C  10 0E FF00				adc	byte ptr ds:[0FF00h],cl	; (4FD6:FF00=0FFh)
020A:0140  50					push	ax
020A:0141  18 0E 1000				sbb	byte ptr ds:[1000h],cl	; (4FD6:1000=0Ah)
020A:0145  01 03				add	[bp+di],ax
020A:0147  00 02				add	[bp+si],al
020A:0149  A3 4F5F				mov	word ptr ds:[4F5Fh],ax	; (4FD6:4F5F=1)
020A:014C  50					push	ax
020A:014D  5582			data_143	dw	5582h
020A:014F  81 BF 001F 0B4D			cmp	word ptr [bx+1Fh],0B4Dh
020A:0155  0C 00				or	al,0
020A:0157  00 00				add	[bx+si],al
020A:0159  00 83 5DA5				add	[bp+di+5DA5h],al
020A:015D  28 1F				sub	[bx],bl
020A:015F  63					db	63h
020A:0160  BA FFA3				mov	dx,0FFA3h
020A:0163  00 01				add	[bx+di],al
020A:0165  02 03				add	al,[bp+di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 4

020A:0167  04 05				add	al,5
020A:0169  14 07				adc	al,7
020A:016B  38 39				cmp	[bx+di],bh
020A:016D  3A 3B				cmp	bh,[bp+di]
020A:016F  3C 3D				cmp	al,3Dh			; '='
020A:0171  3E					db	3Eh
020A:0172  3F					aas				; Ascii adjust
020A:0173  08 00				or	[bx+si],al
020A:0175  0F					pop	cs			; Dangerous 8088 only
020A:0176  00 00				add	[bx+si],al
020A:0178  00 00				add	[bx+si],al
020A:017A  00 00				add	[bx+si],al
020A:017C  10 0E FF00				adc	byte ptr ds:[0FF00h],cl	; (4FD6:FF00=0FFh)
020A:0180  7F 60				jg	loc_12			; Jump if >
020A:0182  0F					pop	cs			; Dangerous 8088 only
020A:0183  00 00				add	[bx+si],al
020A:0185  00 00				add	[bx+si],al
020A:0187  07					pop	es
020A:0188  02 08				add	cl,[bx+si]
020A:018A  FF 0E 0000				dec	word ptr ds:[0]		; (4FD6:0000=0A00h)
020A:018E  3F					aas				; Ascii adjust
020A:018F  00 08				add	[bx+si],cl
020A:0191  00 FC				add	ah,bh
020A:0193  02 74 70				add	dh,[si+70h]
020A:0196  00 00				add	[bx+si],al
020A:0198  00 00				add	[bx+si],al
020A:019A  DF			data_144	db	0DFh			; Data table (indexed access)
020A:019B  DF DF				esc	7,bh			; coprocessor escape
020A:019D  00			data_145	db	0			; Data table (indexed access)
020A:019E  00 00				add	[bx+si],al
020A:01A0  EC			data_146	db	0ECh			; Data table (indexed access)
020A:01A1  EC					in	al,dx			; port 0EA3h
020A:01A2  EC					in	al,dx			; port 0EA3h
020A:01A3  00			data_147	db	0			; Data table (indexed access)
020A:01A4  00 00				add	[bx+si],al
020A:01A6  FF 00				inc	word ptr [bx+si]
020A:01A8  00			data_149	db	0			; Data table (indexed access)
020A:01A9  00 00				add	[bx+si],al
020A:01AB  00 00				add	[bx+si],al
020A:01AD  00 00				add	[bx+si],al
020A:01AF  00 00				add	[bx+si],al
020A:01B1  00 00				add	[bx+si],al
020A:01B3  00 00				add	[bx+si],al
020A:01B5  00 00				add	[bx+si],al
020A:01B7  00 00				add	[bx+si],al
020A:01B9  00 00				add	[bx+si],al
020A:01BB  00 00				add	[bx+si],al
020A:01BD  00 00				add	[bx+si],al
020A:01BF  00 00				add	[bx+si],al
020A:01C1  0000 0000		data_150	dd	00000h
020A:01C5  00 00				add	[bx+si],al
020A:01C7  00 00				add	[bx+si],al
020A:01C9  00 00				add	[bx+si],al
020A:01CB  00 00				add	[bx+si],al
020A:01CD  00 00				add	[bx+si],al
020A:01CF  00 00				add	[bx+si],al
020A:01D1  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 5

020A:01D3  00 00				add	[bx+si],al
020A:01D5  00 00				add	[bx+si],al
020A:01D7  00 00				add	[bx+si],al
020A:01D9  00 00				add	[bx+si],al
020A:01DB  00 00				add	[bx+si],al
020A:01DD  00 00				add	[bx+si],al
020A:01DF  00 00				add	[bx+si],al
020A:01E1  00 00				add	[bx+si],al
020A:01E3  00 00				add	[bx+si],al
020A:01E5  00 00				add	[bx+si],al
020A:01E7  00 00				add	[bx+si],al
020A:01E9  00 00				add	[bx+si],al
020A:01EB  00 00				add	[bx+si],al
020A:01ED  00 00				add	[bx+si],al
020A:01EF  00 00				add	[bx+si],al
020A:01F1  00 00				add	[bx+si],al
020A:01F3  00 00				add	[bx+si],al
020A:01F5  00 00				add	[bx+si],al
020A:01F7  00 00				add	[bx+si],al
020A:01F9  00 00				add	[bx+si],al
020A:01FB  00 00				add	[bx+si],al
020A:01FD  00 00				add	[bx+si],al
020A:01FF  00 00				add	[bx+si],al
020A:0201  00 00				add	[bx+si],al
020A:0203  00 00				add	[bx+si],al
020A:0205  00 00				add	[bx+si],al
020A:0207  00 00				add	[bx+si],al
020A:0209  00 00				add	[bx+si],al
020A:020B  00 00				add	[bx+si],al
020A:020D  00 00				add	[bx+si],al
020A:020F  00 00				add	[bx+si],al
020A:0211  00 00				add	[bx+si],al
020A:0213  00 00				add	[bx+si],al
020A:0215  00 00				add	[bx+si],al
020A:0217  00 00				add	[bx+si],al
020A:0219  00 00				add	[bx+si],al
020A:021B  00 00				add	[bx+si],al
020A:021D  00 00				add	[bx+si],al
020A:021F  00 00				add	[bx+si],al
020A:0221  00 00				add	[bx+si],al
020A:0223  00 00				add	[bx+si],al
020A:0225  00 00				add	[bx+si],al
020A:0227  00 00				add	[bx+si],al
020A:0229  00 00				add	[bx+si],al
020A:022B  00 00				add	[bx+si],al
020A:022D  00 00				add	[bx+si],al
020A:022F  00 00				add	[bx+si],al
020A:0231  00 00				add	[bx+si],al
020A:0233  00 00				add	[bx+si],al
020A:0235  00 00				add	[bx+si],al
020A:0237  00 00				add	[bx+si],al
020A:0239  00 00				add	[bx+si],al
020A:023B  00 00				add	[bx+si],al
020A:023D  00 00				add	[bx+si],al
020A:023F  00 00				add	[bx+si],al
020A:0241  00 00				add	[bx+si],al
020A:0243  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 6

020A:0245  00 00				add	[bx+si],al
020A:0247  00 00				add	[bx+si],al
020A:0249  00 00				add	[bx+si],al
020A:024B  00 00				add	[bx+si],al
020A:024D  00 00				add	[bx+si],al
020A:024F  00 00				add	[bx+si],al
020A:0251  00 00				add	[bx+si],al
020A:0253  00 00				add	[bx+si],al
020A:0255  00 00				add	[bx+si],al
020A:0257  00 00				add	[bx+si],al
020A:0259  00 00				add	[bx+si],al
020A:025B  00 00				add	[bx+si],al
020A:025D  00 00				add	[bx+si],al
020A:025F  00 00				add	[bx+si],al
020A:0261  00 00				add	[bx+si],al
020A:0263  0000			data_152	dw	0
020A:0265  00			data_153	db	0			; Data table (indexed access)
020A:0266  00 00				add	[bx+si],al
020A:0268  00 00				add	[bx+si],al
020A:026A  00 00				add	[bx+si],al
020A:026C  00 00				add	[bx+si],al
020A:026E  00 00				add	[bx+si],al
020A:0270  00 00				add	[bx+si],al
020A:0272  00 00				add	[bx+si],al
020A:0274  00 00				add	[bx+si],al
020A:0276  00 00				add	[bx+si],al
020A:0278  00 00				add	[bx+si],al
020A:027A  00 00				add	[bx+si],al
020A:027C  00 00				add	[bx+si],al
020A:027E  00 00				add	[bx+si],al
020A:0280  00 00				add	[bx+si],al
020A:0282  00 00				add	[bx+si],al
020A:0284  00 00				add	[bx+si],al
020A:0286  00 00				add	[bx+si],al
020A:0288  00 00				add	[bx+si],al
020A:028A  00 00				add	[bx+si],al
020A:028C  00 00				add	[bx+si],al
020A:028E  00 00				add	[bx+si],al
020A:0290  00 00				add	[bx+si],al
020A:0292  00 00				add	[bx+si],al
020A:0294  00 00				add	[bx+si],al
020A:0296  00 00				add	[bx+si],al
020A:0298  00 00				add	[bx+si],al
020A:029A  00 00				add	[bx+si],al
020A:029C			loc_17:
020A:029C  0000			data_154	dw	0
020A:029E  00			data_155	db	0
020A:029F			loc_18:
020A:029F  00 00				add	[bx+si],al
020A:02A1  00			data_156	db	0			; Data table (indexed access)
020A:02A2  00 00				add	[bx+si],al
020A:02A4  00 00				add	[bx+si],al
020A:02A6  00 FF				add	bh,bh
020A:02A8  0000			data_158	dw	0
020A:02AA  00			data_159	db	0
020A:02AB  52					push	dx
020A:02AC  3A 45 46				cmp	al,[di+46h]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 7

020A:02AF  38 1D				cmp	[di],bl
020A:02B1  2A 36 4080				sub	dh,byte ptr ds:[4080h]	; (4FD6:4080=1)
020A:02B5  20 10				and	[bx+si],dl
020A:02B7  08 04				or	[si],al
020A:02B9  02 01				add	al,[bx+di]
020A:02BB  1B FF				sbb	di,di
020A:02BD  00 FF				add	bh,bh
020A:02BF  FF					db	0FFh
020A:02C0  FF 1E FFFF				call	dword ptr ds:[0FFFFh]	; (4FD6:FFFF)
020A:02C4  FF					db	0FFh
020A:02C5  FF 1F				call	dword ptr [bx]		;*
020A:02C7  FF					db	0FFh
020A:02C8  7F 94		;*		jg	loc_15			;*Jump if >
020A:02C8  7F 94				db	 7Fh, 94h
020A:02CA  11 17				adc	[bx],dx
020A:02CC  05 1412				add	ax,1412h
020A:02CF  19 15				sbb	[di],dx
020A:02D1  09 0F				or	[bx],cx
020A:02D3  10 1B				adc	[bp+di],bl
020A:02D5  1D FF0A				sbb	ax,0FF0Ah
020A:02D8  01 13				add	[bp+di],dx
020A:02DA  04 06				add	al,6
020A:02DC  07					pop	es
020A:02DD  08 0A				or	[bp+si],cl
020A:02DF  0B 0C				or	cx,[si]
020A:02E1  FF					db	0FFh
020A:02E2  FF					db	0FFh
020A:02E3  FF					db	0FFh
020A:02E4  FF 1C				call	dword ptr [si]		;*
020A:02E6  1A 18				sbb	bl,[bx+si]
020A:02E8  03 16 0E02				add	dx,word ptr ds:[0E02h]	; (4FD6:0E02=403Bh)
020A:02EC  0D FFFF				or	ax,0FFFFh
020A:02EF  FF					db	0FFh
020A:02F0  FF 96 20FF				call	word ptr [bp+20FFh]	;*
020A:02F4  FF 5E 5F				call	dword ptr [bp+5Fh]	;*
020A:02F7  60					db	60h
020A:02F8  61					db	61h
020A:02F9  62					db	62h
020A:02FA  63					db	63h
020A:02FB  64					db	64h
020A:02FC  65					db	65h
020A:02FD  66					db	66h
020A:02FE  67					db	67h
020A:02FF  FF					db	0FFh
020A:0300  FF 77 8D				push	word ptr [bx-73h]
020A:0303  84 8E 8F73				test	cl,[bp-708Dh]
020A:0307  74 90		;*		jz	loc_16			;*Jump if zero
020A:0307  74 90				db	 74h, 90h
020A:0309  75 91				jnz	loc_17			; Jump if not zero
020A:030B  76 92				jbe	loc_18			; Jump if below or =
020A:030D  93					xchg	ax,bx
020A:030E  FF					db	0FFh
020A:030F  FF					db	0FFh
020A:0310  FF 89 1B8A				dec	word ptr ds:[1B8Ah][bx+di]	; (4FD6:1B8A=5BACh)
020A:0314  3231			data_161	dw	3231h
020A:0316  33 34				xor	si,[si]
020A:0318  35 3736				xor	ax,3736h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 8

020A:031B  38 39				cmp	[bx+di],bh
020A:031D  30 2D				xor	[di],ch
020A:031F  3D 0908				cmp	ax,908h
020A:0322  71 77				jno	loc_23			; Jump if not overflw
020A:0324  65					db	65h
020A:0325  72 74				jc	loc_23			; Jump if carry Set
020A:0327  79 75				jns	loc_24			; Jump if not sign
020A:0329  69					db	69h
020A:032A  6F					db	6Fh
020A:032B  70 5B				jo	loc_20			; Jump if overflow=1
020A:032D  5D					pop	bp
020A:032E  0D 61FF				or	ax,61FFh
020A:0331  73 64				jnc	loc_22			; Jump if carry=0
020A:0333  66					db	66h
020A:0334  67					db	67h
020A:0335  68					db	68h
020A:0336  6A					db	6Ah
020A:0337  6B					db	6Bh
020A:0338  6C					db	6Ch
020A:0339  3B 27				cmp	sp,[bx]
020A:033B  60					db	60h
020A:033C  FF 5C 7A				call	dword ptr [si+7Ah]	;*
020A:033F  78 63				js	loc_25			; Jump if sign=1
020A:0341  76 62				jbe	loc_26			; Jump if below or =
020A:0343  6E					db	6Eh
020A:0344  6D					db	6Dh
020A:0345  2C 2E				sub	al,2Eh			; '.'
020A:0347  2F					das				; Decimal adjust
020A:0348  FF 2A				jmp	dword ptr [bp+si]
020A:034A  FF 20				jmp	word ptr [bx+si]
020A:034C  FF					db	0FFh
020A:034D  3B 3C				cmp	di,[si]
020A:034F  3D 3F3E				cmp	ax,3F3Eh
020A:0352  40					inc	ax
020A:0353  41					inc	cx
020A:0354  42					inc	dx
020A:0355  43					inc	bx
020A:0356  44					inc	sp
020A:0357  FF					db	0FFh
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_11:
020A:0358  FF 47 48				inc	word ptr [bx+48h]
020A:035B  49					dec	cx
020A:035C  FF 4B FF				dec	word ptr [bp+di-1]
020A:035F  4D					dec	bp
020A:0360  FF 4F 50				dec	word ptr [bx+50h]
020A:0363  51					push	cx
020A:0364  52					push	dx
020A:0365  53					push	bx
020A:0366  FF					db	0FFh
020A:0367  FF 5C 85				call	dword ptr [si-7Bh]	;*
020A:036A  86 1B				xchg	bl,[bp+di]
020A:036C  21 40 23				and	[bx+si+23h],ax
020A:036F  24 25				and	al,25h			; '%'
020A:0371  5E					pop	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 9

020A:0372  26: 2A 28				sub	ch,es:[bx+si]
020A:0375  29 5F 2B				sub	[bx+2Bh],bx
020A:0378  08 00				or	[bx+si],al
020A:037A  51					push	cx
020A:037B  57					push	di
020A:037C  45					inc	bp
020A:037D  52					push	dx
020A:037E  54					push	sp
020A:037F  59					pop	cx
020A:0380  55					push	bp
020A:0381  49					dec	cx
020A:0382  4F					dec	di
020A:0383  50					push	ax
020A:0384  7B 7D				jnp	loc_28			; Jump if not parity
020A:0386  0D 41FF				or	ax,41FFh
020A:0389  53					push	bx
020A:038A  44					inc	sp
020A:038B  46					inc	si
020A:038C  47					inc	di
020A:038D  48					dec	ax
020A:038E  4A					dec	dx
020A:038F  4B					dec	bx
020A:0390  4C					dec	sp
020A:0391  3A 22				cmp	ah,[bp+si]
020A:0393  7E FF				jle	loc_21			; Jump if < or =
020A:0395  7C 5A				jl	loc_27			; Jump if <
020A:0397			loc_22:
020A:0397  58					pop	ax
020A:0398  43					inc	bx
020A:0399  56					push	si
020A:039A  42					inc	dx
020A:039B			loc_23:
020A:039B  4E					dec	si
020A:039C  4D					dec	bp
020A:039D  3C 3E				cmp	al,3Eh			; '>'
020A:039F  3F					aas				; Ascii adjust
020A:03A0  FF 00				inc	word ptr [bx+si]
020A:03A2  FF 20				jmp	word ptr [bx+si]	;*
020A:03A4			loc_25:
020A:03A4  FF 54 55				call	word ptr [si+55h]	;*
020A:03A7  56					push	si
020A:03A8  57					push	di
020A:03A9  58					pop	ax
020A:03AA  59					pop	cx
020A:03AB  5A					pop	dx
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_12:
020A:03AC  5B					pop	bx
020A:03AD  5C					pop	sp
020A:03AE  5D					pop	bp
020A:03AF  FF					db	0FFh
020A:03B0  FF 37				push	word ptr [bx]
020A:03B2  38 39				cmp	[bx+di],bh
020A:03B4  2D 3534				sub	ax,3534h
020A:03B7  36: 2B 31				sub	si,ss:[bx+di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 10

020A:03BA  32 33				xor	dh,[bp+di]
020A:03BC  30 2E FFFF				xor	byte ptr data_875,ch	; (020A:FFFF=5)
020A:03C0  7C 87		;*		jl	loc_19			;*Jump if <
020A:03C0  7C 87				db	 7Ch, 87h
020A:03C2  88 52 4F				mov	[bp+si+4Fh],dl
020A:03C5  50					push	ax
020A:03C6  51					push	cx
020A:03C7  4B					dec	bx
020A:03C8  4C					dec	sp
020A:03C9  4D					dec	bp
020A:03CA  47					inc	di
020A:03CB  48					dec	ax
020A:03CC  49					dec	cx
020A:03CD  10 11				adc	[bx+di],dl
020A:03CF  12 13				adc	dl,[bp+di]
020A:03D1  14 15				adc	al,15h
020A:03D3  16					push	ss
020A:03D4  17					pop	ss
020A:03D5  18 19				sbb	[bx+di],bl
020A:03D7  1E					push	ds
020A:03D8  1F					pop	ds
020A:03D9  20 21				and	[bx+di],ah
020A:03DB  22 23				and	ah,[bp+di]
020A:03DD  24 25				and	al,25h			; '%'
020A:03DF  26					db	26h
020A:03E0  2C 2D				sub	al,2Dh			; '-'
020A:03E2  2E					db	2Eh
020A:03E3  2F					das				; Decimal adjust
020A:03E4  30 31				xor	[bx+di],dh
020A:03E6  32 CD				xor	cl,ch
020A:03E8  1B C4				sbb	ax,sp
020A:03EA  C4					db	0C4h
020A:03EB  FE CD				dec	ch
020A:03ED  05 C4C4				add	ax,0C4C4h
020A:03F0  FE CD				dec	ch
020A:03F2  15 01EB				adc	ax,1EBh
020A:03F5  90					nop
020A:03F6  EB 01				jmp	short $+3		; delay for I/O
020A:03F8  90					nop
020A:03F9  EB 01				jmp	short $+3		; delay for I/O
020A:03FB  90					nop
020A:03FC  C4					db	0C4h
020A:03FD  C4					db	0C4h
020A:03FE  FE C4				inc	ah
020A:0400  C4 02				les	ax,dword ptr [bp+si]	; Load 32 bit ptr
020A:0402  E9 0247				jmp	loc_50			; (064C)
020A:0405  CD 13				int	13h			; Disk  dl=drive a  ah=func 36h
020A:0407  C4					db	0C4h
020A:0408  C4					db	0C4h
020A:0409  FE					db	0FEh
020A:040A  50					push	ax
020A:040B  33 C0				xor	ax,ax			; Zero register
020A:040D  C4					db	0C4h
020A:040E  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:0410  58					pop	ax
020A:0411  E9 0238				jmp	loc_50			; (064C)
020A:0414  90					nop
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 11

020A:0415  90					nop
020A:0416  E4 60				in	al,60h			; port 60h, keybd scan or sw1
020A:0418  90					nop
020A:0419  90					nop
020A:041A  C4					db	0C4h
020A:041B  C4					db	0C4h
020A:041C  FE C4				inc	ah
020A:041E  C4 5D 00				les	bx,dword ptr [di+0]	; Load 32 bit ptr
020A:0421  C4					db	0C4h
020A:0422  C4 5D 01				les	bx,dword ptr [di+1]	; Load 32 bit ptr
020A:0425  C4					db	0C4h
020A:0426  C4 5D 02				les	bx,dword ptr [di+2]	; Load 32 bit ptr
020A:0429  C4					db	0C4h
020A:042A  C4 5D 03				les	bx,dword ptr [di+3]	; Load 32 bit ptr
020A:042D  C4					db	0C4h
020A:042E  C4 5D 04				les	bx,dword ptr [di+4]	; Load 32 bit ptr
020A:0431  C4					db	0C4h
020A:0432  C4 5D 05				les	bx,dword ptr [di+5]	; Load 32 bit ptr
020A:0435  C4					db	0C4h
020A:0436  C4 5D 06				les	bx,dword ptr [di+6]	; Load 32 bit ptr
020A:0439  C4					db	0C4h
020A:043A  C4 5D 07				les	bx,dword ptr [di+7]	; Load 32 bit ptr
020A:043D  C4					db	0C4h
020A:043E  C4 5D 08				les	bx,dword ptr [di+8]	; Load 32 bit ptr
020A:0441  C4					db	0C4h
020A:0442  C4 5D 09				les	bx,dword ptr [di+9]	; Load 32 bit ptr
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:0445			loc_29:
020A:0445  C4					db	0C4h
020A:0446  C4 5D 0A				les	bx,dword ptr [di+0Ah]	; Load 32 bit ptr
020A:0449  C4					db	0C4h
020A:044A  C4 5D 0B				les	bx,dword ptr [di+0Bh]	; Load 32 bit ptr
020A:044D  C4					db	0C4h
020A:044E  C4 5D 0C				les	bx,dword ptr [di+0Ch]	; Load 32 bit ptr
020A:0451  C4					db	0C4h
020A:0452  C4 5D 0D				les	bx,dword ptr [di+0Dh]	; Load 32 bit ptr
020A:0455  C4					db	0C4h
020A:0456  C4 5D 0E				les	bx,dword ptr [di+0Eh]	; Load 32 bit ptr
020A:0459  C4					db	0C4h
020A:045A  C4 5D 0F				les	bx,dword ptr [di+0Fh]	; Load 32 bit ptr
020A:045D  80 FA 80				cmp	dl,80h
020A:0460  72 28				jb	loc_32			; Jump if below
020A:0462  80 FC 02				cmp	ah,2
020A:0465  72 1D				jb	loc_31			; Jump if below
020A:0467  80 FC 05				cmp	ah,5
020A:046A  76 0A				jbe	loc_30			; Jump if below or =
020A:046C  80 FC 0A				cmp	ah,0Ah
020A:046F  72 13				jb	loc_31			; Jump if below
020A:0471  80 FC 0C				cmp	ah,0Ch
020A:0474  77 0E				ja	loc_31			; Jump if above
020A:0476			loc_30:
020A:0476  50					push	ax
020A:0477  B8 0001				mov	ax,1
020A:047A  C4					db	0C4h
020A:047B  C4 59 58				les	bx,dword ptr [bx+di+58h]	; Load 32 bit ptr
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 12

020A:047E  B4 80				mov	ah,80h
020A:0480  F9					stc				; Set carry flag
020A:0481  CA 0002				retf	2			; Return far
020A:0484			loc_31:
020A:0484  C4					db	0C4h
020A:0485  C4 13				les	dx,dword ptr [bp+di]	; Load 32 bit ptr
020A:0487  CA 0002				retf	2			; Return far
020A:048A			loc_32:
020A:048A  C4					db	0C4h
020A:048B  C4 40 CA				les	ax,dword ptr [bx+si-36h]	; Load 32 bit ptr
020A:048E  02 00				add	al,[bx+si]
020A:0490  1E					push	ds
020A:0491  50					push	ax
020A:0492  51					push	cx
020A:0493  B8 0040				mov	ax,40h
020A:0496  8E D8				mov	ds,ax
020A:0498  B9			data_164	db	0B9h
020A:0499  10 00				adc	[bx+si],al
  
020A:049B			locloop_33:
020A:049B  B0 3E				mov	al,3Eh			; '>'
020A:049D  A8 80				test	al,80h
020A:049F  E1 FA				loopz	locloop_33		; Loop if zf=1, cx>0
  
020A:04A1  59					pop	cx
020A:04A2  58					pop	ax
020A:04A3  1F					pop	ds
020A:04A4  C4					db	0C4h
020A:04A5  C4					db	0C4h
020A:04A6  FE 01				inc	byte ptr [bx+di]
020A:04A8  C2 8204				retn	8204h
020A:04AB  CF					iret				; Interrupt return
020A:04AC  04 02				add	al,2
020A:04AE  DC 04				esc	4,[si]			; coprocessor escape
020A:04B0  03 E9				add	bp,cx
020A:04B2  04 84				add	al,84h
020A:04B4  F6 04 04				test	byte ptr [si],4
020A:04B7  03 05				add	ax,[di]
020A:04B9  85 10				test	dx,[bx+si]
020A:04BB  05 1D85				add	ax,1D85h
020A:04BE  05 2A05				add	ax,2A05h
020A:04C1  05 02DF				add	ax,2DFh
020A:04C4  25 0902				and	ax,902h
020A:04C7  2A FF				sub	bh,bh
020A:04C9  50					push	ax
020A:04CA  F6					db	0F6h
020A:04CB  0F					pop	cs			; Dangerous 8088 only
020A:04CC  08 27				or	[bx],ah
020A:04CE  80 DF 02				sbb	bh,2
020A:04D1  25 0902				and	ax,902h
020A:04D4  2A FF				sub	bh,bh
020A:04D6  50					push	ax
020A:04D7  F6					db	0F6h
020A:04D8  0F					pop	cs			; Dangerous 8088 only
020A:04D9  08 27				or	[bx],ah
020A:04DB  40					inc	ax
020A:04DC  DF 02				esc	7,[bp+si]		; coprocessor escape
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 13

020A:04DE  25 0F02				and	ax,0F02h
020A:04E1  1B FF				sbb	di,di
020A:04E3  54					push	sp
020A:04E4  F6					db	0F6h
020A:04E5  0F					pop	cs			; Dangerous 8088 only
020A:04E6  08 4F 00				or	[bx+0],cl
020A:04E9  DF 02				esc	7,[bp+si]		; coprocessor escape
020A:04EB  25 0902				and	ax,902h
020A:04EE  2A FF				sub	bh,bh
020A:04F0  50					push	ax
020A:04F1  F6					db	0F6h
020A:04F2  0F					pop	cs			; Dangerous 8088 only
020A:04F3  08 4F 80				or	[bx-80h],cl
020A:04F6  DF 02				esc	7,[bp+si]		; coprocessor escape
020A:04F8  25 0902				and	ax,902h
020A:04FB  2A FF				sub	bh,bh
020A:04FD  50					push	ax
020A:04FE  F6					db	0F6h
020A:04FF  0F					pop	cs			; Dangerous 8088 only
020A:0500  08 4F 80				or	[bx-80h],cl
020A:0503  AF					scasw				; Scan es:[di] for ax
020A:0504  02 25				add	ah,[di]
020A:0506  02 12				add	dl,[bp+si]
020A:0508  1B FF				sbb	di,di
020A:050A  6C					db	6Ch
020A:050B  F6					db	0F6h
020A:050C  0F					pop	cs			; Dangerous 8088 only
020A:050D  08 4F 00				or	[bx+0],cl
020A:0510  E1 02				loopz	locloop_34		; Loop if zf=1, cx>0
  
020A:0512  25 0902				and	ax,902h
020A:0515  2A FF				sub	bh,bh
020A:0517  50					push	ax
020A:0518  F6			data_165	db	0F6h			; Data table (indexed access)
020A:0519  0F					pop	cs			; Dangerous 8088 only
020A:051A  08 4F 80				or	[bx-80h],cl
020A:051D  D1 02				rol	word ptr [bp+si],1	; Rotate
020A:051F  25 1202				and	ax,1202h
020A:0522  1B FF				sbb	di,di
020A:0524  65					db	65h
020A:0525  F6					db	0F6h
020A:0526  0F					pop	cs			; Dangerous 8088 only
020A:0527  08 4F 00				or	[bx+0],cl
020A:052A  A1 2502				mov	ax,word ptr ds:[2502h]	; (ss:2502=80FCh)
020A:052D  02 24				add	ah,[si]
020A:052F  38 FF				cmp	bh,bh
020A:0531  53					push	bx
020A:0532  F6					db	0F6h
020A:0533  0F					pop	cs			; Dangerous 8088 only
020A:0534  08 4F C0				or	[bx-40h],cl
020A:0537  DF 02				esc	7,[bp+si]		; coprocessor escape
020A:0539  25 1202				and	ax,1202h
020A:053C  1B FF				sbb	di,di
020A:053E  54					push	sp
020A:053F  F6					db	0F6h
020A:0540  0F					pop	cs			; Dangerous 8088 only
020A:0541  08 E8				or	al,ch
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 14

020A:0543  94					xchg	ax,sp
020A:0544  02 80 88FC				add	al,byte ptr ds:[88FCh][bx+si]	; (ss:88FC=0F6h)
020A:0548  74 10				jz	loc_35			; Jump if zero
020A:054A  80 FC 91				cmp	ah,91h
020A:054D  74 0B				je	loc_35			; Jump if equal
020A:054F  80 FC 86				cmp	ah,86h
020A:0552  74 0C				je	loc_36			; Jump if equal
020A:0554  C4					db	0C4h
020A:0555  C4 15				les	dx,dword ptr [di]	; Load 32 bit ptr
020A:0557  CA 0002				retf	2			; Return far
020A:055A			loc_35:
020A:055A  C4					db	0C4h
020A:055B  C4 15				les	dx,dword ptr [di]	; Load 32 bit ptr
020A:055D  E9 00EC				jmp	loc_50			; (064C)
020A:0560			loc_36:
020A:0560  C4					db	0C4h
020A:0561  C4 15				les	dx,dword ptr [di]	; Load 32 bit ptr
020A:0563  72 23				jc	loc_39			; Jump if carry Set
020A:0565  51					push	cx
020A:0566  52					push	dx
020A:0567  06					push	es
020A:0568  B8 0040				mov	ax,40h
020A:056B  8E C0				mov	es,ax
020A:056D  87 D1				xchg	dx,cx
  
020A:056F			locloop_37:
020A:056F  26: F6 06 00A0 80			test	byte ptr es:[0A0h],80h	; (0040:00A0=0)
020A:0575  E1 F8				loopz	locloop_37		; Loop if zf=1, cx>0
  
020A:0577  75 05				jnz	loc_38			; Jump if not zero
020A:0579  83 EA 01				sub	dx,1
020A:057C  73 F1				jnc	locloop_37		; Jump if carry=0
020A:057E			loc_38:
020A:057E  26: C6 06 00A0 00			mov	byte ptr es:[0A0h],0	; (0040:00A0=0)
020A:0584  07					pop	es
020A:0585  5A					pop	dx
020A:0586  59					pop	cx
020A:0587  F8					clc				; Clear carry flag
020A:0588			loc_39:
020A:0588  CA 0002				retf	2
020A:058B  56					push	si
020A:058C  52					push	dx
020A:058D  50					push	ax
020A:058E  8B C2				mov	ax,dx
020A:0590  33 D2				xor	dx,dx			; Zero register
020A:0592  BE 0003				mov	si,3
020A:0595  F7 F6				div	si			; ax,dx rem=dx:ax/reg
020A:0597  8B F2				mov	si,dx
020A:0599  58					pop	ax
020A:059A  80 FC 02				cmp	ah,2
020A:059D  74 07				je	loc_40			; Jump if equal
020A:059F  0A E4				or	ah,ah			; Zero ?
020A:05A1  74 15				jz	loc_41			; Jump if zero
020A:05A3  E9 0082				jmp	loc_46			; (0628)
020A:05A6			loc_40:
020A:05A6  2E: 80 BC 019D 00			cmp	cs:data_145[si],0	; (020A:019D=0)
020A:05AC  75 7A				jne	loc_46			; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 15

020A:05AE  2E: F6 84 01A0 10			test	cs:data_146[si],10h	; (020A:01A0=0ECh)
020A:05B4  74 7B				jz	loc_47			; Jump if zero
020A:05B6  EB 70				jmp	short loc_46		; (0628)
020A:05B8			loc_41:
020A:05B8  2E: 80 3E 02A7 FF			cmp	byte ptr cs:[2A7h],0FFh	; (020A:02A7=0FFh)
020A:05BE  75 14				jne	loc_42			; Jump if not equal
020A:05C0  2E: 88 16 02A7			mov	byte ptr cs:[2A7h],dl	; (020A:02A7=0FFh)
020A:05C5  2E: C7 06 02A8 0000			mov	cs:data_158,0		; (020A:02A8=0)
020A:05CC  2E: C6 06 02AA FF			mov	cs:data_159,0FFh	; (020A:02AA=0)
020A:05D2  EB 54				jmp	short loc_46		; (0628)
020A:05D4			loc_42:
020A:05D4  2E: 38 16 02A7			cmp	byte ptr cs:[2A7h],dl	; (020A:02A7=0FFh)
020A:05D9  74 15				je	loc_43			; Jump if equal
020A:05DB  56					push	si
020A:05DC  33 F6				xor	si,si			; Zero register
020A:05DE  C4					db	0C4h
020A:05DF  C4 17				les	dx,dword ptr [bx]	; Load 32 bit ptr
020A:05E1  5E					pop	si
020A:05E2  2E: C7 06 02A8 0000			mov	cs:data_158,0		; (020A:02A8=0)
020A:05E9  2E: 88 16 02A7			mov	byte ptr cs:[2A7h],dl	; (020A:02A7=0FFh)
020A:05EE  EB 38				jmp	short loc_46		; (0628)
020A:05F0			loc_43:
020A:05F0  2E: 8B 16 02A8			mov	dx,cs:data_158		; (020A:02A8=0)
020A:05F5  8B F2				mov	si,dx
020A:05F7  2E: 88 84 01A8			mov	cs:data_149[si],al	; (020A:01A8=0)
020A:05FC  2E: FF 06 02A8			inc	cs:data_158		; (020A:02A8=0)
020A:0601  2E: 81 3E 02A8 00FF			cmp	cs:data_158,0FFh	; (020A:02A8=0)
020A:0608  75 18				jne	loc_45			; Jump if not equal
020A:060A  33 F6				xor	si,si			; Zero register
020A:060C  C4					db	0C4h
020A:060D  C4 17				les	dx,dword ptr [bx]	; Load 32 bit ptr
020A:060F  F6 C4 08				test	ah,8
020A:0612  74 07				jz	loc_44			; Jump if zero
020A:0614  2E			data_169	db	2Eh
020A:0615  FF 0E 02A8				dec	word ptr ds:[2A8h]	; (ss:02A8=0F7BAh)
020A:0619  EB 2F				jmp	short loc_49		; (064A)
020A:061B			loc_44:
020A:061B  2E: C7 06 02A8 0000			mov	cs:data_158,0		; (020A:02A8=0)
020A:0622			loc_45:
020A:0622  B4 90				mov	ah,90h
020A:0624  EB 24				jmp	short loc_49		; (064A)
020A:0626  56					push	si
020A:0627  52					push	dx
020A:0628			loc_46:
020A:0628  BE FFFF				mov	si,0FFFFh
020A:062B  C4					db	0C4h
020A:062C  C4 17				les	dx,dword ptr [bx]	; Load 32 bit ptr
020A:062E  EB 1A				jmp	short loc_49		; (064A)
020A:0630  90					nop
020A:0631			loc_47:
020A:0631  2E: F6 84 01A3 01			test	cs:data_147[si],1	; (020A:01A3=0)
020A:0637  75 06				jnz	loc_48			; Jump if not zero
020A:0639  2E: 80 8C 019A 80			or	cs:data_144[si],80h	; (020A:019A=0DFh)
020A:063F			loc_48:
020A:063F  2E: 8A A4 019A			mov	ah,cs:data_144[si]	; (020A:019A=0DFh)
020A:0644  80 E4 F8				and	ah,0F8h
020A:0647  80 F4 48				xor	ah,48h			; 'H'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 16

020A:064A			loc_49:
020A:064A  5A					pop	dx
020A:064B  5E					pop	si
020A:064C			loc_50:
020A:064C  1E					push	ds
020A:064D  50					push	ax
020A:064E  B8			data_171	db	0B8h
020A:064F  40					inc	ax
020A:0650  00 8E F7D8				add	[bp-828h],cl
020A:0654  06					push	es
020A:0655  14 03				adc	al,3
020A:0657  00 24				add	[si],ah
020A:0659  75 4F				jnz	loc_59			; Jump if not zero
020A:065B  55					push	bp
020A:065C  8B EC				mov	bp,sp
020A:065E  8B 46 0A				mov	ax,[bp+0Ah]
020A:0661  5D					pop	bp
020A:0662  A9 0100				test	ax,100h
020A:0665  75 43				jnz	loc_59			; Jump if not zero
020A:0667  A9 0200				test	ax,200h
020A:066A  74 22				jz	loc_55			; Jump if zero
020A:066C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (ss:0314=0BE00h)
020A:0673  F7 06 0314 0003			test	word ptr ds:[314h],3	; (ss:0314=0BE00h)
020A:0679  75 2F				jnz	loc_59			; Jump if not zero
020A:067B			loc_52:
020A:067B  86 E0				xchg	ah,al
020A:067D  FC					cld				; Clear direction
020A:067E  A8 04				test	al,4
020A:0680  75 25				jnz	loc_58			; Jump if not zero
020A:0682			loc_53:
020A:0682  A8 08				test	al,8
020A:0684  75 11				jnz	loc_56			; Jump if not zero
020A:0686  70 19				jo	loc_57			; Jump if overflow=1
020A:0688			loc_54:
020A:0688  9E					sahf				; Store ah into flags
020A:0689  58					pop	ax
020A:068A  1F					pop	ds
020A:068B  CA 0002				retf	2			; Return far
020A:068E			loc_55:
020A:068E  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (D840:0314=0F775h)
020A:0695  EB E4				jmp	short loc_52		; (067B)
020A:0697			loc_56:
020A:0697  70 EF				jo	loc_54			; Jump if overflow=1
020A:0699  50					push	ax
020A:069A  B0 7F				mov	al,7Fh
020A:069C  04 02				add	al,2
020A:069E  58					pop	ax
020A:069F  EB E7				jmp	short loc_54		; (0688)
020A:06A1			loc_57:
020A:06A1  50					push	ax
020A:06A2  32 C0				xor	al,al			; Zero register
020A:06A4  58					pop	ax
020A:06A5  EB E1				jmp	short loc_54		; (0688)
020A:06A7			loc_58:
020A:06A7  FD					std				; Set direction flag
020A:06A8  EB D8				jmp	short loc_53		; (0682)
020A:06AA			loc_59:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 17

020A:06AA  58					pop	ax
020A:06AB  1F					pop	ds
020A:06AC  CF					iret				; Interrupt return
				sub_10		endp
  
020A:06AD  EB 9D				jmp	short loc_50		; (064C)
020A:06AF  C4					db	0C4h
020A:06B0  C4 72 EB				les	si,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:06B3  98					cbw				; Convrt byte to word
020A:06B4  C4					db	0C4h
020A:06B5  C4 72 EB				les	si,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:06B8  93					xchg	ax,bx
020A:06B9  E8 011D				call	sub_16			; (07D9)
020A:06BC  50					push	ax
020A:06BD  53					push	bx
020A:06BE  51					push	cx
020A:06BF  52					push	dx
020A:06C0  1E					push	ds
020A:06C1  B8 0040				mov	ax,40h
020A:06C4  8E D8				mov	ds,ax
020A:06C6  80 3E 0100 01			cmp	byte ptr ds:[100h],1	; (0040:0100=0)
020A:06CB  74 5A				je	loc_66			; Jump if equal
020A:06CD  C6 06 0100 01			mov	byte ptr ds:[100h],1	; (0040:0100=0)
020A:06D2  8A 2E 004A				mov	ch,byte ptr ds:[4Ah]	; (0040:004A=50h)
020A:06D6  8A 0E 0084				mov	cl,byte ptr ds:[84h]	; (0040:0084=18h)
020A:06DA  8A 3E 0062				mov	bh,byte ptr ds:[62h]	; (0040:0062=0)
020A:06DE  E8 004E				call	sub_14			; (072F)
020A:06E1  51					push	cx
020A:06E2  B4 03				mov	ah,3
020A:06E4  CD 10				int	10h			; Video display   ah=functn 03h
										;  get cursor loc in dx, mode cx
020A:06E6  59					pop	cx
020A:06E7  52					push	dx
020A:06E8  32 F6				xor	dh,dh			; Zero register
020A:06EA			loc_60:
020A:06EA  32					db	32h
020A:06EB  52D2 02B4				dd	2B452D2h
020A:06EF  CD			data_176	db	0CDh
020A:06F0			loc_62:
020A:06F0  10 B4 CD08				adc	byte ptr ds:[0CD08h][si],dh	; (0040:CD08=48h)
020A:06F4  10 0A				adc	[bp+si],cl
020A:06F6  75C0			data_177	dw	75C0h
020A:06F8  02 B0 3320				add	dh,byte ptr ds:[3320h][bx+si]	; (0040:3320=0FFh)
020A:06FC  D2 32				sal	byte ptr [bp+si],cl	; Shift w/zeros fill
020A:06FE  E4 CD				in	al,0CDh			; port 0CDh
020A:0700  17					pop	ss
020A:0701  5A					pop	dx
020A:0702  80 E4 25				and	ah,25h			; '%'
020A:0705  74 07				jz	loc_64			; Jump if zero
020A:0707  C6 06 0100 FF			mov	byte ptr ds:[100h],0FFh	; (0040:0100=0)
020A:070C  EB 14				jmp	short loc_65		; (0722)
020A:070E			loc_64:
020A:070E  FE C2				inc	dl
020A:0710  3A D5				cmp	dl,ch
020A:0712  72 D8		;*		jb	loc_61			;*Jump if below
020A:0712  72 D8				db	 72h,0D8h
020A:0714  E8 0018				call	sub_14			; (072F)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 18

020A:0717  FE C6				inc	dh
020A:0719  3A F1				cmp	dh,cl
020A:071B  76 CD				jbe	loc_60			; Jump if below or =
020A:071D  C6 06 0100 00			mov	byte ptr ds:[100h],0	; (0040:0100=0)
020A:0722			loc_65:
020A:0722  5A					pop	dx
020A:0723  B4 02				mov	ah,2
020A:0725  CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
020A:0727			loc_66:
020A:0727  1F					pop	ds
020A:0728  5A					pop	dx
020A:0729  59					pop	cx
020A:072A  5B					pop	bx
020A:072B  58					pop	ax
020A:072C  E9 FF1D				jmp	loc_50			; (064C)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_14		proc	near
020A:072F  52					push	dx
020A:0730  33 D2				xor	dx,dx			; Zero register
020A:0732  B8 000D				mov	ax,0Dh
020A:0735  CD 17				int	17h			; Printer  dx=prn1, ah=func 00h
										;  print char in al
020A:0737  33 D2				xor	dx,dx			; Zero register
020A:0739  B8 000A				mov	ax,0Ah
020A:073C  CD 17				int	17h			; Printer  dx=prn1, ah=func 00h
										;  print char in al
020A:073E  5A					pop	dx
020A:073F  C3					retn
				sub_14		endp
  
020A:0740  C4					db	0C4h
020A:0741  C4 06 06E9				les	ax,dword ptr ds:[6E9h]	; (020A:06E9=32F6h) Load 32 bit ptr
020A:0745  FF					db	0FFh
020A:0746  E8 0070				call	sub_15			; (07B9)
020A:0749  06					push	es
020A:074A  1E					push	ds
020A:074B  50					push	ax
020A:074C  52					push	dx
020A:074D  B8 0040				mov	ax,40h
020A:0750  8E D8				mov	ds,ax
020A:0752  33 C0				xor	ax,ax			; Zero register
020A:0754  8E C0				mov	es,ax
020A:0756  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=0CE2Ah)
020A:075A  75 04				jnz	loc_67			; Jump if not zero
020A:075C  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=0Bh)
020A:0760			loc_67:
020A:0760  83 3E 006E 18			cmp	word ptr ds:[6Eh],18h	; (0040:006E=0Bh)
020A:0765  75 15				jne	loc_68			; Jump if not equal
020A:0767  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=0CE2Ah)
020A:076D  75 0D				jne	loc_68			; Jump if not equal
020A:076F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=0Bh)
020A:0772  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=0CE2Ah)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 19

020A:0775  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0040:0070=0)
020A:077A  0C 08				or	al,8
020A:077C			loc_68:
020A:077C  50					push	ax
020A:077D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0040:0040=92h)
020A:0781  75 0B				jnz	loc_69			; Jump if not zero
020A:0783  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (0040:003F=0)
020A:0788  B0 0C				mov	al,0Ch
020A:078A  BA 03F2				mov	dx,3F2h
020A:078D  EE					out	dx,al			; port 3F2h, dsk0 contrl output
020A:078E			loc_69:
020A:078E  58					pop	ax
020A:078F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0040:0314=3200h)
020A:0795  75 0C				jnz	loc_70			; Jump if not zero
020A:0797  9F					lahf				; Load ah from flags
020A:0798  86 E0				xchg	ah,al
020A:079A  50					push	ax
020A:079B  26: FF 1E 0070			call	dword ptr es:[70h]	; (0000:0070=6ADh)
020A:07A0  EB 03				jmp	short loc_71		; (07A5)
020A:07A2  90					nop
020A:07A3			loc_70:
020A:07A3  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
020A:07A5			loc_71:
020A:07A5  E8 0011				call	sub_15			; (07B9)
020A:07A8  B0 20				mov	al,20h			; ' '
020A:07AA  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
020A:07AC  5A					pop	dx
020A:07AD  58					pop	ax
020A:07AE  1F					pop	ds
020A:07AF  07					pop	es
020A:07B0  E9 FE99				jmp	loc_50			; (064C)
020A:07B3  C4					db	0C4h
020A:07B4  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (32F6:93E9=0FFFFh) Load 32 bit ptr
020A:07B8  FE					db	0FEh
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_15		proc	near
020A:07B9  1E					push	ds
020A:07BA  50					push	ax
020A:07BB  B8 0040				mov	ax,40h
020A:07BE  8E D8				mov	ds,ax
020A:07C0  9F					lahf				; Load ah from flags
020A:07C1  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07C7  75 0C				jnz	loc_73			; Jump if not zero
020A:07C9  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:07D0			loc_72:
020A:07D0  9E					sahf				; Store ah into flags
020A:07D1  58					pop	ax
020A:07D2  1F					pop	ds
020A:07D3  EB 03				jmp	short loc_74		; (07D8)
020A:07D5			loc_73:
020A:07D5  FA					cli				; Disable interrupts
020A:07D6  EB F8				jmp	short loc_72		; (07D0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 20

020A:07D8			loc_74:
020A:07D8  C3					retn
				sub_15		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_16		proc	near
020A:07D9  1E					push	ds
020A:07DA  50					push	ax
020A:07DB  B8 0040				mov	ax,40h
020A:07DE  8E D8				mov	ds,ax
020A:07E0  9F					lahf				; Load ah from flags
020A:07E1  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:07E7  75 14				jnz	loc_76			; Jump if not zero
020A:07E9  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07EF  75 0C				jnz	loc_76			; Jump if not zero
020A:07F1  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:07F8			loc_75:
020A:07F8  9E					sahf				; Store ah into flags
020A:07F9  58					pop	ax
020A:07FA  1F					pop	ds
020A:07FB  EB 03				jmp	short loc_77		; (0800)
020A:07FD			loc_76:
020A:07FD  FB					sti				; Enable interrupts
020A:07FE  EB F8				jmp	short loc_75		; (07F8)
020A:0800			loc_77:
020A:0800  C3					retn
				sub_16		endp
  
020A:0801  00 00				add	[bx+si],al
020A:0803  00 00				add	[bx+si],al
020A:0805  00 2E 06FF				add	byte ptr ds:[6FFh],ch	; (020A:06FF=0CDh)
020A:0809  04 08				add	al,8
020A:080B  3D 13FF				cmp	ax,13FFh
020A:080E  75 5B				jne	loc_80			; Jump if not equal
020A:0810  83 F9 01				cmp	cx,1
020A:0813  74 40				je	loc_78			; Jump if equal
020A:0815  56					push	si
020A:0816  BE 00A4				mov	si,0A4h
020A:0819  2E: 2B 36 0802			sub	si,word ptr cs:[802h]	; (020A:0802=0)
020A:081E  3B CE				cmp	cx,si
020A:0820  73 3E				jae	loc_79			; Jump if above or =
020A:0822  57					push	di
020A:0823  51					push	cx
020A:0824  52					push	dx
020A:0825  1E					push	ds
020A:0826  06					push	es
020A:0827  8C C2				mov	dx,es
020A:0829  8E DA				mov	ds,dx
020A:082B  BA B000				mov	dx,0B000h
020A:082E  8E C2				mov	es,dx
020A:0830  8B D1				mov	dx,cx
020A:0832  8B F7				mov	si,di
020A:0834  2E: 8B 3E 0802			mov	di,word ptr cs:[802h]	; (020A:0802=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 21

020A:0839  FC					cld				; Clear direction
020A:083A  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:083C  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:083E  80 D1 00				adc	cl,0
020A:0841  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:0843  2E: 1601		data_184	dw	1601h
020A:0846  02 08				add	cl,[bx+si]
020A:0848  07					pop	es
020A:0849  1F					pop	ds
020A:084A  5A					pop	dx
020A:084B  59					pop	cx
020A:084C  5F					pop	di
020A:084D  5E					pop	si
020A:084E  F9					stc				; Set carry flag
020A:084F  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:0854  C3					retn
020A:0855			loc_78:
020A:0855  50					push	ax
020A:0856  B4 0E				mov	ah,0Eh
020A:0858  26: 8A 05				mov	al,es:[di]
020A:085B  E8 0012				call	sub_18			; (0870)
020A:085E  58					pop	ax
020A:085F  C3					retn
020A:0860			loc_79:
020A:0860  5E					pop	si
020A:0861  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:0866  C4					db	0C4h
020A:0867  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load 32 bit ptr
020A:086A  C3					retn
020A:086B			loc_80:
020A:086B  80 FC 0E				cmp	ah,0Eh
020A:086E  75 28				jne	loc_82			; Jump if not equal
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_18		proc	near
020A:0870  56					push	si
020A:0871  2E			data_185	db	2Eh
020A:0872  8B 36 0802				mov	si,word ptr ds:[802h]	; (020A:0802=0)
020A:0876  81 FE 00A4				cmp	si,0A4h
020A:087A  73 E4				jae	loc_79			; Jump if above or =
020A:087C  1E					push	ds
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:087D			loc_81:
020A:087D  BE B000				mov	si,0B000h
020A:0880  8E DE				mov	ds,si
020A:0882  2E: 8B 36 0802			mov	si,word ptr cs:[802h]	; (020A:0802=0)
020A:0887  88 04				mov	[si],al
020A:0889  46					inc	si
020A:088A  2E: 89 36 0802			mov	word ptr cs:[802h],si	; (020A:0802=0)
020A:088F  1F					pop	ds
020A:0890  5E					pop	si
020A:0891  F9					stc				; Set carry flag
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 22

020A:0892  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:0897  C3					retn
				sub_18		endp
  
020A:0898			loc_82:
020A:0898  50					push	ax
020A:0899  B8 13FE				mov	ax,13FEh
020A:089C  C4					db	0C4h
020A:089D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load 32 bit ptr
020A:08A0  F8					clc				; Clear carry flag
020A:08A1  2E: FF 0E 0804			dec	word ptr cs:[804h]	; (020A:0804=0)
020A:08A6  C3					retn
020A:08A7  00			data_186	db	0
020A:08A8  00			data_187	db	0
020A:08A9  2E: 80 3E 08A7 02			cmp	cs:data_186,2		; (020A:08A7=0)
020A:08AF  75 05				jne	loc_83			; Jump if not equal
020A:08B1  E8 FF52		;*		call	sub_17			;*(0806)
020A:08B1  E8 52 FF				db	0E8h, 52h,0FFh
020A:08B4  72 5F				jc	loc_89			; Jump if carry Set
020A:08B6			loc_83:
020A:08B6  2E: 80 3E 08A7 01			cmp	cs:data_186,1		; (020A:08A7=0)
020A:08BC  74 5D				je	loc_91			; Jump if equal
020A:08BE  80 FC 00				cmp	ah,0
020A:08C1  74 30				je	loc_87			; Jump if equal
020A:08C3  80 FC 1C				cmp	ah,1Ch
020A:08C6  77 0B				ja	loc_84			; Jump if above
020A:08C8  80 FC 04				cmp	ah,4
020A:08CB  74 20				je	loc_86			; Jump if equal
020A:08CD  C4					db	0C4h
020A:08CE  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:08D1  43					inc	bx
020A:08D2  90					nop
020A:08D3			loc_84:
020A:08D3  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:08D6  75 06				jne	loc_85			; Jump if not equal
020A:08D8  C4					db	0C4h
020A:08D9  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load 32 bit ptr
020A:08DD  90					nop
020A:08DE			loc_85:
020A:08DE  80 FC F0				cmp	ah,0F0h
020A:08E1  72 35				jb	loc_90			; Jump if below
020A:08E3  80 FC F7				cmp	ah,0F7h
020A:08E6  76 05				jbe	loc_86			; Jump if below or =
020A:08E8  80 FC FA				cmp	ah,0FAh
020A:08EB  75 2B				jne	loc_90			; Jump if not equal
020A:08ED			loc_86:
020A:08ED  C4					db	0C4h
020A:08EE  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load 32 bit ptr
020A:08F2  90					nop
020A:08F3			loc_87:
020A:08F3  2E: C6 06 08A8 01			mov	cs:data_187,1		; (020A:08A8=0)
020A:08F9  C4					db	0C4h
020A:08FA  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load 32 bit ptr
020A:08FE  50					push	ax
020A:08FF  25 007F				and	ax,7Fh
020A:0902  3C 03				cmp	al,3
020A:0904  76 08				jbe	loc_88			; Jump if below or =
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 23

020A:0906  3C 07				cmp	al,7
020A:0908  74 04				je	loc_88			; Jump if equal
020A:090A  58					pop	ax
020A:090B  EB 0E				jmp	short loc_91		; (091B)
020A:090D  90					nop
020A:090E			loc_88:
020A:090E  58					pop	ax
020A:090F  2E: C6 06 08A8 00			mov	cs:data_187,0		; (020A:08A8=0)
020A:0915			loc_89:
020A:0915  E9 FD34				jmp	loc_50			; (064C)
020A:0918			loc_90:
020A:0918  F9					stc				; Set carry flag
020A:0919  EB FA				jmp	short loc_89		; (0915)
020A:091B			loc_91:
020A:091B  2E: C6 06 08A8 00			mov	cs:data_187,0		; (020A:08A8=0)
020A:0921  3D 13FF				cmp	ax,13FFh
020A:0924  74 2F				je	loc_95			; Jump if equal
020A:0926  80 FC F0				cmp	ah,0F0h
020A:0929  72 0D				jb	loc_92			; Jump if below
020A:092B  80 FC F7				cmp	ah,0F7h
020A:092E  76 BD				jbe	loc_86			; Jump if below or =
020A:0930  80 FC FA				cmp	ah,0FAh
020A:0933  74 B8				je	loc_86			; Jump if equal
020A:0935  EB 19				jmp	short loc_94		; (0950)
020A:0937  90					nop
020A:0938			loc_92:
020A:0938  80 FC 04				cmp	ah,4
020A:093B  74 B0				je	loc_86			; Jump if equal
020A:093D  80 FC 00				cmp	ah,0
020A:0940  75 06				jne	loc_93			; Jump if not equal
020A:0942  C4					db	0C4h
020A:0943  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load 32 bit ptr
020A:0947  90					nop
020A:0948			loc_93:
020A:0948  80 FC 11				cmp	ah,11h
020A:094B  75 03				jne	loc_94			; Jump if not equal
020A:094D  C4					db	0C4h
020A:094E  C4 BE 22EA				les	di,dword ptr [bp+22EAh]	; Load 32 bit ptr
020A:0952  00 00				add	[bx+si],al
020A:0954  C0					db	0C0h
020A:0955			loc_95:
020A:0955  56					push	si
020A:0956  57					push	di
020A:0957  55					push	bp
  
020A:0958			locloop_96:
020A:0958  BA 0046				mov	dx,46h
020A:095B  52					push	dx
020A:095C  0E					push	cs
020A:095D  BB 096C				mov	bx,96Ch
020A:0960  53					push	bx
020A:0961  BB 0007				mov	bx,7
020A:0964  B4 0E				mov	ah,0Eh
020A:0966  26: 8A 05				mov	al,es:[di]
020A:0969  47					inc	di
020A:096A  EB E4		;*		jmp	short loc_94		;*(0950)
020A:096A  EB E4				db	0EBh,0E4h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 24

020A:096C  E2 EA				loop	locloop_96		; Loop if cx > 0
  
020A:096E  5D					pop	bp
020A:096F  5F					pop	di
020A:0970  5E					pop	si
020A:0971  B8 0001				mov	ax,1
020A:0974			loc_97:
020A:0974  EB 9F				jmp	short loc_89		; (0915)
020A:0976  2E: 80 3E 08A7 02			cmp	cs:data_186,2		; (020A:08A7=0)
020A:097C  75 05				jne	loc_99			; Jump if not equal
020A:097E  E8 FE85		;*		call	sub_17			;*(0806)
020A:097E  E8 85 FE				db	0E8h, 85h,0FEh
020A:0981  72 F1				jc	loc_97			; Jump if carry Set
020A:0983			loc_99:
020A:0983  2E: 80 3E 08A7 01			cmp	cs:data_186,1		; (020A:08A7=0)
020A:0989  74 06				je	loc_101			; Jump if equal
020A:098B  C4					db	0C4h
020A:098C  C4 10				les	dx,dword ptr [bx+si]	; Load 32 bit ptr
020A:098E  E9 FCBB				jmp	loc_50			; (064C)
020A:0991			loc_101:
020A:0991  80 FC 13				cmp	ah,13h
020A:0994  75 04				jne	loc_102			; Jump if not equal
020A:0996  3C FF				cmp	al,0FFh
020A:0998  74 BB				je	loc_95			; Jump if equal
020A:099A			loc_102:
020A:099A  EA F000:FF53		;*		jmp	far ptr loc_2896	;*(F000:FF53)
020A:099A  EA 53 FF 00 F0			db	0EAh, 53h,0FFh, 00h,0F0h
020A:099F  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
020A:09A1  C4					db	0C4h
020A:09A2  C4					db	0C4h
020A:09A3  FE C4				inc	ah
020A:09A5  C4 11				les	dx,dword ptr [bx+di]	; Load 32 bit ptr
020A:09A7  E9 FCA2				jmp	loc_50			; (064C)
020A:09AA  C4					db	0C4h
020A:09AB  C4 12				les	dx,dword ptr [bp+si]	; Load 32 bit ptr
020A:09AD  E9 FC9C				jmp	loc_50			; (064C)
020A:09B0  C4					db	0C4h
020A:09B1  C4 14				les	dx,dword ptr [si]	; Load 32 bit ptr
020A:09B3  E9 FC96				jmp	loc_50			; (064C)
020A:09B6  87 DB				xchg	bx,bx
020A:09B8  0000			data_189	dw	0
020A:09BA  00 00				add	[bx+si],al
020A:09BC  23CC			data_190	dw	23CCh
020A:09BE  00 00				add	[bx+si],al
020A:09C0  0032			data_191	dw	32h
020A:09C2  00 00				add	[bx+si],al
020A:09C4  1E					push	ds
020A:09C5  53					push	bx
  
020A:09C6			locloop_103:
020A:09C6  BB 0040				mov	bx,40h
020A:09C9  8E DB				mov	ds,bx
020A:09CB  80 FC 10				cmp	ah,10h
020A:09CE  E8 FDE8				call	sub_15			; (07B9)
020A:09D1  72 03				jc	loc_104			; Jump if carry Set
020A:09D3  E9 00E0				jmp	loc_118			; (0AB6)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 25

020A:09D6			loc_104:
020A:09D6  0A E4				or	ah,ah			; Zero ?
020A:09D8  74 3E				jz	loc_109			; Jump if zero
020A:09DA  FE CC				dec	ah
020A:09DC  74 74				jz	loc_113			; Jump if zero
020A:09DE  FE CC				dec	ah
020A:09E0  74 11				jz	loc_106			; Jump if zero
020A:09E2  FE CC				dec	ah
020A:09E4  74 08				jz	loc_105			; Jump if zero
020A:09E6  FE CC				dec	ah
020A:09E8  74 04				jz	loc_105			; Jump if zero
020A:09EA  FE CC				dec	ah
020A:09EC  74 0A				jz	loc_107			; Jump if zero
020A:09EE			loc_105:
020A:09EE  5B					pop	bx
020A:09EF  1F					pop	ds
020A:09F0  E9 FC59				jmp	loc_50			; (064C)
020A:09F3			loc_106:
020A:09F3  A0 0017				mov	al,byte ptr data_75+1	; (020A:0017=0)
020A:09F6  EB F6				jmp	short loc_105		; (09EE)
020A:09F8			loc_107:
020A:09F8  56					push	si
020A:09F9  8B 1E 001C				mov	bx,word ptr data_79+2	; (020A:001C=148Fh)
020A:09FD  8B F3				mov	si,bx
020A:09FF  E8 01B9				call	sub_23			; (0BBB)
020A:0A02  3B 1E 001A				cmp	bx,data_79		; (020A:001A=0AE9Ch)
020A:0A06  74			data_192	db	74h			; Data table (indexed access)
020A:0A07  0B 89 890C				or	cx,word ptr ds:[890Ch][bx+di]	; (020A:890C=84A1h)
020A:0A0B  1E					push	ds
020A:0A0C  1C			data_193	db	1Ch			; Data table (indexed access)
020A:0A0D  00			data_194	db	0
020A:0A0E  B0 00				mov	al,0
020A:0A10  5E					pop	si
020A:0A11  EB DB				jmp	short loc_105		; (09EE)
020A:0A13			loc_108:
020A:0A13  B0 01				mov	al,1
020A:0A15  5E					pop	si
020A:0A16  EB D6				jmp	short loc_105		; (09EE)
020A:0A18			loc_109:
020A:0A18  8B 1E 001A				mov	bx,data_79		; (020A:001A=0AE9Ch)
020A:0A1C  3B 1E 001C				cmp	bx,word ptr data_79+2	; (020A:001C=148Fh)
020A:0A20  75 13				jne	loc_111			; Jump if not equal
020A:0A22  E8 FDB4				call	sub_16			; (07D9)
020A:0A25  B8 9002				mov	ax,9002h
020A:0A28  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type
020A:0A2A			loc_110:
020A:0A2A  E8 FD8C				call	sub_15			; (07B9)
020A:0A2D  8B 1E 001A				mov	bx,data_79		; (020A:001A=0AE9Ch)
020A:0A31  3B 1E 001C				cmp	bx,word ptr data_79+2	; (020A:001C=148Fh)
020A:0A35			loc_111:
020A:0A35  E8 0190				call	sub_24			; (0BC8)
020A:0A38  75 05				jnz	loc_112			; Jump if not zero
020A:0A3A  E8 00E3				call	sub_19			; (0B20)
020A:0A3D  EB EB				jmp	short loc_110		; (0A2A)
020A:0A3F			loc_112:
020A:0A3F  8B 07				mov	ax,[bx]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 26

020A:0A41  E8 0177				call	sub_23			; (0BBB)
020A:0A44  89 1E 001A				mov	data_79,bx		; (020A:001A=0AE9Ch)
020A:0A48  E8 0129				call	sub_22			; (0B74)
020A:0A4B  72 DD				jc	loc_110			; Jump if carry Set
020A:0A4D  E8 00FC				call	sub_20			; (0B4C)
020A:0A50  EB 9C				jmp	short loc_105		; (09EE)
020A:0A52			loc_113:
020A:0A52  8B 1E 001A				mov	bx,data_79		; (020A:001A=0AE9Ch)
020A:0A56  3B 1E 001C				cmp	bx,word ptr data_79+2	; (020A:001C=148Fh)
020A:0A5A  8B 07				mov	ax,[bx]
020A:0A5C  E8 0169				call	sub_24			; (0BC8)
020A:0A5F  74 2F				jz	loc_115			; Jump if zero
020A:0A61  E8 00E8				call	sub_20			; (0B4C)
020A:0A64  E8 010D				call	sub_22			; (0B74)
020A:0A67  E8 FD6F				call	sub_16			; (07D9)
020A:0A6A  73 45				jnc	loc_117			; Jump if carry=0
020A:0A6C  E8 014C				call	sub_23			; (0BBB)
020A:0A6F  89 1E 001A				mov	data_79,bx		; (020A:001A=0AE9Ch)
020A:0A73  EB DD				jmp	short loc_113		; (0A52)
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:0A75			loc_114:
020A:0A75  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (ss:001A=202Ch)
020A:0A79  3B 1E 001C				cmp	bx,word ptr ds:[1Ch]	; (ss:001C=6E49h)
020A:0A7D  8B 07				mov	ax,[bx]
020A:0A7F  E8 0146				call	sub_24			; (0BC8)
020A:0A82  74 0C				jz	loc_115			; Jump if zero
020A:0A84  E8 00C5				call	sub_20			; (0B4C)
020A:0A87  E8 00D1				call	sub_21			; (0B5B)
020A:0A8A  E8 FD4C				call	sub_16			; (07D9)
020A:0A8D  EB 22				jmp	short loc_117		; (0AB1)
020A:0A8F  90					nop
020A:0A90			loc_115:
020A:0A90  E8 FD46				call	sub_16			; (07D9)
020A:0A93  50					push	ax
020A:0A94  9F					lahf				; Load ah from flags
020A:0A95  50					push	ax
020A:0A96  2E: A1 09B8				mov	ax,cs:data_189		; (020A:09B8=0)
020A:0A9A  2E: 3B 06 09C0			cmp	ax,cs:data_191		; (020A:09C0=32h)
020A:0A9F  72 08				jb	loc_116			; Jump if below
020A:0AA1  B4 01				mov	ah,1
020A:0AA3  C4					db	0C4h
020A:0AA4  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (ss:06EB=7601h) Load 32 bit ptr
020A:0AA8  90					nop
020A:0AA9			loc_116:
020A:0AA9  2E: FF 06 09BC			inc	cs:data_190		; (020A:09BC=2496h)
020A:0AAE  58					pop	ax
020A:0AAF  9E					sahf				; Store ah into flags
020A:0AB0  58					pop	ax
020A:0AB1			loc_117:
020A:0AB1  5B					pop	bx
020A:0AB2  1F					pop	ds
020A:0AB3  CA 0002				retf	2			; Return far
020A:0AB6			loc_118:
020A:0AB6  80 EC 10				sub	ah,10h
020A:0AB9  74 2C				jz	loc_120			; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 27

020A:0ABB  FE CC				dec	ah
020A:0ABD  74 B6				jz	loc_114			; Jump if zero
020A:0ABF  FE CC				dec	ah
020A:0AC1  74 03				jz	loc_119			; Jump if zero
020A:0AC3  E9 FF28				jmp	loc_105			; (09EE)
020A:0AC6			loc_119:
020A:0AC6  A0 0018				mov	al,byte ptr data_75+2	; (020A:0018=0)
020A:0AC9  8A E0				mov	ah,al
020A:0ACB  24 04				and	al,4
020A:0ACD  51					push	cx
020A:0ACE  B1 05				mov	cl,5
020A:0AD0  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:0AD2  59					pop	cx
020A:0AD3  80 E4 73				and	ah,73h			; 's'
020A:0AD6  0A C4				or	al,ah
020A:0AD8  8A 26 0096				mov	ah,byte ptr data_114	; (020A:0096=0)
020A:0ADC  80 E4 0C				and	ah,0Ch
020A:0ADF  0A E0				or	ah,al
020A:0AE1  A0 0017				mov	al,byte ptr data_75+1	; (020A:0017=0)
020A:0AE4  E9 FF07				jmp	loc_105			; (09EE)
020A:0AE7			loc_120:
020A:0AE7  8B 1E 001A				mov	bx,data_79		; (020A:001A=0AE9Ch)
020A:0AEB  3B 1E 001C				cmp	bx,word ptr data_79+2	; (020A:001C=148Fh)
020A:0AEF  75 13				jne	loc_122			; Jump if not equal
020A:0AF1  E8 FCE5				call	sub_16			; (07D9)
020A:0AF4  B8 9002				mov	ax,9002h
020A:0AF7  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type
020A:0AF9			loc_121:
020A:0AF9  E8 FCBD				call	sub_15			; (07B9)
020A:0AFC  8B 1E 001A				mov	bx,data_79		; (020A:001A=0AE9Ch)
020A:0B00  3B 1E 001C				cmp	bx,word ptr data_79+2	; (020A:001C=148Fh)
020A:0B04			loc_122:
020A:0B04  E8 00C1				call	sub_24			; (0BC8)
020A:0B07  75 05				jnz	loc_123			; Jump if not zero
020A:0B09  E8 0014				call	sub_19			; (0B20)
020A:0B0C  EB EB				jmp	short loc_121		; (0AF9)
020A:0B0E			loc_123:
020A:0B0E  8B 07				mov	ax,[bx]
020A:0B10  E8 00A8				call	sub_23			; (0BBB)
020A:0B13  89 1E 001A				mov	data_79,bx		; (020A:001A=0AE9Ch)
020A:0B17  E8 0041				call	sub_21			; (0B5B)
020A:0B1A  E8 002F				call	sub_20			; (0B4C)
020A:0B1D  E9 FECE				jmp	loc_105			; (09EE)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_19		proc	near
020A:0B20  50					push	ax
020A:0B21  E8 FCB5				call	sub_16			; (07D9)
020A:0B24  B4 02				mov	ah,2
020A:0B26  C4					db	0C4h
020A:0B27  C4 16 1E8B				les	dx,data_261		; (020A:1E8B=0) Load 32 bit ptr
020A:0B2B  1A 00				sbb	al,[bx+si]
020A:0B2D  3B 1E 001C				cmp	bx,word ptr data_79+2	; (020A:001C=148Fh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 28

020A:0B31  75 17				jne	loc_126			; Jump if not equal
020A:0B33  2E: A1 09B8				mov	ax,cs:data_189		; (020A:09B8=0)
020A:0B37  2E: 3B 06 09C0			cmp	ax,cs:data_191		; (020A:09C0=32h)
020A:0B3C  73 07				jae	loc_125			; Jump if above or =
020A:0B3E  2E: FF 06 09BC			inc	cs:data_190		; (020A:09BC=2510h)
020A:0B43  EB E4		;*		jmp	short loc_124		;*(0B29)
020A:0B43  EB E4				db	0EBh,0E4h
020A:0B45			loc_125:
020A:0B45  B4 01				mov	ah,1
020A:0B47  C4					db	0C4h
020A:0B48  C4 16 C358				les	dx,data_801		; (020A:C358=0D8B4h) Load 32 bit ptr
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_20:
020A:0B4C  2E: C7 06 09B8 0000			mov	cs:data_189,0		; (020A:09B8=0)
020A:0B53  2E: C7 06 09BC 0000			mov	cs:data_190,0		; (020A:09BC=2520h)
020A:0B5A  C3					retn
				sub_19		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_21		proc	near
020A:0B5B  53					push	bx
020A:0B5C  50					push	ax
020A:0B5D  9F					lahf				; Load ah from flags
020A:0B5E  8B D8				mov	bx,ax
020A:0B60  58					pop	ax
020A:0B61  53					push	bx
020A:0B62  3C F0				cmp	al,0F0h
020A:0B64  75 06				jne	loc_127			; Jump if not equal
020A:0B66  0A E4				or	ah,ah			; Zero ?
020A:0B68  74 02				jz	loc_127			; Jump if zero
020A:0B6A  32 C0				xor	al,al			; Zero register
020A:0B6C			loc_127:
020A:0B6C  8B D8				mov	bx,ax
020A:0B6E  58					pop	ax
020A:0B6F  9E					sahf				; Store ah into flags
020A:0B70  8B C3				mov	ax,bx
020A:0B72  5B					pop	bx
020A:0B73  C3					retn
				sub_21		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_22		proc	near
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:0B74			loc_128:
020A:0B74  53					push	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 29

020A:0B75  50					push	ax
020A:0B76  9F					lahf				; Load ah from flags
020A:0B77  8B D8				mov	bx,ax
020A:0B79  58					pop	ax
020A:0B7A  53					push	bx
020A:0B7B  80 FC E0				cmp	ah,0E0h
020A:0B7E  75 0F				jne	loc_129			; Jump if not equal
020A:0B80  B4 1C				mov	ah,1Ch
020A:0B82  3C 0D				cmp	al,0Dh
020A:0B84  74 23				je	loc_131			; Jump if equal
020A:0B86  3C 0A				cmp	al,0Ah
020A:0B88  74 1F				je	loc_131			; Jump if equal
020A:0B8A  B4 35				mov	ah,35h			; '5'
020A:0B8C  EB 1B				jmp	short loc_131		; (0BA9)
020A:0B8E  90					nop
020A:0B8F			loc_129:
020A:0B8F  80 FC 84				cmp	ah,84h
020A:0B92  77 1E				ja	loc_132			; Jump if above
020A:0B94  3C F0				cmp	al,0F0h
020A:0B96  75 07				jne	loc_130			; Jump if not equal
020A:0B98  0A E4				or	ah,ah			; Zero ?
020A:0B9A  74 0D				jz	loc_131			; Jump if zero
020A:0B9C  EB 14				jmp	short loc_132		; (0BB2)
020A:0B9E  90					nop
020A:0B9F			loc_130:
020A:0B9F  3C E0				cmp	al,0E0h
020A:0BA1  75 06				jne	loc_131			; Jump if not equal
020A:0BA3  0A E4				or	ah,ah			; Zero ?
020A:0BA5  74 02				jz	loc_131			; Jump if zero
020A:0BA7  32 C0				xor	al,al			; Zero register
020A:0BA9			loc_131:
020A:0BA9  8B D8				mov	bx,ax
020A:0BAB  58					pop	ax
020A:0BAC  9E					sahf				; Store ah into flags
020A:0BAD  8B C3				mov	ax,bx
020A:0BAF  5B					pop	bx
020A:0BB0  F8					clc				; Clear carry flag
020A:0BB1  C3					retn
020A:0BB2			loc_132:
020A:0BB2  8B D8				mov	bx,ax
020A:0BB4  58					pop	ax
020A:0BB5  9E					sahf				; Store ah into flags
020A:0BB6  8B C3				mov	ax,bx
020A:0BB8  5B					pop	bx
020A:0BB9  F9					stc				; Set carry flag
020A:0BBA  C3					retn
				sub_22		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_23		proc	near
020A:0BBB  43					inc	bx
020A:0BBC  43					inc	bx
020A:0BBD  3B 1E 0082				cmp	bx,data_110		; (020A:0082=10h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 30

020A:0BC1  75 04				jne	loc_133			; Jump if not equal
020A:0BC3  8B 1E 0080				mov	bx,data_109		; (020A:0080=1850h)
020A:0BC7			loc_133:
020A:0BC7  C3					retn
				sub_23		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_24		proc	near
020A:0BC8  53					push	bx
020A:0BC9  51					push	cx
020A:0BCA  50					push	ax
020A:0BCB  9F					lahf				; Load ah from flags
020A:0BCC  50					push	ax
020A:0BCD  A0 0017				mov	al,byte ptr data_75+1	; (020A:0017=0)
020A:0BD0  24 70				and	al,70h			; 'p'
020A:0BD2  B1 04				mov	cl,4
020A:0BD4  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:0BD6  24 07				and	al,7
020A:0BD8  8A 1E 0097				mov	bl,byte ptr data_114+1	; (020A:0097=0)
020A:0BDC  32 D8				xor	bl,al
020A:0BDE  80 E3 07				and	bl,7
020A:0BE1  74 25				jz	loc_134			; Jump if zero
020A:0BE3  F6 06 0097 40			test	byte ptr data_114+1,40h	; (020A:0097=0) '@'
020A:0BE8  75 1E				jnz	loc_134			; Jump if not zero
020A:0BEA  80 0E 0097 40			or	byte ptr data_114+1,40h	; (020A:0097=0) '@'
020A:0BEF  D2 E3				shl	bl,cl			; Shift w/zeros fill
020A:0BF1  0A C3				or	al,bl
020A:0BF3  B4 03				mov	ah,3
020A:0BF5  C4					db	0C4h
020A:0BF6  C4 16 2680				les	dx,data_306		; (020A:2680=6572h) Load 32 bit ptr
020A:0BFA  97					xchg	ax,di
020A:0BFB  00 F8				add	al,bh
020A:0BFD  24 0F				and	al,0Fh
020A:0BFF  08 06 0097				or	byte ptr data_114+1,al	; (020A:0097=0)
020A:0C03  80 26 0097 BF			and	byte ptr data_114+1,0BFh	; (020A:0097=0)
020A:0C08			loc_134:
020A:0C08  58					pop	ax
020A:0C09  9E					sahf				; Store ah into flags
020A:0C0A  58					pop	ax
020A:0C0B  59					pop	cx
020A:0C0C  5B					pop	bx
020A:0C0D  C3					retn
				sub_24		endp
  
020A:0C0E  C4					db	0C4h
020A:0C0F  C4 18				les	bx,dword ptr [bx+si]	; Load 32 bit ptr
020A:0C11  E9 FA38				jmp	loc_50			; (064C)
020A:0C14  C4					db	0C4h
020A:0C15  C4 19				les	bx,dword ptr [bx+di]	; Load 32 bit ptr
020A:0C17  E9 FA32				jmp	loc_50			; (064C)
020A:0C1A  CE2A			data_196	dw	0CE2Ah
020A:0C1C  000B			data_197	dw	0Bh
020A:0C1E  00			data_198	db	0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 31

020A:0C1F  E8 FBB7				call	sub_16			; (07D9)
020A:0C22  80 FC 02				cmp	ah,2
020A:0C25  72 06				jb	loc_135			; Jump if below
020A:0C27  C4					db	0C4h
020A:0C28  C4 1A				les	bx,dword ptr [bp+si]	; Load 32 bit ptr
020A:0C2A  E9 FA1F				jmp	loc_50			; (064C)
020A:0C2D			loc_135:
020A:0C2D  1E					push	ds
020A:0C2E  53					push	bx
020A:0C2F  50					push	ax
020A:0C30  B8 0040				mov	ax,40h
020A:0C33  8E D8				mov	ds,ax
020A:0C35  58					pop	ax
020A:0C36  E8 FB80				call	sub_15			; (07B9)
020A:0C39  0A E4				or	ah,ah			; Zero ?
020A:0C3B  75 3F				jnz	loc_138			; Jump if not zero
020A:0C3D			loc_136:
020A:0C3D  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
020A:0C40  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=0Bh)
020A:0C44  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=0CE2Ah)
020A:0C48  2E: 39 0E 0C1C			cmp	cs:data_197,cx		; (020A:0C1C=0Bh)
020A:0C4D  75 35				jne	loc_139			; Jump if not equal
020A:0C4F  2E: 8B 1E 0C1A			mov	bx,cs:data_196		; (020A:0C1A=0CE2Ah)
020A:0C54  3B DA				cmp	bx,dx
020A:0C56  74 05				je	loc_137			; Jump if equal
020A:0C58  43					inc	bx
020A:0C59  3B DA				cmp	bx,dx
020A:0C5B  75 27				jne	loc_139			; Jump if not equal
020A:0C5D			loc_137:
020A:0C5D  2E: FE 06 0C1E			inc	cs:data_198		; (020A:0C1E=0)
020A:0C62  2E: 80 3E 0C1E 10			cmp	cs:data_198,10h		; (020A:0C1E=0)
020A:0C68  72 20				jb	loc_140			; Jump if below
020A:0C6A  E8 FB6C				call	sub_16			; (07D9)
020A:0C6D  33 C0				xor	ax,ax			; Zero register
020A:0C6F  2E: FF 0E 0C1A			dec	cs:data_196		; (020A:0C1A=0CE2Ah)
020A:0C74  C4					db	0C4h
020A:0C75  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load 32 bit ptr
020A:0C78  3F					aas				; Ascii adjust
020A:0C79  FB					sti				; Enable interrupts
020A:0C7A  EB C1				jmp	short loc_136		; (0C3D)
020A:0C7C			loc_138:
020A:0C7C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=0CE2Ah)
020A:0C80  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=0Bh)
020A:0C84			loc_139:
020A:0C84  2E: C6 06 0C1E 00			mov	cs:data_198,0		; (020A:0C1E=0)
020A:0C8A			loc_140:
020A:0C8A  2E: 89 16 0C1A			mov	cs:data_196,dx		; (020A:0C1A=0CE2Ah)
020A:0C8F  2E: 89 0E 0C1C			mov	cs:data_197,cx		; (020A:0C1C=0Bh)
020A:0C94  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
020A:0C99  5B					pop	bx
020A:0C9A  1F					pop	ds
020A:0C9B  E9 F9AE				jmp	loc_50			; (064C)
020A:0C9E  C4					db	0C4h
020A:0C9F  C4 1E A8E9				les	bx,data_779		; (020A:A8E9=245h) Load 32 bit ptr
020A:0CA3  F9					stc				; Set carry flag
020A:0CA4  C4					db	0C4h
020A:0CA5  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load 32 bit ptr
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 32

020A:0CA8  A2			data_199	db	0A2h
020A:0CA9  F9					stc				; Set carry flag
020A:0CAA  E8 FB2C				call	sub_16			; (07D9)
020A:0CAD  CD 4A				int	4Ah			; RTC Alarm occurred
020A:0CAF  EB 01				jmp	short $+3		; delay for I/O
020A:0CB1  90					nop
020A:0CB2  EB 01				jmp	short $+3		; delay for I/O
020A:0CB4  90					nop
020A:0CB5  EB 01				jmp	short $+3		; delay for I/O
020A:0CB7  90					nop
020A:0CB8  E8 FAFE				call	sub_15			; (07B9)
020A:0CBB  C4					db	0C4h
020A:0CBC  C4					db	0C4h
020A:0CBD  FE C4				inc	ah
020A:0CBF  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load 32 bit ptr
020A:0CC2  0A E9				or	ch,cl
020A:0CC4  86 F9				xchg	bh,cl
020A:0CC6  C4					db	0C4h
020A:0CC7			loc_141:
020A:0CC7  C4 75 CD				les	si,dword ptr [di-33h]	; Load 32 bit ptr
020A:0CCA  02 E9				add	ch,cl
020A:0CCC  7E F9				jle	loc_141			; Jump if < or =
020A:0CCE  E8 FB08				call	sub_16			; (07D9)
020A:0CD1  EB 00				jmp	short $+2		; delay for I/O
020A:0CD3  EB 00				jmp	short $+2		; delay for I/O
020A:0CD5  EB 00				jmp	short $+2		; delay for I/O
020A:0CD7  C4					db	0C4h
020A:0CD8  C4					db	0C4h
020A:0CD9  FE					db	0FEh
020A:0CDA  EB 0B				jmp	short loc_143		; (0CE7)
020A:0CDC  3C 2F				cmp	al,2Fh			; '/'
020A:0CDE  75 06				jne	loc_142			; Jump if not equal
020A:0CE0  44					inc	sp
020A:0CE1  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:0CE3  4E					dec	si
020A:0CE4  00 40 F8				add	[bx+si-8],al
020A:0CE7			loc_143:
020A:0CE7  C3					retn
020A:0CE8  48					dec	ax
020A:0CE9  49					dec	cx
020A:0CEA  4D					dec	bp
020A:0CEB  45					inc	bp
020A:0CEC  4D					dec	bp
020A:0CED  20 20				and	[bx+si],ah
020A:0CEF  20 24				and	[si],ah
020A:0CF1  00 70 00				add	[bx+si+0],dh
020A:0CF4  00 A0 0041				add	[bx+si+41h],ah
020A:0CF8  4C					dec	sp
020A:0CF9  00 58 4D				add	[bx+si+4Dh],bl
020A:0CFC  53					push	bx
020A:0CFD  58					pop	ax
020A:0CFE  58					pop	ax
020A:0CFF  58					pop	ax
020A:0D00  58					pop	ax
020A:0D01  30 DE				xor	dh,bl
020A:0D03  04 74				add	al,74h			; 't'
020A:0D05  00 82 FB04				add	[bp+si-4FCh],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 33

020A:0D09  8D 54 00				lea	dx,[si+0]		; Load effective addr
020A:0D0C  00 00				add	[bx+si],al
020A:0D0E  42					inc	dx
020A:0D0F  05 020A				add	ax,20Ah
020A:0D12  A4					movsb				; Mov [si] to es:[di]
020A:0D13  10 A7 0100				adc	data_118[bx],ah		; (020A:0100=28h)
020A:0D17  01 01				add	[bx+di],ax
020A:0D19  01 00				add	[bx+si],ax
020A:0D1B  01 00				add	[bx+si],ax
020A:0D1D  01 00				add	[bx+si],ax
020A:0D1F  01 00				add	[bx+si],ax
020A:0D21  000A[00]				db	10 dup (0)
020A:0D2B  02 01				add	al,[bx+di]
020A:0D2D  00 00				add	[bx+si],al
020A:0D2F  00 00				add	[bx+si],al
020A:0D31  2E: 89 1E 0016			mov	cs:data_75,bx		; (020A:0016=0)
020A:0D36  2E: 8C 06 0018			mov	word ptr cs:data_75+2,es	; (020A:0018=0)
020A:0D3B  CB					retf
020A:0D3C  53					push	bx
020A:0D3D  1E					push	ds
020A:0D3E  2E: C5 1E 0016			lds	bx,dword ptr cs:data_75	; (020A:0016=0) Load 32 bit ptr
020A:0D43  80 7F 02 10				cmp	byte ptr [bx+2],10h
020A:0D47  C7 47 03 0100			mov	word ptr [bx+3],100h
020A:0D4C  76 05				jbe	loc_144			; Jump if below or =
020A:0D4E  81 4F 03 8003			or	word ptr [bx+3],8003h
020A:0D53			loc_144:
020A:0D53  1F					pop	ds
020A:0D54  5B					pop	bx
020A:0D55  CB					retf
020A:0D56  E8 03DB				call	sub_33			; (1134)
020A:0D59  80 FC 43				cmp	ah,43h			; 'C'
020A:0D5C  75 15				jne	loc_146			; Jump if not equal
020A:0D5E  0A C0				or	al,al			; Zero ?
020A:0D60  75 05				jnz	loc_145			; Jump if not zero
020A:0D62  B0 80				mov	al,80h
020A:0D64  E9 03F5				jmp	loc_198			; (115C)
020A:0D67			loc_145:
020A:0D67  3C 10				cmp	al,10h
020A:0D69  75 08				jne	loc_146			; Jump if not equal
020A:0D6B  0E					push	cs
020A:0D6C  07					pop	es
020A:0D6D  BB 00AF				mov	bx,0AFh
020A:0D70  E9 03E9				jmp	loc_198			; (115C)
020A:0D73			loc_146:
020A:0D73  E8 039E				call	sub_32			; (1114)
020A:0D76  2E: FF 2E 0022			jmp	cs:data_84		; (020A:0022=0FFh)
020A:0D7B  12 A0 0265				adc	ah,data_153[bx+si]	; (020A:0265=0)
020A:0D7F  98					cbw				; Convrt byte to word
020A:0D80  02 B2 D402				add	dh,[bp+si-2BFEh]
020A:0D84  02 F6				add	dh,dh
020A:0D86  02 30				add	dh,[bx+si]
020A:0D88  03 99 2B03				add	bx,data_405[bx+di]	; (020A:2B03=8D1Eh)
020A:0D8C  A0 A03C				mov	al,data_744		; (020A:A03C=33h)
020A:0D8F  94					xchg	ax,sp
020A:0D90  A0 A264				mov	al,data_752		; (020A:A264=16h)
020A:0D93  CF					iret				; Interrupt return
020A:0D94  A0 A0FF				mov	al,data_747		; (020A:A0FF=2Eh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 34

020A:0D97  23 A1 A159				and	sp,data_748[bx+di]	; (020A:A159=7500h)
020A:0D9B  11 A2 A216				adc	[bp+si-5DEAh],sp
020A:0D9F  EB 03				jmp	short loc_147		; (0DA4)
020A:0DA1  90					nop
020A:0DA2  90					nop
020A:0DA3  90					nop
020A:0DA4			loc_147:
020A:0DA4  51					push	cx
020A:0DA5  56					push	si
020A:0DA6  57					push	di
020A:0DA7  1E					push	ds
020A:0DA8  06					push	es
020A:0DA9  9C					pushf				; Push flags
020A:0DAA  FC					cld				; Clear direction
020A:0DAB  1E					push	ds
020A:0DAC  07					pop	es
020A:0DAD  0E					push	cs
020A:0DAE  1F					pop	ds
020A:0DAF  50					push	ax
020A:0DB0  0A E4				or	ah,ah			; Zero ?
020A:0DB2  74 31				jz	loc_150			; Jump if zero
020A:0DB4  80 FC 12				cmp	ah,12h
020A:0DB7  72 07				jb	loc_148			; Jump if below
020A:0DB9  58					pop	ax
020A:0DBA  33 C0				xor	ax,ax			; Zero register
020A:0DBC  B3 80				mov	bl,80h
020A:0DBE  EB 72				jmp	short loc_154		; (0E32)
020A:0DC0			loc_148:
020A:0DC0  9C					pushf				; Push flags
020A:0DC1  E8 0350				call	sub_32			; (1114)
020A:0DC4  83 3E 0020 00			cmp	word ptr data_81+2,0	; (020A:0020=0A3B9h)
020A:0DC9  75 05				jne	loc_149			; Jump if not equal
020A:0DCB  52					push	dx
020A:0DCC  E8 0076				call	sub_26			; (0E45)
020A:0DCF  5A					pop	dx
020A:0DD0			loc_149:
020A:0DD0  0E					push	cs
020A:0DD1  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0DD5  80 3E 002C 00			cmp	byte ptr data_89,0	; (020A:002C=39h)
020A:0DDA  74 09				je	loc_150			; Jump if equal
020A:0DDC  58					pop	ax
020A:0DDD  33 C0				xor	ax,ax			; Zero register
020A:0DDF  B3 81				mov	bl,81h
020A:0DE1  33 D2				xor	dx,dx			; Zero register
020A:0DE3  EB			data_201	db	0EBh
020A:0DE4  4D					dec	bp
020A:0DE5			loc_150:
020A:0DE5  58					pop	ax
020A:0DE6  50					push	ax
020A:0DE7  8A C4				mov	al,ah
020A:0DE9  32 E4				xor	ah,ah			; Zero register
020A:0DEB  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:0DED  8B F8				mov	di,ax
020A:0DEF  58					pop	ax
020A:0DF0  8B BD 008B				mov	di,word ptr ds:[8Bh][di]	; (020A:008B=504Fh)
020A:0DF4  0B FF				or	di,di			; Zero ?
020A:0DF6  79 38				jns	loc_153			; Jump if not sign
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 35

020A:0DF8  80 3E 002B 00			cmp	data_88,0		; (020A:002B=38h)
020A:0DFD  74 12				je	loc_151			; Jump if equal
020A:0DFF  56					push	si
020A:0E00  5057			data_202	dw	5057h			; Data table (indexed access)
020A:0E02  5153			data_203	dw	5153h
020A:0E04  DFE8			data_204	dw	0DFE8h
020A:0E06  01 3D				add	[di],di
020A:0E08  01 00				add	[bx+si],ax
020A:0E0A  59					pop	cx
020A:0E0B  5B					pop	bx
020A:0E0C  58					pop	ax
020A:0E0D  5F					pop	di
020A:0E0E  5E					pop	si
020A:0E0F  75 17				jnz	loc_152			; Jump if not zero
020A:0E11			loc_151:
020A:0E11  0E					push	cs
020A:0E12  E8 002A				call	sub_25			; (0E3F)
020A:0E15  80 3E 002B 00			cmp	data_88,0		; (020A:002B=38h)
020A:0E1A  74 16				je	loc_154			; Jump if equal
020A:0E1C  50					push	ax
020A:0E1D  53					push	bx
020A:0E1E  E8 01FF				call	sub_29			; (1020)
020A:0E21  3D 0001				cmp	ax,1
020A:0E24  5B					pop	bx
020A:0E25  58					pop	ax
020A:0E26  74 0A				jz	loc_154			; Jump if zero
020A:0E28			loc_152:
020A:0E28  33 C0				xor	ax,ax			; Zero register
020A:0E2A  33 D2				xor	dx,dx			; Zero register
020A:0E2C  B3 82				mov	bl,82h
020A:0E2E  EB 02				jmp	short loc_154		; (0E32)
020A:0E30			loc_153:
020A:0E30  FF D7				call	di			;*
020A:0E32			loc_154:
020A:0E32  0E					push	cs
020A:0E33  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0E37  07					pop	es
020A:0E38  1F					pop	ds
020A:0E39  5F					pop	di
020A:0E3A  5E					pop	si
020A:0E3B  59					pop	cx
020A:0E3C  CB					retf				; Return far
020A:0E3D  6E					db	6Eh
020A:0E3E  FB					sti				; Enable interrupts
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_25		proc	near
020A:0E3F  FF 36 014D				push	data_143		; (020A:014D=5582h)
020A:0E43  57					push	di
020A:0E44  CB					retf				; Return far
				sub_25		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 36

				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_26		proc	near
020A:0E45  06					push	es
020A:0E46  E8 0071				call	sub_27			; (0EBA)
020A:0E49  80 3E 002C 00			cmp	byte ptr data_89,0	; (020A:002C=39h)
020A:0E4E  74 02				je	loc_155			; Jump if equal
020A:0E50  07					pop	es
020A:0E51  C3					retn
020A:0E52			loc_155:
020A:0E52  B8 020D				mov	ax,20Dh
020A:0E55  C4					db	0C4h
020A:0E56  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load 32 bit ptr
020A:0E59  C4 36 001A				les	si,dword ptr data_79	; (020A:001A=0AE9Ch) Load 32 bit ptr
020A:0E5D  26: 87 04				xchg	ax,es:[si]
020A:0E60  A3 001E				mov	data_81,ax		; (020A:001E=961Fh)
020A:0E63  8C C8				mov	ax,cs
020A:0E65  26: 87 44 02				xchg	ax,es:[si+2]
020A:0E69  A3 0020				mov	word ptr data_81+2,ax	; (020A:0020=0A3B9h)
020A:0E6C  8B C1				mov	ax,cx
020A:0E6E  3D 3C00				cmp	ax,3C00h
020A:0E71  72 03				jb	loc_157			; Jump if below
020A:0E73  B8 3C00				mov	ax,3C00h
020A:0E76			loc_157:
020A:0E76  2B 06 0037				sub	ax,data_94		; (020A:0037=0)
020A:0E7A  3D 0040				cmp	ax,40h
020A:0E7D  72 0C				jb	loc_158			; Jump if below
020A:0E7F  83 3E 0035 00			cmp	data_93,0		; (020A:0035=80Fh)
020A:0E84  75 05				jne	loc_158			; Jump if not equal
020A:0E86  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (020A:0029=14h)
020A:0E8B			loc_158:
020A:0E8B  0B C0				or	ax,ax			; Zero ?
020A:0E8D  74 20				jz	loc_161			; Jump if zero
020A:0E8F  B9 0400				mov	cx,400h
020A:0E92  33 DB				xor	bx,bx			; Zero register
020A:0E94  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0E99  74 03				je	loc_159			; Jump if equal
020A:0E9B  BB 0040				mov	bx,40h
020A:0E9E			loc_159:
020A:0E9E  3B 1E 0035				cmp	bx,data_93		; (020A:0035=80Fh)
020A:0EA2  73 04				jae	loc_160			; Jump if above or =
020A:0EA4  8B 1E 0035				mov	bx,data_93		; (020A:0035=80Fh)
020A:0EA8			loc_160:
020A:0EA8  03 CB				add	cx,bx
020A:0EAA  2B C3				sub	ax,bx
020A:0EAC  E8 01E2				call	sub_31			; (1091)
020A:0EAF			loc_161:
020A:0EAF  07					pop	es
020A:0EB0  C3					retn
				sub_26		endp
  
020A:0EB1  13 00				adc	ax,[bx+si]
020A:0EB3  FF					db	0FFh
020A:0EB4  FF 56 44				call	word ptr [bp+44h]	;*2 entries
020A:0EB7  49					dec	cx
020A:0EB8  53					push	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 37

020A:0EB9  4B					dec	bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_27		proc	near
020A:0EBA  06					push	es
020A:0EBB  33 C0				xor	ax,ax			; Zero register
020A:0EBD  8E C0				mov	es,ax
020A:0EBF  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ah)
020A:0EC4  BF 0012				mov	di,12h
020A:0EC7  BE 01C5				mov	si,1C5h
020A:0ECA  B9 0005				mov	cx,5
020A:0ECD  FC					cld				; Clear direction
020A:0ECE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0ED0  07					pop	es
020A:0ED1  2474			data_207	dw	2474h
020A:0ED3  10E8			data_208	dw	10E8h
020A:0ED5  01			data_209	db	1
020A:0ED6  06					push	es
020A:0ED7  2E: C4 3E 01C1			les	di,cs:data_150		; (020A:01C1=0) Load 32 bit ptr
020A:0EDC  BE 01C5				mov	si,1C5h
020A:0EDF  B9 0005				mov	cx,5
020A:0EE2  FC					cld				; Clear direction
020A:0EE3  A6F3			data_212	dw	0A6F3h
020A:0EE5  07					pop	es
020A:0EE6  9C					pushf				; Push flags
020A:0EE7  36E8			data_213	dw	36E8h
020A:0EE9  0E01			data_214	dw	0E01h
020A:0EEB  16FF			data_215	dw	16FFh
020A:0EED  14 00				adc	al,0
020A:0EEF  74			data_217	db	74h
020A:0EF0  06					push	es
020A:0EF1  C6 06 002C 00			mov	byte ptr data_89,0	; (020A:002C=39h)
020A:0EF6  C3					retn
				sub_27		endp
  
020A:0EF7			loc_162:
020A:0EF7  C6 06 002C 01			mov	byte ptr data_89,1	; (020A:002C=39h)
020A:0EFC  C3					retn
020A:0EFD  80 FC 88				cmp	ah,88h
020A:0F00  74 0A				je	loc_163			; Jump if equal
020A:0F02  80 FC 87				cmp	ah,87h
020A:0F05  74 0C				je	loc_164			; Jump if equal
020A:0F07  2E: FF 2E 001E			jmp	dword ptr cs:data_81	; (020A:001E=961Fh)
020A:0F0C			loc_163:
020A:0F0C  2E: A1 0035				mov	ax,cs:data_93		; (020A:0035=80Fh)
020A:0F10  E9 0249				jmp	loc_198			; (115C)
020A:0F13			loc_164:
020A:0F13  E8 01FE				call	sub_32			; (1114)
020A:0F16  83 EC 04				sub	sp,4
020A:0F19  60					db	60h
020A:0F1A  E8 016C				call	sub_30			; (1089)
020A:0F1D  8B EC				mov	bp,sp
020A:0F1F  89 46 12				mov	[bp+12h],ax
020A:0F22  8B 46 18				mov	ax,[bp+18h]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 38

020A:0F25  89 46 10				mov	[bp+10h],ax
020A:0F28  61					db	61h
020A:0F29  2E: FF 1E 001E			call	dword ptr cs:data_81	; (020A:001E=961Fh)
020A:0F2E  50					push	ax
020A:0F2F  9C					pushf				; Push flags
020A:0F30  55					push	bp
020A:0F31  8B EC				mov	bp,sp
020A:0F33  8B 46 02				mov	ax,[bp+2]
020A:0F36  89 46 0C				mov	[bp+0Ch],ax
020A:0F39  83 7E 06 00				cmp	word ptr [bp+6],0
020A:0F3D  5D					pop	bp
020A:0F3E  58					pop	ax
020A:0F3F  58					pop	ax
020A:0F40  74 0B				jz	loc_165			; Jump if zero
020A:0F42  E8 01CF				call	sub_32			; (1114)
020A:0F45  60					db	60h
020A:0F46  B8 0001				mov	ax,1
020A:0F49  E8 0272				call	sub_34			; (11BE)
020A:0F4C  61					db	61h
020A:0F4D			loc_165:
020A:0F4D  83 C4 02				add	sp,2
020A:0F50  E9 0209				jmp	loc_198			; (115C)
020A:0F53  00 00				add	[bx+si],al
020A:0F55  E8 01BC				call	sub_32			; (1114)
020A:0F58  B3 91				mov	bl,91h
020A:0F5A  3C 40				cmp	al,40h			; '@'
020A:0F5C  75 06				jne	loc_166			; Jump if not equal
020A:0F5E  3B 16 0263				cmp	dx,data_152		; (020A:0263=0)
020A:0F62  74 21				je	loc_167			; Jump if equal
020A:0F64			loc_166:
020A:0F64  80 3E 0026 01			cmp	data_85,1		; (020A:0026=3)
020A:0F69  74 1A				je	loc_167			; Jump if equal
020A:0F6B  B3 90				mov	bl,90h
020A:0F6D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0F72  74 11				je	loc_167			; Jump if equal
020A:0F74  B3 92				mov	bl,92h
020A:0F76  3B 16 0033				cmp	dx,data_92		; (020A:0033=0Ch)
020A:0F7A  72 09				jb	loc_167			; Jump if below
020A:0F7C  B8 0001				mov	ax,1
020A:0F7F  A2 0026				mov	data_85,al		; (020A:0026=3)
020A:0F82  32 DB				xor	bl,bl			; Zero register
020A:0F84  C3					retn
020A:0F85			loc_167:
020A:0F85  33 C0				xor	ax,ax			; Zero register
020A:0F87  C3					retn
020A:0F88  E8 0189				call	sub_32			; (1114)
020A:0F8B  A0 0026				mov	al,data_85		; (020A:0026=3)
020A:0F8E  0A C0				or	al,al			; Zero ?
020A:0F90  74 0B				jz	loc_168			; Jump if zero
020A:0F92  C6 06 0026 00			mov	data_85,0		; (020A:0026=3)
020A:0F97  B8 0001				mov	ax,1
020A:0F9A  32 DB				xor	bl,bl			; Zero register
020A:0F9C  C3					retn
020A:0F9D			loc_168:
020A:0F9D  33 C0				xor	ax,ax			; Zero register
020A:0F9F  B3 93				mov	bl,93h
020A:0FA1  C3					retn
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 39

020A:0FA2  E8 016F				call	sub_32			; (1114)
020A:0FA5  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FAA  74 0D				je	loc_169			; Jump if equal
020A:0FAC  E8 0037				call	sub_28			; (0FE6)
020A:0FAF  0B C0				or	ax,ax			; Zero ?
020A:0FB1  74 0C				jz	loc_170			; Jump if zero
020A:0FB3  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FB9			loc_169:
020A:0FB9  B8 0001				mov	ax,1
020A:0FBC  32 DB				xor	bl,bl			; Zero register
020A:0FBE  C3					retn
020A:0FBF			loc_170:
020A:0FBF  B3 82				mov	bl,82h
020A:0FC1  33 C0				xor	ax,ax			; Zero register
020A:0FC3  C3					retn
020A:0FC4  E8 014D				call	sub_32			; (1114)
020A:0FC7  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FCC  74 0D				je	loc_171			; Jump if equal
020A:0FCE  E8 004F				call	sub_29			; (1020)
020A:0FD1  0B C0				or	ax,ax			; Zero ?
020A:0FD3  74 0C				jz	loc_172			; Jump if zero
020A:0FD5  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FDB			loc_171:
020A:0FDB  B8 0001				mov	ax,1
020A:0FDE  32 DB				xor	bl,bl			; Zero register
020A:0FE0  C3					retn
020A:0FE1			loc_172:
020A:0FE1  B3 82				mov	bl,82h
020A:0FE3  33			data_218	db	33h
020A:0FE4  C0					db	0C0h
020A:0FE5  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_28		proc	near
020A:0FE6  E8 012B				call	sub_32			; (1114)
020A:0FE9  80 3E 0027 01			cmp	data_86,1		; (020A:0027=4)
020A:0FEE  75 25				jne	loc_176			; Jump if not equal
020A:0FF0  C6 06 003B 03			mov	data_96,3		; (020A:003B=0)
020A:0FF5  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:0FFA  74 07				je	loc_174			; Jump if equal
020A:0FFC			loc_173:
020A:0FFC  E8 008A				call	sub_30			; (1089)
020A:0FFF  0B C0				or	ax,ax			; Zero ?
020A:1001  75 0E				jnz	loc_175			; Jump if not zero
020A:1003			loc_174:
020A:1003  B8 0001				mov	ax,1
020A:1006  E8 01B5				call	sub_34			; (11BE)
020A:1009  FE 0E 003B				dec	data_96			; (020A:003B=0)
020A:100D  75 ED				jnz	loc_173			; Jump if not zero
020A:100F  EB 0A				jmp	short loc_177		; (101B)
020A:1011			loc_175:
020A:1011  FF 06 002F				inc	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:1015			loc_176:
020A:1015  B8 0001				mov	ax,1
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 40

020A:1018  32 DB				xor	bl,bl			; Zero register
020A:101A  C3					retn
020A:101B			loc_177:
020A:101B  B3 82				mov	bl,82h
020A:101D  33 C0				xor	ax,ax			; Zero register
020A:101F  C3					retn
				sub_28		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_29		proc	near
020A:1020  E8 00F1				call	sub_32			; (1114)
020A:1023  80 3E 0027 00			cmp	data_86,0		; (020A:0027=4)
020A:1028  74 34				je	loc_182			; Jump if equal
020A:102A  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:102F  74 33				je	loc_183			; Jump if equal
020A:1031  C6 06 003B 03			mov	data_96,3		; (020A:003B=0)
020A:1036			loc_178:
020A:1036  E8 0050				call	sub_30			; (1089)
020A:1039  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (020A:002F=3D3Ch)
020A:103E  75 08				jne	loc_179			; Jump if not equal
020A:1040  0B C0				or	ax,ax			; Zero ?
020A:1042  74 16				jz	loc_181			; Jump if zero
020A:1044  33 C0				xor	ax,ax			; Zero register
020A:1046  EB 07				jmp	short loc_180		; (104F)
020A:1048			loc_179:
020A:1048  0B C0				or	ax,ax			; Zero ?
020A:104A  75 0E				jnz	loc_181			; Jump if not zero
020A:104C  B8 0001				mov	ax,1
020A:104F			loc_180:
020A:104F  E8 016C				call	sub_34			; (11BE)
020A:1052  FE 0E 003B				dec	data_96			; (020A:003B=0)
020A:1056  75 DE				jnz	loc_178			; Jump if not zero
020A:1058  EB 0A				jmp	short loc_183		; (1064)
020A:105A			loc_181:
020A:105A  FF 0E 002F				dec	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:105E			loc_182:
020A:105E  B8 0001				mov	ax,1
020A:1061  32 DB				xor	bl,bl			; Zero register
020A:1063  C3					retn
020A:1064			loc_183:
020A:1064  B3 82				mov	bl,82h
020A:1066  33 C0				xor	ax,ax			; Zero register
020A:1068  C3					retn
				sub_29		endp
  
020A:1069  2E: 80 3E 002B 00			cmp	cs:data_88,0		; (020A:002B=38h)
020A:106F  74 04				je	loc_184			; Jump if equal
020A:1071  B8 0001				mov	ax,1
020A:1074  CB					retf				; Return far
020A:1075			loc_184:
020A:1075  E8 FF6E				call	sub_28			; (0FE6)
020A:1078  CB					retf
020A:1079  2E: 80 3E 002B 00			cmp	cs:data_88,0		; (020A:002B=38h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 41

020A:107F  74 04				je	loc_185			; Jump if equal
020A:1081  B8 0001				mov	ax,1
020A:1084  CB					retf				; Return far
020A:1085			loc_185:
020A:1085  E8 FF98				call	sub_29			; (1020)
020A:1088  CB					retf				; Return far
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_30		proc	near
020A:1089  2E: A0 003C				mov	al,cs:data_97		; (020A:003C=10h)
020A:108D  98					cbw				; Convrt byte to word
020A:108E  32 DB				xor	bl,bl			; Zero register
020A:1090  C3					retn
				sub_30		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_31		proc	near
020A:1091  8B D0				mov	dx,ax
020A:1093  8B F1				mov	si,cx
020A:1095  33 FF				xor	di,di			; Zero register
020A:1097  06					push	es
020A:1098  8E 06 014D				mov	es,data_143		; (020A:014D=5582h)
020A:109C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (5582:A004=0FFFFh)
020A:10A1  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (5582:A008=0FFFFh)
  
020A:10A6			locloop_186:
020A:10A6  26: 80 3F 04				cmp	byte ptr es:[bx],4
020A:10AA  75 08				jne	loc_187			; Jump if not equal
020A:10AC  0B FF				or	di,di			; Zero ?
020A:10AE  75 48				jnz	loc_190			; Jump if not zero
020A:10B0  8B FB				mov	di,bx
020A:10B2  EB 44				jmp	short loc_190		; (10F8)
020A:10B4			loc_187:
020A:10B4  26: 80 3F 01				cmp	byte ptr es:[bx],1
020A:10B8  75 3E				jne	loc_190			; Jump if not equal
020A:10BA  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10BE  26: 03 47 04				add	ax,es:[bx+4]
020A:10C2  3B C6				cmp	ax,si
020A:10C4  72 32				jb	loc_190			; Jump if below
020A:10C6  8B C6				mov	ax,si
020A:10C8  03 C2				add	ax,dx
020A:10CA  26: 3B 47 02				cmp	ax,es:[bx+2]
020A:10CE  72 28				jb	loc_190			; Jump if below
020A:10D0  26: 3B 77 02				cmp	si,es:[bx+2]
020A:10D4  76 08				jbe	loc_188			; Jump if below or =
020A:10D6  03 D6				add	dx,si
020A:10D8  26: 8B 77 02				mov	si,es:[bx+2]
020A:10DC  2B D6				sub	dx,si
020A:10DE			loc_188:
020A:10DE  26: 8B 47 02				mov	ax,es:[bx+2]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 42

020A:10E2  26: 03 47 04				add	ax,es:[bx+4]
020A:10E6  2B C2				sub	ax,dx
020A:10E8  2B C6				sub	ax,si
020A:10EA  76 02				jbe	loc_189			; Jump if below or =
020A:10EC  03 D0				add	dx,ax
020A:10EE			loc_189:
020A:10EE  26: C6 07 04				mov	byte ptr es:[bx],4
020A:10F2  0B FF				or	di,di			; Zero ?
020A:10F4  75 02				jnz	loc_190			; Jump if not zero
020A:10F6  8B FB				mov	di,bx
020A:10F8			loc_190:
020A:10F8  83 C3 06				add	bx,6
020A:10FB  E2 A9				loop	locloop_186		; Loop if cx > 0
  
020A:10FD  0B FF				or	di,di			; Zero ?
020A:10FF  74 11				jz	loc_191			; Jump if zero
020A:1101  26: C6 45 01 00			mov	byte ptr es:[di+1],0
020A:1106  26: C6 05 01				mov	byte ptr es:[di],1
020A:110A  26: 89 75 02				mov	es:[di+2],si
020A:110E  26: 89 55 04				mov	es:[di+4],dx
020A:1112			loc_191:
020A:1112  07					pop	es
020A:1113  C3					retn
				sub_31		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_32		proc	near
020A:1114  1E					push	ds
020A:1115  50					push	ax
020A:1116  B8 0040				mov	ax,40h
020A:1119  8E D8				mov	ds,ax
020A:111B  9F					lahf				; Load ah from flags
020A:111C  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1122  75 0C				jnz	loc_193			; Jump if not zero
020A:1124  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:112B			loc_192:
020A:112B  9E					sahf				; Store ah into flags
020A:112C  58					pop	ax
020A:112D  1F					pop	ds
020A:112E  EB 03				jmp	short loc_194		; (1133)
020A:1130			loc_193:
020A:1130  FA					cli				; Disable interrupts
020A:1131  EB F8				jmp	short loc_192		; (112B)
020A:1133			loc_194:
020A:1133  C3					retn
				sub_32		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_33		proc	near
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 43

020A:1134  1E					push	ds
020A:1135  50					push	ax
020A:1136  B8 0040				mov	ax,40h
020A:1139  8E D8				mov	ds,ax
020A:113B  9F					lahf				; Load ah from flags
020A:113C  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1142  75 14				jnz	loc_196			; Jump if not zero
020A:1144  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:114A  75 0C				jnz	loc_196			; Jump if not zero
020A:114C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1153			loc_195:
020A:1153  9E					sahf				; Store ah into flags
020A:1154  58					pop	ax
020A:1155  1F					pop	ds
020A:1156  EB 03				jmp	short loc_197		; (115B)
020A:1158			loc_196:
020A:1158  FB					sti				; Enable interrupts
020A:1159  EB F8				jmp	short loc_195		; (1153)
020A:115B			loc_197:
020A:115B  C3					retn
				sub_33		endp
  
020A:115C			loc_198:
020A:115C  1E					push	ds
020A:115D  50					push	ax
020A:115E  B8 0040				mov	ax,40h
020A:1161  8E D8				mov	ds,ax
020A:1163  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1169  75 4F				jnz	loc_206			; Jump if not zero
020A:116B  55					push	bp
020A:116C  8B EC				mov	bp,sp
020A:116E  8B 46 0A				mov	ax,[bp+0Ah]
020A:1171  5D					pop	bp
020A:1172  A9 0100				test	ax,100h
020A:1175  75 43				jnz	loc_206			; Jump if not zero
020A:1177  A9 0200				test	ax,200h
020A:117A  74 22				jz	loc_202			; Jump if zero
020A:117C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1183  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1189  75 2F				jnz	loc_206			; Jump if not zero
020A:118B			loc_199:
020A:118B  86 E0				xchg	ah,al
020A:118D  FC					cld				; Clear direction
020A:118E  A8 04				test	al,4
020A:1190  75 25				jnz	loc_205			; Jump if not zero
020A:1192			loc_200:
020A:1192  A8 08				test	al,8
020A:1194  75 11				jnz	loc_203			; Jump if not zero
020A:1196  70 19				jo	loc_204			; Jump if overflow=1
020A:1198			loc_201:
020A:1198  9E					sahf				; Store ah into flags
020A:1199  58					pop	ax
020A:119A  1F					pop	ds
020A:119B  CA 0002				retf	2			; Return far
020A:119E			loc_202:
020A:119E  F0> 81 26 0314 FDFF	           lock	and	data_161,0FDFFh		; (020A:0314=3231h)
020A:11A5  EB E4				jmp	short loc_199		; (118B)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 44

020A:11A7			loc_203:
020A:11A7  70 EF				jo	loc_201			; Jump if overflow=1
020A:11A9  50					push	ax
020A:11AA  B0 7F				mov	al,7Fh
020A:11AC  04 02				add	al,2
020A:11AE  58					pop	ax
020A:11AF  EB E7				jmp	short loc_201		; (1198)
020A:11B1			loc_204:
020A:11B1  50					push	ax
020A:11B2  32 C0				xor	al,al			; Zero register
020A:11B4  58					pop	ax
020A:11B5  EB E1				jmp	short loc_201		; (1198)
020A:11B7			loc_205:
020A:11B7  FD					std				; Set direction flag
020A:11B8  EB D8				jmp	short loc_200		; (1192)
020A:11BA			loc_206:
020A:11BA  58					pop	ax
020A:11BB  1F					pop	ds
020A:11BC  CF					iret				; Interrupt return
020A:11BD  00 3D				add	[di],bh
020A:11BF  02 00				add	al,[bx+si]
020A:11C1  75 06				jnz	loc_207			; Jump if not zero
020A:11C3  2E: A0 003C				mov	al,cs:data_97		; (020A:003C=10h)
020A:11C7  98					cbw				; Convrt byte to word
020A:11C8  C3					retn
020A:11C9			loc_207:
020A:11C9  C4					db	0C4h
020A:11CA  C4 52 00				les	dx,dword ptr [bp+si+0]	; Load 32 bit ptr
020A:11CD  C3					retn
020A:11CE  2E: C6 46 28 03			mov	byte ptr cs:[bp+28h],3
020A:11D3  49					dec	cx
020A:11D4  00 00				add	[bx+si],al
020A:11D6  0D 002F				or	ax,2Fh
020A:11D9  00 06 0600				add	byte ptr ds:[600h],al	; (020A:0600=2)
020A:11DD  00 0F				add	[bx],cl
020A:11DF  61					db	61h
020A:11E0  FF					db	0FFh
020A:11E1  FF 06 2300				inc	data_290		; (020A:2300=0)
020A:11E5  00					db	0
020A:11E6  00			data_220	db	0
020A:11E7  00			data_221	db	0
020A:11E8  00			data_222	db	0
020A:11E9  00 00				add	[bx+si],al
020A:11EB  00 00				add	[bx+si],al
020A:11ED  00 00				add	[bx+si],al
020A:11EF  00 00				add	[bx+si],al
020A:11F1  00 00				add	[bx+si],al
020A:11F3  00 00				add	[bx+si],al
020A:11F5  00 00				add	[bx+si],al
020A:11F7  00 00				add	[bx+si],al
020A:11F9  00 00				add	[bx+si],al
020A:11FB  00 00				add	[bx+si],al
020A:11FD  00 00				add	[bx+si],al
020A:11FF  00 00				add	[bx+si],al
020A:1201  00 00				add	[bx+si],al
020A:1203  00 00				add	[bx+si],al
020A:1205  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 45

020A:1207  00 00				add	[bx+si],al
020A:1209  00 00				add	[bx+si],al
020A:120B  00 00				add	[bx+si],al
020A:120D  00 00				add	[bx+si],al
020A:120F  00 00				add	[bx+si],al
020A:1211  00 00				add	[bx+si],al
020A:1213  00 00				add	[bx+si],al
020A:1215  00 00				add	[bx+si],al
020A:1217  00 00				add	[bx+si],al
020A:1219  00 00				add	[bx+si],al
020A:121B  00 00				add	[bx+si],al
020A:121D  00 00				add	[bx+si],al
020A:121F  00 00				add	[bx+si],al
020A:1221  00 00				add	[bx+si],al
020A:1223  00 00				add	[bx+si],al
020A:1225  00 00				add	[bx+si],al
020A:1227  00 00				add	[bx+si],al
020A:1229  00 00				add	[bx+si],al
020A:122B  00 00				add	[bx+si],al
020A:122D  00 00				add	[bx+si],al
020A:122F  00 00				add	[bx+si],al
020A:1231  00 00				add	[bx+si],al
020A:1233  00 00				add	[bx+si],al
020A:1235  00 00				add	[bx+si],al
020A:1237  00 00				add	[bx+si],al
020A:1239  00 00				add	[bx+si],al
020A:123B  00 00				add	[bx+si],al
020A:123D  00 00				add	[bx+si],al
020A:123F  00 00				add	[bx+si],al
020A:1241  00 00				add	[bx+si],al
020A:1243  00 00				add	[bx+si],al
020A:1245  00 00				add	[bx+si],al
020A:1247  00 00				add	[bx+si],al
020A:1249  00 00				add	[bx+si],al
020A:124B  00 00				add	[bx+si],al
020A:124D  00 00				add	[bx+si],al
020A:124F  00 00				add	[bx+si],al
020A:1251  00 00				add	[bx+si],al
020A:1253  00 00				add	[bx+si],al
020A:1255  00 00				add	[bx+si],al
020A:1257  00 00				add	[bx+si],al
020A:1259  00 00				add	[bx+si],al
020A:125B  00 00				add	[bx+si],al
020A:125D  00 00				add	[bx+si],al
020A:125F  00 00				add	[bx+si],al
020A:1261  00 00				add	[bx+si],al
020A:1263  00 00				add	[bx+si],al
020A:1265  00 00				add	[bx+si],al
020A:1267  00 00				add	[bx+si],al
020A:1269  00 00				add	[bx+si],al
020A:126B  00 00				add	[bx+si],al
020A:126D  00 00				add	[bx+si],al
020A:126F  00 00				add	[bx+si],al
020A:1271  00 00				add	[bx+si],al
020A:1273  00 00				add	[bx+si],al
020A:1275  00 00				add	[bx+si],al
020A:1277  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 46

020A:1279  00 00				add	[bx+si],al
020A:127B  00 00				add	[bx+si],al
020A:127D  00 00				add	[bx+si],al
020A:127F  00 00				add	[bx+si],al
020A:1281  00 00				add	[bx+si],al
020A:1283  00 00				add	[bx+si],al
020A:1285  00 00				add	[bx+si],al
020A:1287  00 00				add	[bx+si],al
020A:1289  00 00				add	[bx+si],al
020A:128B  00 00				add	[bx+si],al
020A:128D  00 00				add	[bx+si],al
020A:128F  00 00				add	[bx+si],al
020A:1291  00 00				add	[bx+si],al
020A:1293  00 00				add	[bx+si],al
020A:1295  00 00				add	[bx+si],al
020A:1297  00 00				add	[bx+si],al
020A:1299  00 00				add	[bx+si],al
020A:129B  00 00				add	[bx+si],al
020A:129D  00 00				add	[bx+si],al
020A:129F  00 00				add	[bx+si],al
020A:12A1  00 00				add	[bx+si],al
020A:12A3  00 00				add	[bx+si],al
020A:12A5  00 00				add	[bx+si],al
020A:12A7  00 00				add	[bx+si],al
020A:12A9  00 00				add	[bx+si],al
020A:12AB  00 00				add	[bx+si],al
020A:12AD  00 00				add	[bx+si],al
020A:12AF  00 00				add	[bx+si],al
020A:12B1  00 00				add	[bx+si],al
020A:12B3  00 00				add	[bx+si],al
020A:12B5  00 00				add	[bx+si],al
020A:12B7  00 00				add	[bx+si],al
020A:12B9  00 00				add	[bx+si],al
020A:12BB  00 00				add	[bx+si],al
020A:12BD  00 00				add	[bx+si],al
020A:12BF  00 00				add	[bx+si],al
020A:12C1  00 00				add	[bx+si],al
020A:12C3  00 00				add	[bx+si],al
020A:12C5  00 00				add	[bx+si],al
020A:12C7  00 00				add	[bx+si],al
020A:12C9  00 00				add	[bx+si],al
020A:12CB  00 00				add	[bx+si],al
020A:12CD  00 00				add	[bx+si],al
020A:12CF  00 00				add	[bx+si],al
020A:12D1  00 00				add	[bx+si],al
020A:12D3  00 00				add	[bx+si],al
020A:12D5  00 00				add	[bx+si],al
020A:12D7  00 00				add	[bx+si],al
020A:12D9  00 00				add	[bx+si],al
020A:12DB  00 00				add	[bx+si],al
020A:12DD  00 00				add	[bx+si],al
020A:12DF  00 00				add	[bx+si],al
020A:12E1  00 00				add	[bx+si],al
020A:12E3  00 00				add	[bx+si],al
020A:12E5  00 00				add	[bx+si],al
020A:12E7  00 00				add	[bx+si],al
020A:12E9  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 47

020A:12EB  00 00				add	[bx+si],al
020A:12ED  00 00				add	[bx+si],al
020A:12EF  00 00				add	[bx+si],al
020A:12F1  00 00				add	[bx+si],al
020A:12F3  00 00				add	[bx+si],al
020A:12F5  00 00				add	[bx+si],al
020A:12F7  00 00				add	[bx+si],al
020A:12F9  00 00				add	[bx+si],al
020A:12FB  0000			data_223	dw	0
020A:12FD  0000			data_224	dw	0
020A:12FF  0000			data_225	dw	0
020A:1301  0000			data_226	dw	0
020A:1303  0000			data_227	dw	0
020A:1305  00 00				add	[bx+si],al
020A:1307  00 00				add	[bx+si],al
020A:1309  00			data_230	db	0
020A:130A  00 00				add	[bx+si],al
020A:130C  00 00				add	[bx+si],al
020A:130E  00 00				add	[bx+si],al
020A:1310  00 00				add	[bx+si],al
020A:1312  00 00				add	[bx+si],al
020A:1314  00 00				add	[bx+si],al
020A:1316  00 00				add	[bx+si],al
020A:1318  00 00				add	[bx+si],al
020A:131A  00 00				add	[bx+si],al
020A:131C  00 00				add	[bx+si],al
020A:131E  00 00				add	[bx+si],al
020A:1320  00 00				add	[bx+si],al
020A:1322  00 00				add	[bx+si],al
020A:1324  00 00				add	[bx+si],al
020A:1326  00 00				add	[bx+si],al
020A:1328  00 00				add	[bx+si],al
020A:132A  00 00				add	[bx+si],al
020A:132C  00 00				add	[bx+si],al
020A:132E  00 00				add	[bx+si],al
020A:1330  00 00				add	[bx+si],al
020A:1332  00 00				add	[bx+si],al
020A:1334  00 00				add	[bx+si],al
020A:1336  00 00				add	[bx+si],al
020A:1338  00 00				add	[bx+si],al
020A:133A  00 00				add	[bx+si],al
020A:133C  00 00				add	[bx+si],al
020A:133E  00 00				add	[bx+si],al
020A:1340  00 00				add	[bx+si],al
020A:1342  00 00				add	[bx+si],al
020A:1344  00 00				add	[bx+si],al
020A:1346  00 00				add	[bx+si],al
020A:1348  00 00				add	[bx+si],al
020A:134A  00 00				add	[bx+si],al
020A:134C  00 00				add	[bx+si],al
020A:134E  00 00				add	[bx+si],al
020A:1350  00 00				add	[bx+si],al
020A:1352  00 00				add	[bx+si],al
020A:1354  00 00				add	[bx+si],al
020A:1356  00 00				add	[bx+si],al
020A:1358  00 00				add	[bx+si],al
020A:135A  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 48

020A:135C  00 00				add	[bx+si],al
020A:135E  00 00				add	[bx+si],al
020A:1360  00 00				add	[bx+si],al
020A:1362  00 00				add	[bx+si],al
020A:1364  00 00				add	[bx+si],al
020A:1366  00 00				add	[bx+si],al
020A:1368  00 00				add	[bx+si],al
020A:136A  00 00				add	[bx+si],al
020A:136C  00 00				add	[bx+si],al
020A:136E  00 00				add	[bx+si],al
020A:1370  00 00				add	[bx+si],al
020A:1372  00 00				add	[bx+si],al
020A:1374  00 00				add	[bx+si],al
020A:1376  00 00				add	[bx+si],al
020A:1378  00 00				add	[bx+si],al
020A:137A  00 00				add	[bx+si],al
020A:137C  00 00				add	[bx+si],al
020A:137E  00 00				add	[bx+si],al
020A:1380  00 00				add	[bx+si],al
020A:1382  00 00				add	[bx+si],al
020A:1384  00 00				add	[bx+si],al
020A:1386  00 00				add	[bx+si],al
020A:1388  00 00				add	[bx+si],al
020A:138A  00 00				add	[bx+si],al
020A:138C  00 00				add	[bx+si],al
020A:138E  00 00				add	[bx+si],al
020A:1390  00 00				add	[bx+si],al
020A:1392  00 00				add	[bx+si],al
020A:1394  00 00				add	[bx+si],al
020A:1396  00 00				add	[bx+si],al
020A:1398  00 00				add	[bx+si],al
020A:139A  00 00				add	[bx+si],al
020A:139C  00 00				add	[bx+si],al
020A:139E  00			data_231	db	0
020A:139F  0000			data_232	dw	0
020A:13A1  00 00				add	[bx+si],al
020A:13A3  00 00				add	[bx+si],al
020A:13A5  00 00				add	[bx+si],al
020A:13A7  00 00				add	[bx+si],al
020A:13A9  00 00				add	[bx+si],al
020A:13AB  00 00				add	[bx+si],al
020A:13AD  00 00				add	[bx+si],al
020A:13AF  00 00				add	[bx+si],al
020A:13B1  00 00				add	[bx+si],al
020A:13B3  00 00				add	[bx+si],al
020A:13B5  00 00				add	[bx+si],al
020A:13B7  00 00				add	[bx+si],al
020A:13B9  00 00				add	[bx+si],al
020A:13BB  00 00				add	[bx+si],al
020A:13BD  00 00				add	[bx+si],al
020A:13BF  00 00				add	[bx+si],al
020A:13C1  00 00				add	[bx+si],al
020A:13C3  00 00				add	[bx+si],al
020A:13C5  00 00				add	[bx+si],al
020A:13C7  00 00				add	[bx+si],al
020A:13C9  00 00				add	[bx+si],al
020A:13CB  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 49

020A:13CD  00 00				add	[bx+si],al
020A:13CF  00 00				add	[bx+si],al
020A:13D1  00 00				add	[bx+si],al
020A:13D3  00 00				add	[bx+si],al
020A:13D5  00 00				add	[bx+si],al
020A:13D7  00 00				add	[bx+si],al
020A:13D9  00 00				add	[bx+si],al
020A:13DB  00 00				add	[bx+si],al
020A:13DD  00 00				add	[bx+si],al
020A:13DF  00 00				add	[bx+si],al
020A:13E1  00 00				add	[bx+si],al
020A:13E3  00 00				add	[bx+si],al
020A:13E5  00 00				add	[bx+si],al
020A:13E7  00 00				add	[bx+si],al
020A:13E9  00 00				add	[bx+si],al
020A:13EB  00 00				add	[bx+si],al
020A:13ED  00 00				add	[bx+si],al
020A:13EF  00 00				add	[bx+si],al
020A:13F1  00 00				add	[bx+si],al
020A:13F3  00 00				add	[bx+si],al
020A:13F5  00 00				add	[bx+si],al
020A:13F7  00 00				add	[bx+si],al
020A:13F9  00 00				add	[bx+si],al
020A:13FB  00 00				add	[bx+si],al
020A:13FD  00 00				add	[bx+si],al
020A:13FF  00 00				add	[bx+si],al
020A:1401  00 00				add	[bx+si],al
020A:1403  00 00				add	[bx+si],al
020A:1405  00 00				add	[bx+si],al
020A:1407  00 00				add	[bx+si],al
020A:1409  00 00				add	[bx+si],al
020A:140B  00 00				add	[bx+si],al
020A:140D  00 00				add	[bx+si],al
020A:140F  00 00				add	[bx+si],al
020A:1411  00 00				add	[bx+si],al
020A:1413  00 00				add	[bx+si],al
020A:1415  00 00				add	[bx+si],al
020A:1417  00 00				add	[bx+si],al
020A:1419  00 00				add	[bx+si],al
020A:141B  00 00				add	[bx+si],al
020A:141D  00 00				add	[bx+si],al
020A:141F  00 00				add	[bx+si],al
020A:1421  00 00				add	[bx+si],al
020A:1423  00 00				add	[bx+si],al
020A:1425  00 00				add	[bx+si],al
020A:1427  00 00				add	[bx+si],al
020A:1429  00 00				add	[bx+si],al
020A:142B  00 00				add	[bx+si],al
020A:142D  00 00				add	[bx+si],al
020A:142F  00 00				add	[bx+si],al
020A:1431  00 00				add	[bx+si],al
020A:1433  00 00				add	[bx+si],al
020A:1435  00 00				add	[bx+si],al
020A:1437  00 00				add	[bx+si],al
020A:1439  00 00				add	[bx+si],al
020A:143B  00 00				add	[bx+si],al
020A:143D  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 50

020A:143F  00 00				add	[bx+si],al
020A:1441  00 00				add	[bx+si],al
020A:1443  00 00				add	[bx+si],al
020A:1445  00 00				add	[bx+si],al
020A:1447  00 00				add	[bx+si],al
020A:1449  00 00				add	[bx+si],al
020A:144B  00 00				add	[bx+si],al
020A:144D  00 00				add	[bx+si],al
020A:144F  00 00				add	[bx+si],al
020A:1451  00 00				add	[bx+si],al
020A:1453  00 00				add	[bx+si],al
020A:1455  00 00				add	[bx+si],al
020A:1457  00 00				add	[bx+si],al
020A:1459  00 00				add	[bx+si],al
020A:145B  00 00				add	[bx+si],al
020A:145D  00 00				add	[bx+si],al
020A:145F  00 00				add	[bx+si],al
020A:1461  00 00				add	[bx+si],al
020A:1463  00 00				add	[bx+si],al
020A:1465  00 00				add	[bx+si],al
020A:1467  00 00				add	[bx+si],al
020A:1469  00 00				add	[bx+si],al
020A:146B  00 00				add	[bx+si],al
020A:146D  00 00				add	[bx+si],al
020A:146F  00 00				add	[bx+si],al
020A:1471  00 00				add	[bx+si],al
020A:1473  00 00				add	[bx+si],al
020A:1475  00 00				add	[bx+si],al
020A:1477  00 00				add	[bx+si],al
020A:1479  00 00				add	[bx+si],al
020A:147B  00 00				add	[bx+si],al
020A:147D  00 00				add	[bx+si],al
020A:147F  00 00				add	[bx+si],al
020A:1481  00 00				add	[bx+si],al
020A:1483  00 00				add	[bx+si],al
020A:1485  00 00				add	[bx+si],al
020A:1487  00 00				add	[bx+si],al
020A:1489  00 00				add	[bx+si],al
020A:148B  00 00				add	[bx+si],al
020A:148D  00 00				add	[bx+si],al
020A:148F  00 00				add	[bx+si],al
020A:1491  00 00				add	[bx+si],al
020A:1493  00 00				add	[bx+si],al
020A:1495  00 00				add	[bx+si],al
020A:1497  00 00				add	[bx+si],al
020A:1499  00 00				add	[bx+si],al
020A:149B  00 00				add	[bx+si],al
020A:149D  00 00				add	[bx+si],al
020A:149F  00 00				add	[bx+si],al
020A:14A1  00 00				add	[bx+si],al
020A:14A3  00 00				add	[bx+si],al
020A:14A5  00 00				add	[bx+si],al
020A:14A7  00 00				add	[bx+si],al
020A:14A9  00 00				add	[bx+si],al
020A:14AB  00 00				add	[bx+si],al
020A:14AD  00			data_234	db	0
020A:14AE  0000			data_235	dw	0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 51

020A:14B0  00 00				add	[bx+si],al
020A:14B2  00 00				add	[bx+si],al
020A:14B4  00 00				add	[bx+si],al
020A:14B6  00 00				add	[bx+si],al
020A:14B8  00 00				add	[bx+si],al
020A:14BA  00 00				add	[bx+si],al
020A:14BC  00 00				add	[bx+si],al
020A:14BE  00 00				add	[bx+si],al
020A:14C0  00 00				add	[bx+si],al
020A:14C2  00 00				add	[bx+si],al
020A:14C4  00 00				add	[bx+si],al
020A:14C6  00 00				add	[bx+si],al
020A:14C8  00 00				add	[bx+si],al
020A:14CA  00 00				add	[bx+si],al
020A:14CC  00 00				add	[bx+si],al
020A:14CE  00 00				add	[bx+si],al
020A:14D0  00 00				add	[bx+si],al
020A:14D2  00 00				add	[bx+si],al
020A:14D4  00 00				add	[bx+si],al
020A:14D6  00 00				add	[bx+si],al
020A:14D8  00 00				add	[bx+si],al
020A:14DA  00 00				add	[bx+si],al
020A:14DC  00 00				add	[bx+si],al
020A:14DE  00 00				add	[bx+si],al
020A:14E0  00 00				add	[bx+si],al
020A:14E2  00 00				add	[bx+si],al
020A:14E4  00 00				add	[bx+si],al
020A:14E6  00 00				add	[bx+si],al
020A:14E8  00 00				add	[bx+si],al
020A:14EA  00 00				add	[bx+si],al
020A:14EC  00 00				add	[bx+si],al
020A:14EE  00 00				add	[bx+si],al
020A:14F0  00 00				add	[bx+si],al
020A:14F2  00 00				add	[bx+si],al
020A:14F4  00 00				add	[bx+si],al
020A:14F6  00 00				add	[bx+si],al
020A:14F8  00 00				add	[bx+si],al
020A:14FA  00 00				add	[bx+si],al
020A:14FC  00 00				add	[bx+si],al
020A:14FE  00 00				add	[bx+si],al
020A:1500  00 00				add	[bx+si],al
020A:1502  00 00				add	[bx+si],al
020A:1504  00 00				add	[bx+si],al
020A:1506  00 00				add	[bx+si],al
020A:1508  00 00				add	[bx+si],al
020A:150A  00 00				add	[bx+si],al
020A:150C  00 00				add	[bx+si],al
020A:150E  00 00				add	[bx+si],al
020A:1510  00 00				add	[bx+si],al
020A:1512  00 00				add	[bx+si],al
020A:1514  00 00				add	[bx+si],al
020A:1516  00 00				add	[bx+si],al
020A:1518  00 00				add	[bx+si],al
020A:151A  00 00				add	[bx+si],al
020A:151C  00 00				add	[bx+si],al
020A:151E  00 00				add	[bx+si],al
020A:1520  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 52

020A:1522  00 00				add	[bx+si],al
020A:1524  00 00				add	[bx+si],al
020A:1526  00 00				add	[bx+si],al
020A:1528  00 00				add	[bx+si],al
020A:152A  00			data_236	db	0
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:152B			loc_208:
020A:152B  00			data_237	db	0
020A:152C  00 00				add	[bx+si],al
020A:152E  00 00				add	[bx+si],al
020A:1530  00 00				add	[bx+si],al
020A:1532  00 00				add	[bx+si],al
020A:1534  00 00				add	[bx+si],al
020A:1536  00 00				add	[bx+si],al
020A:1538  00 00				add	[bx+si],al
020A:153A  00 00				add	[bx+si],al
020A:153C  00 00				add	[bx+si],al
020A:153E  00 00				add	[bx+si],al
020A:1540  00 00				add	[bx+si],al
020A:1542  00 00				add	[bx+si],al
020A:1544  00 00				add	[bx+si],al
020A:1546  00 00				add	[bx+si],al
020A:1548  00 00				add	[bx+si],al
020A:154A  00 00				add	[bx+si],al
020A:154C  00 00				add	[bx+si],al
020A:154E  00 00				add	[bx+si],al
020A:1550  00 00				add	[bx+si],al
020A:1552  00 00				add	[bx+si],al
020A:1554  00 00				add	[bx+si],al
020A:1556  00 00				add	[bx+si],al
020A:1558  00 00				add	[bx+si],al
020A:155A  00 00				add	[bx+si],al
020A:155C  00 00				add	[bx+si],al
020A:155E  00 00				add	[bx+si],al
020A:1560  00 00				add	[bx+si],al
020A:1562  00 00				add	[bx+si],al
020A:1564  00 00				add	[bx+si],al
020A:1566  00 00				add	[bx+si],al
020A:1568  00 00				add	[bx+si],al
020A:156A  00 00				add	[bx+si],al
020A:156C  00 00				add	[bx+si],al
020A:156E  00 00				add	[bx+si],al
020A:1570  00 00				add	[bx+si],al
020A:1572  00 00				add	[bx+si],al
020A:1574  00 00				add	[bx+si],al
020A:1576  00 00				add	[bx+si],al
020A:1578  00 00				add	[bx+si],al
020A:157A  00 00				add	[bx+si],al
020A:157C  00 00				add	[bx+si],al
020A:157E  00 00				add	[bx+si],al
020A:1580  00 00				add	[bx+si],al
020A:1582  00 00				add	[bx+si],al
020A:1584  00 00				add	[bx+si],al
020A:1586  00 00				add	[bx+si],al
020A:1588  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 53

020A:158A  00 00				add	[bx+si],al
020A:158C  00 00				add	[bx+si],al
020A:158E  00 00				add	[bx+si],al
020A:1590  00 00				add	[bx+si],al
020A:1592  00 00				add	[bx+si],al
020A:1594  00 00				add	[bx+si],al
020A:1596  00 00				add	[bx+si],al
020A:1598  00 00				add	[bx+si],al
020A:159A  00 00				add	[bx+si],al
020A:159C  00 00				add	[bx+si],al
020A:159E  00 00				add	[bx+si],al
020A:15A0  00 00				add	[bx+si],al
020A:15A2  00 00				add	[bx+si],al
020A:15A4  00 00				add	[bx+si],al
020A:15A6  00 00				add	[bx+si],al
020A:15A8  00 00				add	[bx+si],al
020A:15AA  00 00				add	[bx+si],al
020A:15AC  00 00				add	[bx+si],al
020A:15AE  00 00				add	[bx+si],al
020A:15B0  00 00				add	[bx+si],al
020A:15B2  00 00				add	[bx+si],al
020A:15B4  00 00				add	[bx+si],al
020A:15B6  00 00				add	[bx+si],al
020A:15B8  00 00				add	[bx+si],al
020A:15BA  00 00				add	[bx+si],al
020A:15BC  00 00				add	[bx+si],al
020A:15BE  00 00				add	[bx+si],al
020A:15C0  00 00				add	[bx+si],al
020A:15C2  00 00				add	[bx+si],al
020A:15C4  00 00				add	[bx+si],al
020A:15C6  00 00				add	[bx+si],al
020A:15C8  00 00				add	[bx+si],al
020A:15CA  00 00				add	[bx+si],al
020A:15CC  00 00				add	[bx+si],al
020A:15CE  00 00				add	[bx+si],al
020A:15D0  00 00				add	[bx+si],al
020A:15D2  00 00				add	[bx+si],al
020A:15D4  00 00				add	[bx+si],al
020A:15D6  00 00				add	[bx+si],al
020A:15D8  00 00				add	[bx+si],al
020A:15DA  00 00				add	[bx+si],al
020A:15DC  00 00				add	[bx+si],al
020A:15DE  00 00				add	[bx+si],al
020A:15E0  00 00				add	[bx+si],al
020A:15E2  00 00				add	[bx+si],al
020A:15E4  00 00				add	[bx+si],al
020A:15E6  00 00				add	[bx+si],al
020A:15E8  00 00				add	[bx+si],al
020A:15EA  00 00				add	[bx+si],al
020A:15EC  00 00				add	[bx+si],al
020A:15EE  00 00				add	[bx+si],al
020A:15F0  00 00				add	[bx+si],al
020A:15F2  00 00				add	[bx+si],al
020A:15F4  00 00				add	[bx+si],al
020A:15F6  00 00				add	[bx+si],al
020A:15F8  00 00				add	[bx+si],al
020A:15FA  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 54

020A:15FC  00 00				add	[bx+si],al
020A:15FE  00 00				add	[bx+si],al
020A:1600  00 00				add	[bx+si],al
020A:1602  00 00				add	[bx+si],al
020A:1604  00 00				add	[bx+si],al
020A:1606  00 00				add	[bx+si],al
020A:1608  00 00				add	[bx+si],al
020A:160A  00 00				add	[bx+si],al
020A:160C  00 00				add	[bx+si],al
020A:160E  00 00				add	[bx+si],al
020A:1610  00 00				add	[bx+si],al
020A:1612  00 00				add	[bx+si],al
020A:1614  00 00				add	[bx+si],al
020A:1616  00 00				add	[bx+si],al
020A:1618  00 00				add	[bx+si],al
020A:161A  00 00				add	[bx+si],al
020A:161C  00 00				add	[bx+si],al
020A:161E  00 00				add	[bx+si],al
020A:1620  00 00				add	[bx+si],al
020A:1622  00 00				add	[bx+si],al
020A:1624  00 00				add	[bx+si],al
020A:1626  00 00				add	[bx+si],al
020A:1628  00 00				add	[bx+si],al
020A:162A  00 00				add	[bx+si],al
020A:162C  00 00				add	[bx+si],al
020A:162E  00 00				add	[bx+si],al
020A:1630  00 00				add	[bx+si],al
020A:1632  00 00				add	[bx+si],al
020A:1634  00 00				add	[bx+si],al
020A:1636  00 00				add	[bx+si],al
020A:1638  00 00				add	[bx+si],al
020A:163A  00 00				add	[bx+si],al
020A:163C  00 00				add	[bx+si],al
020A:163E  00 00				add	[bx+si],al
020A:1640  00 00				add	[bx+si],al
020A:1642  00 00				add	[bx+si],al
020A:1644  00 00				add	[bx+si],al
020A:1646  00 00				add	[bx+si],al
020A:1648  00 00				add	[bx+si],al
020A:164A  00 00				add	[bx+si],al
020A:164C  00 00				add	[bx+si],al
020A:164E  00 00				add	[bx+si],al
020A:1650  00 00				add	[bx+si],al
020A:1652  00 00				add	[bx+si],al
020A:1654  00 00				add	[bx+si],al
020A:1656  00 00				add	[bx+si],al
020A:1658  00 00				add	[bx+si],al
020A:165A  00 00				add	[bx+si],al
020A:165C  00 00				add	[bx+si],al
020A:165E  00 00				add	[bx+si],al
020A:1660  00 00				add	[bx+si],al
020A:1662  00 00				add	[bx+si],al
020A:1664  00 00				add	[bx+si],al
020A:1666  00 00				add	[bx+si],al
020A:1668  00 00				add	[bx+si],al
020A:166A  0C 00				or	al,0
020A:166C  82 01 54				add	byte ptr [bx+di],54h	; 'T'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 55

020A:166F  03 58 72				add	bx,[bx+si+72h]
020A:1672  03 09				add	cx,[bx+di]
020A:1674  00 19				add	[bx+di],bl
020A:1676  00 00				add	[bx+si],al
020A:1678  0C 00				or	al,0
020A:167A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
020A:167D  03 00				add	ax,[bx+si]
020A:167F  00 FF				add	bh,bh
020A:1681  FF					db	0FFh
020A:1682  D9 19				esc	1,[bx+di]		; coprocessor escape
020A:1684  04 00				add	al,0
020A:1686  00 00				add	[bx+si],al
020A:1688  0011[41]				db	17 dup (41h)
020A:1699  00 00				add	[bx+si],al
020A:169B  00 00				add	[bx+si],al
020A:169D  000A[41]				db	10 dup (41h)
020A:16A7  00 00				add	[bx+si],al
020A:16A9  0011[41]				db	17 dup (41h)
020A:16BA  00 00				add	[bx+si],al
020A:16BC  00 00				add	[bx+si],al
020A:16BE  000A[41]				db	10 dup (41h)
020A:16C8  00 00				add	[bx+si],al
020A:16CA  0011[41]				db	17 dup (41h)
020A:16DB  00 00				add	[bx+si],al
020A:16DD  00 00				add	[bx+si],al
020A:16DF  000A[41]				db	10 dup (41h)
020A:16E9  00 00				add	[bx+si],al
020A:16EB  0011[41]				db	17 dup (41h)
020A:16FC  00 00				add	[bx+si],al
020A:16FE  00 00				add	[bx+si],al
020A:1700  000A[41]				db	10 dup (41h)
020A:170A  00 00				add	[bx+si],al
020A:170C  00 00				add	[bx+si],al
020A:170E  95					xchg	ax,bp
020A:170F  1C 4C				sbb	al,4Ch			; 'L'
020A:1711  7C 03				jl	loc_210			; Jump if <
020A:1713  12 00				adc	al,[bx+si]
020A:1715  00 52 03				add	[bp+si+3],dl
020A:1718  00 00				add	[bx+si],al
020A:171A  00 00				add	[bx+si],al
020A:171C  C7					db	0C7h
020A:171D  1C 00				sbb	al,0
020A:171F  00 41 3A				add	[bx+di+3Ah],al
020A:1722  5C					pop	sp
020A:1723  0041[00]				db	65 dup (0)
020A:1764  58					pop	ax
020A:1765  02 00				add	al,[bx+si]
020A:1767  42					inc	dx
020A:1768  3A 5C 00				cmp	bl,[si+0]
020A:176B  0040[00]				db	64 dup (0)
020A:17AB  58					pop	ax
020A:17AC  02 00				add	al,[bx+si]
020A:17AE  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\CDC2~1\0016~1\SOURCE'
020A:17B4  55 4D 45 7E 31 5C
020A:17BA  43 44 43 32 7E 31
020A:17C0  5C 30 30 31 36 7E
020A:17C6  31 5C 53 4F 55 52
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 56

020A:17CC  43 45
020A:17CE  7E 31 2E 45 4E 47			db	'~1.ENG'
020A:17D4  001E[00]				db	30 dup (0)
020A:17F2  54					push	sp
020A:17F3  02 00				add	al,[bx+si]
020A:17F5  44					inc	sp
020A:17F6  3A 5C 00				cmp	bl,[si+0]
020A:17F9  0040[00]				db	64 dup (0)
020A:1839  5C					pop	sp
020A:183A  02 00				add	al,[bx+si]
020A:183C  B5 01				mov	ch,1
020A:183E  00 00				add	[bx+si],al
020A:1840  53					push	bx
020A:1841  8F 03				pop	word ptr [bp+di]
020A:1843  7E 00				jle	loc_211			; Jump if < or =
020A:1845			loc_211:
020A:1845  00 0C				add	[si],cl
020A:1847  00 58 00				add	[bx+si+0],bl
020A:184A  AA					stosb				; Store al to es:[di]
020A:184B  03 00				add	ax,[bx+si]
020A:184D  00 00				add	[bx+si],al
020A:184F  00 00				add	[bx+si],al
020A:1851  00 09				add	[bx+di],cl
020A:1853  00 48 00				add	[bx+si+0],cl
020A:1856  80 00 00				add	byte ptr [bx+si],0
020A:1859  00 C0				add	al,al
020A:185B  03 00				add	ax,[bx+si]
020A:185D  00 40 00				add	[bx+si+0],al
020A:1860  40					inc	ax
020A:1861  00 53 FF				add	[bp+di-1],dl
020A:1864  00 F0				add	al,dh
020A:1866  E8 01CE				call	sub_36			; (1A37)
020A:1869  12 00				adc	al,[bx+si]
020A:186B  46					inc	si
020A:186C  07					pop	es
020A:186D  0A 02				or	al,[bp+si]
020A:186F  E8 01C5				call	sub_36			; (1A37)
020A:1872  1B 00				sbb	ax,[bx+si]
020A:1874  0A 04				or	al,[si]
020A:1876  0A 02				or	al,[bp+si]
020A:1878  EB 02				jmp	short loc_212		; (187C)
020A:187A  90					nop
020A:187B  00 E8				add	al,ch
020A:187D  01B8					dw	1B8h
020A:187F  24 00				and	al,0
020A:1881  A4					movsb				; Mov [si] to es:[di]
020A:1882  0C 0A				or	al,0Ah
020A:1884  02 E8				add	ch,al
020A:1886  AF					scasw				; Scan es:[di] for ax
020A:1887  01 31				add	[bx+di],si
020A:1889  00 EB				add	bl,ch
020A:188B  10 FF				adc	bh,bh
020A:188D  03 0A				add	cx,[bp+si]
020A:188F  02 4B 42				add	cl,[bp+di+42h]
020A:1892  00 EB				add	bl,ch
020A:1894  000C 0000		data_253	dw	0Ch, 0
020A:1898  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 57

020A:189A  00 00				add	[bx+si],al
020A:189C  E8 0198				call	sub_36			; (1A37)
020A:189F  3C 00				cmp	al,0
020A:18A1  E9 0132				jmp	loc_228			; (19D6)
020A:18A4  EB 10				jmp	short loc_213		; (18B6)
020A:18A6  FF 03				inc	word ptr [bp+di]
020A:18A8  0A 02				or	al,[bp+si]
020A:18AA  4B					dec	bx
020A:18AB  42					inc	dx
020A:18AC  00 EB				add	bl,ch
020A:18AE  0C 00				or	al,0
020A:18B0  00 00				add	[bx+si],al
020A:18B2  00 00				add	[bx+si],al
020A:18B4  00 00				add	[bx+si],al
020A:18B6			loc_213:
020A:18B6  E8 017E				call	sub_36			; (1A37)
020A:18B9  56					push	si
020A:18BA  00 E9				add	cl,ch
020A:18BC  18 01				sbb	[bx+di],al
020A:18BE  EB 10				jmp	short loc_214		; (18D0)
020A:18C0  FF 03				inc	word ptr [bp+di]
020A:18C2  0A 02				or	al,[bp+si]
020A:18C4  4B					dec	bx
020A:18C5  42					inc	dx
020A:18C6  00 EB				add	bl,ch
020A:18C8  0C 00				or	al,0
020A:18CA  00 00				add	[bx+si],al
020A:18CC  00 00				add	[bx+si],al
020A:18CE  00 00				add	[bx+si],al
020A:18D0			loc_214:
020A:18D0  E8 0164				call	sub_36			; (1A37)
020A:18D3  70 00				jo	loc_215			; Jump if overflow=1
020A:18D5			loc_215:
020A:18D5  E9 00FE				jmp	loc_228			; (19D6)
020A:18D8  EB 10				jmp	short loc_216		; (18EA)
020A:18DA  FF 03				inc	word ptr [bp+di]
020A:18DC  0A 02				or	al,[bp+si]
020A:18DE  4B					dec	bx
020A:18DF  42					inc	dx
020A:18E0  00 EB				add	bl,ch
020A:18E2  0C 00				or	al,0
020A:18E4  00 00				add	[bx+si],al
020A:18E6  00 00				add	[bx+si],al
020A:18E8  00 00				add	[bx+si],al
020A:18EA			loc_216:
020A:18EA  E8 014A				call	sub_36			; (1A37)
020A:18ED  8A 00				mov	al,[bx+si]
020A:18EF  E9 00E4				jmp	loc_228			; (19D6)
020A:18F2  EB 10				jmp	short loc_217		; (1904)
020A:18F4  B3 07				mov	bl,7
020A:18F6  0A 02				or	al,[bp+si]
020A:18F8  4B					dec	bx
020A:18F9  42					inc	dx
020A:18FA  00 EB				add	bl,ch
020A:18FC  0C 00				or	al,0
020A:18FE  00 00				add	[bx+si],al
020A:1900  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 58

020A:1902  00 00				add	[bx+si],al
020A:1904			loc_217:
020A:1904  E8 0130				call	sub_36			; (1A37)
020A:1907  A4					movsb				; Mov [si] to es:[di]
020A:1908  00 E9				add	cl,ch
020A:190A  CA EB00				retf	0EB00h			; Return far
020A:190D  10 B4 0A06				adc	data_192[si],dh		; (020A:0A06=74h)
020A:1911  02 4B 42				add	cl,[bp+di+42h]
020A:1914  00 EB				add	bl,ch
020A:1916  0C 00				or	al,0
020A:1918  00 00				add	[bx+si],al
020A:191A  00 00				add	[bx+si],al
020A:191C  00 00				add	[bx+si],al
020A:191E  E8 0116				call	sub_36			; (1A37)
020A:1921  BE E900				mov	si,0E900h
020A:1924  B0 00				mov	al,0
020A:1926  EB 10				jmp	short loc_218		; (1938)
020A:1928  B4 06				mov	ah,6
020A:192A  0A 02				or	al,[bp+si]
020A:192C  4B					dec	bx
020A:192D  42					inc	dx
020A:192E  00 EB				add	bl,ch
020A:1930  0C 00				or	al,0
020A:1932  00 00				add	[bx+si],al
020A:1934  00 00				add	[bx+si],al
020A:1936  00 00				add	[bx+si],al
020A:1938			loc_218:
020A:1938  E8 00FC				call	sub_36			; (1A37)
020A:193B  D8 00				esc	0,[bx+si]		; coprocessor escape
020A:193D  E9 0096				jmp	loc_228			; (19D6)
020A:1940  EB 10				jmp	short loc_219		; (1952)
020A:1942  B4 06				mov	ah,6
020A:1944  0A 02				or	al,[bp+si]
020A:1946  4B					dec	bx
020A:1947  42					inc	dx
020A:1948  00 EB				add	bl,ch
020A:194A  0C 00				or	al,0
020A:194C  00 00				add	[bx+si],al
020A:194E  00 00				add	[bx+si],al
020A:1950  00 00				add	[bx+si],al
020A:1952			loc_219:
020A:1952  E8 00E2				call	sub_36			; (1A37)
020A:1955  F2					db	0F2h
020A:1956  00 EB				add	bl,ch
020A:1958  7D 90				jge	loc_216			; Jump if > or =
020A:195A  EB 10				jmp	short loc_220		; (196C)
020A:195C  B4 06				mov	ah,6
020A:195E  0A 02				or	al,[bp+si]
020A:1960  4B					dec	bx
020A:1961  42					inc	dx
020A:1962  00 EB				add	bl,ch
020A:1964  0C 00				or	al,0
020A:1966  00 00				add	[bx+si],al
020A:1968  00 00				add	[bx+si],al
020A:196A  00 00				add	[bx+si],al
020A:196C			loc_220:
020A:196C  E8 00C8				call	sub_36			; (1A37)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 59

020A:196F  0C 01				or	al,1
020A:1971  EB 63				jmp	short loc_228		; (19D6)
020A:1973  90					nop
020A:1974  EB 10				jmp	short loc_221		; (1986)
020A:1976  B4 06				mov	ah,6
020A:1978  0A 02				or	al,[bp+si]
020A:197A  4B					dec	bx
020A:197B  42					inc	dx
020A:197C  00 EB				add	bl,ch
020A:197E  0C 00				or	al,0
020A:1980  00 00				add	[bx+si],al
020A:1982  00 00				add	[bx+si],al
020A:1984  00 00				add	[bx+si],al
020A:1986			loc_221:
020A:1986  E8 00AE				call	sub_36			; (1A37)
020A:1989  26					db	26h
020A:198A  01 EB				add	bx,bp
020A:198C  49					dec	cx
020A:198D  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_35		proc	near
020A:198E  1E					push	ds
020A:198F  50					push	ax
020A:1990  B8 0040				mov	ax,40h
020A:1993  8E D8				mov	ds,ax
020A:1995  9F					lahf				; Load ah from flags
020A:1996  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:199C  75 0C				jnz	loc_223			; Jump if not zero
020A:199E  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:19A5			loc_222:
020A:19A5  9E					sahf				; Store ah into flags
020A:19A6  58					pop	ax
020A:19A7  1F					pop	ds
020A:19A8  EB 03				jmp	short loc_224		; (19AD)
020A:19AA			loc_223:
020A:19AA  FA					cli				; Disable interrupts
020A:19AB  EB F8				jmp	short loc_222		; (19A5)
020A:19AD			loc_224:
020A:19AD  C3					retn
				sub_35		endp
  
020A:19AE  1E					push	ds
020A:19AF  50					push	ax
020A:19B0  B8 0040				mov	ax,40h
020A:19B3  8E D8				mov	ds,ax
020A:19B5  9F					lahf				; Load ah from flags
020A:19B6  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:19BC  75 14				jnz	loc_226			; Jump if not zero
020A:19BE  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19C4  75 0C				jnz	loc_226			; Jump if not zero
020A:19C6  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19CD			loc_225:
020A:19CD  9E					sahf				; Store ah into flags
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 60

020A:19CE  58					pop	ax
020A:19CF  1F					pop	ds
020A:19D0  EB 03				jmp	short loc_227		; (19D5)
020A:19D2			loc_226:
020A:19D2  FB					sti				; Enable interrupts
020A:19D3  EB F8				jmp	short loc_225		; (19CD)
020A:19D5			loc_227:
020A:19D5  C3					retn
020A:19D6			loc_228:
020A:19D6  1E					push	ds
020A:19D7  50					push	ax
020A:19D8  B8 0040				mov	ax,40h
020A:19DB  8E D8				mov	ds,ax
020A:19DD  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19E3  75 4F				jnz	loc_236			; Jump if not zero
020A:19E5  55					push	bp
020A:19E6  8B EC				mov	bp,sp
020A:19E8  8B 46 0A				mov	ax,[bp+0Ah]
020A:19EB  5D					pop	bp
020A:19EC  A9 0100				test	ax,100h
020A:19EF  75 43				jnz	loc_236			; Jump if not zero
020A:19F1  A9 0200				test	ax,200h
020A:19F4  74 22				jz	loc_232			; Jump if zero
020A:19F6  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19FD  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1A03  75 2F				jnz	loc_236			; Jump if not zero
020A:1A05			loc_229:
020A:1A05  86 E0				xchg	ah,al
020A:1A07  FC					cld				; Clear direction
020A:1A08  A8 04				test	al,4
020A:1A0A  75 25				jnz	loc_235			; Jump if not zero
020A:1A0C			loc_230:
020A:1A0C  A8 08				test	al,8
020A:1A0E  75 11				jnz	loc_233			; Jump if not zero
020A:1A10  70 19				jo	loc_234			; Jump if overflow=1
020A:1A12			loc_231:
020A:1A12  9E					sahf				; Store ah into flags
020A:1A13  58					pop	ax
020A:1A14  1F					pop	ds
020A:1A15  CA 0002				retf	2			; Return far
020A:1A18			loc_232:
020A:1A18  F0> 81 26 0314 FDFF	           lock	and	data_161,0FDFFh		; (020A:0314=3231h)
020A:1A1F  EB E4				jmp	short loc_229		; (1A05)
020A:1A21			loc_233:
020A:1A21  70 EF				jo	loc_231			; Jump if overflow=1
020A:1A23  50					push	ax
020A:1A24  B0 7F				mov	al,7Fh
020A:1A26  04 02				add	al,2
020A:1A28  58					pop	ax
020A:1A29  EB E7				jmp	short loc_231		; (1A12)
020A:1A2B			loc_234:
020A:1A2B  50					push	ax
020A:1A2C  32 C0				xor	al,al			; Zero register
020A:1A2E  58					pop	ax
020A:1A2F  EB E1				jmp	short loc_231		; (1A12)
020A:1A31			loc_235:
020A:1A31  FD					std				; Set direction flag
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 61

020A:1A32  EB D8				jmp	short loc_230		; (1A0C)
020A:1A34			loc_236:
020A:1A34  58					pop	ax
020A:1A35  1F					pop	ds
020A:1A36  CF					iret				; Interrupt return
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_36		proc	near
020A:1A37  50					push	ax
020A:1A38  55					push	bp
020A:1A39  06					push	es
020A:1A3A  2E: 8E 06 000A			mov	es,word ptr cs:[0Ah]	; (020A:000A=272Dh)
020A:1A3F  2E: 8B 2E 0010			mov	bp,cs:data_73		; (020A:0010=1FBFh)
020A:1A44  B0 01				mov	al,1
020A:1A46  26: 86 46 00				xchg	al,es:[bp]
020A:1A4A  3C 00				cmp	al,0
020A:1A4C  75 51				jne	loc_238			; Jump if not equal
020A:1A4E  2E: 83 2E 0010 08			sub	cs:data_73,8		; (020A:0010=1FBFh)
020A:1A54			loc_237:
020A:1A54  26: 89 66 02				mov	es:[bp+2],sp
020A:1A58  26: 8C 56 04				mov	es:[bp+4],ss
020A:1A5C  8B C5				mov	ax,bp
020A:1A5E  26: 8B 6E 06				mov	bp,es:[bp+6]
020A:1A62  26: 39 46 00				cmp	es:[bp],ax
020A:1A66  75 44				jne	loc_240			; Jump if not equal
020A:1A68  55					push	bp
020A:1A69  8B EC				mov	bp,sp
020A:1A6B  8B 46 08				mov	ax,[bp+8]
020A:1A6E  5D					pop	bp
020A:1A6F  06					push	es
020A:1A70  17					pop	ss
020A:1A71  8B E5				mov	sp,bp
020A:1A73  8B E8				mov	bp,ax
020A:1A75  2E: 8B 6E 00				mov	bp,cs:[bp]
020A:1A79  9C					pushf				; Push flags
020A:1A7A  2E: FF 5E 00				call	dword ptr cs:[bp]	;*
020A:1A7E  8B EC				mov	bp,sp
020A:1A80  26: 8B 6E 00				mov	bp,es:[bp]
020A:1A84  26: 8E 56 04				mov	ss,es:[bp+4]
020A:1A88  26: 8B 66 02				mov	sp,es:[bp+2]
020A:1A8C  26: C6 46 00 00			mov	byte ptr es:[bp],0
020A:1A91  2E: 89 2E 0010			mov	cs:data_73,bp		; (020A:0010=1FBFh)
020A:1A96  07					pop	es
020A:1A97  5D					pop	bp
020A:1A98  58					pop	ax
020A:1A99  83 C4 02				add	sp,2
020A:1A9C  E9 FF37				jmp	loc_228			; (19D6)
020A:1A9F			loc_238:
020A:1A9F  3C 01				cmp	al,1
020A:1AA1  74 04				je	loc_239			; Jump if equal
020A:1AA3  26: 86 46 00				xchg	al,es:[bp]
020A:1AA7			loc_239:
020A:1AA7  E8 0012				call	sub_37			; (1ABC)
020A:1AAA  EB A8				jmp	short loc_237		; (1A54)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 62

020A:1AAC			loc_240:
020A:1AAC  2E: 3B 2E 000C			cmp	bp,cs:data_71		; (020A:000C=9028h)
020A:1AB1  72 F4				jb	loc_239			; Jump if below
020A:1AB3  8B E8				mov	bp,ax
020A:1AB5  26: C6 46 00 03			mov	byte ptr es:[bp],3
020A:1ABA  EB EB				jmp	short loc_239		; (1AA7)
				sub_36		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_37		proc	near
020A:1ABC  2E: 8B 2E 000E			mov	bp,cs:data_72		; (020A:000E=0A02Bh)
020A:1AC1			loc_241:
020A:1AC1  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
020A:1AC6  75 12				jne	loc_243			; Jump if not equal
020A:1AC8  B0 01				mov	al,1
020A:1ACA  26: 86 46 00				xchg	al,es:[bp]
020A:1ACE  3C 00				cmp	al,0
020A:1AD0  74 14				je	loc_244			; Jump if equal
020A:1AD2  3C 01				cmp	al,1
020A:1AD4  74 04				je	loc_243			; Jump if equal
020A:1AD6  26: 88 46 00				mov	es:[bp],al
020A:1ADA			loc_243:
020A:1ADA  2E: 3B 2E 000C			cmp	bp,cs:data_71		; (020A:000C=9028h)
020A:1ADF  74 06				je	loc_245			; Jump if equal
020A:1AE1  83 ED 08				sub	bp,8
020A:1AE4  EB DB				jmp	short loc_241		; (1AC1)
020A:1AE6			loc_244:
020A:1AE6  C3					retn
020A:1AE7			loc_245:
020A:1AE7  E8 FEA4				call	sub_35			; (198E)
  
020A:1AEA			locloop_246:
020A:1AEA  B0 FF				mov	al,0FFh
020A:1AEC  E6 21				out	21h,al			; port 21h, 8259-1 int comands
020A:1AEE  E6 A1				out	0A1h,al			; port 0A1h, inhibit IRQ8 RTC
										;  al = 0FFh, inhibit interrupts
020A:1AF0  8C CE				mov	si,cs
020A:1AF2  8E DE				mov	ds,si
020A:1AF4  BE 02CB				mov	si,2CBh
020A:1AF7  50					push	ax
020A:1AF8  1E					push	ds
020A:1AF9  B8 0070				mov	ax,70h
020A:1AFC  8E D8				mov	ds,ax
020A:1AFE  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
020A:1B03  1F					pop	ds
020A:1B04  58					pop	ax
020A:1B05  74 05				jz	loc_247			; Jump if zero
020A:1B07  9A 0070:0338		;*		call	far ptr sub_8		;*(0070:0338)
020A:1B07  9A 38 03 70 00			db	 9Ah, 38h, 03h, 70h, 00h
020A:1B0C			loc_247:
020A:1B0C  AC					lodsb				; String [si] to al
020A:1B0D  3C 24				cmp	al,24h			; '$'
020A:1B0F  74 08				je	loc_249			; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 63

020A:1B11  B3 07				mov	bl,7
020A:1B13  B4 0E				mov	ah,0Eh
020A:1B15  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:1B17  EB F3				jmp	short loc_247		; (1B0C)
020A:1B19			loc_249:
020A:1B19  EB FE				jmp	short loc_249		; (1B19)
				sub_37		endp
  
020A:1B1B  0D 070A				or	ax,70Ah
020A:1B1E  0D 8F0A				or	ax,8F0Ah
020A:1B21  A5					movsw				; Mov [si] to es:[di]
020A:1B22  E0 A5		;*		loopnz	locloop_242		;*Loop if zf=0, cx>0
  
020A:1B22  E0 A5				db	0E0h,0A5h
020A:1B24  AF					scasw				; Scan es:[di] for ax
020A:1B25  AE					scasb				; Scan es:[di] for al
020A:1B26  AB					stosw				; Store ax to es:[di]
020A:1B27  AD					lodsw				; String [si] to ax
020A:1B28  A5					movsw				; Mov [si] to es:[di]
020A:1B29  AD					lodsw				; String [si] to ax
020A:1B2A  A8 A5				test	al,0A5h
020A:1B2C  20 A2 E3AD				and	[bp+si-1C53h],ah
020A:1B30  E2 E0		;*		loop	locloop_248		;*Loop if cx > 0
  
020A:1B30  E2 E0				db	0E2h,0E0h
020A:1B32  A5					movsw				; Mov [si] to es:[di]
020A:1B33  AD					lodsw				; String [si] to ax
020A:1B34  AD					lodsw				; String [si] to ax
020A:1B35  A5					movsw				; Mov [si] to es:[di]
020A:1B36  A3 20AE				mov	data_274,ax		; (020A:20AE=2020h)
020A:1B39  E1 E2		;*		loopz	locloop_250		;*Loop if zf=1, cx>0
  
020A:1B39  E1 E2				db	0E1h,0E2h
020A:1B3B  A5					movsw				; Mov [si] to es:[di]
020A:1B3C  AA					stosb				; Store al to es:[di]
020A:1B3D  A0 0A0D				mov	al,data_194		; (020A:0A0D=0)
020A:1B40  91					xchg	ax,cx
020A:1B41  A8 E1				test	al,0E1h
020A:1B43  E2 A5				loop	locloop_246		; Loop if cx > 0
  
020A:1B45  AC					lodsb				; String [si] to al
020A:1B46  A0 AE20				mov	al,data_791		; (020A:AE20=53h)
020A:1B49  E1 E2		;*		loopz	locloop_251		;*Loop if zf=1, cx>0
  
020A:1B49  E1 E2				db	0E1h,0E2h
020A:1B4B  A0 AEAD				mov	al,data_794		; (020A:AEAD=40h)
020A:1B4E  A2 A5AB				mov	data_765,al		; (020A:A5AB=0C3h)
020A:1B51  AD					lodsw				; String [si] to ax
020A:1B52  A0 0A0D				mov	al,data_194		; (020A:0A0D=0)
020A:1B55  24 07				and	al,7
020A:1B57  00 09				add	[bx+di],cl
020A:1B59  69					db	69h
020A:1B5A  00 00				add	[bx+si],al
020A:1B5C  06					push	es
020A:1B5D  00 06 0000				add	byte ptr data_66,al	; (020A:0000=28h)
020A:1B61  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 64

020A:1B63  00 00				add	[bx+si],al
020A:1B65  00 C6				add	dh,al
020A:1B67  0007[00]				db	7 dup (0)
020A:1B6E  46					inc	si
020A:1B6F  01 00				add	[bx+si],ax
020A:1B71  00 00				add	[bx+si],al
020A:1B73  00 00				add	[bx+si],al
020A:1B75  00 C6				add	dh,al
020A:1B77  01 00				add	[bx+si],ax
020A:1B79  00 00				add	[bx+si],al
020A:1B7B  00 00				add	[bx+si],al
020A:1B7D  00 46 02				add	[bp+2],al
020A:1B80  00 00				add	[bx+si],al
020A:1B82  00 00				add	[bx+si],al
020A:1B84  00 00				add	[bx+si],al
020A:1B86  C6 02 00				mov	byte ptr [bp+si],0
020A:1B89  00 00				add	[bx+si],al
020A:1B8B  00 00				add	[bx+si],al
020A:1B8D  00 46 03				add	[bp+3],al
020A:1B90  00 00				add	[bx+si],al
020A:1B92  00 00				add	[bx+si],al
020A:1B94  00 00				add	[bx+si],al
020A:1B96  C6 03 00				mov	byte ptr [bp+di],0
020A:1B99  00 00				add	[bx+si],al
020A:1B9B  00 00				add	[bx+si],al
020A:1B9D  00 46 04				add	[bp+4],al
020A:1BA0  00 00				add	[bx+si],al
020A:1BA2  06					push	es
020A:1BA3  06					push	es
020A:1BA4  FB					sti				; Enable interrupts
020A:1BA5  8D					db	8Dh
020A:1BA6  C6 04 00				mov	byte ptr [si],0
020A:1BA9  00FD[00]				db	253 dup (0)
020A:1CA6  08 00				or	[bx+si],al
020A:1CA8  0078[00]				db	120 dup (0)
020A:1D20  00			data_257	db	0
020A:1D21  00 00				add	[bx+si],al
020A:1D23  00 00				add	[bx+si],al
020A:1D25  00 10				add	[bx+si],dl
020A:1D27  00 00				add	[bx+si],al
020A:1D29  00 00				add	[bx+si],al
020A:1D2B  00 00				add	[bx+si],al
020A:1D2D  00 00				add	[bx+si],al
020A:1D2F  00 00				add	[bx+si],al
020A:1D31  00 00				add	[bx+si],al
020A:1D33  00 00				add	[bx+si],al
020A:1D35  00 00				add	[bx+si],al
020A:1D37  00 00				add	[bx+si],al
020A:1D39  00 00				add	[bx+si],al
020A:1D3B  00 00				add	[bx+si],al
020A:1D3D  00 00				add	[bx+si],al
020A:1D3F  00 00				add	[bx+si],al
020A:1D41  00 00				add	[bx+si],al
020A:1D43  00 00				add	[bx+si],al
020A:1D45  00 00				add	[bx+si],al
020A:1D47  00 00				add	[bx+si],al
020A:1D49  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 65

020A:1D4B  00 00				add	[bx+si],al
020A:1D4D  00 00				add	[bx+si],al
020A:1D4F  00 00				add	[bx+si],al
020A:1D51  00 00				add	[bx+si],al
020A:1D53  00 00				add	[bx+si],al
020A:1D55  00 00				add	[bx+si],al
020A:1D57  00 00				add	[bx+si],al
020A:1D59  00 00				add	[bx+si],al
020A:1D5B  00 00				add	[bx+si],al
020A:1D5D  00 00				add	[bx+si],al
020A:1D5F  00 00				add	[bx+si],al
020A:1D61  00 00				add	[bx+si],al
020A:1D63  00 00				add	[bx+si],al
020A:1D65  00 00				add	[bx+si],al
020A:1D67  00 00				add	[bx+si],al
020A:1D69  00 00				add	[bx+si],al
020A:1D6B  00 00				add	[bx+si],al
020A:1D6D  00 00				add	[bx+si],al
020A:1D6F  00 00				add	[bx+si],al
020A:1D71  00 00				add	[bx+si],al
020A:1D73  00 00				add	[bx+si],al
020A:1D75  00 00				add	[bx+si],al
020A:1D77  00 00				add	[bx+si],al
020A:1D79  00 00				add	[bx+si],al
020A:1D7B  00 00				add	[bx+si],al
020A:1D7D  00 00				add	[bx+si],al
020A:1D7F  00 00				add	[bx+si],al
020A:1D81  00 00				add	[bx+si],al
020A:1D83  00 00				add	[bx+si],al
020A:1D85  00 00				add	[bx+si],al
020A:1D87  00 00				add	[bx+si],al
020A:1D89  00 00				add	[bx+si],al
020A:1D8B  00 00				add	[bx+si],al
020A:1D8D  00 00				add	[bx+si],al
020A:1D8F  00 00				add	[bx+si],al
020A:1D91  00 00				add	[bx+si],al
020A:1D93  00 00				add	[bx+si],al
020A:1D95  00 00				add	[bx+si],al
020A:1D97  00 00				add	[bx+si],al
020A:1D99  00 00				add	[bx+si],al
020A:1D9B  00 00				add	[bx+si],al
020A:1D9D  00 00				add	[bx+si],al
020A:1D9F  00 00				add	[bx+si],al
020A:1DA1  00 00				add	[bx+si],al
020A:1DA3  00 00				add	[bx+si],al
020A:1DA5  00 18				add	[bx+si],bl
020A:1DA7  00 00				add	[bx+si],al
020A:1DA9  00 00				add	[bx+si],al
020A:1DAB  00 00				add	[bx+si],al
020A:1DAD  00 00				add	[bx+si],al
020A:1DAF  00 00				add	[bx+si],al
020A:1DB1  00 00				add	[bx+si],al
020A:1DB3  00 00				add	[bx+si],al
020A:1DB5  00 00				add	[bx+si],al
020A:1DB7  00 00				add	[bx+si],al
020A:1DB9  00 00				add	[bx+si],al
020A:1DBB  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 66

020A:1DBD  00 00				add	[bx+si],al
020A:1DBF  00 00				add	[bx+si],al
020A:1DC1  00 00				add	[bx+si],al
020A:1DC3  00 00				add	[bx+si],al
020A:1DC5  00 00				add	[bx+si],al
020A:1DC7  00 00				add	[bx+si],al
020A:1DC9  00 00				add	[bx+si],al
020A:1DCB  00 00				add	[bx+si],al
020A:1DCD  00 00				add	[bx+si],al
020A:1DCF  00 00				add	[bx+si],al
020A:1DD1  00 00				add	[bx+si],al
020A:1DD3  00 00				add	[bx+si],al
020A:1DD5  00 00				add	[bx+si],al
020A:1DD7  00 00				add	[bx+si],al
020A:1DD9  00 00				add	[bx+si],al
020A:1DDB  00 00				add	[bx+si],al
020A:1DDD  00 00				add	[bx+si],al
020A:1DDF  00 00				add	[bx+si],al
020A:1DE1  00 00				add	[bx+si],al
020A:1DE3  00 00				add	[bx+si],al
020A:1DE5  00 00				add	[bx+si],al
020A:1DE7  00 00				add	[bx+si],al
020A:1DE9  00 00				add	[bx+si],al
020A:1DEB  00 00				add	[bx+si],al
020A:1DED  00 00				add	[bx+si],al
020A:1DEF  00 00				add	[bx+si],al
020A:1DF1  00 00				add	[bx+si],al
020A:1DF3  00 00				add	[bx+si],al
020A:1DF5  00 00				add	[bx+si],al
020A:1DF7  00 00				add	[bx+si],al
020A:1DF9  00 00				add	[bx+si],al
020A:1DFB  00 00				add	[bx+si],al
020A:1DFD  00 00				add	[bx+si],al
020A:1DFF  00 00				add	[bx+si],al
020A:1E01  00 00				add	[bx+si],al
020A:1E03  00 00				add	[bx+si],al
020A:1E05  00 00				add	[bx+si],al
020A:1E07  00 00				add	[bx+si],al
020A:1E09  00 00				add	[bx+si],al
020A:1E0B  00 00				add	[bx+si],al
020A:1E0D  00 00				add	[bx+si],al
020A:1E0F  00 00				add	[bx+si],al
020A:1E11  00 00				add	[bx+si],al
020A:1E13  00 00				add	[bx+si],al
020A:1E15  00 00				add	[bx+si],al
020A:1E17  00 00				add	[bx+si],al
020A:1E19  00 00				add	[bx+si],al
020A:1E1B  00 00				add	[bx+si],al
020A:1E1D  00 00				add	[bx+si],al
020A:1E1F  00 00				add	[bx+si],al
020A:1E21  00 00				add	[bx+si],al
020A:1E23  00 00				add	[bx+si],al
020A:1E25  00 20				add	[bx+si],ah
020A:1E27  00 00				add	[bx+si],al
020A:1E29  00 00				add	[bx+si],al
020A:1E2B  00 00				add	[bx+si],al
020A:1E2D  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 67

020A:1E2F  00 00				add	[bx+si],al
020A:1E31  00 00				add	[bx+si],al
020A:1E33  00 00				add	[bx+si],al
020A:1E35  00 00				add	[bx+si],al
020A:1E37  00 00				add	[bx+si],al
020A:1E39  00 00				add	[bx+si],al
020A:1E3B  00 00				add	[bx+si],al
020A:1E3D  00 00				add	[bx+si],al
020A:1E3F  00 00				add	[bx+si],al
020A:1E41  00 00				add	[bx+si],al
020A:1E43  00 00				add	[bx+si],al
020A:1E45  00 00				add	[bx+si],al
020A:1E47  00 00				add	[bx+si],al
020A:1E49  00 00				add	[bx+si],al
020A:1E4B  00 00				add	[bx+si],al
020A:1E4D  00 00				add	[bx+si],al
020A:1E4F  00 00				add	[bx+si],al
020A:1E51  00 00				add	[bx+si],al
020A:1E53  00 00				add	[bx+si],al
020A:1E55  00 00				add	[bx+si],al
020A:1E57  00 00				add	[bx+si],al
020A:1E59  00 00				add	[bx+si],al
020A:1E5B  00 00				add	[bx+si],al
020A:1E5D  00 00				add	[bx+si],al
020A:1E5F  00 00				add	[bx+si],al
020A:1E61  00 00				add	[bx+si],al
020A:1E63  00 00				add	[bx+si],al
020A:1E65  00 00				add	[bx+si],al
020A:1E67  00 00				add	[bx+si],al
020A:1E69  00 00				add	[bx+si],al
020A:1E6B  00 00				add	[bx+si],al
020A:1E6D  00 00				add	[bx+si],al
020A:1E6F  00 00				add	[bx+si],al
020A:1E71  00 00				add	[bx+si],al
020A:1E73  00 00				add	[bx+si],al
020A:1E75  00 00				add	[bx+si],al
020A:1E77  00 00				add	[bx+si],al
020A:1E79  00 00				add	[bx+si],al
020A:1E7B  00 00				add	[bx+si],al
020A:1E7D  00 00				add	[bx+si],al
020A:1E7F  00 00				add	[bx+si],al
020A:1E81  00 00				add	[bx+si],al
020A:1E83  00 00				add	[bx+si],al
020A:1E85  00 00				add	[bx+si],al
020A:1E87  00 00				add	[bx+si],al
020A:1E89  00 00				add	[bx+si],al
020A:1E8B  0000 0000		data_261	dd	00000h
020A:1E8F  00 00				add	[bx+si],al
020A:1E91  00 00				add	[bx+si],al
020A:1E93  00 00				add	[bx+si],al
020A:1E95  00 00				add	[bx+si],al
020A:1E97  00 00				add	[bx+si],al
020A:1E99  00 00				add	[bx+si],al
020A:1E9B  00 00				add	[bx+si],al
020A:1E9D  00 00				add	[bx+si],al
020A:1E9F  00 00				add	[bx+si],al
020A:1EA1  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 68

020A:1EA3  00 00				add	[bx+si],al
020A:1EA5  00 28				add	[bx+si],ch
020A:1EA7  00 00				add	[bx+si],al
020A:1EA9  00 00				add	[bx+si],al
020A:1EAB  00 00				add	[bx+si],al
020A:1EAD  00 00				add	[bx+si],al
020A:1EAF  00 00				add	[bx+si],al
020A:1EB1  00 00				add	[bx+si],al
020A:1EB3  00 00				add	[bx+si],al
020A:1EB5  00 00				add	[bx+si],al
020A:1EB7  00 00				add	[bx+si],al
020A:1EB9  00 00				add	[bx+si],al
020A:1EBB  00 00				add	[bx+si],al
020A:1EBD  00 00				add	[bx+si],al
020A:1EBF  00 00				add	[bx+si],al
020A:1EC1  00 00				add	[bx+si],al
020A:1EC3  00 00				add	[bx+si],al
020A:1EC5  00 00				add	[bx+si],al
020A:1EC7  00 00				add	[bx+si],al
020A:1EC9  00 00				add	[bx+si],al
020A:1ECB  00 00				add	[bx+si],al
020A:1ECD  00 00				add	[bx+si],al
020A:1ECF  00 00				add	[bx+si],al
020A:1ED1  00 00				add	[bx+si],al
020A:1ED3  00 00				add	[bx+si],al
020A:1ED5  00 00				add	[bx+si],al
020A:1ED7  00 00				add	[bx+si],al
020A:1ED9  00 00				add	[bx+si],al
020A:1EDB  00 00				add	[bx+si],al
020A:1EDD  00 00				add	[bx+si],al
020A:1EDF  00 00				add	[bx+si],al
020A:1EE1  00 00				add	[bx+si],al
020A:1EE3  00 00				add	[bx+si],al
020A:1EE5  00 00				add	[bx+si],al
020A:1EE7  00 00				add	[bx+si],al
020A:1EE9  00 00				add	[bx+si],al
020A:1EEB  00 00				add	[bx+si],al
020A:1EED  00 00				add	[bx+si],al
020A:1EEF  00 00				add	[bx+si],al
020A:1EF1  00 00				add	[bx+si],al
020A:1EF3  00 00				add	[bx+si],al
020A:1EF5  00 00				add	[bx+si],al
020A:1EF7  00 00				add	[bx+si],al
020A:1EF9  00 00				add	[bx+si],al
020A:1EFB  00 00				add	[bx+si],al
020A:1EFD  00 00				add	[bx+si],al
020A:1EFF  00 00				add	[bx+si],al
020A:1F01  00 00				add	[bx+si],al
020A:1F03  00 00				add	[bx+si],al
020A:1F05  00 00				add	[bx+si],al
020A:1F07  00 00				add	[bx+si],al
020A:1F09  00 00				add	[bx+si],al
020A:1F0B  00 00				add	[bx+si],al
020A:1F0D  00 00				add	[bx+si],al
020A:1F0F  00 00				add	[bx+si],al
020A:1F11  00 00				add	[bx+si],al
020A:1F13  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 69

020A:1F15  00 00				add	[bx+si],al
020A:1F17  00 00				add	[bx+si],al
020A:1F19  00 00				add	[bx+si],al
020A:1F1B  00 00				add	[bx+si],al
020A:1F1D  00 00				add	[bx+si],al
020A:1F1F  00 00				add	[bx+si],al
020A:1F21  00 00				add	[bx+si],al
020A:1F23  00 00				add	[bx+si],al
020A:1F25  00 30				add	[bx+si],dh
020A:1F27  00 00				add	[bx+si],al
020A:1F29  00 00				add	[bx+si],al
020A:1F2B  00 00				add	[bx+si],al
020A:1F2D  00 00				add	[bx+si],al
020A:1F2F  00 00				add	[bx+si],al
020A:1F31  00 00				add	[bx+si],al
020A:1F33  00 00				add	[bx+si],al
020A:1F35  00 00				add	[bx+si],al
020A:1F37  00 00				add	[bx+si],al
020A:1F39  00 00				add	[bx+si],al
020A:1F3B  00 00				add	[bx+si],al
020A:1F3D  00 00				add	[bx+si],al
020A:1F3F  00 00				add	[bx+si],al
020A:1F41  00 00				add	[bx+si],al
020A:1F43  00 00				add	[bx+si],al
020A:1F45  00 00				add	[bx+si],al
020A:1F47  00 00				add	[bx+si],al
020A:1F49  00 00				add	[bx+si],al
020A:1F4B  00 00				add	[bx+si],al
020A:1F4D  00 00				add	[bx+si],al
020A:1F4F  00 00				add	[bx+si],al
020A:1F51  00 00				add	[bx+si],al
020A:1F53  00 00				add	[bx+si],al
020A:1F55  00 00				add	[bx+si],al
020A:1F57  00 00				add	[bx+si],al
020A:1F59  00 00				add	[bx+si],al
020A:1F5B  00 00				add	[bx+si],al
020A:1F5D  00 00				add	[bx+si],al
020A:1F5F  00 00				add	[bx+si],al
020A:1F61  00 00				add	[bx+si],al
020A:1F63  00 00				add	[bx+si],al
020A:1F65  00 00				add	[bx+si],al
020A:1F67  00 00				add	[bx+si],al
020A:1F69  00 00				add	[bx+si],al
020A:1F6B  00 00				add	[bx+si],al
020A:1F6D  00 00				add	[bx+si],al
020A:1F6F  00 00				add	[bx+si],al
020A:1F71  00 00				add	[bx+si],al
020A:1F73  00 00				add	[bx+si],al
020A:1F75  00 00				add	[bx+si],al
020A:1F77  00 00				add	[bx+si],al
020A:1F79  00 00				add	[bx+si],al
020A:1F7B  00 00				add	[bx+si],al
020A:1F7D  00 00				add	[bx+si],al
020A:1F7F  00 00				add	[bx+si],al
020A:1F81  00 00				add	[bx+si],al
020A:1F83  00 00				add	[bx+si],al
020A:1F85  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 70

020A:1F87  00 00				add	[bx+si],al
020A:1F89  00 00				add	[bx+si],al
020A:1F8B  00 00				add	[bx+si],al
020A:1F8D  00 00				add	[bx+si],al
020A:1F8F  00 00				add	[bx+si],al
020A:1F91  00 00				add	[bx+si],al
020A:1F93  00 00				add	[bx+si],al
020A:1F95  00 00				add	[bx+si],al
020A:1F97  00 00				add	[bx+si],al
020A:1F99  00 00				add	[bx+si],al
020A:1F9B  00 00				add	[bx+si],al
020A:1F9D  00 00				add	[bx+si],al
020A:1F9F  00 00				add	[bx+si],al
020A:1FA1  00 00				add	[bx+si],al
020A:1FA3  00 00				add	[bx+si],al
020A:1FA5  00 38				add	[bx+si],bh
020A:1FA7  00 00				add	[bx+si],al
020A:1FA9  00 00				add	[bx+si],al
020A:1FAB  00 00				add	[bx+si],al
020A:1FAD  00 00				add	[bx+si],al
020A:1FAF  00 00				add	[bx+si],al
020A:1FB1  00 00				add	[bx+si],al
020A:1FB3  00 00				add	[bx+si],al
020A:1FB5  00 00				add	[bx+si],al
020A:1FB7  00 00				add	[bx+si],al
020A:1FB9  00 00				add	[bx+si],al
020A:1FBB  00 00				add	[bx+si],al
020A:1FBD  00 00				add	[bx+si],al
020A:1FBF  00 00				add	[bx+si],al
020A:1FC1  00 00				add	[bx+si],al
020A:1FC3  00 00				add	[bx+si],al
020A:1FC5  00 00				add	[bx+si],al
020A:1FC7  00 00				add	[bx+si],al
020A:1FC9  00 00				add	[bx+si],al
020A:1FCB  00 00				add	[bx+si],al
020A:1FCD  00 00				add	[bx+si],al
020A:1FCF  00 00				add	[bx+si],al
020A:1FD1  00 00				add	[bx+si],al
020A:1FD3  00 00				add	[bx+si],al
020A:1FD5  00 00				add	[bx+si],al
020A:1FD7  00 00				add	[bx+si],al
020A:1FD9  00 00				add	[bx+si],al
020A:1FDB  00 00				add	[bx+si],al
020A:1FDD  00 00				add	[bx+si],al
020A:1FDF  00 00				add	[bx+si],al
020A:1FE1  00 00				add	[bx+si],al
020A:1FE3  00 00				add	[bx+si],al
020A:1FE5  00 00				add	[bx+si],al
020A:1FE7  00 00				add	[bx+si],al
020A:1FE9  00 00				add	[bx+si],al
020A:1FEB  00 00				add	[bx+si],al
020A:1FED  00 00				add	[bx+si],al
020A:1FEF  00 00				add	[bx+si],al
020A:1FF1  00 00				add	[bx+si],al
020A:1FF3  00 00				add	[bx+si],al
020A:1FF5  00 00				add	[bx+si],al
020A:1FF7  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 71

020A:1FF9  00 00				add	[bx+si],al
020A:1FFB  00 00				add	[bx+si],al
020A:1FFD  00 00				add	[bx+si],al
020A:1FFF  00 00				add	[bx+si],al
020A:2001  00 00				add	[bx+si],al
020A:2003  00 00				add	[bx+si],al
020A:2005  00 00				add	[bx+si],al
020A:2007  00 00				add	[bx+si],al
020A:2009  00 00				add	[bx+si],al
020A:200B  00 00				add	[bx+si],al
020A:200D  00 00				add	[bx+si],al
020A:200F  00 00				add	[bx+si],al
020A:2011  00 00				add	[bx+si],al
020A:2013  00 01				add	[bx+di],al
020A:2015  91					xchg	ax,cx
020A:2016  01 91 8DFB				add	word ptr ds:[8DFBh][bx+di],dx	; (020A:8DFB=2E0Ah)
020A:201A  F3					db	0F3h
020A:201B  03 B7 FB00				add	si,data_872[bx]		; (020A:FB00=71E8h)
020A:201F  8D 2E 8F02				lea	bp,cs:[8F02h]		; Load effective addr
020A:2023  03 46 30				add	ax,[bp+30h]
020A:2026  40					inc	ax
020A:2027  00 04				add	[si],al
020A:2029  00 C3				add	bl,al
020A:202B  3C 00				cmp	al,0
020A:202D  00 06 4D00				add	byte ptr data_664+27h,al	; (020A:4D00=53h)
020A:2031  0E					push	cs
020A:2032  04 B5				add	al,0B5h
020A:2034  00 00				add	[bx+si],al
020A:2036  06					push	es
020A:2037  00 43 4F				add	[bp+di+4Fh],al
020A:203A  4D					dec	bp
020A:203B  4D					dec	bp
020A:203C  41					inc	cx
020A:203D  4E					dec	si
020A:203E  44					inc	sp
020A:203F  00 CD				add	ch,cl
020A:2041  20 FF				and	bh,bh
020A:2043  9F					lahf				; Load ah from flags
020A:2044  00 9A FEF0				add	[bp+si-110h],bl
020A:2048  1D 7FF0				sbb	ax,7FF0h
020A:204B  01 0E 4B04				add	data_660,cx		; (020A:4B04=9B66h)
020A:204F  01 0E 5604				add	data_683,cx		; (020A:5604=47C6h)
020A:2053  01 0E 0E04				add	data_204,cx		; (020A:0E04=0DFE8h)
020A:2057  04 01				add	al,1
020A:2059  01 01				add	[bx+di],ax
020A:205B  00 02				add	[bp+si],al
020A:205D  000F[FF]				db	15 dup (0FFh)
020A:206C  CC					int	3			; Debug breakpoint
020A:206D  04 FA				add	al,0FAh
020A:206F  05 040E				add	ax,40Eh
020A:2072  14 00				adc	al,0
020A:2074  18 00				sbb	[bx+si],al
020A:2076  0E					push	cs
020A:2077  04 FF				add	al,0FFh
020A:2079  FF					db	0FFh
020A:207A  FF					db	0FFh
020A:207B  FF 00				inc	word ptr [bx+si]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 72

020A:207D  00 00				add	[bx+si],al
020A:207F  00 05				add	[di],al
020A:2081  000F[00]				db	15 dup (0)
020A:2090  CD 21				int	21h			; DOS Services  ah=function 86h
020A:2092  CB					retf				; Return far
020A:2093  000A[00]				db	10 dup (0)
020A:209D  20 20 20				db	 20h, 20h, 20h
020A:20A0  20			data_271	db	20h			; Data table (indexed access)
020A:20A1  20 20				and	[bx+si],ah
020A:20A3  20 20				and	[bx+si],ah
020A:20A5  2020			data_272	dw	2020h			; Data table (indexed access)
020A:20A7  20 00				and	[bx+si],al
020A:20A9  00 00				add	[bx+si],al
020A:20AB  00 00				add	[bx+si],al
020A:20AD  20			data_273	db	20h
020A:20AE  2020			data_274	dw	2020h
020A:20B0  0008[20]				db	8 dup (20h)
020A:20B8  0009[00]				db	9 dup (0)
020A:20C1  0D 2020				or	ax,2020h
020A:20C4  20 53 45				and	[bp+di+45h],dl
020A:20C7  54					push	sp
020A:20C8  20 42 4C				and	[bp+si+4Ch],al
020A:20CB  41					inc	cx
020A:20CC  53					push	bx
020A:20CD  54			data_277	db	54h
020A:20CE  45					inc	bp
020A:20CF  52					push	dx
020A:20D0  3D 3041				cmp	ax,3041h
020A:20D3  0D A8AD				or	ax,0A8ADh
020A:20D6  A5					movsw				; Mov [si] to es:[di]
020A:20D7  20 A4 EFAB				and	data_864[si],ah		; (020A:EFAB=3Eh)
020A:20DB  20 A1 A7A2				and	data_770[bx+di],ah	; (020A:A7A2=2)
020A:20DF  AE					scasb				; Scan es:[di] for al
020A:20E0  A2 A3AE				mov	data_756,al		; (020A:A3AE=4)
020A:20E3  AE					scasb				; Scan es:[di] for al
020A:20E4  20 AF E0AE				and	data_820[bx],ch		; (020A:E0AE=1)
020A:20E8  E2 A0		;*		loop	locloop_252		;*Loop if cx > 0
  
020A:20E8  E2 A0				db	0E2h,0A0h
020A:20EA  20 A2 AEA2				and	[bp+si-515Eh],ah
020A:20EE  A4					movsb				; Mov [si] to es:[di]
020A:20EF  A0			data_278	db	0A0h
020A:20F0  2D EBA2				sub	ax,0EBA2h
020A:20F3  A2 A4AE				mov	byte ptr data_763,al	; (020A:A4AE=3Bh)
020A:20F6  A0 5320				mov	al,data_682		; (020A:5320=0)
020A:20F9  42					inc	dx
020A:20FA  2C 20				sub	al,20h			; ' '
020A:20FC  AD					lodsw				; String [si] to ax
020A:20FD  A0 E0AF				mov	al,data_821		; (020A:E0AF=80h)
020A:2100  A8 AC				test	al,0ACh
020A:2102  A5					movsw				; Mov [si] to es:[di]
020A:2103  E0 3A				loopnz	locloop_256		; Loop if zf=0, cx>0
  
020A:2105  0D 0DEC				or	ax,0DECh
020A:2108  E0 EB		;*		loopnz	locloop_255		;*Loop if zf=0, cx>0
  
020A:2108  E0 EB				db	0E0h,0EBh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 73

020A:210A  A5					movsw				; Mov [si] to es:[di]
020A:210B  0D 0000				or	ax,0
020A:210E  0032[00]				db	50 dup (0)
020A:2140  E9 174D				jmp	loc_452			; (3890)
020A:2143  00 17				add	[bx],dl
020A:2145  64					db	64h
020A:2146  FF					db	0FFh
020A:2147  FF 37				push	word ptr [bx]
020A:2149  5E					pop	si
020A:214A  FF					db	0FFh
020A:214B  FF F5				push	bp
020A:214D  5C					pop	sp
020A:214E  FF					db	0FFh
020A:214F  FF 24				jmp	word ptr [si]		;*
020A:2151  61					db	61h
020A:2152  FF					db	0FFh
020A:2153  FF					db	0FFh
020A:2154  E9 FF5C		;*		jmp	loc_254			;*(20B3)
020A:2154  E9 5C FF				db	0E9h, 5Ch,0FFh
020A:2157  FF 63 5F				jmp	word ptr [bp+di+5Fh]	;*
020A:215A  FF					db	0FFh
020A:215B  FF 01				inc	word ptr [bx+di]
020A:215D  61					db	61h
020A:215E  FF					db	0FFh
020A:215F  FF 6E 5E		;*		jmp	dword ptr [bp+5Eh]	;*1 entry
020A:215F  FF 6E 5E				db	0FFh, 6Eh, 5Eh
020A:2162  FF					db	0FFh
020A:2163  FF 5A 64		;*		call	dword ptr [bp+si+64h]	;*3 entries
020A:2163  FF 5A 64				db	0FFh, 5Ah, 64h
020A:2166  FF					db	0FFh
020A:2167  FF 82 FF5F				inc	word ptr [bp+si-0A1h]
020A:216B  FF D3				call	bx			;*
020A:216D  64					db	64h
020A:216E  FF					db	0FFh
020A:216F  FF AF D900				jmp	dword ptr data_804[bx]	;*(020A:D900=2419h)
020A:2173  02 01				add	al,[bx+di]
020A:2175  FB					sti				; Enable interrupts
020A:2176  E8 0064				call	sub_38			; (21DD)
020A:2179  1E					push	ds
020A:217A  0E					push	cs
020A:217B  2E: FF 2E 0104			jmp	dword ptr cs:[104h]	; (020A:0104=908h)
020A:2180  FB					sti				; Enable interrupts
020A:2181  E8 0059				call	sub_38			; (21DD)
020A:2184  1E					push	ds
020A:2185  0E					push	cs
020A:2186  2E: FF 2E 0108			jmp	dword ptr cs:[108h]	; (020A:0108=0A302h)
020A:218B  FB					sti				; Enable interrupts
020A:218C  E8 004E				call	sub_38			; (21DD)
020A:218F  1E					push	ds
020A:2190  0E					push	cs
020A:2191  2E: FF 2E 010C			jmp	cs:data_121		; (020A:010C=9028h)
020A:2196  FB					sti				; Enable interrupts
020A:2197  E8 0043				call	sub_38			; (21DD)
020A:219A  1E					push	ds
020A:219B  0E					push	cs
020A:219C  2E: FF 2E 0110			jmp	cs:data_122		; (020A:0110=1FBFh)
020A:21A1			loc_257:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 74

020A:21A1  E8 0039				call	sub_38			; (21DD)
020A:21A4  1E					push	ds
020A:21A5  0E					push	cs
020A:21A6  2E: FF 2E 0114			jmp	cs:data_124		; (020A:0114=0C0Bh)
020A:21AB  E8 002F				call	sub_38			; (21DD)
020A:21AE  1E					push	ds
020A:21AF  0E					push	cs
020A:21B0  2E: FF 2E 0118			jmp	cs:data_128		; (020A:0118=0)
020A:21B5  E8 0025				call	sub_38			; (21DD)
020A:21B8  1E					push	ds
020A:21B9  0E					push	cs
020A:21BA  2E: FF 2E 011C			jmp	cs:data_131		; (020A:011C=145Dh)
020A:21BF			loc_258:
020A:21BF  E8 001B				call	sub_38			; (21DD)
020A:21C2  1E					push	ds
020A:21C3  0E					push	cs
020A:21C4  2E: FF 2E 0120			jmp	cs:data_132		; (020A:0120=0A3BAh)
020A:21C9  E8 0011				call	sub_38			; (21DD)
020A:21CC  1E					push	ds
020A:21CD  0E					push	cs
020A:21CE  2E: FF 2E 0124			jmp	cs:data_134		; (020A:0124=201h)
020A:21D3  E8 0007				call	sub_38			; (21DD)
020A:21D6  1E					push	ds
020A:21D7  0E					push	cs
020A:21D8  2E: FF 2E 0128			jmp	cs:data_138		; (020A:0128=1405h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_38		proc	near
020A:21DD  9C					pushf				; Push flags
020A:21DE  50					push	ax
020A:21DF  2E: 80 3E 0134 00			cmp	cs:data_142,0		; (020A:0134=0)
020A:21E5  74 08				je	loc_259			; Jump if equal
020A:21E7  E8 000D				call	sub_39			; (21F7)
020A:21EA  73 03				jnc	loc_259			; Jump if carry=0
020A:21EC  E8 001B				call	sub_40			; (220A)
020A:21EF			loc_259:
020A:21EF  58					pop	ax
020A:21F0  9D					popf				; Pop flags
020A:21F1  C3					retn
				sub_38		endp
  
020A:21F2  EA 040E:0135		;*		jmp	far ptr loc_2889	;*(040E:0135)
020A:21F2  EA 35 01 0E 04			db	0EAh, 35h, 01h, 0Eh, 04h
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_39		proc	near
020A:21F7  53					push	bx
020A:21F8  50					push	ax
020A:21F9  B4 07				mov	ah,7
020A:21FB  2E: FF 1E 0130			call	cs:data_141		; (020A:0130=3E3Dh)
020A:2200  0B C0				or	ax,ax			; Zero ?
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 75

020A:2202  58					pop	ax
020A:2203  5B					pop	bx
020A:2204  75 02				jnz	loc_260			; Jump if not zero
020A:2206  F9					stc				; Set carry flag
020A:2207  C3					retn
020A:2208			loc_260:
020A:2208  F8					clc				; Clear carry flag
020A:2209  C3					retn
				sub_39		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_40		proc	near
020A:220A  53					push	bx
020A:220B  50					push	ax
020A:220C  B4 05				mov	ah,5
020A:220E  2E: FF 1E 0130			call	cs:data_141		; (020A:0130=3E3Dh)
020A:2213  0B C0				or	ax,ax			; Zero ?
020A:2215  74 03				jz	loc_261			; Jump if zero
020A:2217  58					pop	ax
020A:2218  5B					pop	bx
020A:2219  C3					retn
020A:221A			loc_261:
020A:221A  EB FE				jmp	short loc_261		; (221A)
				sub_40		endp
  
020A:221C  CD 21				int	21h			; DOS Services  ah=function BDh
020A:221E  FA					cli				; Disable interrupts
020A:221F  0E					push	cs
020A:2220  17					pop	ss
020A:2221  BC 0612				mov	sp,612h
020A:2224  FB					sti				; Enable interrupts
020A:2225  0E					push	cs
020A:2226  1F					pop	ds
020A:2227  9C					pushf				; Push flags
020A:2228  50					push	ax
020A:2229  2E: A0 0614				mov	al,cs:data_169		; (020A:0614=2Eh)
020A:222D  A8 80				test	al,80h
020A:222F  74 07				jz	loc_262			; Jump if zero
020A:2231  24 7F				and	al,7Fh
020A:2233  2E: FF 1E 012C			call	cs:data_140		; (020A:012C=3A39h)
020A:2238			loc_262:
020A:2238  2E: 80 26 0614 7F			and	cs:data_169,7Fh		; (020A:0614=2Eh)
020A:223E  58					pop	ax
020A:223F  9D					popf				; Pop flags
020A:2240  E9 FF5E				jmp	loc_257			; (21A1)
020A:2243  02 00				add	al,[bx+si]
020A:2245  00 01				add	[bx+di],al
020A:2247  09 02				or	[bp+si],ax
020A:2249  41					inc	cx
020A:224A  02 00				add	al,[bx+si]
020A:224C  00 02				add	[bp+si],al
020A:224E  10 02				adc	[bp+si],al
020A:2250  0009[00]				db	9 dup (0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 76

020A:2259  02 22				add	ah,[bp+si]
020A:225B  02 03				add	al,[bp+di]
020A:225D  30 02				xor	[bp+si],al
020A:225F  03 2E 0002				add	bp,data_67		; (020A:0002=10h)
020A:2263  0010[00]				db	16 dup (0)
020A:2273  01 09				add	[bx+di],cx
020A:2275  02 02				add	al,[bp+si]
020A:2277  5A					pop	dx
020A:2278  02 01				add	al,[bx+di]
020A:227A  3C 02				cmp	al,2
020A:227C  43					inc	bx
020A:227D  02 7C 04				add	bh,[si+4]
020A:2280  000A[00]				db	10 dup (0)
020A:228A  00			data_283	db	0
020A:228B  0E					push	cs
020A:228C  04 7F				add	al,7Fh
020A:228E  01 0E 0004				add	data_68,cx		; (020A:0004=808h)
020A:2292  00 00				add	[bx+si],al
020A:2294  00 00				add	[bx+si],al
020A:2296  00 00				add	[bx+si],al
020A:2298  43					inc	bx
020A:2299  3A 5C 57				cmp	bl,[si+57h]
020A:229C  49					dec	cx
020A:229D  4E					dec	si
020A:229E  44					inc	sp
020A:229F  4F					dec	di
020A:22A0  57					push	di
020A:22A1  53					push	bx
020A:22A2  5C					pop	sp
020A:22A3  53					push	bx
020A:22A4  59					pop	cx
020A:22A5  53					push	bx
020A:22A6  54					push	sp
020A:22A7  45					inc	bp
020A:22A8  4D					dec	bp
020A:22A9  33 32				xor	si,[bp+si]
020A:22AB  5C					pop	sp
020A:22AC  43					inc	bx
020A:22AD  4D4F			data_284	dw	4D4Fh
020A:22AF  4D					dec	bp
020A:22B0  41					inc	cx
020A:22B1  444E			data_285	dw	444Eh
020A:22B3  432E			data_286	dw	432Eh
020A:22B5  4F					dec	di
020A:22B6  4D					dec	bp
020A:22B7  00 00 00 00 00 00			db	0, 0, 0, 0, 0, 0
020A:22BD  0000			data_288	dw	0
020A:22BF  00 00				add	[bx+si],al
020A:22C1  00 00				add	[bx+si],al
020A:22C3  00 00				add	[bx+si],al
020A:22C5  00 00				add	[bx+si],al
020A:22C7  00 00				add	[bx+si],al
020A:22C9  00 00				add	[bx+si],al
020A:22CB  00 00				add	[bx+si],al
020A:22CD  00 00				add	[bx+si],al
020A:22CF  00 00				add	[bx+si],al
020A:22D1  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 77

020A:22D3  00 00				add	[bx+si],al
020A:22D5  00 00				add	[bx+si],al
020A:22D7  00 77 02				add	[bx+2],dh
020A:22DA  2C 01				sub	al,1
020A:22DC			loc_263:
020A:22DC  B4 95				mov	ah,95h
020A:22DE  01 00				add	[bx+si],ax
020A:22E0  00 03				add	[bp+di],al
020A:22E2  FF 9F 1EEE				call	dword ptr ds:[1EEEh][bx]	;*(020A:1EEE=0)
020A:22E6  01 00				add	[bx+si],ax
020A:22E8  03 00				add	ax,[bx+si]
020A:22EA  01 00				add	[bx+si],ax
020A:22EC  01 01				add	[bx+di],ax
020A:22EE  01 00				add	[bx+si],ax
020A:22F0  01 00				add	[bx+si],ax
020A:22F2  00 00				add	[bx+si],al
020A:22F4  FF					db	0FFh
020A:22F5  FF 00				inc	word ptr [bx+si]
020A:22F7  0009[00]				db	9 dup (0)
020A:2300  0000			data_290	dw	0
020A:2302  04 31				add	al,31h			; '1'
020A:2304  0B A7 0000				or	sp,[bx+0]
020A:2308  00 00				add	[bx+si],al
020A:230A  00 E7				add	bh,ah
020A:230C  0C A7				or	al,0A7h
020A:230E  0058[00]				db	88 dup (0)
020A:2366  01 00				add	[bx+si],ax
020A:2368  00 00				add	[bx+si],al
020A:236A  01 00				add	[bx+si],ax
020A:236C  0007[00]				db	7 dup (0)
020A:2373  1E					push	ds
020A:2374  06					push	es
020A:2375  0E					push	cs
020A:2376  1F					pop	ds
020A:2377  8B 16 22BD				mov	dx,data_288		; (020A:22BD=0)
020A:237B  A1 22B1				mov	ax,data_285		; (020A:22B1=444Eh)
020A:237E  8B 1E 22AD				mov	bx,data_284		; (020A:22AD=4D4Fh)
020A:2382  8B 0E 22B3				mov	cx,data_286		; (020A:22B3=432Eh)
020A:2386  50					push	ax
020A:2387  53					push	bx
020A:2388  51					push	cx
020A:2389  8C DB				mov	bx,ds
020A:238B  8E C3				mov	es,bx
020A:238D  8B 1E 0593				mov	bx,word ptr ds:[593h]	; (020A:0593=3)
020A:2391  B4 4A				mov	ah,4Ah			; 'J'
020A:2393  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:2395  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:239A  75 33				jne	loc_264			; Jump if not equal
020A:239C  83 3E 0256 00			cmp	word ptr ds:[256h],0	; (020A:0256=0)
020A:23A1  74 2C				je	loc_264			; Jump if equal
020A:23A3  BB 0007				mov	bx,7
020A:23A6  B4 48				mov	ah,48h			; 'H'
020A:23A8  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23AA  72 23				jc	loc_264			; Jump if carry Set
020A:23AC  8E C0				mov	es,ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 78

020A:23AE  33 FF				xor	di,di			; Zero register
020A:23B0  33 F6				xor	si,si			; Zero register
020A:23B2  1E					push	ds
020A:23B3  8E 1E 0256				mov	ds,word ptr ds:[256h]	; (020A:0256=0)
020A:23B7  B9 0021				mov	cx,21h
020A:23BA  83 C1 40				add	cx,40h
020A:23BD  FC					cld				; Clear direction
020A:23BE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:23C0  1F					pop	ds
020A:23C1  8C C1				mov	cx,es
020A:23C3  8E 06 0256				mov	es,word ptr ds:[256h]	; (020A:0256=0)
020A:23C7  B4 49				mov	ah,49h			; 'I'
020A:23C9  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23CB  89 0E 0256				mov	word ptr ds:[256h],cx	; (020A:0256=0)
020A:23CF			loc_264:
020A:23CF  59					pop	cx
020A:23D0  5B					pop	bx
020A:23D1  5D					pop	bp
020A:23D2  B4 48				mov	ah,48h			; 'H'
020A:23D4  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23D6  72 41				jc	loc_265			; Jump if carry Set
020A:23D8  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:23DB  A3 002C				mov	data_89,ax		; (020A:002C=3A39h)
020A:23DE  8E C0				mov	es,ax
020A:23E0  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:23E5  75 34				jne	loc_266			; Jump if not equal
020A:23E7  53					push	bx
020A:23E8  BB 0000				mov	bx,0
020A:23EB  C4					db	0C4h
020A:23EC  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:23EF  8B C3				mov	ax,bx
020A:23F1  5B					pop	bx
020A:23F2  3D 0000				cmp	ax,0
020A:23F5  74 24				je	loc_266			; Jump if equal
020A:23F7  03 D8				add	bx,ax
020A:23F9  B4 49				mov	ah,49h			; 'I'
020A:23FB  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23FD  B4 48				mov	ah,48h			; 'H'
020A:23FF  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2401  72 75				jc	loc_269			; Jump if carry Set
020A:2403  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:2406  A3 002C				mov	data_89,ax		; (020A:002C=3A39h)
020A:2409  8E C0				mov	es,ax
020A:240B  89 1E 22AD				mov	data_284,bx		; (020A:22AD=4D4Fh)
020A:240F  53					push	bx
020A:2410  C4					db	0C4h
020A:2411  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:2414  58					pop	ax
020A:2415  3B D8				cmp	bx,ax
020A:2417  76 0D				jbe	loc_267			; Jump if below or =
020A:2419			loc_265:
020A:2419  EB 5D				jmp	short loc_269		; (2478)
020A:241B			loc_266:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 79

020A:241B  1E					push	ds
020A:241C  8E DD				mov	ds,bp
020A:241E  33 F6				xor	si,si			; Zero register
020A:2420  8B FE				mov	di,si
020A:2422  FC					cld				; Clear direction
020A:2423  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2425  1F					pop	ds
020A:2426			loc_267:
020A:2426  80 3E 228A 00			cmp	data_283,0		; (020A:228A=0)
020A:242B  75 06				jne	loc_268			; Jump if not equal
020A:242D  8E C5				mov	es,bp
020A:242F  B4 49				mov	ah,49h			; 'I'
020A:2431  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2433			loc_268:
020A:2433  C6 06 029E 01			mov	data_155,1		; (020A:029E=0)
020A:2438  06					push	es
020A:2439  BE 2760				mov	si,2760h
020A:243C  BF 0000				mov	di,0
020A:243F  B9 A4AD				mov	cx,0A4ADh
020A:2442  BB FFFF				mov	bx,0FFFFh
020A:2445  B4 48				mov	ah,48h			; 'H'
020A:2447  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2449  3B DA				cmp	bx,dx
020A:244B  72 2B				jb	loc_269			; Jump if below
020A:244D  B4 48				mov	ah,48h			; 'H'
020A:244F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2451  72 25				jc	loc_269			; Jump if carry Set
020A:2453  50					push	ax
020A:2454  03 C3				add	ax,bx
020A:2456  2B C2				sub	ax,dx
020A:2458  A3 029C				mov	data_154,ax		; (020A:029C=0)
020A:245B  8E C0				mov	es,ax
020A:245D  58					pop	ax
020A:245E  03 F1				add	si,cx
020A:2460  4E					dec	si
020A:2461  03 F9				add	di,cx
020A:2463  4F					dec	di
020A:2464  FD					std				; Set direction flag
020A:2465  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2467  FC					cld				; Clear direction
020A:2468  8E C0				mov	es,ax
020A:246A  B4 49				mov	ah,49h			; 'I'
020A:246C  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:246E  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (020A:0330=61h)
020A:2473  07					pop	es
020A:2474  1F					pop	ds
020A:2475  E9 FD47				jmp	loc_258			; (21BF)
020A:2478			loc_269:
020A:2478  E9 1DC0				jmp	loc_628			; (423B)
020A:247B  0019[00]				db	25 dup (0)
020A:2494  33 03				xor	ax,[bp+di]
020A:2496  82 03 CC				add	byte ptr [bp+di],0CCh
020A:2499  04 80				add	al,80h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 80

020A:249B  00 0E 5C04				add	data_687,cl		; (020A:5C04=3)
020A:249F  00 0E 6C04				add	data_694,cl		; (020A:6C04=0AAh)
020A:24A3  00 0E 9304				add	data_723,cl		; (020A:9304=0F9h)
020A:24A7  01 0E 0004				add	data_68,cx		; (020A:0004=808h)
020A:24AB  10 2F				adc	[bx],ch
020A:24AD  5C					pop	sp
020A:24AE  DC 01				esc	4,[bx+di]		; coprocessor escape
020A:24B0  0E					push	cs
020A:24B1  04 6B				add	al,6Bh			; 'k'
020A:24B3  01 0E 0004				add	data_68,cx		; (020A:0004=808h)
020A:24B7  00 C6				add	dh,al
020A:24B9  06					push	es
020A:24BA  00 00				add	[bx+si],al
020A:24BC  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\CDC2~1\0016~1\SOURCE'
020A:24C2  55 4D 45 7E 31 5C
020A:24C8  43 44 43 32 7E 31
020A:24CE  5C 30 30 31 36 7E
020A:24D4  31 5C 53 4F 55 52
020A:24DA  43 45
020A:24DC  7E 31 2E 45 4E 47			db	'~1.ENG\SR.EXE'
020A:24E2  5C 53 52 2E 45 58
020A:24E8  45
020A:24E9  0019[00]				db	25 dup (0)
020A:2502  0000			data_296	dw	0
020A:2504  00 00				add	[bx+si],al
020A:2506  00 00				add	[bx+si],al
020A:2508  00 00				add	[bx+si],al
020A:250A  00 00				add	[bx+si],al
020A:250C  00 00				add	[bx+si],al
020A:250E  00 00				add	[bx+si],al
020A:2510  00 00				add	[bx+si],al
020A:2512  00 00				add	[bx+si],al
020A:2514  00 00				add	[bx+si],al
020A:2516  00 00				add	[bx+si],al
020A:2518  00 00				add	[bx+si],al
020A:251A  00 00				add	[bx+si],al
020A:251C  00 00				add	[bx+si],al
020A:251E  00 00				add	[bx+si],al
020A:2520  00 00				add	[bx+si],al
020A:2522  00 00				add	[bx+si],al
020A:2524  00 00				add	[bx+si],al
020A:2526  00 00				add	[bx+si],al
020A:2528  00 00				add	[bx+si],al
020A:252A  00 00				add	[bx+si],al
020A:252C  00 00				add	[bx+si],al
020A:252E  00 00				add	[bx+si],al
020A:2530  00 00				add	[bx+si],al
020A:2532  00 00				add	[bx+si],al
020A:2534  00 00				add	[bx+si],al
020A:2536  00 00				add	[bx+si],al
020A:2538  00 00				add	[bx+si],al
020A:253A  00 00				add	[bx+si],al
020A:253C  00 00				add	[bx+si],al
020A:253E  00 00				add	[bx+si],al
020A:2540  00 00				add	[bx+si],al
020A:2542  00 00				add	[bx+si],al
020A:2544  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 81

020A:2546  00 00				add	[bx+si],al
020A:2548  00 00				add	[bx+si],al
020A:254A  00 00				add	[bx+si],al
020A:254C  00 00				add	[bx+si],al
020A:254E  00 00				add	[bx+si],al
020A:2550  00 00				add	[bx+si],al
020A:2552  00 00				add	[bx+si],al
020A:2554  00 00				add	[bx+si],al
020A:2556  00 00				add	[bx+si],al
020A:2558  00 00				add	[bx+si],al
020A:255A  00 00				add	[bx+si],al
020A:255C  00 00				add	[bx+si],al
020A:255E  00 00				add	[bx+si],al
020A:2560  00 00				add	[bx+si],al
020A:2562  00 00				add	[bx+si],al
020A:2564  00 00				add	[bx+si],al
020A:2566  00 00				add	[bx+si],al
020A:2568  00 00				add	[bx+si],al
020A:256A  00 00				add	[bx+si],al
020A:256C  00 00				add	[bx+si],al
020A:256E  00 00				add	[bx+si],al
020A:2570  00 00				add	[bx+si],al
020A:2572  00 00				add	[bx+si],al
020A:2574  00 00				add	[bx+si],al
020A:2576  00 00				add	[bx+si],al
020A:2578  00 00				add	[bx+si],al
020A:257A  00 00				add	[bx+si],al
020A:257C  00 00				add	[bx+si],al
020A:257E  00 00				add	[bx+si],al
020A:2580  00 00				add	[bx+si],al
020A:2582  00 00				add	[bx+si],al
020A:2584  00 00				add	[bx+si],al
020A:2586  00 00				add	[bx+si],al
020A:2588  00 00				add	[bx+si],al
020A:258A  00 00				add	[bx+si],al
020A:258C  00 00				add	[bx+si],al
020A:258E  00 00				add	[bx+si],al
020A:2590  00 00				add	[bx+si],al
020A:2592  00 00				add	[bx+si],al
020A:2594  00 00				add	[bx+si],al
020A:2596  00 00				add	[bx+si],al
020A:2598  00 00				add	[bx+si],al
020A:259A  00 00				add	[bx+si],al
020A:259C  00 00				add	[bx+si],al
020A:259E  00 00				add	[bx+si],al
020A:25A0  00 00				add	[bx+si],al
020A:25A2  00 00				add	[bx+si],al
020A:25A4  00 00				add	[bx+si],al
020A:25A6  00 00				add	[bx+si],al
020A:25A8  00 00				add	[bx+si],al
020A:25AA  00 00				add	[bx+si],al
020A:25AC  00 00				add	[bx+si],al
020A:25AE  00 00				add	[bx+si],al
020A:25B0  00 00				add	[bx+si],al
020A:25B2  00 00				add	[bx+si],al
020A:25B4  00 00				add	[bx+si],al
020A:25B6  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 82

020A:25B8  00 00				add	[bx+si],al
020A:25BA  00 00				add	[bx+si],al
020A:25BC  00 00				add	[bx+si],al
020A:25BE  00 00				add	[bx+si],al
020A:25C0  00 00				add	[bx+si],al
020A:25C2  00 00				add	[bx+si],al
020A:25C4  00 00				add	[bx+si],al
020A:25C6  00 00				add	[bx+si],al
020A:25C8  00 00				add	[bx+si],al
020A:25CA  00 00				add	[bx+si],al
020A:25CC  00 66 00				add	[bp],ah
020A:25CF  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:25D1  46					inc	si
020A:25D2  0B B5 0000				or	si,[di+0]
020A:25D6  00 00				add	[bx+si],al
020A:25D8  00 00				add	[bx+si],al
020A:25DA  00 00				add	[bx+si],al
020A:25DC  00 00				add	[bx+si],al
020A:25DE  00 00				add	[bx+si],al
020A:25E0  00 00				add	[bx+si],al
020A:25E2  00 00				add	[bx+si],al
020A:25E4  00 00				add	[bx+si],al
020A:25E6  00 00				add	[bx+si],al
020A:25E8  00 00				add	[bx+si],al
020A:25EA  00 00				add	[bx+si],al
020A:25EC  00 00				add	[bx+si],al
020A:25EE  00 00				add	[bx+si],al
020A:25F0  00 00				add	[bx+si],al
020A:25F2  00 00				add	[bx+si],al
020A:25F4  00 00				add	[bx+si],al
020A:25F6  00 00				add	[bx+si],al
020A:25F8  00 00				add	[bx+si],al
020A:25FA  00 00				add	[bx+si],al
020A:25FC  00 00				add	[bx+si],al
020A:25FE  00 00				add	[bx+si],al
020A:2600  00 00				add	[bx+si],al
020A:2602  00 00				add	[bx+si],al
020A:2604  00 00				add	[bx+si],al
020A:2606  00 00				add	[bx+si],al
020A:2608  00 00				add	[bx+si],al
020A:260A  00 00				add	[bx+si],al
020A:260C  00 00				add	[bx+si],al
020A:260E  00 00				add	[bx+si],al
020A:2610  00 00				add	[bx+si],al
020A:2612  00 00				add	[bx+si],al
020A:2614  00 00				add	[bx+si],al
020A:2616  00 63 0D				add	[bp+di+0Dh],ah
020A:2619  94					xchg	ax,sp
020A:261A  00 00				add	[bx+si],al
020A:261C  00 00				add	[bx+si],al
020A:261E  E7 0C				out	0Ch,ax			; port 0Ch, DMA-1 clr byte ptr
020A:2620  C5 22				lds	sp,dword ptr [bp+si]	; Load 32 bit ptr
020A:2622  0C 94				or	al,94h
020A:2624  EA 0F22:EA22		;*		jmp	far ptr loc_2891	;*(0F22:EA22)
020A:2624  EA 22 EA 22 0F			db	0EAh, 22h,0EAh, 22h, 0Fh
020A:2629  07					pop	es
020A:262A  00 07				add	[bx],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 83

020A:262C  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:262E  01 00				add	[bx+si],ax
020A:2630  D9 02				esc	1,[bp+si]		; coprocessor escape
020A:2632  47					inc	di
020A:2633  01 D9				add	cx,bx
  
020A:2635			locloop_271:
020A:2635  02 24				add	ah,[si]
020A:2637  25 95B4				and	ax,95B4h
020A:263A  00			data_299	db	0
020A:263B  3E			data_300	db	3Eh
020A:263C  00 99 040E				add	byte ptr ds:[40Eh][bx+di],bl	; (020A:040E=0C4h)
020A:2640  00 00				add	[bx+si],al
020A:2642  00			data_305	db	0
020A:2643  01 00				add	[bx+si],ax
020A:2645  01 81 0E00				add	data_202[bx+di],ax	; (020A:0E00=5057h)
020A:2649  04 0E				add	al,0Eh
020A:264B  04 DE				add	al,0DEh
020A:264D  01 0E 4604				add	data_641,cx		; (020A:4604=8018h)
020A:2651  32 00				xor	al,[bx+si]
020A:2653  00 00				add	[bx+si],al
020A:2655  41					inc	cx
020A:2656  52					push	dx
020A:2657  49					dec	cx
020A:2658  46					inc	si
020A:2659  59					pop	cx
020A:265A  4E					dec	si
020A:265B  0C 41				or	al,41h			; 'A'
020A:265D  62					db	62h
020A:265E  6F					db	6Fh
020A:265F  72 74				jc	loc_283			; Jump if carry Set
020A:2661  20 28				and	[bx+si],ch
020A:2663  E1 E2		;*		loopz	locloop_273		;*Loop if zf=1, cx>0
  
020A:2663  E1 E2				db	0E1h,0E2h
020A:2665  AE					scasb				; Scan es:[di] for al
020A:2666  AF					scasw				; Scan es:[di] for ax
020A:2667  29 10				sub	[bx+si],dx
020A:2669  2C 20				sub	al,20h			; ' '
020A:266B			loc_274:
020A:266B  52					push	dx
020A:266C  65					db	65h
020A:266D  74 72				jz	loc_284			; Jump if zero
020A:266F  79 20				jns	loc_277			; Jump if not sign
020A:2671  28 AF A2AE				sub	data_754[bx],ch		; (020A:A2AE=80h)
020A:2675  E2 AE		;*		loop	locloop_270		;*Loop if cx > 0
  
020A:2675  E2 AE				db	0E2h,0AEh
020A:2677  E0 29				loopnz	locloop_279		; Loop if zf=0, cx>0
  
020A:2679  12 2C				adc	ch,[si]
020A:267B  20 49 67				and	[bx+di+67h],cl
020A:267E  6E					db	6Eh
020A:267F  6F					db	6Fh
020A:2680  6572 2820		data_306	dd	28206572h
020A:2684  AF					scasw				; Scan es:[di] for ax
020A:2685  E0 AE				loopnz	locloop_271		; Loop if zf=0, cx>0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 84

  
020A:2687  AF					scasw				; Scan es:[di] for ax
020A:2688  E3 E1				jcxz	loc_274			; Jump if cx=0
020A:268A  AA					stosb				; Store al to es:[di]
020A:268B  29 0E 202C				sub	word ptr ds:[202Ch],cx	; (020A:202C=0)
020A:268F  46					inc	si
020A:2690  61					db	61h
020A:2691			loc_277:
020A:2691  69					db	69h
020A:2692  6C					db	6Ch
020A:2693  20 28				and	[bx+si],ch
020A:2695  E1 A1		;*		loopz	locloop_272		;*Loop if zf=1, cx>0
  
020A:2695  E1 A1				db	0E1h,0A1h
020A:2697  E0 AE		;*		loopnz	locloop_273		;*Loop if zf=0, cx>0
  
020A:2697  E0 AE				db	0E0h,0AEh
020A:2699  E1 29				loopz	locloop_282		; Loop if zf=1, cx>0
  
020A:269B  01 3F				add	[bx],di
020A:269D  07					pop	es
020A:269E  E7 E2				out	0E2h,ax			; port 0E2h
020A:26A0  A5					movsw				; Mov [si] to es:[di]
020A:26A1  AD					lodsw				; String [si] to ax
  
020A:26A2			locloop_279:
020A:26A2  A8 A5				test	al,0A5h
  
020A:26A4			locloop_281:
020A:26A4  00 07				add	[bx],al
020A:26A6  A7					cmpsw				; Cmp [si] to es:[di]
020A:26A7  A0 A8AF				mov	al,data_777		; (020A:A8AF=80h)
020A:26AA  E1 EC		;*		loopz	locloop_278		;*Loop if zf=1, cx>0
  
020A:26AA  E1 EC				db	0E1h,0ECh
020A:26AC  00 0D				add	[di],cl
020A:26AE  20 25				and	[di],ah
020A:26B0  31 20				xor	[bx+si],sp
020A:26B2  A4					movsb				; Mov [si] to es:[di]
020A:26B3  A8 E1				test	al,0E1h
020A:26B5  AA					stosb				; Store al to es:[di]
020A:26B6  20 25				and	[di],ah
020A:26B8  32 0D				xor	cl,[di]
020A:26BA  0A 13				or	dl,[bp+di]
020A:26BC  20 25				and	[di],ah
020A:26BE  31 20				xor	[bx+si],sp
020A:26C0  E3 E1		;*		jcxz	loc_280			;*Jump if cx=0
020A:26C0  E3 E1				db	0E3h,0E1h
020A:26C2  E2 E0				loop	locloop_281		; Loop if cx > 0
  
  
020A:26C4			locloop_282:
020A:26C4  AE					scasb				; Scan es:[di] for al
020A:26C5  A9 E2E1				test	ax,0E2E1h
020A:26C8  A2 20AE				mov	byte ptr data_274,al	; (020A:20AE=20h)
020A:26CB  25 0D32				and	ax,0D32h
020A:26CE  0A 27				or	ah,[bx]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 85

020A:26D0  82 E1 E2				and	cl,0E2h
020A:26D3  A0 ECA2				mov	al,data_863		; (020A:ECA2=15h)
020A:26D6  E2 A5		;*		loop	locloop_275		;*Loop if cx > 0
  
020A:26D6  E2 A5				db	0E2h,0A5h
020A:26D8  20 E2				and	dl,ah
020A:26DA  AE					scasb				; Scan es:[di] for al
020A:26DB  AC					lodsb				; String [si] to al
020A:26DC  20 25				and	[di],ah
020A:26DE  31 2C				xor	[si],bp
020A:26E0  20 E1				and	cl,ah
020A:26E2  A5					movsw				; Mov [si] to es:[di]
020A:26E3  E0 A8		;*		loopnz	locloop_276		;*Loop if zf=0, cx>0
  
020A:26E3  E0 A8				db	0E0h,0A8h
020A:26E5  A9 EBAD				test	ax,0EBADh
020A:26E8  A9 AD20				test	ax,0AD20h
020A:26EB  AE					scasb				; Scan es:[di] for al
020A:26EC  AC					lodsb				; String [si] to al
020A:26ED  A5					movsw				; Mov [si] to es:[di]
020A:26EE  E0 20				loopnz	locloop_285		; Loop if zf=0, cx>0
  
020A:26F0  25 2D32				and	ax,2D32h
020A:26F3  25 0D33				and	ax,0D33h
020A:26F6  370A E188		data_308	dw	370Ah, 0E188h
020A:26FA  AEAF E7E0		data_309	dw	0AEAFh, 0E7E0h
020A:26FE  ADA5 20A0		data_310	dw	0ADA5h, 20A0h
020A:2702  A0E2 ABA1		data_311	dw	0A0E2h, 0ABA1h
020A:2706  E6A8 20A0		data_312	dw	0E6A8h, 20A0h
020A:270A  A0E0 ACA7		data_313	dw	0A0E0h, 0ACA7h
020A:270E  E9A5 ADA5		data_314	dw	0E9A5h, 0ADA5h
020A:2712  EFA8 E420		data_315	dw	0EFA8h, 0E420h
020A:2716  A9A0 AEAB		data_316	dw	0A9A0h, 0AEABh
020A:271A  20A2 4628		data_317	dw	20A2h, 4628h
020A:271E  5441 2029		data_318	dw	5441h, 2029h
020A:2722  A0AD A420		data_319	dw	0A0ADh, 0A420h
020A:2726  E1A8 A5AA		data_320	dw	0E1A8h, 0A5AAh
020A:272A  2520 0D31		data_321	dw	2520h, 0D31h
020A:272E  1A0A A58D		data_322	dw	1A0Ah, 0A58Dh
020A:2732  E0AF A2A0		data_323	dw	0E0AFh, 0A2A0h
020A:2736  ABA8 ADEC		data_324	dw	0ABA8h, 0ADECh
020A:273A  A9EB 4320		data_325	dw	0A9EBh, 4320h
020A:273E  4D4F 414D		data_326	dw	4D4Fh, 414Dh
020A:2742  444E 432E		data_327	dw	444Eh, 432Eh
020A:2746  4D4F 0A0D		data_328	dw	4D4Fh, 0A0Dh
020A:274A  8222 E2E1		data_329	dw	8222h, 0E2E1h
020A:274E  A2A0 E2EC		data_330	dw	0A2A0h, 0E2ECh
020A:2752  20A5 A8A4		data_331	dw	20A5h, 0A8A4h
020A:2756  AAE1 E120		data_332	dw	0AAE1h, 0E120h
020A:275A  2520 2031		data_333	dw	2520h, 2031h
020A:275E  20A2 A8A4		data_334	dw	20A2h, 0A8A4h
020A:2762  AAE1 A2AE		data_335	dw	0AAE1h, 0A2AEh
020A:2766  A4AE 2520		data_336	dw	0A4AEh, 2520h
020A:276A  0D32 1A0A		data_337	dw	0D32h, 1A0Ah
020A:276E  A08D ACA6		data_338	dw	0A08Dh, 0ACA6h
020A:2772  E2A8 20A5		data_339	dw	0E2A8h, 20A5h
020A:2776  EEAB E3A1		data_340	dw	0EEABh, 0E3A1h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 86

020A:277A  20EE ABAA		data_341	dw	20EEh, 0ABAAh
020A:277E  A2A0 E8A8		data_342	dw	0A2A0h, 0E8A8h
020A:2782  2EE3 2E2E		data_343	dw	2EE3h, 2E2Eh
020A:2786  0A0D 0D39		data_344	dw	0A0Dh, 0D39h
020A:278A  8F0A A5E0		data_345	dw	8F0Ah, 0A5E0h
020A:278E  E0AA E2A0		data_346	dw	0E0AAh, 0E2A0h
020A:2792  E2A8 20EC		data_347	dw	0E2A8h, 20ECh
020A:2796  EBA2 AEAF		data_348	dw	0EBA2h, 0AEAFh
020A:279A  ADAB ADA5		data_349	dw	0ADABh, 0ADA5h
020A:279E  A5A8 AF20		data_350	dw	0A5A8h, 0AF20h
020A:27A2  AAA0 E2A5		data_351	dw	0AAA0h, 0E2A5h
020A:27A6  AEAD AEA3		data_352	dw	0AEADh, 0AEA3h
020A:27AA  A720 A4A0		data_353	dw	0A720h, 0A4A0h
020A:27AE  ADA0 EFA8		data_354	dw	0ADA0h, 0EFA8h
020A:27B2  5B20 2859		data_355	dw	5B20h, 2859h
020A:27B6  A0A4 2F29		data_356	dw	0A0A4h, 2F29h
020A:27BA  4E					dec	si
020A:27BB  28 AD E2A5				sub	data_825[di],ch		; (020A:E2A5=74h)
020A:27BF  29 5D 3F				sub	[di+3Fh],bx
020A:27C2  19 8D 20A5				sbb	data_272[di],cx		; (020A:20A5=2020h)
020A:27C6  E3 A4		;*		jcxz	loc_286			;*Jump if cx=0
020A:27C6  E3 A4				db	0E3h,0A4h
020A:27C8  A0 E2A5				mov	al,data_825		; (020A:E2A5=74h)
020A:27CB  E1 EF		;*		loopz	locloop_289		;*Loop if zf=1, cx>0
  
020A:27CB  E1 EF				db	0E1h,0EFh
020A:27CD  20 A2 AFEB				and	[bp+si-5015h],ah
020A:27D1  AE					scasb				; Scan es:[di] for al
  
020A:27D2			locloop_291:
020A:27D2  AB					stosw				; Store ax to es:[di]
020A:27D3  AD					lodsw				; String [si] to ax
020A:27D4  A8 E2				test	al,0E2h
020A:27D6  EC					in	al,dx			; port 0C001h
020A:27D7  20 25				and	[di],ah
020A:27D9  31 0D				xor	[di],cx
  
020A:27DB			locloop_292:
020A:27DB  0A 14				or	dl,[si]
  
020A:27DD			locloop_293:
020A:27DD  8E					db	8Eh
020A:27DE  E8 A1A8				call	sub_185			; (C989)
020A:27E1  AA					stosb				; Store al to es:[di]
020A:27E2  A0 A220				mov	al,data_750		; (020A:A220=82h)
020A:27E5  20 45 58				and	[di+58h],al
  
020A:27E8			locloop_294:
020A:27E8  45					inc	bp
020A:27E9  2D A0E4				sub	ax,0A0E4h
020A:27EC  A9 A5AB				test	ax,0A5ABh
020A:27EF  0D 210A				or	ax,210Ah
020A:27F2  8F					db	8Fh
020A:27F3  E0 AE		;*		loopnz	locloop_287		;*Loop if zf=0, cx>0
  
020A:27F3  E0 AE				db	0E0h,0AEh
020A:27F5  A3 A0E0				mov	data_746,ax		; (020A:A0E0=87C3h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 87

020A:27F8  AC					lodsb				; String [si] to al
020A:27F9  AC					lodsb				; String [si] to al
020A:27FA  A0			data_357	db	0A0h
020A:27FB  AD20			data_358	dw	0AD20h
020A:27FD  A5					movsw				; Mov [si] to es:[di]
020A:27FE  20 E3				and	bl,ah
020A:2800  AC					lodsb				; String [si] to al
020A:2801  A5					movsw				; Mov [si] to es:[di]
020A:2802  E9 A5A0				jmp	loc_2333		; (CDA5)
020A:2805  E2 E1				loop	locloop_294		; Loop if cx > 0
  
020A:2807  EF					out	dx,ax			; port 0C0FBh
020A:2808			loc_295:
020A:2808  20 A2 AF20				and	[bp+si-50E0h],ah
020A:280C  A0 EFAC				mov	al,data_865		; (020A:EFAC=0A4h)
020A:280F  E2 A8		;*		loop	locloop_288		;*Loop if cx > 0
  
020A:280F  E2 A8				db	0E2h,0A8h
020A:2811  0D 230A				or	ax,230Ah
020A:2814  0D 8D0A				or	ax,8D0Ah
020A:2817  A5					movsw				; Mov [si] to es:[di]
020A:2818  E2 20				loop	locloop_300		; Loop if cx > 0
  
020A:281A  E1 A2		;*		loopz	locloop_290		;*Loop if zf=1, cx>0
  
020A:281A  E1 A2				db	0E1h,0A2h
020A:281C  AE					scasb				; Scan es:[di] for al
020A:281D  A1 A4AE				mov	ax,data_763		; (020A:A4AE=3E3Bh)
020A:2820  AD					lodsw				; String [si] to ax
020A:2821  EB E5				jmp	short loc_295		; (2808)
020A:2823  20 A4 E1A5				and	data_823[si],ah		; (020A:E1A5=0EBh)
020A:2827  AA					stosb				; Store al to es:[di]
020A:2828  E0 A8				loopnz	locloop_291		; Loop if zf=0, cx>0
  
020A:282A  AF					scasw				; Scan es:[di] for ax
020A:282B  E2 AE				loop	locloop_292		; Loop if cx > 0
  
020A:282D  E0 AE				loopnz	locloop_293		; Loop if zf=0, cx>0
  
  
020A:282F			locloop_298:
020A:282F  A2 E420				mov	data_828,al		; (020A:E420=3Eh)
020A:2832  A0 ABA9				mov	al,data_784		; (020A:ABA9=8Ah)
020A:2835  AE					scasb				; Scan es:[di] for al
020A:2836  A2 AD24				mov	data_789,al		; (020A:AD24=0F9h)
020A:2839  A5					movsw				; Mov [si] to es:[di]
  
020A:283A			locloop_300:
020A:283A  AF					scasw				; Scan es:[di] for ax
020A:283B  E0 A0				loopnz	locloop_293		; Loop if zf=0, cx>0
  
020A:283D  A2 ABA8				mov	data_783,al		; (020A:ABA8=26h)
020A:2840  EC					in	al,dx			; port 0C0FBh
020A:2841  AD					lodsw				; String [si] to ax
020A:2842  A0 20EF				mov	al,data_278		; (020A:20EF=0A0h)
020A:2845  AA					stosb				; Store al to es:[di]
020A:2846  AE					scasb				; Scan es:[di] for al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 88

  
020A:2847			locloop_301:
020A:2847  AC					lodsb				; String [si] to al
020A:2848  A0 A4AD				mov	al,data_762		; (020A:A4AD=41h)
020A:284B  A0 A820				mov	al,data_772		; (020A:A820=16h)
020A:284E  AB					stosw				; Store ax to es:[di]
020A:284F  A8 20				test	al,20h			; ' '
020A:2851  A8 AC				test	al,0ACh
020A:2853  EF					out	dx,ax			; port 0C0FBh
020A:2854  20 E4				and	ah,ah
  
020A:2856			locloop_302:
020A:2856  A0 ABA9				mov	al,data_784		; (020A:ABA9=8Ah)
020A:2859  A0 0A0D				mov	al,data_194		; (020A:0A0D=0)
020A:285C  0C 8D				or	al,8Dh
020A:285E  A5					movsw				; Mov [si] to es:[di]
020A:285F  E2 20				loop	locloop_305		; Loop if cx > 0
  
020A:2861  A4					movsb				; Mov [si] to es:[di]
020A:2862  AE					scasb				; Scan es:[di] for al
020A:2863  E1 E2				loopz	locloop_301		; Loop if zf=1, cx>0
  
020A:2865  E3 AF		;*		jcxz	loc_296			;*Jump if cx=0
020A:2865  E3 AF				db	0E3h,0AFh
020A:2867  A0 1D20				mov	al,data_257		; (020A:1D20=0)
020A:286A  0D 8E0A				or	ax,8E0Ah
020A:286D  E8 A1A8				call	sub_186			; (CA18)
020A:2870  AA					stosb				; Store al to es:[di]
020A:2871  A0 AF20				mov	al,data_796		; (020A:AF20=5Eh)
020A:2874  E0 A8		;*		loopnz	locloop_297		;*Loop if zf=0, cx>0
  
020A:2874  E0 A8				db	0E0h,0A8h
020A:2876  20 A2 A4EB				and	[bp+si-5B15h],ah
020A:287A  A5					movsw				; Mov [si] to es:[di]
020A:287B  AB					stosw				; Store ax to es:[di]
020A:287C  A5					movsw				; Mov [si] to es:[di]
  
020A:287D			locloop_303:
020A:287D  AD					lodsw				; String [si] to ax
  
020A:287E			locloop_304:
020A:287E  A8 A8				test	al,0A8h
020A:2880  20 AF ACA0				and	data_786[bx],ch		; (020A:ACA0=4)
020A:2884  EF					out	dx,ax			; port 0C0FBh
020A:2885  E2 A8				loop	locloop_298		; Loop if cx > 0
  
020A:2887  39 0D				cmp	[di],cx
020A:2889  0A 8D 20A5				or	cl,byte ptr data_272[di]	; (020A:20A5=20h)
020A:288D  E3 A4		;*		jcxz	loc_299			;*Jump if cx=0
020A:288D  E3 A4				db	0E3h,0A4h
020A:288F  A0 E2A5				mov	al,data_825		; (020A:E2A5=74h)
  
020A:2892			locloop_307:
020A:2892  E1 EF		;*		loopz	locloop_306		;*Loop if zf=1, cx>0
  
020A:2892  E1 EF				db	0E1h,0EFh
020A:2894  20 A7 A3A0				and	data_755[bx],ah		; (020A:A3A0=96h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 89

020A:2898  E0 E3				loopnz	locloop_303		; Loop if zf=0, cx>0
  
020A:289A  A7					cmpsw				; Cmp [si] to es:[di]
020A:289B  A8 E2				test	al,0E2h
020A:289D  EC					in	al,dx			; port 0C0FBh
020A:289E  20 43 4F				and	[bp+di+4Fh],al
020A:28A1  4D					dec	bp
020A:28A2  4D					dec	bp
  
020A:28A3			locloop_309:
020A:28A3  41					inc	cx
  
020A:28A4			locloop_310:
020A:28A4  4E					dec	si
020A:28A5  44					inc	sp
020A:28A6  2E					db	2Eh
020A:28A7  43					inc	bx
020A:28A8  4F					dec	di
020A:28A9  4D					dec	bp
020A:28AA  2C 20				sub	al,20h			; ' '
020A:28AC  E1 A8				loopz	locloop_302		; Loop if zf=1, cx>0
  
020A:28AE  E1 E2				loopz	locloop_307		; Loop if zf=1, cx>0
  
020A:28B0  A5					movsw				; Mov [si] to es:[di]
020A:28B1  AC					lodsb				; String [si] to al
020A:28B2  A0 AE20				mov	al,data_791		; (020A:AE20=53h)
  
020A:28B5			locloop_311:
020A:28B5  E1 E2		;*		loopz	locloop_308		;*Loop if zf=1, cx>0
  
020A:28B5  E1 E2				db	0E1h,0E2h
020A:28B7  A0 AEAD				mov	al,data_794		; (020A:AEAD=40h)
020A:28BA  A2 A5AB				mov	data_765,al		; (020A:A5AB=0C3h)
  
020A:28BD			locloop_312:
020A:28BD  AD					lodsw				; String [si] to ax
020A:28BE  A0 0A0D				mov	al,data_194		; (020A:0A0D=0)
020A:28C1  37					aaa				; Ascii adjust
020A:28C2  0D 8D0A				or	ax,8D0Ah
020A:28C5  A5					movsw				; Mov [si] to es:[di]
020A:28C6  20 E3				and	bl,ah
020A:28C8  A4					movsb				; Mov [si] to es:[di]
020A:28C9  A0 E2A5				mov	al,data_825		; (020A:E2A5=74h)
020A:28CC  E1 EF				loopz	locloop_312		; Loop if zf=1, cx>0
  
  
020A:28CE			locloop_314:
020A:28CE  20 A7 AFA0				and	data_797[bx],ah		; (020A:AFA0=7Bh)
020A:28D2  E3 E1				jcxz	locloop_311		; Jump if cx=0
  
020A:28D4			locloop_315:
020A:28D4  E2 A8				loop	locloop_304		; Loop if cx > 0
  
020A:28D6  E2 EC		;*		loop	locloop_313		;*Loop if cx > 0
  
020A:28D6  E2 EC				db	0E2h,0ECh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 90

020A:28D8  20 43 4F				and	[bp+di+4Fh],al
020A:28DB  4D					dec	bp
020A:28DC  4D					dec	bp
020A:28DD  41					inc	cx
020A:28DE  4E					dec	si
020A:28DF  44					inc	sp
020A:28E0  2E					db	2Eh
020A:28E1  43					inc	bx
  
020A:28E2			locloop_316:
020A:28E2  4F					dec	di
020A:28E3  4D					dec	bp
020A:28E4  2C 20				sub	al,20h			; ' '
020A:28E6  A7					cmpsw				; Cmp [si] to es:[di]
020A:28E7  A0 A5A2				mov	al,data_764		; (020A:A5A2=0D1h)
020A:28EA  E0 E8				loopnz	locloop_315		; Loop if zf=0, cx>0
  
  
020A:28EC			locloop_317:
020A:28EC  A5					movsw				; Mov [si] to es:[di]
020A:28ED  AD					lodsw				; String [si] to ax
020A:28EE  A8 A5				test	al,0A5h
020A:28F0  20 E0				and	al,ah
020A:28F2  A0 AEA1				mov	al,data_792		; (020A:AEA1=4Fh)
020A:28F5  E2 EB				loop	locloop_316		; Loop if cx > 0
  
020A:28F7			loc_318:
020A:28F7  0D 3B0A				or	ax,3B0Ah
020A:28FA  0D 8F0A				or	ax,8F0Ah
020A:28FD  E0 A5				loopnz	locloop_310		; Loop if zf=0, cx>0
  
020A:28FF  E0 A2				loopnz	locloop_309		; Loop if zf=0, cx>0
  
020A:2901  A0 20AD				mov	al,data_273		; (020A:20AD=20h)
020A:2904  AF					scasw				; Scan es:[di] for ax
020A:2905  E0 AE				loopnz	locloop_311		; Loop if zf=0, cx>0
  
020A:2907  E6 A5				out	0A5h,al			; port 0A5h
020A:2909  E1 E1				loopz	locloop_317		; Loop if zf=1, cx>0
  
020A:290B  20 A2 E0A5				and	[bp+si-1F5Bh],ah
020A:290F  E5 AD				in	ax,0ADh			; port 0ADh
020A:2911  A5					movsw				; Mov [si] to es:[di]
020A:2912  A3 20AE				mov	data_274,ax		; (020A:20AE=2020h)
020A:2915  E3 E0				jcxz	loc_318			; Jump if cx=0
020A:2917  AE					scasb				; Scan es:[di] for al
020A:2918  A2 EFAD				mov	data_866,al		; (020A:EFAD=37h)
020A:291B  2C 20				sub	al,20h			; ' '
020A:291D  AF					scasw				; Scan es:[di] for ax
020A:291E  E0 AE				loopnz	locloop_314		; Loop if zf=0, cx>0
  
020A:2920  A4					movsb				; Mov [si] to es:[di]
020A:2921  AE					scasb				; Scan es:[di] for al
020A:2922  AB					stosw				; Store ax to es:[di]
020A:2923  A6					cmpsb				; Cmp [si] to es:[di]
020A:2924  A5					movsw				; Mov [si] to es:[di]
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 91

020A:2925			locloop_320:
020A:2925  AD					lodsw				; String [si] to ax
020A:2926  A8 A5				test	al,0A5h
020A:2928  20 AD A2A5				and	data_753[di],ch		; (020A:A2A5=42h)
020A:292C  AE					scasb				; Scan es:[di] for al
020A:292D  A7					cmpsw				; Cmp [si] to es:[di]
020A:292E  AC					lodsb				; String [si] to al
020A:292F  AE					scasb				; Scan es:[di] for al
020A:2930  A6					cmpsb				; Cmp [si] to es:[di]
020A:2931  AD					lodsw				; String [si] to ax
020A:2932  AE					scasb				; Scan es:[di] for al
020A:2933  0D 020A				or	ax,20Ah
020A:2936  0D 580A				or	ax,580Ah
020A:2939  0F					pop	cs			; Dangerous 8088 only
020A:293A  01 00				add	[bx+si],ax
020A:293C  87 0C				xchg	cx,[si]
020A:293E  01 00				add	[bx+si],ax
020A:2940  58					pop	ax
020A:2941			loc_321:
020A:2941  0F					pop	cs			; Dangerous 8088 only
020A:2942  01 00				add	[bx+si],ax
020A:2944  00 00				add	[bx+si],al
020A:2946  00 00				add	[bx+si],al
020A:2948  89 01				mov	[bx+di],ax
020A:294A  0E					push	cs
020A:294B  04 17				add	al,17h
020A:294D  8E					db	8Eh
020A:294E  E8 A1A8				call	sub_187			; (CAF9)
020A:2951  AA					stosb				; Store al to es:[di]
020A:2952  A0 A720				mov	al,data_769		; (020A:A720=0)
  
020A:2955			locloop_324:
020A:2955  A0 A8E9				mov	al,byte ptr data_779	; (020A:A8E9=45h)
020A:2958  E2 EB		;*		loop	locloop_322		;*Loop if cx > 0
  
020A:2958  E2 EB				db	0E2h,0EBh
020A:295A  20 AE 20E2				and	[bp+20E2h],ch
020A:295E  A7					cmpsw				; Cmp [si] to es:[di]
020A:295F  A0 A8AF				mov	al,data_777		; (020A:A8AF=80h)
  
020A:2962			locloop_326:
020A:2962  E1 A8		;*		loopz	locloop_319		;*Loop if zf=1, cx>0
  
020A:2962  E1 A8				db	0E1h,0A8h
020A:2964  17					pop	ss
020A:2965  8D A5 E0AF				lea	sp,[di-1F51h]		; Load effective addr
020A:2969  A0 A8A2				mov	al,data_773		; (020A:A8A2=26h)
  
020A:296C			locloop_327:
020A:296C  AB					stosw				; Store ax to es:[di]
020A:296D  EC					in	al,dx			; port 0C0FBh
020A:296E			loc_328:
020A:296E  AD					lodsw				; String [si] to ax
020A:296F  AE					scasb				; Scan es:[di] for al
020A:2970  A5					movsw				; Mov [si] to es:[di]
020A:2971  20 E3				and	bl,ah
020A:2973  E1 E2		;*		loopz	locloop_325		;*Loop if zf=1, cx>0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 92

  
020A:2973  E1 E2				db	0E1h,0E2h
020A:2975  E0 AE				loopnz	locloop_320		; Loop if zf=0, cx>0
  
020A:2977  A9 E2E1				test	ax,0E2E1h
020A:297A  A2 0EAE				mov	byte ptr ds:[0EAEh],al	; (020A:0EAE=1)
020A:297D  8D A5 20E2				lea	sp,[di+20E2h]		; Load effective addr
020A:2981  A3 E2AE				mov	data_826,ax		; (020A:E2AE=2A7Eh)
020A:2984  AE					scasb				; Scan es:[di] for al
020A:2985  A2 AEAD				mov	data_794,al		; (020A:AEAD=40h)
020A:2988  E1 E2				loopz	locloop_327		; Loop if zf=1, cx>0
  
020A:298A  A8 20				test	al,20h			; ' '
020A:298C  8D A5 E0AF				lea	sp,[di-1F51h]		; Load effective addr
020A:2990  A0 A8A2				mov	al,data_773		; (020A:A8A2=26h)
020A:2993  AB					stosw				; Store ax to es:[di]
020A:2994  EC					in	al,dx			; port 0C0FBh
020A:2995  AD					lodsw				; String [si] to ax
020A:2996  EB A9				jmp	short loc_321		; (2941)
020A:2998  20 A7 AFA0				and	data_797[bx],ah		; (020A:AFA0=7Bh)
  
020A:299C			locloop_332:
020A:299C  E0 AE		;*		loopnz	locloop_323		;*Loop if zf=0, cx>0
  
020A:299C  E0 AE				db	0E0h,0AEh
020A:299E  E1 20				loopz	locloop_336		; Loop if zf=1, cx>0
  
020A:29A0  AA					stosb				; Store al to es:[di]
020A:29A1			loc_333:
020A:29A1  20 E3				and	bl,ah
020A:29A3  E1 E2		;*		loopz	locloop_330		;*Loop if zf=1, cx>0
  
020A:29A3  E1 E2				db	0E1h,0E2h
020A:29A5  E0 AE				loopnz	locloop_324		; Loop if zf=0, cx>0
  
020A:29A7  A9 E2E1				test	ax,0E2E1h
020A:29AA  A2 0FE3				mov	data_218,al		; (020A:0FE3=33h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_41		proc	near
020A:29AD  8E					db	8Eh
020A:29AE  E8 A1A8				call	sub_188			; (CB59)
020A:29B1  AA					stosb				; Store al to es:[di]
020A:29B2  A0 A220				mov	al,data_750		; (020A:A220=82h)
020A:29B5  20 A4 ADA0				and	data_790[si],ah		; (020A:ADA0=3Bh)
020A:29B9  AD					lodsw				; String [si] to ax
020A:29BA  EB E5				jmp	short loc_333		; (29A1)
				sub_41		endp
  
020A:29BC  2B 8D AFA5				sub	cx,data_798[di]		; (020A:AFA5=26FFh)
  
020A:29C0			locloop_336:
020A:29C0  E0 A0				loopnz	locloop_326		; Loop if zf=0, cx>0
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 93

020A:29C2  A2 ABA8				mov	data_783,al		; (020A:ABA8=26h)
020A:29C5  EC					in	al,dx			; port 8DB9h
020A:29C6  AD					lodsw				; String [si] to ax
020A:29C7  EB A5				jmp	short loc_328		; (296E)
020A:29C9  20 A0 A3E0				and	data_757[bx+si],ah	; (020A:A3E0=2)
020A:29CD  E3 AC		;*		jcxz	locloop_329		;*Jump if cx=0
020A:29CD  E3 AC				db	0E3h,0ACh
  
020A:29CF			locloop_339:
020A:29CF  A5					movsw				; Mov [si] to es:[di]
020A:29D0  AD					lodsw				; String [si] to ax
  
020A:29D1			locloop_340:
020A:29D1  E2 EB		;*		loop	locloop_335		;*Loop if cx > 0
  
020A:29D1  E2 EB				db	0E2h,0EBh
020A:29D3  20 A7 AFA0				and	data_797[bx],ah		; (020A:AFA0=7Bh)
020A:29D7  E0 AE		;*		loopnz	locloop_330		;*Loop if zf=0, cx>0
  
020A:29D7  E0 AE				db	0E0h,0AEh
020A:29D9  E1 A0		;*		loopz	locloop_329		;*Loop if zf=1, cx>0
  
020A:29D9  E1 A0				db	0E1h,0A0h
020A:29DB  20 AA E320				and	[bp+si-1CE0h],ch
020A:29DF  E1 E2		;*		loopz	locloop_337		;*Loop if zf=1, cx>0
  
020A:29DF  E1 E2				db	0E1h,0E2h
020A:29E1  E0 AE		;*		loopnz	locloop_331		;*Loop if zf=0, cx>0
  
020A:29E1  E0 AE				db	0E0h,0AEh
020A:29E3  A9 E2E1				test	ax,0E2E1h
020A:29E6  A2 0DE3				mov	data_201,al		; (020A:0DE3=0EBh)
020A:29E9  8E					db	8Eh
020A:29EA  E8 A1A8				call	sub_189			; (CB95)
020A:29ED  AA					stosb				; Store al to es:[di]
020A:29EE  A0 AF20				mov	al,data_796		; (020A:AF20=5Eh)
020A:29F1  AE					scasb				; Scan es:[di] for al
020A:29F2  A8 E1				test	al,0E1h
020A:29F4  AA					stosb				; Store al to es:[di]
020A:29F5  A0 8D19				mov	al,data_716		; (020A:8D19=80h)
020A:29F8  A5					movsw				; Mov [si] to es:[di]
020A:29F9  AF					scasw				; Scan es:[di] for ax
020A:29FA  E0 A0				loopnz	locloop_332		; Loop if zf=0, cx>0
  
  
020A:29FC			locloop_341:
020A:29FC  A2 ABA8				mov	data_783,al		; (020A:ABA8=26h)
020A:29FF  EC					in	al,dx			; port 8DB9h
020A:2A00  AD					lodsw				; String [si] to ax
020A:2A01  EB A9		;*		jmp	short loc_334		;*(29AC)
020A:2A01  EB A9				db	0EBh,0A9h
020A:2A03  20 E2				and	dl,ah
020A:2A05  A8 AF				test	al,0AFh
020A:2A07  20 AD E1AE				and	data_824[di],ch		; (020A:E1AE=0D8h)
020A:2A0B  A8 E2				test	al,0E2h
020A:2A0D  A5					movsw				; Mov [si] to es:[di]
020A:2A0E  AB					stosw				; Store ax to es:[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 94

020A:2A0F  EF					out	dx,ax			; port 8D00h
020A:2A10  10 91 AAA5				adc	data_782[bx+di],dl	; (020A:AAA5=21h)
020A:2A14  E2 AE		;*		loop	locloop_338		;*Loop if cx > 0
  
020A:2A14  E2 AE				db	0E2h,0AEh
020A:2A16  20E0			data_359	dw	20E0h
020A:2A18  AD					lodsw				; String [si] to ax
020A:2A19  A5					movsw				; Mov [si] to es:[di]
020A:2A1A  20 AD A9A0				and	data_780[di],ch		; (020A:A9A0=0A8h)
020A:2A1E  A4			data_362	db	0A4h
020A:2A1F  A5			data_363	db	0A5h
020A:2A20  AD					lodsw				; String [si] to ax
020A:2A21  15 2082				adc	ax,2082h
020A:2A24  E0AF			data_365	dw	0E0AFh
020A:2A26  A8			data_366	db	0A8h
020A:2A27  AD					lodsw				; String [si] to ax
020A:2A28  E2 A5				loop	locloop_339		; Loop if cx > 0
  
020A:2A2A  E0 A5				loopnz	locloop_340		; Loop if zf=0, cx>0
  
020A:2A2C  20 AD E2A5				and	data_825[di],ch		; (020A:E2A5=74h)
020A:2A30  20 A1 ACE3				and	data_787[bx+di],ah	; (020A:ACE3=8Bh)
020A:2A34  A0 A8A3				mov	al,data_774		; (020A:A8A3=80h)
020A:2A37  11 8E A8E8				adc	[bp-5718h],cx
020A:2A3B  A1 A0AA				mov	ax,data_745		; (020A:A0AA=0E890h)
020A:2A3E  AF20			data_374	dw	0AF20h
020A:2A40  A8E0			data_375	dw	0A8E0h
020A:2A42  A720			data_376	dw	0A720h
020A:2A44  AFA0			data_377	dw	0AFA0h
020A:2A46  A8 E1				test	al,0E1h
020A:2A48  A8 11				test	al,11h
020A:2A4A  E88E			data_378	dw	0E88Eh
020A:2A4C  A1A8			data_379	dw	0A1A8h
  
020A:2A4E			locloop_347:
020A:2A4E  AA					stosb				; Store al to es:[di]
020A:2A4F  A0 AF20				mov	al,data_796		; (020A:AF20=5Eh)
020A:2A52  E0 A8				loopnz	locloop_341		; Loop if zf=0, cx>0
  
020A:2A54  20 E7				and	bh,ah
020A:2A56  E2 A5		;*		loop	locloop_342		;*Loop if cx > 0
  
020A:2A56  E2 A5				db	0E2h,0A5h
020A:2A58  AD					lodsw				; String [si] to ax
020A:2A59  A8 A8				test	al,0A8h
020A:2A5B  12 8E E9A1				adc	cl,[bp-165Fh]
020A:2A5F  A8 A9				test	al,0A9h
020A:2A61  20 E1				and	cl,ah
020A:2A63  AEA1			data_383	dw	0AEA1h
020A:2A65  20A9			data_384	dw	20A9h
020A:2A67  A8E1			data_385	dw	0A8E1h
  
020A:2A69			locloop_349:
020A:2A69  E2E1			data_386	dw	0E2E1h
020A:2A6B  ACA5			data_387	dw	0ACA5h
020A:2A6D  24EB			data_388	dw	24EBh
020A:2A6F  8D A0 E3E0				lea	sp,[bx+si-1C20h]	; Load effective addr
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 95

020A:2A73  E8 ADA5				call	sub_204			; (D81B)
020A:2A76  A8			data_390	db	0A8h
020A:2A77  A5			data_391	db	0A5h
020A:2A78  20			data_392	db	20h
020A:2A79			loc_351:
020A:2A79  E0			data_393	db	0E0h
020A:2A7A  A5			data_394	db	0A5h
  
020A:2A7B			locloop_352:
020A:2A7B  A6					cmpsb				; Cmp [si] to es:[di]
020A:2A7C  A8			data_395	db	0A8h
020A:2A7D  AC			data_396	db	0ACh
020A:2A7E  A0			data_397	db	0A0h
020A:2A7F  20			data_398	db	20h
020A:2A80  E1			data_399	db	0E1h
020A:2A81  AE					scasb				; Scan es:[di] for al
020A:2A82  ACA2			data_400	dw	0ACA2h
020A:2A84  E1A5			data_401	dw	0E1A5h
020A:2A86  E2 AD				loop	$-51h			; Loop if cx > 0
  
020A:2A88  AE					scasb				; Scan es:[di] for al
020A:2A89  A3 20AE				mov	data_274,ax		; (020A:20AE=2020h)
020A:2A8C  A4					movsb				; Mov [si] to es:[di]
020A:2A8D  AE					scasb				; Scan es:[di] for al
020A:2A8E  E1 E2		;*		loopz	locloop_350		;*Loop if zf=1, cx>0
  
020A:2A8E  E1 E2				db	0E1h,0E2h
020A:2A90  E3 AF		;*		jcxz	loc_346			;*Jump if cx=0
020A:2A90  E3 AF				db	0E3h,0AFh
020A:2A92  A0 8D14				mov	al,data_715		; (020A:8D14=0Ah)
020A:2A95  A0 E3E0				mov	al,data_827		; (020A:E3E0=3Eh)
020A:2A98  E8 ADA5				call	sub_205			; (D840)
020A:2A9B  A8 A5				test	al,0A5h
020A:2A9D  20 A1 AEAB				and	byte ptr data_793[bx+di],ah	; (020A:AEAB=26h)
020A:2AA1  AA					stosb				; Store al to es:[di]
020A:2AA2  A8 E0				test	al,0E0h
020A:2AA4  AE					scasb				; Scan es:[di] for al
020A:2AA5  A2 A8AA				mov	data_775,al		; (020A:A8AA=26h)
020A:2AA8  18 8D AFA5				sbb	byte ptr data_798[di],cl	; (020A:AFA5=0FFh)
020A:2AAC  E0 A0				loopnz	locloop_347		; Loop if zf=0, cx>0
  
020A:2AAE  A2 ABA8				mov	data_783,al		; (020A:ABA8=26h)
020A:2AB1  EC					in	al,dx			; port 8D00h
  
020A:2AB2			locloop_358:
020A:2AB2  AD					lodsw				; String [si] to ax
020A:2AB3  A0 20EF				mov	al,data_278		; (020A:20EF=0A0h)
  
020A:2AB6			locloop_359:
020A:2AB6  E1 AC		;*		loopz	locloop_348		;*Loop if zf=1, cx>0
  
020A:2AB6  E1 AC				db	0E1h,0ACh
020A:2AB8  A5					movsw				; Mov [si] to es:[di]
020A:2AB9  AD					lodsw				; String [si] to ax
020A:2ABA  A0 A420				mov	al,data_758		; (020A:A420=2)
020A:2ABD  A8 E1				test	al,0E1h
020A:2ABF  AA					stosb				; Store al to es:[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 96

020A:2AC0  A0 8D27				mov	al,data_717		; (020A:8D27=0FEh)
020A:2AC3  A5					movsw				; Mov [si] to es:[di]
020A:2AC4  A4					movsb				; Mov [si] to es:[di]
020A:2AC5  AE					scasb				; Scan es:[di] for al
020A:2AC6  E1 E2		;*		loopz	locloop_355		;*Loop if zf=1, cx>0
  
020A:2AC6  E1 E2				db	0E1h,0E2h
020A:2AC8  E3 AF				jcxz	loc_351			; Jump if cx=0
020A:2ACA  A5					movsw				; Mov [si] to es:[di]
020A:2ACB  AD					lodsw				; String [si] to ax
020A:2ACC  20 46 43				and	[bp+43h],al
020A:2ACF  42					inc	dx
020A:2AD0  20 28				and	[bx+si],ch
020A:2AD2  A1 AEAB				mov	ax,data_793		; (020A:AEAB=8B26h)
020A:2AD5  AA					stosb				; Store al to es:[di]
020A:2AD6  20 E3				and	bl,ah
  
020A:2AD8			locloop_361:
020A:2AD8  AF					scasw				; Scan es:[di] for ax
020A:2AD9  E0 A0				loopnz	locloop_352		; Loop if zf=0, cx>0
  
020A:2ADB  A2 A5AB				mov	data_765,al		; (020A:A5AB=0C3h)
020A:2ADE  AD					lodsw				; String [si] to ax
020A:2ADF  A8 EF				test	al,0EFh
020A:2AE1  20 E4				and	ah,ah
020A:2AE3  A0 ABA9				mov	al,data_784		; (020A:ABA9=8Ah)
020A:2AE6  AE					scasb				; Scan es:[di] for al
020A:2AE7  AC					lodsb				; String [si] to al
020A:2AE8  29 19				sub	[bx+di],bx
020A:2AEA  90					nop
020A:2AEB  A5					movsw				; Mov [si] to es:[di]
020A:2AEC  E1 E3		;*		loopz	locloop_360		;*Loop if zf=1, cx>0
  
020A:2AEC  E1 E3				db	0E1h,0E3h
020A:2AEE  E0 E1		;*		loopnz	locloop_360		;*Loop if zf=0, cx>0
  
020A:2AEE  E0 E1				db	0E0h,0E1h
020A:2AF0  EB 20				jmp	short loc_366		; (2B12)
020A:2AF2  E1 A8		;*		loopz	locloop_354		;*Loop if zf=1, cx>0
  
020A:2AF2  E1 A8				db	0E1h,0A8h
020A:2AF4  E1 E2				loopz	locloop_361		; Loop if zf=1, cx>0
  
020A:2AF6  A5					movsw				; Mov [si] to es:[di]
020A:2AF7  AC					lodsb				; String [si] to al
020A:2AF8  EB 20				jmp	short loc_367		; (2B1A)
020A:2AFA  A8 E1				test	al,0E1h
020A:2AFC  E7 A5				out	0A5h,ax			; port 0A5h
  
020A:2AFE			locloop_364:
020A:2AFE  E0 AF		;*		loopnz	locloop_357		;*Loop if zf=0, cx>0
  
020A:2AFE  E0 AF				db	0E0h,0AFh
020A:2B00  A0 EBAD				mov	al,data_862		; (020A:EBAD=2Eh)
020A:2B03  8D1E			data_405	dw	8D1Eh			; Data table (indexed access)
020A:2B05  A5					movsw				; Mov [si] to es:[di]
020A:2B06  E1 AE				loopz	locloop_359		; Loop if zf=1, cx>0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 97

  
020A:2B08  AE					scasb				; Scan es:[di] for al
020A:2B09  E2 A2		;*		loop	locloop_356		;*Loop if cx > 0
  
020A:2B09  E2 A2				db	0E2h,0A2h
  
020A:2B0B			locloop_365:
020A:2B0B  A5					movsw				; Mov [si] to es:[di]
020A:2B0C  E2 E1		;*		loop	locloop_362		;*Loop if cx > 0
  
020A:2B0C  E2 E1				db	0E2h,0E1h
020A:2B0E  E2 A2				loop	locloop_358		; Loop if cx > 0
  
020A:2B10  A8 A5				test	al,0A5h
020A:2B12			loc_366:
020A:2B12  20 AA A4AE				and	[bp+si-5B52h],ch
020A:2B16  AE					scasb				; Scan es:[di] for al
020A:2B17  A2 E5EB				mov	data_829,al		; (020A:E5EB=0F7h)
020A:2B1A			loc_367:
020A:2B1A  20 E1				and	cl,ah
020A:2B1C  E2 E0				loop	locloop_364		; Loop if cx > 0
  
020A:2B1E			loc_368:
020A:2B1E  A0 A8AD				mov	al,data_776		; (020A:A8AD=0F1h)
020A:2B21  E6 1D				out	1Dh,al			; port 1Dh
020A:2B23  8D A5 AEA4				lea	sp,[di-515Ch]		; Load effective addr
020A:2B27  E1 E2				loopz	locloop_365		; Loop if zf=1, cx>0
  
  
020A:2B29			locloop_370:
020A:2B29  A0 AEE2				mov	al,data_795		; (020A:AEE2=6)
020A:2B2C  E7 AD				out	0ADh,ax			; port 0ADh
020A:2B2E  AE					scasb				; Scan es:[di] for al
020A:2B2F  20 A2 A5A2				and	[bp+si-5A5Eh],ah
020A:2B33  A4					movsb				; Mov [si] to es:[di]
020A:2B34  A5					movsw				; Mov [si] to es:[di]
020A:2B35  AD					lodsw				; String [si] to ax
020A:2B36  AD					lodsw				; String [si] to ax
020A:2B37  EB E5				jmp	short loc_368		; (2B1E)
020A:2B39  20 A4 ADA0				and	data_790[si],ah		; (020A:ADA0=3Bh)
020A:2B3D  AD					lodsw				; String [si] to ax
020A:2B3E  EB E5		;*		jmp	short loc_369		;*(2B25)
020A:2B3E  EB E5				db	0EBh,0E5h
020A:2B40  1B 8D A4A5				sbb	cx,data_761[di]		; (020A:A4A5=0FA80h)
020A:2B44  AE					scasb				; Scan es:[di] for al
020A:2B45  E1 E2				loopz	locloop_370		; Loop if zf=1, cx>0
  
020A:2B47  A0 AEE2				mov	al,data_795		; (020A:AEE2=6)
020A:2B4A  E7 AD				out	0ADh,ax			; port 0ADh
020A:2B4C  AE					scasb				; Scan es:[di] for al
020A:2B4D  20 AC E1A5				and	data_823[si],ch		; (020A:E1A5=0EBh)
020A:2B51  E2 A0		;*		loop	locloop_363		;*Loop if cx > 0
  
020A:2B51  E2 A0				db	0E2h,0A0h
020A:2B53  20 AD 20A0				and	data_271[di],ch		; (020A:20A0=20h)
020A:2B57  A4					movsb				; Mov [si] to es:[di]
020A:2B58  A8 E1				test	al,0E1h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 98

020A:2B5A  AA					stosb				; Store al to es:[di]
020A:2B5B  A5					movsw				; Mov [si] to es:[di]
020A:2B5C  0C 09				or	al,9
020A:2B5E  24 09				and	al,9
020A:2B60  3C 09				cmp	al,9
020A:2B62  4B					dec	bx
020A:2B63  09 6C 09				or	[si+9],bp
020A:2B66  7C 09				jl	loc_371			; Jump if <
020A:2B68  A8 09				test	al,9
020A:2B6A  B6 09				mov	dh,9
020A:2B6C  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2B6E  E1 09				loopz	locloop_372		; Loop if zf=1, cx>0
  
020A:2B70  F7					db	0F7h
020A:2B71			loc_371:
020A:2B71  09 09				or	[bx+di],cx
020A:2B73  0A 1B				or	bl,[bp+di]
020A:2B75  0A 2E 530A				or	ch,data_681		; (020A:530A=3)
  
020A:2B79			locloop_372:
020A:2B79  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2B7C  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2B80  C3					retn
020A:2B81  0A E2				or	ah,dl
020A:2B83  0A 00				or	al,[bx+si]
020A:2B85  0B 18				or	bx,[bx+si]
020A:2B87  91					xchg	ax,cx
020A:2B88  AB					stosw				; Store ax to es:[di]
020A:2B89  A8 E8				test	al,0E8h
020A:2B8B  AA					stosb				; Store al to es:[di]
020A:2B8C  AE					scasb				; Scan es:[di] for al
020A:2B8D  AC					lodsb				; String [si] to al
020A:2B8E  20 AC 004D				and	[si+4Dh],ch
020A:2B92  00 07				add	[bx],al
020A:2B94  00 AF E0A0				add	data_819[bx],ch		; (020A:E0A0=0B1h)
020A:2B98  A0 A5AC				mov	al,data_766		; (020A:A5AC=26h)
020A:2B9B  E2 E0		;*		loop	locloop_373		;*Loop if cx > 0
  
020A:2B9B  E2 E0				db	0E2h,0E0h
020A:2B9D  AE					scasb				; Scan es:[di] for al
020A:2B9E  A2 0021				mov	byte ptr data_81+3,al	; (020A:0021=0A3h)
020A:2BA1  01 00				add	[bx+si],ax
  
020A:2BA3			locloop_374:
020A:2BA3  00 00				add	[bx+si],al
020A:2BA5  00 00				add	[bx+si],al
020A:2BA7  00 C4				add	ah,al
020A:2BA9  000C			data_406	dw	0Ch
020A:2BAB  FF00			data_407	dw	0FF00h
020A:2BAD  FF FF FF FF FF			db	0FFh,0FFh,0FFh,0FFh,0FFh
020A:2BB2  FF			data_409	db	0FFh
020A:2BB3  FF					db	0FFh
020A:2BB4  FF					db	0FFh
020A:2BB5  FF					db	0FFh
020A:2BB6  FF					db	0FFh
020A:2BB7  FF					db	0FFh
020A:2BB8  FF					db	0FFh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 99

020A:2BB9  FF					db	0FFh
020A:2BBA  FF					db	0FFh
020A:2BBB  FF					db	0FFh
020A:2BBC  FF					db	0FFh
020A:2BBD  FF					db	0FFh
020A:2BBE  FF					db	0FFh
020A:2BBF  FF 43 3A				inc	word ptr [bp+di+3Ah]
020A:2BC2  5C					pop	sp
020A:2BC3  57					push	di
020A:2BC4  49					dec	cx
020A:2BC5  4E					dec	si
020A:2BC6  44					inc	sp
020A:2BC7  4F					dec	di
020A:2BC8  57					push	di
020A:2BC9  53					push	bx
020A:2BCA  5C					pop	sp
020A:2BCB  54					push	sp
020A:2BCC  45					inc	bp
020A:2BCD  4D					dec	bp
020A:2BCE  50					push	ax
020A:2BCF  5C					pop	sp
020A:2BD0  73 63				jnc	loc_379			; Jump if carry=0
020A:2BD2  73 34				jnc	loc_378			; Jump if carry=0
020A:2BD4  2E					db	2Eh
020A:2BD5  74 6D				jz	loc_381			; Jump if zero
020A:2BD7  70 00				jo	loc_375			; Jump if overflow=1
020A:2BD9			loc_375:
020A:2BD9  001A[00]				db	26 dup (0)
020A:2BF3  00			data_411	db	0
020A:2BF4  00 00				add	[bx+si],al
020A:2BF6  00			data_413	db	0
020A:2BF7  00 00				add	[bx+si],al
020A:2BF9  00 00				add	[bx+si],al
020A:2BFB  00 00				add	[bx+si],al
020A:2BFD  00 00				add	[bx+si],al
020A:2BFF  00 00				add	[bx+si],al
020A:2C01  E0 A0				loopnz	locloop_374		; Loop if zf=0, cx>0
  
020A:2C03  AC					lodsb				; String [si] to al
020A:2C04  A5					movsw				; Mov [si] to es:[di]
020A:2C05  E2 E0		;*		loop	locloop_376		;*Loop if cx > 0
  
020A:2C05  E2 E0				db	0E2h,0E0h
020A:2C07  A0 A220				mov	al,data_750		; (020A:A220=82h)
020A:2C0A  EB E5		;*		jmp	short loc_377		;*(2BF1)
020A:2C0A  EB E5				db	0EBh,0E5h
020A:2C0C  AE					scasb				; Scan es:[di] for al
020A:2C0D  A4					movsb				; Mov [si] to es:[di]
020A:2C0E  A8 E2				test	al,0E2h
020A:2C10  4D					dec	bp
020A:2C11  0E					push	cs
020A:2C12  04 43				add	al,43h			; 'C'
020A:2C14  00 E0				add	al,ah
020A:2C16  A5					movsw				; Mov [si] to es:[di]
020A:2C17  A4					movsb				; Mov [si] to es:[di]
020A:2C18  A5					movsw				; Mov [si] to es:[di]
020A:2C19  AB					stosw				; Store ax to es:[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 100

020A:2C1A  EB 20				jmp	short loc_380		; (2C3C)
020A:2C1C  A4					movsb				; Mov [si] to es:[di]
020A:2C1D  AE					scasb				; Scan es:[di] for al
020A:2C1E  AF					scasw				; Scan es:[di] for ax
020A:2C1F  E3 43				jcxz	loc_382			; Jump if cx=0
020A:2C21  4F					dec	di
020A:2C22  4D					dec	bp
020A:2C23  53					push	bx
020A:2C24  50					push	ax
020A:2C25  45					inc	bp
020A:2C26  43					inc	bx
020A:2C27  3D 3A43				cmp	ax,3A43h
020A:2C2A  5C					pop	sp
020A:2C2B  57					push	di
020A:2C2C  49					dec	cx
020A:2C2D  4E					dec	si
020A:2C2E  44					inc	sp
020A:2C2F  4F					dec	di
020A:2C30  57					push	di
020A:2C31  53					push	bx
020A:2C32  5C					pop	sp
020A:2C33  53					push	bx
020A:2C34  59					pop	cx
020A:2C35			loc_379:
020A:2C35  53					push	bx
020A:2C36  54					push	sp
020A:2C37  45					inc	bp
020A:2C38  4D					dec	bp
020A:2C39  33 32				xor	si,[bp+si]
020A:2C3B  5C					pop	sp
020A:2C3C			loc_380:
020A:2C3C  4F43			data_414	dw	4F43h
020A:2C3E  4D			data_415	db	4Dh
020A:2C3F  4D			data_416	db	4Dh
020A:2C40  41 4E 44 2E 43 4F	data_417	db	'AND.COM', 0
020A:2C46  4D 00
020A:2C48  41					inc	cx
020A:2C49  4C					dec	sp
020A:2C4A  4C					dec	sp
020A:2C4B  55					push	bp
020A:2C4C  53					push	bx
020A:2C4D  45					inc	bp
020A:2C4E  52					push	dx
020A:2C4F  53					push	bx
020A:2C50  50					push	ax
020A:2C51  52					push	dx
020A:2C52  4F					dec	di
020A:2C53  46					inc	si
020A:2C54  49					dec	cx
020A:2C55  4C					dec	sp
020A:2C56  45					inc	bp
020A:2C57  3D 3A43				cmp	ax,3A43h
020A:2C5A  5C					pop	sp
020A:2C5B  44					inc	sp
020A:2C5C  4F					dec	di
020A:2C5D  43					inc	bx
020A:2C5E  55					push	bp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 101

020A:2C5F  4D					dec	bp
020A:2C60  45					inc	bp
020A:2C61  7E 31				jle	loc_383			; Jump if < or =
020A:2C63  5C					pop	sp
020A:2C64			loc_382:
020A:2C64  41 4C 4C 55 53 45			db	'ALLUSE~1', 0
020A:2C6A  7E 31 00
020A:2C6D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\CDC2~1\APPLI'
020A:2C73  41 3D 43 3A 5C 44
020A:2C79  4F 43 55 4D 45 7E
020A:2C7F  31 5C 43 44 43 32
020A:2C85  7E 31 5C 41 50 50
020A:2C8B  4C 49
020A:2C8D  43 7E 31 00				db	'C~1', 0
020A:2C91  43 4C 49				db	'CLI'
020A:2C94			loc_383:
020A:2C94  45 4E 54 4E 41 4D	data_419	db	'ENTNAME=Console', 0
020A:2C9A  45 3D 43 6F 6E 73
020A:2CA0  6F 6C 65 00
020A:2CA4  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020A:2CAA  50 52 4F 47 52 41
020A:2CB0  4D 46 49 4C 45 53
020A:2CB6  3D 43 3A 5C 50 52
020A:2CBC  4F 47 52 41 7E 31
020A:2CC2  5C 43
020A:2CC4  4F 4D 4D 4F 4E 7E			db	'OMMON~1', 0
020A:2CCA  31 00
020A:2CCC  43 4F 4D 50 55 54			db	'COMPUTERNAME=WINDOWS-XP', 0
020A:2CD2  45 52 4E 41 4D 45
020A:2CD8  3D 57 49 4E 44 4F
020A:2CDE  57 53 2D 58 50 00
020A:2CE4  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020A:2CEA  48 4F 53 54 5F 43
020A:2CF0  48 45 43 4B 3D 4E
020A:2CF6  4F 00
020A:2CF8  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020A:2CFE  49 56 45 3D 43 3A
020A:2D04  00
020A:2D05  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020A:2D0B  54 48 3D 5C 44 6F
020A:2D11  63 75 6D 65 6E 74
020A:2D17  73 20 61 6E 64 20
020A:2D1D  53 65 74 74 69 6E
020A:2D23  67 73
020A:2D25  5C 27 5F				db	'\', 27h, '_'
020A:2D28  A0 5F5F				mov	al,data_688		; (020A:5F5F=0A3h)
020A:2D2B  63					db	63h
020A:2D2C  20 5F F0				and	[bx-10h],bl
020A:2D2F  A0 A7F0				mov	al,data_771		; (020A:A7F0=5Fh)
020A:2D32  5F					pop	di
020A:2D33  2D 52F2				sub	ax,52F2h
020A:2D36  00 4C 4F				add	[si+4Fh],cl
020A:2D39  47 4F 4E 53 45 52			db	'GONSERVER=\\WINDOWS-XP', 0
020A:2D3F  56 45 52 3D 5C 5C
020A:2D45  57 49 4E 44 4F 57
020A:2D4B  53 2D 58 50 00
020A:2D50  4E 55 4D 42 45 52			db	'NUMBER_OF'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 102

020A:2D56  5F 4F 46
020A:2D59  505F			data_422	dw	505Fh
020A:2D5B  52					push	dx
020A:2D5C  4F					dec	di
020A:2D5D  43					inc	bx
020A:2D5E  45					inc	bp
020A:2D5F  53					push	bx
020A:2D60  53					push	bx
020A:2D61  4F					dec	di
020A:2D62  52					push	dx
020A:2D63  53					push	bx
020A:2D64  3D 0031				cmp	ax,31h
020A:2D67  4F					dec	di
020A:2D68  53					push	bx
020A:2D69  3D 6957				cmp	ax,6957h
020A:2D6C  6E					db	6Eh
020A:2D6D  64					db	64h
020A:2D6E  6F					db	6Fh
020A:2D6F  77 73				ja	$+75h			; Jump if above
020A:2D71  5F					pop	di
020A:2D72  4E					dec	si
020A:2D73  54					push	sp
020A:2D74  00 50 41				add	[bx+si+41h],dl
020A:2D77  54					push	sp
020A:2D78  48					dec	ax
020A:2D79  3D 3A43				cmp	ax,3A43h
020A:2D7C  5C					pop	sp
020A:2D7D  57					push	di
020A:2D7E  49					dec	cx
020A:2D7F  4E					dec	si
020A:2D80  44					inc	sp
020A:2D81  4F					dec	di
020A:2D82  5357			data_423	dw	5357h
020A:2D84  735C			data_424	dw	735Ch
020A:2D86  7379			data_425	dw	7379h
020A:2D88  6574			data_426	dw	6574h
020A:2D8A  336D			data_427	dw	336Dh
020A:2D8C  32			data_428	db	32h
020A:2D8D  3B			data_429	db	3Bh
020A:2D8E  43					inc	bx
020A:2D8F  3A			data_430	db	3Ah
020A:2D90  5C			data_431	db	5Ch
020A:2D91  4957			data_432	dw	4957h
020A:2D93  4E					dec	si
020A:2D94  4F44			data_433	dw	4F44h
020A:2D96  5357			data_434	dw	5357h
020A:2D98  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2D9B  5C					pop	sp
020A:2D9C  57					push	di
020A:2D9D  49					dec	cx
020A:2D9E  4E					dec	si
020A:2D9F  44					inc	sp
020A:2DA0  4F					dec	di
020A:2DA1  57					push	di
020A:2DA2  53					push	bx
020A:2DA3  5C					pop	sp
020A:2DA4  53					push	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 103

020A:2DA5  79 73				jns	$+75h			; Jump if not sign
020A:2DA7  74 65				jz	$+67h			; Jump if zero
020A:2DA9  6D					db	6Dh
020A:2DAA  33 32				xor	si,[bp+si]
020A:2DAC  5C					pop	sp
020A:2DAD  57					push	di
020A:2DAE  62					db	62h
020A:2DAF  65					db	65h
020A:2DB0  006D			data_435	dw	6Dh
020A:2DB2  4150			data_436	dw	4150h
020A:2DB4  54					push	sp
020A:2DB5  48					dec	ax
020A:2DB6  5845			data_437	dw	5845h
020A:2DB8  54					push	sp
020A:2DB9  3D 432E				cmp	ax,432Eh
020A:2DBC  4F 4D 3B 2E 45 58	data_439	db	'OM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;'
020A:2DC2  45 3B 2E 42 41 54
020A:2DC8  3B 2E 43 4D 44 3B
020A:2DCE  2E 56 42 53 3B 2E
020A:2DD4  56 42 45 3B 2E 4A
020A:2DDA  53 3B
020A:2DDC  2E					db	2Eh
020A:2DDD  4A					dec	dx
020A:2DDE  53					push	bx
020A:2DDF  45					inc	bp
020A:2DE0  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=22B9h)
020A:2DE4  46					inc	si
020A:2DE5  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=22B9h)
020A:2DE9  48					dec	ax
020A:2DEA  00 50 52				add	[bx+si+52h],dl
020A:2DED  4F					dec	di
020A:2DEE  43					inc	bx
020A:2DEF  45					inc	bp
020A:2DF0  53					push	bx
020A:2DF1  53					push	bx
020A:2DF2  4F					dec	di
020A:2DF3  52					push	dx
020A:2DF4  5F					pop	di
020A:2DF5  41					inc	cx
020A:2DF6  52					push	dx
020A:2DF7  43					inc	bx
020A:2DF8  48					dec	ax
020A:2DF9  49					dec	cx
020A:2DFA  54					push	sp
020A:2DFB  45					inc	bp
020A:2DFC  43					inc	bx
020A:2DFD  54					push	sp
020A:2DFE  55					push	bp
020A:2DFF  52					push	dx
020A:2E00  45					inc	bp
020A:2E01  3D 3878				cmp	ax,3878h
020A:2E04  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:2E08  4F					dec	di
020A:2E09  43					inc	bx
020A:2E0A  45					inc	bp
020A:2E0B  53					push	bx
020A:2E0C  53					push	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 104

020A:2E0D  4F					dec	di
020A:2E0E  52					push	dx
020A:2E0F  5F					pop	di
020A:2E10  49					dec	cx
020A:2E11  44					inc	sp
020A:2E12  45					inc	bp
020A:2E13  4E					dec	si
020A:2E14  54					push	sp
020A:2E15  49					dec	cx
020A:2E16  46					inc	si
020A:2E17  49					dec	cx
020A:2E18  45					inc	bp
020A:2E19  52					push	dx
020A:2E1A  3D 3878				cmp	ax,3878h
020A:2E1D  36					db	36h
020A:2E1E  20 46 61				and	[bp+61h],al
020A:2E21  6D					db	6Dh
020A:2E22  69					db	69h
020A:2E23  6C					db	6Ch
020A:2E24  79 20				jns	$+22h			; Jump if not sign
020A:2E26  32 33				xor	dh,[bp+di]
020A:2E28  20 4D 6F				and	[di+6Fh],cl
020A:2E2B  64					db	64h
020A:2E2C  65					db	65h
020A:2E2D  6C					db	6Ch
020A:2E2E  20 32				and	[bp+si],dh
020A:2E30  34 20				xor	al,20h			; ' '
020A:2E32  53					push	bx
020A:2E33  74 65				jz	$+67h			; Jump if zero
020A:2E35  70 70				jo	$+72h			; Jump if overflow=1
020A:2E37  69					db	69h
020A:2E38  6E					db	6Eh
020A:2E39  67					db	67h
020A:2E3A  20 31				and	[bx+di],dh
020A:2E3C  2C 20				sub	al,20h			; ' '
020A:2E3E  41					inc	cx
020A:2E3F  75 74				jnz	$+76h			; Jump if not zero
020A:2E41  68					db	68h
020A:2E42  65					db	65h
020A:2E43  6E					db	6Eh
020A:2E44  74 69				jz	$+6Bh			; Jump if zero
020A:2E46  63					db	63h
020A:2E47  41					inc	cx
020A:2E48  4D					dec	bp
020A:2E49  44					inc	sp
020A:2E4A  00 50 52				add	[bx+si+52h],dl
020A:2E4D  4F					dec	di
020A:2E4E  43					inc	bx
020A:2E4F  45					inc	bp
020A:2E50  53					push	bx
020A:2E51  53					push	bx
020A:2E52  4F					dec	di
020A:2E53  52					push	dx
020A:2E54  5F					pop	di
020A:2E55  4C					dec	sp
020A:2E56  45					inc	bp
020A:2E57  56					push	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 105

020A:2E58  45					inc	bp
020A:2E59  4C					dec	sp
020A:2E5A  3D 3332				cmp	ax,3332h
020A:2E5D  00 50 52				add	[bx+si+52h],dl
020A:2E60  4F					dec	di
020A:2E61  43					inc	bx
020A:2E62  45					inc	bp
020A:2E63  53					push	bx
020A:2E64  53					push	bx
020A:2E65  4F					dec	di
020A:2E66  52					push	dx
020A:2E67  5F					pop	di
020A:2E68  52					push	dx
020A:2E69  45					inc	bp
020A:2E6A  56					push	si
020A:2E6B  49					dec	cx
020A:2E6C  53					push	bx
020A:2E6D  49					dec	cx
020A:2E6E  4F					dec	di
020A:2E6F  4E					dec	si
020A:2E70  3D 3831				cmp	ax,3831h
020A:2E73  30 31				xor	[bx+di],dh
020A:2E75  00 50 52				add	[bx+si+52h],dl
020A:2E78  4F					dec	di
020A:2E79  47					inc	di
020A:2E7A  52					push	dx
020A:2E7B  41					inc	cx
020A:2E7C  4D					dec	bp
020A:2E7D  46					inc	si
020A:2E7E  49 4C 45 53 3D 43	data_440	db	'ILES=C:\PROGRA~1', 0
020A:2E84  3A 5C 50 52 4F 47
020A:2E8A  52 41 7E 31 00
020A:2E8F  50					push	ax
020A:2E90  52					push	dx
020A:2E91  4F					dec	di
020A:2E92  4D					dec	bp
020A:2E93  50					push	ax
020A:2E94  54					push	sp
020A:2E95  3D 5024				cmp	ax,5024h
020A:2E98  24 47				and	al,47h			; 'G'
020A:2E9A  00 53 45				add	[bp+di+45h],dl
020A:2E9D  53					push	bx
020A:2E9E  53					push	bx
020A:2E9F  49					dec	cx
020A:2EA0  4F					dec	di
020A:2EA1  4E					dec	si
020A:2EA2  4E					dec	si
020A:2EA3  41					inc	cx
020A:2EA4  4D					dec	bp
020A:2EA5  45					inc	bp
020A:2EA6  3D 6F43				cmp	ax,6F43h
020A:2EA9  6E					db	6Eh
020A:2EAA  73 6F				jnc	$+71h			; Jump if carry=0
020A:2EAC  6C					db	6Ch
020A:2EAD  65					db	65h
020A:2EAE  00 53 59				add	[bp+di+59h],dl
020A:2EB1  53			data_441	db	53h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 106

020A:2EB2  54			data_442	db	54h
020A:2EB3  4D45			data_443	dw	4D45h
020A:2EB5  5244			data_444	dw	5244h
020A:2EB7  49			data_445	db	49h
020A:2EB8  56			data_446	db	56h
020A:2EB9  45					inc	bp
020A:2EBA  3D			data_447	db	3Dh
020A:2EBB  43			data_448	db	43h
020A:2EBC  3A			data_449	db	3Ah
020A:2EBD  00			data_450	db	0
020A:2EBE  53					push	bx
020A:2EBF  59			data_451	db	59h
020A:2EC0  53					push	bx
020A:2EC1  54					push	sp
020A:2EC2  45					inc	bp
020A:2EC3  4D					dec	bp
020A:2EC4  4F52			data_452	dw	4F52h
020A:2EC6  544F			data_453	dw	544Fh
020A:2EC8  3D 3A43				cmp	ax,3A43h
020A:2ECB  5C					pop	sp
020A:2ECC  57			data_455	db	57h
020A:2ECD  4E49			data_456	dw	4E49h
020A:2ECF  44			data_457	db	44h
020A:2ED0  574F			data_458	dw	574Fh
020A:2ED2  0053			data_460	dw	53h
020A:2ED4  4554			data_462	dw	4554h
020A:2ED6  4D					dec	bp
020A:2ED7  50					push	ax
020A:2ED8  433D			data_463	dw	433Dh
020A:2EDA  3A 5C 57				cmp	bl,[si+57h]
020A:2EDD  49					dec	cx
020A:2EDE  4E					dec	si
020A:2EDF  44					inc	sp
020A:2EE0  574F			data_464	dw	574Fh
020A:2EE2  53					push	bx
020A:2EE3  5C					pop	sp
020A:2EE4  4554			data_465	dw	4554h
020A:2EE6  4D					dec	bp
020A:2EE7  50					push	ax
020A:2EE8  5400			data_466	dw	5400h
020A:2EEA  4D					dec	bp
020A:2EEB  50					push	ax
020A:2EEC  3D 3A43				cmp	ax,3A43h
020A:2EEF  5C					pop	sp
020A:2EF0  4957			data_467	dw	4957h
020A:2EF2  444E			data_468	dw	444Eh
020A:2EF4  574F			data_469	dw	574Fh
020A:2EF6  5C53			data_470	dw	5C53h
020A:2EF8  4554			data_471	dw	4554h
020A:2EFA  504D			data_472	dw	504Dh
020A:2EFC  00 55 53				add	[di+53h],dl
020A:2EFF  45					inc	bp
020A:2F00  52					push	dx
020A:2F01  44			data_473	db	44h
020A:2F02  4F					dec	di
020A:2F03  4D					dec	bp
020A:2F04  41			data_474	db	41h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 107

020A:2F05  49			data_475	db	49h
020A:2F06  4E			data_476	db	4Eh
020A:2F07  3D 4957				cmp	ax,4957h
020A:2F0A  4E					dec	si
020A:2F0B  44					inc	sp
020A:2F0C  4F					dec	di
020A:2F0D  57					push	di
020A:2F0E  53					push	bx
020A:2F0F  2D 5058				sub	ax,5058h
020A:2F12  00 55 53				add	[di+53h],dl
020A:2F15  45					inc	bp
020A:2F16  52					push	dx
020A:2F17  4E					dec	si
020A:2F18  41					inc	cx
020A:2F19  4D					dec	bp
020A:2F1A  45					inc	bp
020A:2F1B  3D 5F27				cmp	ax,5F27h
020A:2F1E  A0 5F5F				mov	al,data_688		; (020A:5F5F=0A3h)
020A:2F21			loc_385:
020A:2F21  63					db	63h
020A:2F22  20 5F F0				and	[bx-10h],bl
020A:2F25  A0 A7F0				mov	al,data_771		; (020A:A7F0=5Fh)
020A:2F28  5F					pop	di
020A:2F29  2D 52F2				sub	ax,52F2h
020A:2F2C  00 55 53				add	[di+53h],dl
020A:2F2F  45 52 50 52 4F 46			db	'ERPROFILE=C:\DOCUME~1\CDC2~1', 0
020A:2F35  49 4C 45 3D 43 3A
020A:2F3B  5C 44 4F 43 55 4D
020A:2F41  45 7E 31 5C 43 44
020A:2F47  43 32 7E 31 00
020A:2F4C  42 4C 41 53 54 45			db	'BLASTER=A220 I5 D1 P330 T3'
020A:2F52  52 3D 41 32 32 30
020A:2F58  20 49 35 20 44 31
020A:2F5E  20 50 33 33 30 20
020A:2F64  54 33
020A:2F66  00 00				add	[bx+si],al
020A:2F68  20 E1				and	cl,ah
020A:2F6A  A5					movsw				; Mov [si] to es:[di]
020A:2F6B  E2 EC		;*		loop	locloop_387		;*Loop if cx > 0
  
020A:2F6B  E2 EC				db	0E2h,0ECh
020A:2F6D  EE					out	dx,al			; port 0FFFFh
020A:2F6E  29 92 A5E0				sub	[bp+si-5A20h],dx
020A:2F72  A1 A5E3				mov	ax,data_767		; (020A:A5E3=445h)
020A:2F75  AC					lodsb				; String [si] to al
020A:2F76  EB A9				jmp	short loc_385		; (2F21)
020A:2F78  20 AA ACAE				and	[bp+si-5352h],ch
020A:2F7C  AF					scasw				; Scan es:[di] for ax
020A:2F7D  AE					scasb				; Scan es:[di] for al
020A:2F7E  AD					lodsw				; String [si] to ax
020A:2F7F  A5					movsw				; Mov [si] to es:[di]
020A:2F80  AD					lodsw				; String [si] to ax
020A:2F81  E2 20				loop	locloop_390		; Loop if cx > 0
  
020A:2F83  E1 A8		;*		loopz	locloop_386		;*Loop if zf=1, cx>0
  
020A:2F83  E1 A8				db	0E1h,0A8h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 108

020A:2F85  E1 E2		;*		loopz	locloop_388		;*Loop if zf=1, cx>0
  
020A:2F85  E1 E2				db	0E1h,0E2h
020A:2F87  A5					movsw				; Mov [si] to es:[di]
020A:2F88  AC					lodsb				; String [si] to al
020A:2F89  EB 20				jmp	short loc_391		; (2FAB)
020A:2F8B  AD					lodsw				; String [si] to ax
020A:2F8C  A5					movsw				; Mov [si] to es:[di]
020A:2F8D  20 E3				and	bl,ah
020A:2F8F  E1 E2		;*		loopz	locloop_389		;*Loop if zf=1, cx>0
  
020A:2F8F  E1 E2				db	0E1h,0E2h
020A:2F91  A0 AEAD				mov	al,data_794		; (020A:AEAD=40h)
020A:2F94  A2 A5AB				mov	data_765,al		; (020A:A5AB=0C3h)
020A:2F97  AD					lodsw				; String [si] to ax
020A:2F98  9D					popf				; Pop flags
020A:2F99  0C B2				or	al,0B2h
020A:2F9B  0C C1				or	al,0C1h
020A:2F9D  0C D0				or	al,0D0h
020A:2F9F  0C ED				or	al,0EDh
020A:2FA1  0C FA				or	al,0FAh
  
020A:2FA3			locloop_390:
020A:2FA3  0C 12				or	al,12h
020A:2FA5  0D 0D35				or	ax,0D35h
020A:2FA8  49					dec	cx
020A:2FA9  0D 0D69				or	ax,0D69h
020A:2FAC  91					xchg	ax,cx
020A:2FAD  0D 0DA5				or	ax,0DA5h
020A:2FB0  C3					retn
020A:2FB1  0D 0000				or	ax,0
020A:2FB4  D7					xlat				; al=[al+[bx]] table
020A:2FB5  0D 0DEE				or	ax,0DEEh
020A:2FB8  0E					push	cs
020A:2FB9  0E					push	cs
020A:2FBA  20 0E 090C				and	byte ptr ds:[90Ch],cl	; (020A:090C=0Eh)
020A:2FBE  24 09				and	al,9
020A:2FC0  3C 09				cmp	al,9
020A:2FC2  4B					dec	bx
020A:2FC3  09 6C 09				or	[si+9],bp
020A:2FC6  7C 09				jl	loc_392			; Jump if <
020A:2FC8  A8 09				test	al,9
020A:2FCA  B6 09				mov	dh,9
020A:2FCC  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2FCE  E1 09				loopz	locloop_393		; Loop if zf=1, cx>0
  
020A:2FD0  F7					db	0F7h
020A:2FD1			loc_392:
020A:2FD1  09 09				or	[bx+di],cx
020A:2FD3  0A 1B				or	bl,[bp+di]
020A:2FD5  0A 2E 530A				or	ch,data_681		; (020A:530A=3)
  
020A:2FD9			locloop_393:
020A:2FD9  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2FDC  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2FE0  C3					retn
020A:2FE1  0A E2				or	ah,dl
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 109

020A:2FE3  0A 00				or	al,[bx+si]
020A:2FE5  0B 00				or	ax,[bx+si]
020A:2FE7  004F[00]				db	79 dup (0)
020A:3036  32 0E 0000				xor	cl,byte ptr data_66	; (020A:0000=28h)
020A:303A  42					inc	dx
020A:303B  0E					push	cs
020A:303C  66					db	66h
020A:303D  0E					push	cs
020A:303E  8F					db	8Fh
020A:303F  0E					push	cs
020A:3040  B3 0E				mov	bl,0Eh
020A:3042  CF					iret				; Interrupt return
020A:3043  0E					push	cs
020A:3044  E3 0E				jcxz	loc_394			; Jump if cx=0
020A:3046  F9			data_480	db	0F9h
020A:3047  0E					push	cs
020A:3048  0E					push	cs
020A:3049  0F					pop	cs			; Dangerous 8088 only
020A:304A  2E					db	2Eh
020A:304B  0F					pop	cs			; Dangerous 8088 only
020A:304C  00 00				add	[bx+si],al
020A:304E  00 00				add	[bx+si],al
020A:3050  4D					dec	bp
020A:3051  00 00				add	[bx+si],al
020A:3053  37					aaa				; Ascii adjust
020A:3054			loc_394:
020A:3054  00 74 1B				add	[si+1Bh],dh
020A:3057  BB 07B1				mov	bx,7B1h
020A:305A  3C 08				cmp	al,8
020A:305C  74 14				je	loc_395			; Jump if equal
020A:305E  BB 439C				mov	bx,439Ch
020A:3061  4D4F 5053				dw	4D4Fh, 5053h
020A:3065  45					inc	bp
020A:3066  43					inc	bx
020A:3067  3D 3A43				cmp	ax,3A43h
020A:306A  5C					pop	sp
020A:306B  57					push	di
020A:306C  4E49 4F44		data_484	dw	4E49h, 4F44h
020A:3070  5357 535C		data_485	dw	5357h, 535Ch
020A:3074  5359 4554		data_486	dw	5359h, 4554h
020A:3078  334D 5C32		data_487	dw	334Dh, 5C32h
020A:307C  4F43 4D4D		data_488	dw	4F43h, 4D4Dh
020A:3080  4E41 2E44		data_489	dw	4E41h, 2E44h
020A:3084  4F43 004D		data_490	dw	4F43h, 4Dh
020A:3088  4C41 554C		data_491	dw	4C41h, 554Ch
020A:308C  4553 5352		data_492	dw	4553h, 5352h
020A:3090  5250 464F		data_493	dw	5250h, 464Fh
020A:3094  4C49 3D45		data_494	dw	4C49h, 3D45h
020A:3098  3A43 445C		data_495	dw	3A43h, 445Ch
020A:309C  434F 4D55		data_496	dw	434Fh, 4D55h
020A:30A0  7E45 5C31		data_497	dw	7E45h, 5C31h
020A:30A4  4C41 554C		data_498	dw	4C41h, 554Ch
020A:30A8  4553 317E		data_499	dw	4553h, 317Eh
020A:30AC  4100 5050		data_500	dw	4100h, 5050h
020A:30B0  4144 4154		data_501	dw	4144h, 4154h
020A:30B4  433D 5C3A		data_502	dw	433Dh, 5C3Ah
020A:30B8  4F44 5543		data_503	dw	4F44h, 5543h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 110

020A:30BC  454D 317E		data_504	dw	454Dh, 317Eh
020A:30C0  435C 4344		data_505	dw	435Ch, 4344h
020A:30C4  7E32 5C31		data_506	dw	7E32h, 5C31h
020A:30C8  5041 4C50		data_507	dw	5041h, 4C50h
020A:30CC  4349 317E		data_508	dw	4349h, 317Eh
020A:30D0  4300 494C		data_509	dw	4300h, 494Ch
020A:30D4  4E45 4E54		data_510	dw	4E45h, 4E54h
020A:30D8  4D41 3D45		data_511	dw	4D41h, 3D45h
020A:30DC  6F43 736E		data_512	dw	6F43h, 736Eh
020A:30E0  6C6F 0065		data_513	dw	6C6Fh, 65h
020A:30E4  4F43 4D4D		data_514	dw	4F43h, 4D4Dh
020A:30E8  4E4F 5250		data_515	dw	4E4Fh, 5250h
020A:30EC  474F 4152		data_516	dw	474Fh, 4152h
020A:30F0  464D 4C49		data_517	dw	464Dh, 4C49h
020A:30F4  5345 433D		data_518	dw	5345h, 433Dh
020A:30F8  5C3A 5250		data_519	dw	5C3Ah, 5250h
020A:30FC  474F 4152		data_520	dw	474Fh, 4152h
020A:3100  317E 435C		data_521	dw	317Eh, 435Ch
020A:3104  4D4F 4F4D		data_522	dw	4D4Fh, 4F4Dh
020A:3108  7E4E 0031		data_523	dw	7E4Eh, 31h
020A:310C  4F43 504D		data_524	dw	4F43h, 504Dh
020A:3110  5455 5245		data_525	dw	5455h, 5245h
020A:3114  414E 454D		data_526	dw	414Eh, 454Dh
020A:3118  573D 4E49		data_527	dw	573Dh, 4E49h
020A:311C  4F44 5357		data_528	dw	4F44h, 5357h
020A:3120  582D 0050		data_529	dw	582Dh, 50h
020A:3124  5046 4E5F		data_530	dw	5046h, 4E5Fh
020A:3128  4F 5F 48 4F 53 54			db	'O_HOST_CHECK=NO', 0
020A:312E  5F 43 48 45 43 4B
020A:3134  3D 4E 4F 00
020A:3138  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020A:313E  49 56 45 3D 43 3A
020A:3144  00
020A:3145  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020A:314B  54 48 3D 5C 44 6F
020A:3151  63 75 6D 65 6E 74
020A:3157  73 20 61 6E 64 20
020A:315D  53 65 74 74 69 6E
020A:3163  67 73
020A:3165  5C 27 5F				db	'\', 27h, '_'
020A:3168  A0 5F5F				mov	al,data_688		; (020A:5F5F=0A3h)
020A:316B  63					db	63h
020A:316C  20 5F F0				and	[bx-10h],bl
020A:316F  A0 A7F0				mov	al,data_771		; (020A:A7F0=5Fh)
020A:3172  5F					pop	di
020A:3173  2D 52F2				sub	ax,52F2h
020A:3176  00 4C 4F				add	[si+4Fh],cl
020A:3179  47 4F 4E 53 45 52			db	'GONSERVER=\\WINDOWS-XP', 0
020A:317F  56 45 52 3D 5C 5C
020A:3185  57 49 4E 44 4F 57
020A:318B  53 2D 58 50 00
020A:3190  4E 55 4D 42 45 52			db	'NUMBER_OF_PROCESSORS=1', 0
020A:3196  5F 4F 46 5F 50 52
020A:319C  4F 43 45 53 53 4F
020A:31A2  52 53 3D 31 00
020A:31A7  4F 53 3D 57 69 6E			db	'OS=Windows_NT', 0
020A:31AD  64 6F 77 73 5F 4E
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 111

020A:31B3  54 00
020A:31B5  50 41 54 48 3D 43			db	'PATH=C:\WINDOWS\system32;C:\WIND'
020A:31BB  3A 5C 57 49 4E 44
020A:31C1  4F 57 53 5C 73 79
020A:31C7  73 74 65 6D 33 32
020A:31CD  3B 43 3A 5C 57 49
020A:31D3  4E 44
020A:31D5  4F 57 53 3B 43 3A			db	'OWS;C:\WINDOWS\System32\Wbem', 0
020A:31DB  5C 57 49 4E 44 4F
020A:31E1  57 53 5C 53 79 73
020A:31E7  74 65 6D 33 32 5C
020A:31ED  57 62 65 6D 00
020A:31F2  50 41 54 48 45 58			db	'PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS'
020A:31F8  54 3D 2E 43 4F 4D
020A:31FE  3B 2E 45 58 45 3B
020A:3204  2E 42 41 54 3B 2E
020A:320A  43 4D 44 3B 2E 56
020A:3210  42 53
020A:3212  3B 2E 56 42 45 3B			db	';.VBE;.JS;.JSE;.WSF;.WSH', 0
020A:3218  2E 4A 53 3B 2E 4A
020A:321E  53 45 3B 2E 57 53
020A:3224  46 3B 2E 57 53 48
020A:322A  00
020A:322B  50 52 4F 43 45 53			db	'PROCESSOR_ARCHITECTURE=x86', 0
020A:3231  53 4F 52 5F 41 52
020A:3237  43 48 49 54 45 43
020A:323D  54 55 52 45 3D 78
020A:3243  38 36 00
020A:3246  50 52 4F 43 45 53			db	'PROCESSOR_IDENTIFIER=x86 Family '
020A:324C  53 4F 52 5F 49 44
020A:3252  45 4E 54 49 46 49
020A:3258  45 52 3D 78 38 36
020A:325E  20 46 61 6D 69 6C
020A:3264  79 20
020A:3266  32 33 20 4D 6F 64			db	'23 Model 24 Stepping 1, Authenti'
020A:326C  65 6C 20 32 34 20
020A:3272  53 74 65 70 70 69
020A:3278  6E 67 20 31 2C 20
020A:327E  41 75 74 68 65 6E
020A:3284  74 69
020A:3286  63 41 4D 44 00			db	'cAMD', 0
020A:328B  50 52 4F 43 45 53			db	'PROCESSOR_LEVEL=23', 0
020A:3291  53 4F 52 5F 4C 45
020A:3297  56 45 4C 3D 32 33
020A:329D  00
020A:329E  50 52 4F 43 45 53			db	'PROCESSOR_REVISION=1801', 0
020A:32A4  53 4F 52 5F 52 45
020A:32AA  56 49 53 49 4F 4E
020A:32B0  3D 31 38 30 31 00
020A:32B6  50 52 4F 47 52 41			db	'PROGRAMFILES=C:\PROGRA~1', 0
020A:32BC  4D 46 49 4C 45 53
020A:32C2  3D 43 3A 5C 50 52
020A:32C8  4F 47 52 41 7E 31
020A:32CE  00
020A:32CF  50 52 4F 4D 50 54			db	'PROMPT=$'
020A:32D5  3D 24
020A:32D7  50 24				db	'P$'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 112

020A:32D9  47 00				db	'G', 0
020A:32DB  53 45 53 53 49 4F			db	'SESSIONNAME=Console', 0
020A:32E1  4E 4E 41 4D 45 3D
020A:32E7  43 6F 6E 73 6F 6C
020A:32ED  65 00
020A:32EF  53 59 53 54 45 4D			db	'SYSTEMDRIVE=C:', 0
020A:32F5  44 52 49 56 45 3D
020A:32FB  43 3A 00
020A:32FE  53 59 53 54 45 4D			db	'SYSTEMROOT=C:\WINDOWS', 0
020A:3304  52 4F 4F 54 3D 43
020A:330A  3A 5C 57 49 4E 44
020A:3310  4F 57 53 00
020A:3314  54 45 4D 50 3D 43			db	'TEMP=C:\WINDOWS\TEMP', 0
020A:331A  3A 5C 57 49 4E 44
020A:3320  4F 57 53 5C 54 45
020A:3326  4D 50 00
020A:3329  54 4D 50 3D 43 3A			db	'TMP=C:\WINDOWS\TEMP', 0
020A:332F  5C 57 49 4E 44 4F
020A:3335  57 53 5C 54 45 4D
020A:333B  50 00
020A:333D  55 53 45 52 44 4F			db	'USERDOMAIN=WINDOWS-XP', 0
020A:3343  4D 41 49 4E 3D 57
020A:3349  49 4E 44 4F 57 53
020A:334F  2D 58 50 00
020A:3353  55 53 45 52 4E 41			db	'USERNAME=', 27h, '_'
020A:3359  4D 45 3D 27 5F
020A:335E  A0 5F5F				mov	al,data_688		; (020A:5F5F=0A3h)
020A:3361  63					db	63h
020A:3362  20 5F F0				and	[bx-10h],bl
020A:3365  A0 A7F0				mov	al,data_771		; (020A:A7F0=5Fh)
020A:3368  5F					pop	di
020A:3369  2D 52F2				sub	ax,52F2h
020A:336C  00 55 53				add	[di+53h],dl
020A:336F  45 52 50 52 4F 46			db	'ERPROFILE=C:\DOCUME~1\CDC2~1', 0
020A:3375  49 4C 45 3D 43 3A
020A:337B  5C 44 4F 43 55 4D
020A:3381  45 7E 31 5C 43 44
020A:3387  43 32 7E 31 00
020A:338C  42 4C 41 53 54 45			db	'BLASTER=A220 I5 D1 P330 T3'
020A:3392  52 3D 41 32 32 30
020A:3398  20 49 35 20 44 31
020A:339E  20 50 33 33 30 20
020A:33A4  54 33
020A:33A6  00 00				add	[bx+si],al
020A:33A8  01 00				add	[bx+si],ax
020A:33AA  43					inc	bx
020A:33AB  3A 5C 57				cmp	bl,[si+57h]
020A:33AE  49					dec	cx
020A:33AF  4E					dec	si
020A:33B0  44					inc	sp
020A:33B1  4F					dec	di
020A:33B2  57					push	di
020A:33B3  53					push	bx
020A:33B4  5C					pop	sp
020A:33B5  73 79				jnc	loc_398			; Jump if carry=0
020A:33B7  73 74				jnc	loc_397			; Jump if carry=0
020A:33B9  65					db	65h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 113

020A:33BA  6D					db	6Dh
020A:33BB  33 32				xor	si,[bp+si]
020A:33BD  5C					pop	sp
020A:33BE  4B					dec	bx
020A:33BF  42					inc	dx
020A:33C0  31 36 432E				xor	data_633,si		; (020A:432E=0FF8Fh)
020A:33C4  4F					dec	di
020A:33C5  4D					dec	bp
020A:33C6  00 A0 02A1				add	data_156[bx+si],ah	; (020A:02A1=0)
020A:33CA  E8 FF2E		;*		call	sub_43			;*(32FB)
020A:33CA  E8 2E FF				db	0E8h, 2Eh,0FFh
020A:33CD  75 F2		;*		jnz	loc_396			;*Jump if not zero
020A:33CD  75 F2				db	 75h,0F2h
020A:33CF  81 4D 48 7D05			or	word ptr [di+48h],7D05h
020A:33D4  01 BA 06EF				add	[bp+si+6EFh],di
020A:33D8  4B					dec	bx
020A:33D9  42					inc	dx
020A:33DA  31 36 3C00				xor	data_579,si		; (020A:3C00=9FE9h)
020A:33DE  02 00				add	al,[bx+si]
020A:33E0  CD 20				int	20h			; Program Terminate
020A:33E2  C5 06 9A00				lds	ax,data_733		; (020A:9A00=21CDh) Load 32 bit ptr
020A:33E6  F0					db	0F0h
020A:33E7  FE					db	0FEh
020A:33E8  1D 25F0				sbb	ax,25F0h
020A:33EB  06					push	es
020A:33EC  B4 95				mov	ah,95h
020A:33EE  4B					dec	bx
020A:33EF  01 0E 5604				add	word ptr ds:[5604h],cx	; (04B9:5604=8052h)
020A:33F3  01 0E 0E04				add	word ptr ds:[0E04h],cx	; (04B9:0E04=1D38h)
020A:33F7  04 01				add	al,1
020A:33F9  0013[FF]				db	19 dup (0FFh)
020A:340C  10 05				adc	[di],al
020A:340E  E6 FF				out	0FFh,al			; port 0FFh
020A:3410  48					dec	ax
020A:3411  05 0014				add	ax,14h
020A:3414  18 00				sbb	[bx+si],al
020A:3416  48					dec	ax
020A:3417  05 FFFF				add	ax,0FFFFh
020A:341A  FF					db	0FFh
020A:341B  FF 00				inc	word ptr [bx+si]
020A:341D  00 00				add	[bx+si],al
020A:341F  00 05				add	[di],al
020A:3421  000F[00]				db	15 dup (0)
020A:3430			loc_398:
020A:3430  CD 21				int	21h			; DOS Services  ah=function 95h
020A:3432  CB					retf				; Return far
020A:3433  0009[00]				db	9 dup (0)
020A:343C  8B 05				mov	ax,[di]
020A:343E  0A 02				or	al,[bp+si]
020A:3440  0E					push	cs
020A:3441  0C 0A				or	al,0Ah
020A:3443  02 14				add	dl,[si]
020A:3445  0C 0A				or	al,0Ah
020A:3447  02 00				add	al,[bx+si]
020A:3449  00 00				add	[bx+si],al
020A:344B  00 AD 0A06				add	data_192[di],ch		; (020A:0A06=74h)
020A:344F  02 AD 0A06				add	ch,data_192[di]		; (020A:0A06=74h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 114

020A:3453  02 53 FF				add	dl,[bp+di-1]
020A:3456  00 F0				add	al,dh
020A:3458  0008[00]				db	8 dup (0)
020A:3460  28 20 72 75 2C 38			db	'( ru,866,C:\WINDOWS\system32\KEY'
020A:3466  36 36 2C 43 3A 5C
020A:346C  57 49 4E 44 4F 57
020A:3472  53 5C 73 79 73 74
020A:3478  65 6D 33 32 5C 4B
020A:347E  45 59
020A:3480  42 4F 41 52 44 2E			db	'BOARD.SYS', 0Dh
020A:3486  53 59 53 0D
020A:348A  0056[00]				db	86 dup (0)
020A:34E0  E9 2210				jmp	loc_819			; (56F3)
020A:34E3  0011[00]				db	17 dup (0)
020A:34F4  10 00				adc	[bx+si],al
020A:34F6  00 00				add	[bx+si],al
020A:34F8  00 00				add	[bx+si],al
020A:34FA  80 17 00				adc	byte ptr [bx],0
020A:34FD  18 00				sbb	[bx+si],al
020A:34FF  97					xchg	ax,di
020A:3500  00 96 0000				add	[bp+0],dl
020A:3504  00 6C 6C				add	[si+6Ch],ch
020A:3507  01 00				add	[bx+si],ax
020A:3509  5A					pop	dx
020A:350A  02 56 04				add	dl,[bp+4]
020A:350D  98					cbw				; Convrt byte to word
020A:350E  02 C9				add	cl,cl
020A:3510  02 DE				add	bl,dh
020A:3512  02 B2 8903				add	dh,[bp+si-76FDh]
020A:3516  04 17				add	al,17h
020A:3518  02 EC				add	ch,ah
020A:351A  01 1E 0C04				add	word ptr ds:[0C04h],bx	; (020A:0C04=9726h)
020A:351E  04 D4				add	al,0D4h
020A:3520  03 F0				add	si,ax
020A:3522  03 E9				add	bp,cx
020A:3524  01 E9				add	cx,bp
020A:3526  01 E9				add	cx,bp
020A:3528  01 2E 06F6				add	data_177,bp		; (020A:06F6=75C0h)
020A:352C  D5					db	0D5h
020A:352D  0E					push	cs
020A:352E  01 75 02				add	[di+2],si
020A:3531  F8					clc				; Clear carry flag
020A:3532  C3					retn
020A:3533  1E					push	ds
020A:3534  06					push	es
020A:3535  50					push	ax
020A:3536  53					push	bx
020A:3537  0E					push	cs
020A:3538  1F					pop	ds
020A:3539  BB 0040				mov	bx,40h
020A:353C  8E C3				mov	es,bx
020A:353E  80 3E 06EF FF			cmp	data_176,0FFh		; (020A:06EF=0CDh)
020A:3543  74 03				je	loc_399			; Jump if equal
020A:3545  E9 00EC				jmp	loc_414			; (3634)
020A:3548			loc_399:
020A:3548  26: F6 06 0017 03			test	byte ptr es:[17h],3	; (0040:0017=0)
020A:354E  75 07				jnz	loc_400			; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 115

020A:3550  80 26 0115 7F			and	byte ptr data_124+1,7Fh	; (020A:0115=0Ch)
020A:3555  EB 05				jmp	short loc_401		; (355C)
020A:3557			loc_400:
020A:3557  80 0E 0115 80			or	byte ptr data_124+1,80h	; (020A:0115=0Ch)
020A:355C			loc_401:
020A:355C  26: F6 06 0017 04			test	byte ptr es:[17h],4	; (0040:0017=0)
020A:3562  75 0F				jnz	loc_402			; Jump if not zero
020A:3564  26: F6 06 0096 04			test	byte ptr es:[96h],4	; (0040:0096=10h)
020A:356A  75 07				jnz	loc_402			; Jump if not zero
020A:356C  80 26 0115 BF			and	byte ptr data_124+1,0BFh	; (020A:0115=0Ch)
020A:3571  EB 05				jmp	short loc_403		; (3578)
020A:3573			loc_402:
020A:3573  80 0E 0115 40			or	byte ptr data_124+1,40h	; (020A:0115=0Ch) '@'
020A:3578			loc_403:
020A:3578  26: F6 06 0017 08			test	byte ptr es:[17h],8	; (0040:0017=0)
020A:357E  75 0F				jnz	loc_404			; Jump if not zero
020A:3580  26: F6 06 0096 08			test	byte ptr es:[96h],8	; (0040:0096=10h)
020A:3586  75 07				jnz	loc_404			; Jump if not zero
020A:3588  80 26 0115 DF			and	byte ptr data_124+1,0DFh	; (020A:0115=0Ch)
020A:358D  EB 05				jmp	short loc_405		; (3594)
020A:358F			loc_404:
020A:358F  80 0E 0115 20			or	byte ptr data_124+1,20h	; (020A:0115=0Ch) ' '
020A:3594			loc_405:
020A:3594  B9 0004				mov	cx,4
020A:3597  33 F6				xor	si,si			; Zero register
020A:3599  33 FF				xor	di,di			; Zero register
  
020A:359B			locloop_406:
020A:359B  8B 9C 011B				mov	bx,word ptr data_128+3[si]	; (020A:011B=5DA5h)
020A:359F  26: 8A 07				mov	al,es:[bx]
020A:35A2  88 85 0111				mov	byte ptr data_122+1[di],al	; (020A:0111=1Fh)
020A:35A6  47					inc	di
020A:35A7  46					inc	si
020A:35A8  46					inc	si
020A:35A9  E2 F0				loop	locloop_406		; Loop if cx > 0
  
020A:35AB  C6 06 011A 00			mov	byte ptr data_128+2,0	; (020A:011A=83h)
020A:35B0  8B 36 0EE7				mov	si,data_213		; (020A:0EE7=36E8h)
020A:35B4  8D 74 04				lea	si,[si+4]		; Load effective addr
020A:35B7			loc_407:
020A:35B7  32 FF				xor	bh,bh			; Zero register
020A:35B9  8A 1C				mov	bl,[si]
020A:35BB  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35BD  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35BF  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35C1  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35C3  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:35C5  FF A7 0129				jmp	word ptr data_138+1[bx]	;*(020A:0129=714h)
020A:35C9  E9 030C				jmp	loc_457			; (38D8)
020A:35CC  A0 0125				mov	al,byte ptr data_134+1	; (020A:0125=2)
020A:35CF  3A 06 0126				cmp	al,byte ptr data_134+2	; (020A:0126=3)
020A:35D3  75 19				jne	loc_409			; Jump if not equal
020A:35D5  8B 44 01				mov	ax,[si+1]
020A:35D8  85 06 0ED1				test	ax,data_207		; (020A:0ED1=2474h)
020A:35DC  75 07				jnz	loc_408			; Jump if not zero
020A:35DE  C6 06 0127 01			mov	byte ptr data_134+3,1	; (020A:0127=4)
020A:35E3  EB 09				jmp	short loc_409		; (35EE)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 116

020A:35E5			loc_408:
020A:35E5  FE 06 0126				inc	byte ptr data_134+2	; (020A:0126=3)
020A:35E9  C6 06 0127 00			mov	byte ptr data_134+3,0	; (020A:0127=4)
020A:35EE			loc_409:
020A:35EE  FE 06 0125				inc	byte ptr data_134+1	; (020A:0125=2)
020A:35F2  46					inc	si
020A:35F3  46					inc	si
020A:35F4  46					inc	si
020A:35F5  EB C0				jmp	short loc_407		; (35B7)
020A:35F7  A0 0125				mov	al,byte ptr data_134+1	; (020A:0125=2)
020A:35FA  3A 06 0126				cmp	al,byte ptr data_134+2	; (020A:0126=3)
020A:35FE  75 16				jne	loc_410			; Jump if not equal
020A:3600  8B 3E 0EE1				mov	di,word ptr ds:[0EE1h]	; (020A:0EE1=0FC00h)
020A:3604  8A 44 01				mov	al,[si+1]
020A:3607  E8 0010				call	sub_45			; (361A)
020A:360A  72 0A				jc	loc_410			; Jump if carry Set
020A:360C  8B 3E 0EE9				mov	di,data_214		; (020A:0EE9=0E01h)
020A:3610  8A 44 01				mov	al,[si+1]
020A:3613  E8 0004				call	sub_45			; (361A)
020A:3616			loc_410:
020A:3616  46					inc	si
020A:3617  46					inc	si
020A:3618  EB 9D				jmp	short loc_407		; (35B7)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_45		proc	near
020A:361A  F8					clc				; Clear carry flag
020A:361B  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:361E			loc_411:
020A:361E  83 3D 00				cmp	word ptr [di],0
020A:3621  74 10				je	loc_413			; Jump if equal
020A:3623  3A 45 02				cmp	al,[di+2]
020A:3626  74 04				je	loc_412			; Jump if equal
020A:3628  03 3D				add	di,[di]
020A:362A  EB F2				jmp	short loc_411		; (361E)
020A:362C			loc_412:
020A:362C  8B 45 05				mov	ax,[di+5]
020A:362F  E8 0A57				call	sub_49			; (4089)
020A:3632  F9					stc				; Set carry flag
020A:3633			loc_413:
020A:3633  C3					retn
				sub_45		endp
  
020A:3634			loc_414:
020A:3634  F8					clc				; Clear carry flag
020A:3635  5B					pop	bx
020A:3636  58					pop	ax
020A:3637  07					pop	es
020A:3638  1F					pop	ds
020A:3639  C3					retn
020A:363A  A0 0125				mov	al,byte ptr data_134+1	; (020A:0125=2)
020A:363D  3A 06 0126				cmp	al,byte ptr data_134+2	; (020A:0126=3)
020A:3641  75 2C				jne	loc_418			; Jump if not equal
020A:3643  8A 1C				mov	bl,[si]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 117

020A:3645  80 E3 07				and	bl,7
020A:3648  32 FF				xor	bh,bh			; Zero register
020A:364A  8A 87 0111				mov	al,byte ptr data_122+1[bx]	; (020A:0111=1Fh)
020A:364E  F6 04 08				test	byte ptr [si],8
020A:3651  75 07				jnz	loc_415			; Jump if not zero
020A:3653  84 44 01				test	al,[si+1]
020A:3656  75 0E				jnz	loc_417			; Jump if not zero
020A:3658  74 05				jz	loc_416			; Jump if zero
020A:365A			loc_415:
020A:365A  84 44 01				test	al,[si+1]
020A:365D  74 07				jz	loc_417			; Jump if zero
020A:365F			loc_416:
020A:365F  C6 06 0127 01			mov	byte ptr data_134+3,1	; (020A:0127=4)
020A:3664  EB 09				jmp	short loc_418		; (366F)
020A:3666			loc_417:
020A:3666  FE 06 0126				inc	byte ptr data_134+2	; (020A:0126=3)
020A:366A  C6 06 0127 00			mov	byte ptr data_134+3,0	; (020A:0127=4)
020A:366F			loc_418:
020A:366F  FE 06 0125				inc	byte ptr data_134+1	; (020A:0125=2)
020A:3673  46					inc	si
020A:3674  46					inc	si
020A:3675  E9 FF3F				jmp	loc_407			; (35B7)
020A:3678  A0 0126				mov	al,byte ptr data_134+2	; (020A:0126=3)
020A:367B  3A 06 0125				cmp	al,byte ptr data_134+1	; (020A:0125=2)
020A:367F  75 06				jne	loc_419			; Jump if not equal
020A:3681  FE 0E 0126				dec	byte ptr data_134+2	; (020A:0126=3)
020A:3685  EB 1E				jmp	short loc_421		; (36A5)
020A:3687			loc_419:
020A:3687  80 3E 0127 01			cmp	byte ptr data_134+3,1	; (020A:0127=4)
020A:368C  75 17				jne	loc_421			; Jump if not equal
020A:368E  FE 0E 0125				dec	byte ptr data_134+1	; (020A:0125=2)
020A:3692  3A 06 0125				cmp	al,byte ptr data_134+1	; (020A:0125=2)
020A:3696  75 09				jne	loc_420			; Jump if not equal
020A:3698  FE 06 0126				inc	byte ptr data_134+2	; (020A:0126=3)
020A:369C  C6 06 0127 00			mov	byte ptr data_134+3,0	; (020A:0127=4)
020A:36A1			loc_420:
020A:36A1  FE 06 0125				inc	byte ptr data_134+1	; (020A:0125=2)
020A:36A5			loc_421:
020A:36A5  46					inc	si
020A:36A6  E9 FF0E				jmp	loc_407			; (35B7)
020A:36A9  A0 0126				mov	al,byte ptr data_134+2	; (020A:0126=3)
020A:36AC  3A 06 0125				cmp	al,byte ptr data_134+1	; (020A:0125=2)
020A:36B0  75 04				jne	loc_422			; Jump if not equal
020A:36B2  FE 0E 0126				dec	byte ptr data_134+2	; (020A:0126=3)
020A:36B6			loc_422:
020A:36B6  FE 0E 0125				dec	byte ptr data_134+1	; (020A:0125=2)
020A:36BA  46					inc	si
020A:36BB  E9 FEF9				jmp	loc_407			; (35B7)
020A:36BE  A0 0126				mov	al,byte ptr data_134+2	; (020A:0126=3)
020A:36C1  3A 06 0125				cmp	al,byte ptr data_134+1	; (020A:0125=2)
020A:36C5  75 27				jne	loc_424			; Jump if not equal
020A:36C7  8B 3E 0EE1				mov	di,word ptr ds:[0EE1h]	; (020A:0EE1=0FC00h)
020A:36CB  8A 44 01				mov	al,[si+1]
020A:36CE  E8 0022				call	sub_46			; (36F3)
020A:36D1  72 0C				jc	loc_423			; Jump if carry Set
020A:36D3  8B 3E 0EE9				mov	di,data_214		; (020A:0EE9=0E01h)
020A:36D7  8A 44 01				mov	al,[si+1]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 118

020A:36DA  E8 0016				call	sub_46			; (36F3)
020A:36DD  73 0F				jnc	loc_424			; Jump if carry=0
020A:36DF			loc_423:
020A:36DF  80 0E 0115 08			or	byte ptr data_124+1,8	; (020A:0115=0Ch)
020A:36E4  F6 06 011A 80			test	byte ptr data_128+2,80h	; (020A:011A=83h)
020A:36E9  74 03				jz	loc_424			; Jump if zero
020A:36EB  E9 01EC				jmp	loc_458			; (38DA)
020A:36EE			loc_424:
020A:36EE  46					inc	si
020A:36EF  46					inc	si
020A:36F0  E9 FEC4				jmp	loc_407			; (35B7)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_46		proc	near
020A:36F3  F8					clc				; Clear carry flag
020A:36F4  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:36F7			loc_425:
020A:36F7  83 3D 00				cmp	word ptr [di],0
020A:36FA  74 1C				je	loc_429			; Jump if equal
020A:36FC  3A 45 02				cmp	al,[di+2]
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:36FF			loc_426:
020A:36FF  74 04				je	loc_427			; Jump if equal
020A:3701  03 3D				add	di,[di]
020A:3703  EB F2				jmp	short loc_425		; (36F7)
020A:3705			loc_427:
020A:3705  80 26 0115 F7			and	byte ptr ds:[115h],0F7h	; (ss:0115=8Bh)
020A:370A  56					push	si
020A:370B  8D 75 07				lea	si,[di+7]		; Load effective addr
020A:370E  89 36 0123				mov	word ptr ds:[123h],si	; (ss:0123=8305h)
020A:3712  A0 06EB				mov	al,byte ptr ds:[6EBh]	; (ss:06EB=1)
020A:3715  EB 02				jmp	short loc_430		; (3719)
020A:3717			loc_428:
020A:3717  5E					pop	si
020A:3718			loc_429:
020A:3718  C3					retn
020A:3719			loc_430:
020A:3719  8B 36 0123				mov	si,word ptr ds:[123h]	; (ss:0123=8305h)
020A:371D  83 3C 00				cmp	word ptr [si],0
020A:3720  75 02				jne	loc_431			; Jump if not equal
020A:3722  EB F3				jmp	short loc_428		; (3717)
020A:3724			loc_431:
020A:3724  8A 54 02				mov	dl,[si+2]
020A:3727  8B 1C				mov	bx,[si]
020A:3729  03 DE				add	bx,si
020A:372B  89 1E 0123				mov	word ptr ds:[123h],bx	; (ss:0123=8305h)
020A:372F  F6 C2 40				test	dl,40h			; '@'
020A:3732  74 2C				jz	loc_434			; Jump if zero
020A:3734  32 ED				xor	ch,ch			; Zero register
020A:3736  8A 4C 03				mov	cl,[si+3]
020A:3739  BB 0003				mov	bx,3
020A:373C  F6 C2 A0				test	dl,0A0h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 119

020A:373F  74 03				jz	locloop_432		; Jump if zero
020A:3741  BB 0002				mov	bx,2
  
020A:3744			locloop_432:
020A:3744  E3 D3				jcxz	loc_430			; Jump if cx=0
020A:3746  3A 44 04				cmp	al,[si+4]
020A:3749  74 06				je	loc_433			; Jump if equal
020A:374B  03 F3				add	si,bx
020A:374D  E2 F5				loop	locloop_432		; Loop if cx > 0
  
020A:374F  EB C8				jmp	short loc_430		; (3719)
020A:3751			loc_433:
020A:3751  8A E0				mov	ah,al
020A:3753  8A 44 05				mov	al,[si+5]
020A:3756  F6 C2 A0				test	dl,0A0h
020A:3759  75 2A				jnz	loc_436			; Jump if not zero
020A:375B  8A 64 06				mov	ah,[si+6]
020A:375E  EB 25				jmp	short loc_436		; (3785)
020A:3760			loc_434:
020A:3760  3A 44 03				cmp	al,[si+3]
020A:3763  72 B4				jb	loc_430			; Jump if below
020A:3765  3A 44 04				cmp	al,[si+4]
020A:3768  77 AF				ja	loc_430			; Jump if above
020A:376A  2A 44 03				sub	al,[si+3]
020A:376D  F6 C2 A0				test	dl,0A0h
020A:3770  74 0A				jz	loc_435			; Jump if zero
020A:3772  8D 5C 05				lea	bx,[si+5]		; Load effective addr
020A:3775  D7					xlat				; al=[al+[bx]] table
020A:3776  8A 26 06EB				mov	ah,byte ptr ds:[6EBh]	; (ss:06EB=1)
020A:377A  EB 09				jmp	short loc_436		; (3785)
020A:377C			loc_435:
020A:377C  B3 02				mov	bl,2
020A:377E  F6 E3				mul	bl			; ax = reg * al
020A:3780  8B D8				mov	bx,ax
020A:3782  8B 40 05				mov	ax,[bx+si+5]
020A:3785			loc_436:
020A:3785  F6 C2 20				test	dl,20h			; ' '
020A:3788  74 02				jz	loc_437			; Jump if zero
020A:378A  32 E4				xor	ah,ah			; Zero register
020A:378C			loc_437:
020A:378C  E8 08FA				call	sub_49			; (4089)
020A:378F  EBF9			data_541	dw	0EBF9h
020A:3791  A085			data_542	dw	0A085h
020A:3793  26			data_543	db	26h
020A:3794  3A01			data_544	dw	3A01h
020A:3796  2506			data_545	dw	2506h
020A:3798  01 75 14				add	[di+14h],si
020A:379B  8A 44 01				mov	al,[si+1]
020A:379E  F6 04 08				test	byte ptr [si],8
020A:37A1  75 06				jnz	loc_438			; Jump if not zero
020A:37A3  08 06 011A				or	byte ptr ds:[11Ah],al	; (ss:011A=3)
020A:37A7  EB 06				jmp	short loc_439		; (37AF)
020A:37A9			loc_438:
020A:37A9  F6 D0				not	al
020A:37AB  20 06 011A				and	byte ptr ds:[11Ah],al	; (ss:011A=3)
020A:37AF			loc_439:
020A:37AF  46					inc	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 120

020A:37B0  46					inc	si
020A:37B1  E9 FE03				jmp	loc_407			; (35B7)
				sub_46		endp
  
020A:37B4  A0 0125				mov	al,byte ptr ds:[125h]	; (ss:0125=0E9h)
020A:37B7  3A 06 0126				cmp	al,byte ptr ds:[126h]	; (ss:0126=3)
020A:37BB  75 0F				jne	loc_440			; Jump if not equal
020A:37BD  C6 06 0116 00			mov	byte ptr ds:[116h],0	; (ss:0116=44h)
020A:37C2  C6 06 0117 00			mov	byte ptr ds:[117h],0	; (ss:0117=2)
020A:37C7  C6 06 06EE 00			mov	byte ptr ds:[6EEh],0	; (ss:06EE=3Ch)
020A:37CC			loc_440:
020A:37CC  46					inc	si
020A:37CD  E9 FDE7				jmp	loc_407			; (35B7)
020A:37D0  A0 0125				mov	al,byte ptr ds:[125h]	; (ss:0125=0E9h)
020A:37D3  3A 06 0126				cmp	al,byte ptr ds:[126h]	; (ss:0126=3)
020A:37D7  75 0F				jne	loc_441			; Jump if not equal
020A:37D9  C6 06 0116 01			mov	byte ptr ds:[116h],1	; (ss:0116=44h)
020A:37DE  C6 06 0117 00			mov	byte ptr ds:[117h],0	; (ss:0117=2)
020A:37E3  C6 06 06EE 01			mov	byte ptr ds:[6EEh],1	; (ss:06EE=3Ch)
020A:37E8			loc_441:
020A:37E8  46					inc	si
020A:37E9  E9 FDCB				jmp	loc_407			; (35B7)
020A:37EC  A0 0125				mov	al,byte ptr ds:[125h]	; (ss:0125=0E9h)
020A:37EF  3A 06 0126				cmp	al,byte ptr ds:[126h]	; (ss:0126=3)
020A:37F3  75 05				jne	loc_442			; Jump if not equal
020A:37F5  C6 06 06EA 01			mov	byte ptr ds:[6EAh],1	; (ss:06EA=0FEh)
020A:37FA			loc_442:
020A:37FA  46					inc	si
020A:37FB  E9 FDB9				jmp	loc_407			; (35B7)
020A:37FE  A0 0125				mov	al,byte ptr ds:[125h]	; (ss:0125=0E9h)
020A:3801  3A 06 0126				cmp	al,byte ptr ds:[126h]	; (ss:0126=3)
020A:3805  75 29				jne	loc_446			; Jump if not equal
020A:3807  8A 1C				mov	bl,[si]
020A:3809  80 E3 0F				and	bl,0Fh
020A:380C  0A DB				or	bl,bl			; Zero ?
020A:380E  74 13				jz	loc_445			; Jump if zero
020A:3810  80 FB 01				cmp	bl,1
020A:3813  75 03				jne	loc_443			; Jump if not equal
020A:3815  E9 00C2				jmp	loc_458			; (38DA)
020A:3818			loc_443:
020A:3818  80 FB 02				cmp	bl,2
020A:381B  75 03				jne	loc_444			; Jump if not equal
020A:381D  E9 FE14				jmp	loc_414			; (3634)
020A:3820			loc_444:
020A:3820  E9 00B5				jmp	loc_457			; (38D8)
020A:3823			loc_445:
020A:3823  03 74 01				add	si,[si+1]
020A:3826  C6 06 0126 00			mov	byte ptr ds:[126h],0	; (ss:0126=3)
020A:382B  C6 06 0125 00			mov	byte ptr ds:[125h],0	; (ss:0125=0E9h)
020A:3830			loc_446:
020A:3830  83 C6 03				add	si,3
020A:3833  E9 FD81				jmp	loc_407			; (35B7)
020A:3836  A0 0125				mov	al,byte ptr ds:[125h]	; (ss:0125=0E9h)
020A:3839  3A 06 0126				cmp	al,byte ptr ds:[126h]	; (ss:0126=3)
020A:383D  75 25				jne	loc_449			; Jump if not equal
020A:383F  8A 1C				mov	bl,[si]
020A:3841  80 E3 07				and	bl,7
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 121

020A:3844  32 FF				xor	bh,bh			; Zero register
020A:3846  8A 87 0111				mov	al,byte ptr ds:[111h][bx]	; (ss:0111=26h)
020A:384A  F6 04 08				test	byte ptr [si],8
020A:384D  75 07				jnz	loc_447			; Jump if not zero
020A:384F  84 44 01				test	al,[si+1]
020A:3852  75 10				jnz	loc_449			; Jump if not zero
020A:3854  74 05				jz	loc_448			; Jump if zero
020A:3856			loc_447:
020A:3856  84 44 01				test	al,[si+1]
020A:3859  74 09				jz	loc_449			; Jump if zero
020A:385B			loc_448:
020A:385B  C6 06 0127 01			mov	byte ptr ds:[127h],1	; (ss:0127=0EBh)
020A:3860  FE 0E 0126				dec	byte ptr ds:[126h]	; (ss:0126=3)
020A:3864			loc_449:
020A:3864  46					inc	si
020A:3865  46					inc	si
020A:3866  E9 FD4E				jmp	loc_407			; (35B7)
020A:3869  A0 0125				mov	al,byte ptr ds:[125h]	; (ss:0125=0E9h)
020A:386C  3A 06 0126				cmp	al,byte ptr ds:[126h]	; (ss:0126=3)
020A:3870  75 61				jne	loc_456			; Jump if not equal
020A:3872  8B 3E 0EE9				mov	di,word ptr ds:[0EE9h]	; (ss:0EE9=43h)
020A:3876  8A 44 01				mov	al,[si+1]
020A:3879  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:387C			loc_450:
020A:387C  83 3D 00				cmp	word ptr [di],0
020A:387F  74 52				je	loc_456			; Jump if equal
020A:3881  3A 45 02				cmp	al,[di+2]
020A:3884  74 04				je	loc_451			; Jump if equal
020A:3886  03 3D				add	di,[di]
020A:3888  EB F2				jmp	short loc_450		; (387C)
020A:388A			loc_451:
020A:388A  80 26 0115 F7			and	byte ptr ds:[115h],0F7h	; (ss:0115=8Bh)
020A:388F  56					push	si
020A:3890			loc_452:
020A:3890  8D 75 07				lea	si,[di+7]		; Load effective addr
020A:3893  A0 06EB				mov	al,byte ptr ds:[6EBh]	; (ss:06EB=1)
020A:3896  8B 0C				mov	cx,[si]
020A:3898  E3 38				jcxz	loc_455			; Jump if cx=0
020A:389A  46					inc	si
020A:389B  46					inc	si
  
020A:389C			locloop_453:
020A:389C  3A 04				cmp	al,[si]
020A:389E  74 07				je	loc_454			; Jump if equal
020A:38A0  83 C6 03				add	si,3
020A:38A3  E2 F7				loop	locloop_453		; Loop if cx > 0
  
020A:38A5  EB 2B				jmp	short loc_455		; (38D2)
020A:38A7			loc_454:
020A:38A7  C6 06 0116 00			mov	byte ptr ds:[116h],0	; (ss:0116=44h)
020A:38AC  06C6			data_554	dw	6C6h
020A:38AE  17			data_555	db	17h
020A:38AF  01 00				add	[bx+si],ax
020A:38B1  8A 5C 01				mov	bl,[si+1]
020A:38B4  32 FF				xor	bh,bh			; Zero register
020A:38B6  8A 44 02				mov	al,[si+2]
020A:38B9  08 87 0111				or	byte ptr ds:[111h][bx],al	; (ss:0111=26h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 122

020A:38BD  80 0E 0115 08			or	byte ptr ds:[115h],8	; (ss:0115=8Bh)
020A:38C2  A0 0116				mov	al,byte ptr ds:[116h]	; (ss:0116=44h)
020A:38C5  A2 06EE				mov	byte ptr ds:[6EEh],al	; (ss:06EE=3Ch)
020A:38C8  F6 06 011A 80			test	byte ptr ds:[11Ah],80h	; (ss:011A=3)
020A:38CD  74 03				jz	loc_455			; Jump if zero
020A:38CF  5E					pop	si
020A:38D0  EB 08				jmp	short loc_458		; (38DA)
020A:38D2			loc_455:
020A:38D2  5E					pop	si
020A:38D3			loc_456:
020A:38D3  46					inc	si
020A:38D4  46					inc	si
020A:38D5  E9 FCDF				jmp	loc_407			; (35B7)
020A:38D8			loc_457:
020A:38D8  EB 00				jmp	short loc_458		; (38DA)
020A:38DA			loc_458:
020A:38DA  C6 06 0128 00			mov	byte ptr ds:[128h],0	; (ss:0128=0ACh)
020A:38DF  F9					stc				; Set carry flag
020A:38E0  5B					pop	bx
020A:38E1  58					pop	ax
020A:38E2  07					pop	es
020A:38E3  1F					pop	ds
020A:38E4  C3					retn
020A:38E5  000B[00]				db	11 dup (0)
020A:38F0  52					push	dx
020A:38F1  3A 45 46				cmp	al,[di+46h]
020A:38F4  38 1D				cmp	[di],bl
020A:38F6  2A 36 4080				sub	dh,data_582		; (020A:4080=0B0h)
020A:38FA  20 10				and	[bx+si],dl
020A:38FC  0408			data_561	dw	408h
020A:38FE  0102			data_562	dw	102h
020A:3900  4F52			data_563	dw	4F52h
020A:3902  50 51 4B 4C 4D 47	data_564	db	'PQKLMGHI'
020A:3908  48 49
020A:390A  10 11				adc	[bx+di],dl
020A:390C  12 13				adc	dl,[bp+di]
020A:390E  14 15				adc	al,15h
020A:3910  16					push	ss
020A:3911  17					pop	ss
020A:3912  18 19				sbb	[bx+di],bl
020A:3914  1E					push	ds
020A:3915  1F					pop	ds
020A:3916  20 21				and	[bx+di],ah
020A:3918  22 23				and	ah,[bp+di]
020A:391A  24 25				and	al,25h			; '%'
020A:391C  26					db	26h
020A:391D  2C 2D				sub	al,2Dh			; '-'
020A:391F  2E					db	2Eh
020A:3920  2F					das				; Decimal adjust
020A:3921  30 31				xor	[bx+di],dh
020A:3923  32 FF				xor	bh,bh			; Zero register
020A:3925  FF					db	0FFh
020A:3926  FF					db	0FFh
020A:3927  FF 8B FF8C				dec	word ptr [bp+di-74h]
020A:392B  EB DA		;*		jmp	short loc_460		;*(3907)
020A:392B  EB DA				db	0EBh,0DAh
020A:392D  DB DC				esc	3,ah			; coprocessor escape
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 123

020A:392F  FF					db	0FFh
020A:3930  FF					db	0FFh
020A:3931			loc_463:
020A:3931  FF					db	0FFh
020A:3932  FF					db	0FFh
020A:3933  FF					db	0FFh
020A:3934			loc_464:
020A:3934  DD DE				esc	5,dh			; coprocessor escape
020A:3936  DF E2				esc	7,dl			; coprocessor escape
020A:3938  E3 E4		;*		jcxz	loc_461			;*Jump if cx=0
020A:3938  E3 E4				db	0E3h,0E4h
020A:393A  E5 E6				in	ax,0E6h			; port 0E6h
020A:393C  E7 FF				out	0FFh,ax			; port 0FFh
020A:393E  F3/ 0008[FF]				db	8 dup (0FFh)
020A:3947  FD					std				; Set direction flag
020A:3948  FF					db	0FFh
020A:3949  FFFF			data_567	dw	0FFFFh
020A:394B  FFFF			data_568	dw	0FFFFh
020A:394D  FFFF			data_569	dw	0FFFFh
020A:394F  FF 1B				call	dword ptr [bp+di]	;*
020A:3951  FF 00				inc	word ptr [bx+si]
020A:3953  FF					db	0FFh
020A:3954  FF					db	0FFh
020A:3955  FF 1E FFFF				call	dword ptr data_875	; (020A:FFFF)
020A:3959  FF					db	0FFh
020A:395A  FF 1F				call	dword ptr [bx]		;*
020A:395C  FF					db	0FFh
020A:395D  7F 94		;*		jg	loc_459			;*Jump if >
020A:395D  7F 94				db	 7Fh, 94h
020A:395F  11 17				adc	[bx],dx
020A:3961  05 1412				add	ax,1412h
020A:3964  19 15				sbb	[di],dx
020A:3966  09 0F				or	[bx],cx
020A:3968  10 1B				adc	[bp+di],bl
020A:396A  1D FF0A				sbb	ax,0FF0Ah
020A:396D  01 13				add	[bp+di],dx
020A:396F  04 06				add	al,6
020A:3971  07					pop	es
020A:3972  08 0A				or	[bp+si],cl
020A:3974  0B 0C				or	cx,[si]
020A:3976  FF					db	0FFh
020A:3977  FF					db	0FFh
020A:3978  FF					db	0FFh
020A:3979  FF 1C				call	dword ptr [si]		;*
020A:397B  1A 18				sbb	bl,[bx+si]
020A:397D  03 16 0E02				add	dx,data_203		; (020A:0E02=5153h)
020A:3981  0D FFFF				or	ax,0FFFFh
020A:3984  FF					db	0FFh
020A:3985  FF 96 20FF				call	word ptr [bp+20FFh]	;*
020A:3989  FF 5E 5F				call	dword ptr [bp+5Fh]	;*
020A:398C  60					db	60h
020A:398D  61					db	61h
020A:398E  62					db	62h
020A:398F  63					db	63h
020A:3990  64					db	64h
020A:3991  65					db	65h
020A:3992  66					db	66h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 124

020A:3993  67					db	67h
020A:3994  FF					db	0FFh
020A:3995  FF 77 8D				push	word ptr [bx-73h]
020A:3998  84 8E 8F73				test	cl,[bp-708Dh]
020A:399C  74 90		;*		jz	loc_462			;*Jump if zero
020A:399C  74 90				db	 74h, 90h
020A:399E  75 91				jnz	loc_463			; Jump if not zero
020A:39A0  76 92				jbe	loc_464			; Jump if below or =
020A:39A2  93					xchg	ax,bx
020A:39A3  FF					db	0FFh
020A:39A4  FF					db	0FFh
020A:39A5  FF 89 FF8A				dec	data_874[bx+di]		; (020A:FF8A=0FA01h)
020A:39A9  EA FFD0:CFCE		;*		jmp	far ptr loc_2897	;*(FFD0:CFCE)
020A:39A9  EA CE CF D0 FF			db	0EAh,0CEh,0CFh,0D0h,0FFh
020A:39AE  FF					db	0FFh
020A:39AF  FF					db	0FFh
020A:39B0  FF					db	0FFh
020A:39B1  FF D1				call	cx			;*
020A:39B3  D2 D3				rcl	bl,cl			; Rotate thru carry
020A:39B5  D4					db	0D4h
020A:39B6  D5					db	0D5h
020A:39B7  D6					db	0D6h
020A:39B8  D7					xlat				; al=[al+[bx]] table
020A:39B9  D8 D9				esc	0,cl			; coprocessor escape
020A:39BB  FF F2				push	dx
020A:39BD  0008[FF]				db	8 dup (0FFh)
020A:39C5  FC					cld				; Clear direction
020A:39C6  0008[FF]				db	8 dup (0FFh)
020A:39CE  1B 31				sbb	si,[bx+di]
020A:39D0  32 33				xor	dh,[bp+di]
020A:39D2  34 35				xor	al,35h			; '5'
020A:39D4  36					db	36h
020A:39D5  37					aaa				; Ascii adjust
020A:39D6  38 39				cmp	[bx+di],bh
020A:39D8  30 2D				xor	[di],ch
020A:39DA  3D 0908				cmp	ax,908h
020A:39DD  71 77				jno	loc_468			; Jump if not overflw
020A:39DF  65					db	65h
020A:39E0  72 74				jc	loc_468			; Jump if carry Set
020A:39E2  79 75				jns	loc_469			; Jump if not sign
020A:39E4  69					db	69h
020A:39E5  6F					db	6Fh
020A:39E6  70 5B				jo	loc_466			; Jump if overflow=1
020A:39E8  5D					pop	bp
020A:39E9  0D 61FF				or	ax,61FFh
020A:39EC  73 64				jnc	loc_467			; Jump if carry=0
020A:39EE  66					db	66h
020A:39EF  67					db	67h
020A:39F0  68					db	68h
020A:39F1  6A					db	6Ah
020A:39F2  6B					db	6Bh
020A:39F3  6C					db	6Ch
020A:39F4  3B 27				cmp	sp,[bx]
020A:39F6  60					db	60h
020A:39F7  FF 5C 7A		;*		call	dword ptr [si+7Ah]	;*16 entries
020A:39F7  FF 5C 7A				db	0FFh, 5Ch, 7Ah
020A:39FA  78 63				js	loc_470			; Jump if sign=1
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 125

020A:39FC  76 62				jbe	loc_471			; Jump if below or =
020A:39FE  6E					db	6Eh
020A:39FF  6D					db	6Dh
020A:3A00  2C 2E				sub	al,2Eh			; '.'
020A:3A02  2F					das				; Decimal adjust
020A:3A03  FF 2A				jmp	dword ptr [bp+si]
020A:3A05  FF 20				jmp	word ptr [bx+si]
020A:3A07  5C					pop	sp
020A:3A08  3B 3C				cmp	di,[si]
020A:3A0A  3D 3F3E				cmp	ax,3F3Eh
020A:3A0D  40					inc	ax
020A:3A0E  41					inc	cx
020A:3A0F  42					inc	dx
020A:3A10  43					inc	bx
020A:3A11  44					inc	sp
020A:3A12  FF					db	0FFh
020A:3A13  FF 47 48				inc	word ptr [bx+48h]
020A:3A16  49					dec	cx
020A:3A17  FF 4B FF				dec	word ptr [bp+di-1]
020A:3A1A  4D					dec	bp
020A:3A1B  FF 4F 50				dec	word ptr [bx+50h]
020A:3A1E  51					push	cx
020A:3A1F  52					push	dx
020A:3A20  53					push	bx
020A:3A21  FF					db	0FFh
020A:3A22  FF 5C 85				call	dword ptr [si-7Bh]
020A:3A25  86 FF				xchg	bh,bh
020A:3A27  E8 B7B6				call	sub_213			; (F1E0)
020A:3A2A			loc_465:
020A:3A2A  B8 FFFF				mov	ax,0FFFFh
020A:3A2D  FF					db	0FFh
020A:3A2E  FF					db	0FFh
020A:3A2F  FF					db	0FFh
020A:3A30  B9 BBBA				mov	cx,0BBBAh
020A:3A33  BC BEBD				mov	sp,0BEBDh
020A:3A36  BF C1C0				mov	di,0C1C0h
020A:3A39  FF F0				push	ax
020A:3A3B  0008[FF]				db	8 dup (0FFh)
020A:3A43			loc_466:
020A:3A43  FB					sti				; Enable interrupts
020A:3A44  0008[FF]				db	8 dup (0FFh)
020A:3A4C  1B 21				sbb	sp,[bx+di]
020A:3A4E  40					inc	ax
020A:3A4F  23 24				and	sp,[si]
020A:3A51  25 265E				and	ax,265Eh
020A:3A54  2A 28				sub	ch,[bx+si]
020A:3A56			loc_468:
020A:3A56  29 5F 2B				sub	[bx+2Bh],bx
020A:3A59			loc_469:
020A:3A59  08 00				or	[bx+si],al
020A:3A5B  51					push	cx
020A:3A5C  57					push	di
020A:3A5D  45					inc	bp
020A:3A5E  52					push	dx
020A:3A5F			loc_470:
020A:3A5F  54					push	sp
020A:3A60			loc_471:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 126

020A:3A60  59					pop	cx
020A:3A61  55					push	bp
020A:3A62  49					dec	cx
020A:3A63  4F					dec	di
020A:3A64  50					push	ax
020A:3A65  7B 7D				jnp	loc_476			; Jump if not parity
020A:3A67  0D 41FF				or	ax,41FFh
020A:3A6A  53					push	bx
020A:3A6B  44					inc	sp
020A:3A6C  46					inc	si
020A:3A6D  47					inc	di
020A:3A6E  48					dec	ax
020A:3A6F  4A					dec	dx
020A:3A70  4B					dec	bx
020A:3A71  4C					dec	sp
020A:3A72  3A 22				cmp	ah,[bp+si]
020A:3A74  7E FF				jle	loc_472			; Jump if < or =
020A:3A76  7C 5A				jl	loc_474			; Jump if <
020A:3A78  58					pop	ax
020A:3A79  43					inc	bx
020A:3A7A  56					push	si
020A:3A7B  42					inc	dx
020A:3A7C  4E					dec	si
020A:3A7D  4D					dec	bp
020A:3A7E  3C 3E				cmp	al,3Eh			; '>'
020A:3A80  3F					aas				; Ascii adjust
020A:3A81  FF 2A				jmp	dword ptr [bp+si]
020A:3A83  FF 20				jmp	word ptr [bx+si]
020A:3A85  7C 54				jl	loc_475			; Jump if <
020A:3A87  55					push	bp
020A:3A88  56					push	si
020A:3A89  57					push	di
020A:3A8A  58					pop	ax
020A:3A8B  59					pop	cx
020A:3A8C  5A					pop	dx
020A:3A8D  5B					pop	bx
020A:3A8E  5C					pop	sp
020A:3A8F  5D					pop	bp
020A:3A90  FF					db	0FFh
020A:3A91  FF 37				push	word ptr [bx]
020A:3A93  38 39				cmp	[bx+di],bh
020A:3A95  2D 3534				sub	ax,3534h
020A:3A98  36: 2B 31				sub	si,ss:[bx+di]
020A:3A9B  32 33				xor	dh,[bp+di]
020A:3A9D  30 2E FFFF				xor	byte ptr ds:[0FFFFh],ch	; (9B68:FFFF=0)
020A:3AA1  7C 87				jl	loc_465			; Jump if <
020A:3AA3  88 FF				mov	bh,bh
020A:3AA5  E9 C3C2				jmp	loc_2871		; (FE6A)
020A:3AA8  C4					db	0C4h
020A:3AA9  FF					db	0FFh
020A:3AAA  FF					db	0FFh
020A:3AAB  FF					db	0FFh
020A:3AAC  FF					db	0FFh
020A:3AAD  FF C5				inc	bp
020A:3AAF  C6 C7 C8				mov	bh,0C8h
020A:3AB2  C9					db	0C9h
020A:3AB3  CA CCCB				retf	0CCCBh			; Return far
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 127

020A:3AB6  CD FF				int	0FFh
020A:3AB8  F1					db	0F1h
020A:3AB9  0008[FF]				db	8 dup (0FFh)
020A:3AC1  FB					sti				; Enable interrupts
020A:3AC2  0008[FF]				db	8 dup (0FFh)
020A:3ACA  00 95 02EB				add	byte ptr ds:[2EBh][di],dl	; (020A:02EB=0Eh)
020A:3ACE  00 FF				add	bh,bh
020A:3AD0			loc_473:
020A:3AD0  55					push	bp
020A:3AD1  50					push	ax
020A:3AD2			loc_474:
020A:3AD2  53					push	bx
020A:3AD3  51					push	cx
020A:3AD4  52					push	dx
020A:3AD5  56					push	si
020A:3AD6  57					push	di
020A:3AD7  1E					push	ds
020A:3AD8  06					push	es
020A:3AD9  FC					cld				; Clear direction
020A:3ADA  BB 0040				mov	bx,40h
020A:3ADD  8E DB				mov	ds,bx
020A:3ADF  2E: 8B 2E 0ED3			mov	bp,cs:data_208		; (020A:0ED3=10E8h)
020A:3AE4			loc_476:
020A:3AE4  B4 01				mov	ah,1
020A:3AE6  C4					db	0C4h
020A:3AE7  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3AE9  90					nop
020A:3AEA  90					nop
020A:3AEB  E4 60				in	al,60h			; port 60h, keybd scan or sw1
020A:3AED  B4 4F				mov	ah,4Fh			; 'O'
020A:3AEF  F9					stc				; Set carry flag
020A:3AF0  CD 15				int	15h			; General services, ah=func 4Fh
										;  change keyboard scan code
020A:3AF2  72 03				jc	loc_477			; Jump if carry Set
020A:3AF4  E9 028B				jmp	loc_533			; (3D82)
020A:3AF7			loc_477:
020A:3AF7  3C FE				cmp	al,0FEh
020A:3AF9  74 0C				je	loc_478			; Jump if equal
020A:3AFB  3C FA				cmp	al,0FAh
020A:3AFD  75 10				jne	loc_479			; Jump if not equal
020A:3AFF  80 0E 0097 10			or	byte ptr ds:[97h],10h	; (0040:0097=0)
020A:3B04  E9 027B				jmp	loc_533			; (3D82)
020A:3B07			loc_478:
020A:3B07  80 0E 0097 20			or	byte ptr ds:[97h],20h	; (0040:0097=0) ' '
020A:3B0C  E9 0273				jmp	loc_533			; (3D82)
020A:3B0F			loc_479:
020A:3B0F  50					push	ax
020A:3B10  E8 05FF				call	sub_53			; (4112)
020A:3B13  8A 1E 0097				mov	bl,byte ptr ds:[97h]	; (0040:0097=0)
020A:3B17  32 D8				xor	bl,al
020A:3B19  80 E3 07				and	bl,7
020A:3B1C  74 03				jz	loc_480			; Jump if zero
020A:3B1E  E8 05CE				call	sub_52			; (40EF)
020A:3B21			loc_480:
020A:3B21  58					pop	ax
020A:3B22  8A E0				mov	ah,al
020A:3B24  2E: A2 06EB				mov	byte ptr cs:[6EBh],al	; (020A:06EB=0D2h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 128

020A:3B28  3C FF				cmp	al,0FFh
020A:3B2A  75 09				jne	loc_482			; Jump if not equal
020A:3B2C  2E: C6 06 06EA 01			mov	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:3B32  E9 024D				jmp	loc_533			; (3D82)
020A:3B35			loc_482:
020A:3B35  0E					push	cs
020A:3B36  07					pop	es
020A:3B37  8A 3E 0096				mov	bh,byte ptr ds:[96h]	; (0040:0096=10h)
020A:3B3B  F6 C7 C0				test	bh,0C0h
020A:3B3E  74 40				jz	loc_487			; Jump if zero
020A:3B40  79 10				jns	loc_484			; Jump if not sign
020A:3B42  3C AB				cmp	al,0ABh
020A:3B44  75 05				jne	loc_483			; Jump if not equal
020A:3B46  80 0E 0096 40			or	byte ptr ds:[96h],40h	; (0040:0096=10h) '@'
020A:3B4B			loc_483:
020A:3B4B  80 26 0096 7F			and	byte ptr ds:[96h],7Fh	; (0040:0096=10h)
020A:3B50  EB 2B				jmp	short loc_486		; (3B7D)
020A:3B52			loc_484:
020A:3B52  80 26 0096 BF			and	byte ptr ds:[96h],0BFh	; (0040:0096=10h)
020A:3B57  80 0E 0096 10			or	byte ptr ds:[96h],10h	; (0040:0096=10h)
020A:3B5C  3C 41				cmp	al,41h			; 'A'
020A:3B5E  74 10				je	loc_485			; Jump if equal
020A:3B60  3C 83				cmp	al,83h
020A:3B62  74 0C				je	loc_485			; Jump if equal
020A:3B64  3C 86				cmp	al,86h
020A:3B66  74 08				je	loc_485			; Jump if equal
020A:3B68  3C 90				cmp	al,90h
020A:3B6A  74 04				je	loc_485			; Jump if equal
020A:3B6C  3C 92				cmp	al,92h
020A:3B6E  75 0D				jne	loc_486			; Jump if not equal
020A:3B70			loc_485:
020A:3B70  F6 C7 20				test	bh,20h			; ' '
020A:3B73  74 08				jz	loc_486			; Jump if zero
020A:3B75  80 0E 0017 20			or	byte ptr ds:[17h],20h	; (0040:0017=0) ' '
020A:3B7A  E8 0572				call	sub_52			; (40EF)
020A:3B7D			loc_486:
020A:3B7D  E9 0202				jmp	loc_533			; (3D82)
020A:3B80			loc_487:
020A:3B80  3C E0				cmp	al,0E0h
020A:3B82  75 07				jne	loc_488			; Jump if not equal
020A:3B84  80 0E 0096 12			or	byte ptr ds:[96h],12h	; (0040:0096=10h)
020A:3B89  EB 09				jmp	short loc_489		; (3B94)
020A:3B8B			loc_488:
020A:3B8B  3C E1				cmp	al,0E1h
020A:3B8D  75 08				jne	loc_490			; Jump if not equal
020A:3B8F  80 0E 0096 11			or	byte ptr ds:[96h],11h	; (0040:0096=10h)
020A:3B94			loc_489:
020A:3B94  E9 01F0				jmp	loc_534			; (3D87)
020A:3B97			loc_490:
020A:3B97  24 7F				and	al,7Fh
020A:3B99  F6 C7 02				test	bh,2
020A:3B9C  74 0C				jz	loc_491			; Jump if zero
020A:3B9E  B9 0002				mov	cx,2
020A:3BA1  BF 0516				mov	di,516h
020A:3BA4  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3BA6  75 5B				jnz	loc_497			; Jump if not zero
020A:3BA8  EB 44				jmp	short loc_493		; (3BEE)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 129

020A:3BAA			loc_491:
020A:3BAA  F6 C7 01				test	bh,1
020A:3BAD  74 1D				jz	loc_492			; Jump if zero
020A:3BAF  B9 0004				mov	cx,4
020A:3BB2  BF 0514				mov	di,514h
020A:3BB5  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3BB7  74 DB				jz	loc_489			; Jump if zero
020A:3BB9  3C 45				cmp	al,45h			; 'E'
020A:3BBB  75 31				jne	loc_493			; Jump if not equal
020A:3BBD  F6 C4 80				test	ah,80h
020A:3BC0  75 2C				jnz	loc_493			; Jump if not zero
020A:3BC2  F6 06 0018 08			test	byte ptr ds:[18h],8	; (0040:0018=0)
020A:3BC7  75 25				jnz	loc_493			; Jump if not zero
020A:3BC9  E9 0351				jmp	loc_565			; (3F1D)
020A:3BCC			loc_492:
020A:3BCC  3C 54				cmp	al,54h			; 'T'
020A:3BCE  75 33				jne	loc_497			; Jump if not equal
020A:3BD0  F6 C4 80				test	ah,80h
020A:3BD3  75 1C				jnz	loc_494			; Jump if not zero
020A:3BD5  F6 06 0018 04			test	byte ptr ds:[18h],4	; (0040:0018=0)
020A:3BDA  75 12				jnz	loc_493			; Jump if not zero
020A:3BDC  80 0E 0018 04			or	byte ptr ds:[18h],4	; (0040:0018=0)
020A:3BE1  B4 03				mov	ah,3
020A:3BE3  C4					db	0C4h
020A:3BE4  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3BE6  B8 8500				mov	ax,8500h
020A:3BE9  CD 15				int	15h			; General services, ah=func 85h
										;  get system request key state
020A:3BEB  B4E9			data_577	dw	0B4E9h
020A:3BED  E901			data_578	dw	0E901h
020A:3BEF  91					xchg	ax,cx
020A:3BF0  01 80 1826				add	word ptr ds:[1826h][bx+si],ax	; (0040:1826=2B0h)
020A:3BF4  00 FB				add	bl,bh
020A:3BF6  B4 03				mov	ah,3
020A:3BF8  C4					db	0C4h
020A:3BF9  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3BFB  B8 8501				mov	ax,8501h
020A:3BFE  CD 15				int	15h			; General services, ah=func 85h
										;  get system request key state
020A:3C00  9FE9			data_579	dw	9FE9h
020A:3C02  01 8A 171E				add	[bp+si+171Eh],cx
020A:3C06  00 BF 0510				add	byte ptr ds:[510h][bx],bh	; (0040:0510=2)
020A:3C0A  B9 0008				mov	cx,8
020A:3C0D  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3C0F  8A C4				mov	al,ah
020A:3C11  74 03				jz	loc_499			; Jump if zero
020A:3C13  E9 0158				jmp	loc_532			; (3D6E)
020A:3C16			loc_499:
020A:3C16  81 EF 0511				sub	di,511h
020A:3C1A  2E: 8A A5 0518			mov	ah,cs:data_165[di]	; (020A:0518=0F6h)
020A:3C1F			loc_500:
020A:3C1F  B1 02				mov	cl,2
020A:3C21  A8 80				test	al,80h
020A:3C23  74 03				jz	loc_501			; Jump if zero
020A:3C25  E9 00EA				jmp	loc_523			; (3D12)
020A:3C28			loc_501:
020A:3C28  80 FC 10				cmp	ah,10h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 130

020A:3C2B  73 6F				jae	loc_510			; Jump if above or =
020A:3C2D  2E: 80 3E 06EF FF			cmp	cs:data_176,0FFh	; (020A:06EF=0CDh)
020A:3C33  75 04				jne	loc_502			; Jump if not equal
020A:3C35  3C 38				cmp	al,38h			; '8'
020A:3C37  75 00				jne	loc_502			; Jump if not equal
020A:3C39			loc_502:
020A:3C39  08 26 0017				or	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3C3D  F6 C4 0C				test	ah,0Ch
020A:3C40  74 13				jz	loc_504			; Jump if zero
020A:3C42  F6 C7 02				test	bh,2
020A:3C45  74 06				jz	loc_503			; Jump if zero
020A:3C47  08 26 0096				or	byte ptr ds:[96h],ah	; (0040:0096=10h)
020A:3C4B  EB 2C				jmp	short loc_506		; (3C79)
020A:3C4D			loc_503:
020A:3C4D  D2 EC				shr	ah,cl			; Shift w/zeros fill
020A:3C4F  08 26 0018				or	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3C53  EB 24				jmp	short loc_506		; (3C79)
020A:3C55			loc_504:
020A:3C55  2E: F7 06 0EEB 8000			test	cs:data_215,8000h	; (020A:0EEB=16FFh)
020A:3C5C  74 1B				jz	loc_506			; Jump if zero
020A:3C5E  2E: 80 3E 06EF FF			cmp	cs:data_176,0FFh	; (020A:06EF=0CDh)
020A:3C64  75 13				jne	loc_506			; Jump if not equal
020A:3C66  F7 C5 0200				test	bp,200h
020A:3C6A  75 05				jnz	loc_505			; Jump if not zero
020A:3C6C  F6 C7 10				test	bh,10h
020A:3C6F  74 08				jz	loc_506			; Jump if zero
020A:3C71			loc_505:
020A:3C71  80 26 0017 BF			and	byte ptr ds:[17h],0BFh	; (0040:0017=0)
020A:3C76  E8 0476				call	sub_52			; (40EF)
020A:3C79			loc_506:
020A:3C79  2E: 80 3E 06EF FF			cmp	cs:data_176,0FFh	; (020A:06EF=0CDh)
020A:3C7F  75 18				jne	loc_509			; Jump if not equal
020A:3C81  2E: F7 06 0EEB 2000			test	cs:data_215,2000h	; (020A:0EEB=16FFh)
020A:3C88  74 0F				jz	loc_509			; Jump if zero
020A:3C8A  2E: 80 0E 0115 04			or	byte ptr cs:data_124+1,4	; (020A:0115=0Ch)
020A:3C90  E8 F896		;*		call	sub_44			;*(3529)
020A:3C90  E8 96 F8				db	0E8h, 96h,0F8h
020A:3C93  2E: 80 26 0115 FB			and	byte ptr cs:data_124+1,0FBh	; (020A:0115=0Ch)
020A:3C99			loc_509:
020A:3C99  E9 00E6				jmp	loc_533			; (3D82)
020A:3C9C			loc_510:
020A:3C9C  F6 C3 04				test	bl,4
020A:3C9F			loc_511:
020A:3C9F  74 03				jz	loc_512			; Jump if zero
020A:3CA1  E9 00CA				jmp	loc_532			; (3D6E)
020A:3CA4			loc_512:
020A:3CA4  3C 52				cmp	al,52h			; 'R'
020A:3CA6  75 21				jne	loc_517			; Jump if not equal
020A:3CA8  F6 C3 08				test	bl,8
020A:3CAB  74 03				jz	loc_513			; Jump if zero
020A:3CAD  E9 00BE				jmp	loc_532			; (3D6E)
020A:3CB0			loc_513:
020A:3CB0  F6 C7 02				test	bh,2
020A:3CB3  75 14				jnz	loc_517			; Jump if not zero
020A:3CB5  F6 C3 20				test	bl,20h			; ' '
020A:3CB8  75 0A				jnz	loc_516			; Jump if not zero
020A:3CBA  F6 C3 03				test	bl,3
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 131

020A:3CBD  74 0A				jz	loc_517			; Jump if zero
020A:3CBF			loc_515:
020A:3CBF  8A E0				mov	ah,al
020A:3CC1  E9 00AA				jmp	loc_532			; (3D6E)
020A:3CC4			loc_516:
020A:3CC4  F6 C3 03				test	bl,3
020A:3CC7  74 F6				jz	loc_515			; Jump if zero
020A:3CC9			loc_517:
020A:3CC9  84 26 0018				test	ah,byte ptr ds:[18h]	; (0040:0018=0)
020A:3CCD  74 03				jz	loc_518			; Jump if zero
020A:3CCF  E9 00B0				jmp	loc_533			; (3D82)
020A:3CD2			loc_518:
020A:3CD2  08 26 0018				or	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3CD6  30 26 0017				xor	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CDA  2E: F7 06 0EEB 8000			test	cs:data_215,8000h	; (020A:0EEB=16FFh)
020A:3CE1  74 1C				jz	loc_521			; Jump if zero
020A:3CE3  F7 C5 0200				test	bp,200h
020A:3CE7  75 05				jnz	loc_520			; Jump if not zero
020A:3CE9  F6 C7 10				test	bh,10h
020A:3CEC  74 11				jz	loc_521			; Jump if zero
020A:3CEE			loc_520:
020A:3CEE  2E: 80 3E 06EF FF			cmp	cs:data_176,0FFh	; (020A:06EF=0CDh)
020A:3CF4  75 09				jne	loc_521			; Jump if not equal
020A:3CF6  F6 C4 40				test	ah,40h			; '@'
020A:3CF9  74 04				jz	loc_521			; Jump if zero
020A:3CFB  08 26 0017				or	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CFF			loc_521:
020A:3CFF  F6 C4 70				test	ah,70h			; 'p'
020A:3D02  74 05				jz	loc_522			; Jump if zero
020A:3D04  50					push	ax
020A:3D05  E8 03E7				call	sub_52			; (40EF)
020A:3D08  58					pop	ax
020A:3D09			loc_522:
020A:3D09  3C 52				cmp	al,52h			; 'R'
020A:3D0B  75 75				jne	loc_533			; Jump if not equal
020A:3D0D  8A E0				mov	ah,al
020A:3D0F  E9 009C				jmp	loc_539			; (3DAE)
020A:3D12			loc_523:
020A:3D12  80 FC 10				cmp	ah,10h
020A:3D15  F6 D4				not	ah
020A:3D17  73 4F				jnc	loc_530			; Jump if carry=0
020A:3D19  20 26 0017				and	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3D1D  80 FC FB				cmp	ah,0FBh
020A:3D20  77 30				ja	loc_528			; Jump if above
020A:3D22  F6 C7 02				test	bh,2
020A:3D25  74 06				jz	loc_524			; Jump if zero
020A:3D27  20 26 0096				and	byte ptr ds:[96h],ah	; (0040:0096=10h)
020A:3D2B  EB 06				jmp	short loc_525		; (3D33)
020A:3D2D			loc_524:
020A:3D2D  D2 FC				sar	ah,cl			; Shift w/sign fill
020A:3D2F  20 26 0018				and	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3D33			loc_525:
020A:3D33  8A E0				mov	ah,al
020A:3D35  A0 0096				mov	al,byte ptr ds:[96h]	; (0040:0096=10h)
020A:3D38  2E: 80 3E 06EF FF			cmp	cs:data_176,0FFh	; (020A:06EF=0CDh)
020A:3D3E  75 02				jne	loc_526			; Jump if not equal
020A:3D40  24 F7				and	al,0F7h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 132

020A:3D42			loc_526:
020A:3D42  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:3D44  0A 06 0018				or	al,byte ptr ds:[18h]	; (0040:0018=0)
020A:3D48  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:3D4A  24 0C				and	al,0Ch
020A:3D4C			loc_527:
020A:3D4C  08 06 0017				or	byte ptr ds:[17h],al	; (0040:0017=0)
020A:3D50  8A C4				mov	al,ah
020A:3D52			loc_528:
020A:3D52  3C B8				cmp	al,0B8h
020A:3D54  75 2C				jne	loc_533			; Jump if not equal
020A:3D56  A0 0019				mov	al,byte ptr ds:[19h]	; (0040:0019=0)
020A:3D59  32 E4				xor	ah,ah			; Zero register
020A:3D5B  88 26 0019				mov	byte ptr ds:[19h],ah	; (0040:0019=0)
020A:3D5F  0A C0				or	al,al			; Zero ?
020A:3D61  74 1F				jz	loc_533			; Jump if zero
020A:3D63  E8 0328				call	sub_50			; (408E)
020A:3D66  EB 1A				jmp	short loc_533		; (3D82)
020A:3D68			loc_530:
020A:3D68  20 26 0018				and	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3D6C  EB 14				jmp	short loc_533		; (3D82)
020A:3D6E			loc_532:
020A:3D6E  3C 80				cmp	al,80h
020A:3D70  73 10				jae	loc_533			; Jump if above or =
020A:3D72  F6 06 0018 08			test	byte ptr ds:[18h],8	; (0040:0018=0)
020A:3D77  74 35				jz	loc_539			; Jump if zero
020A:3D79  3C 45				cmp	al,45h			; 'E'
020A:3D7B  74 05				je	loc_533			; Jump if equal
020A:3D7D  80 26 0018 F7			and	byte ptr ds:[18h],0F7h	; (0040:0018=0)
020A:3D82			loc_533:
020A:3D82  80 26 0096 FC			and	byte ptr ds:[96h],0FCh	; (0040:0096=10h)
020A:3D87			loc_534:
020A:3D87  B4 02				mov	ah,2
020A:3D89  2E: 8A 3E 06EA			mov	bh,byte ptr cs:[6EAh]	; (020A:06EA=32h)
020A:3D8E  2E: 8A 1E 0CA8			mov	bl,cs:data_199		; (020A:0CA8=0A2h)
020A:3D93			loc_535:
020A:3D93  2E: C6 06 0CA8 00			mov	cs:data_199,0		; (020A:0CA8=0A2h)
020A:3D99  2E: C6 06 06EA 00			mov	byte ptr cs:[6EAh],0	; (020A:06EA=32h)
020A:3D9F  C4					db	0C4h
020A:3DA0  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3DA2			loc_537:
020A:3DA2  07					pop	es
020A:3DA3  1F					pop	ds
020A:3DA4  5F					pop	di
020A:3DA5  5E					pop	si
020A:3DA6  5A					pop	dx
020A:3DA7  59					pop	cx
020A:3DA8  5B					pop	bx
020A:3DA9  58					pop	ax
020A:3DAA  5D					pop	bp
020A:3DAB  E9 03D2				jmp	loc_614			; (4180)
020A:3DAE			loc_539:
020A:3DAE  3C 7E				cmp	al,7Eh			; '~'
020A:3DB0  77 D0				ja	loc_533			; Jump if above
020A:3DB2  F7 C5 4000				test	bp,4000h
020A:3DB6  75 04				jnz	loc_540			; Jump if not zero
020A:3DB8  3C 7E				cmp	al,7Eh			; '~'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 133

020A:3DBA  77 C6				ja	loc_533			; Jump if above
020A:3DBC			loc_540:
020A:3DBC  F6 C3 08				test	bl,8
020A:3DBF  74 15				jz	loc_541			; Jump if zero
020A:3DC1  F6 C7 10				test	bh,10h
020A:3DC4  74 13				jz	loc_542			; Jump if zero
020A:3DC6  F6 06 0018 04			test	byte ptr data_75+2,4	; (020A:0018=0)
020A:3DCB  74 0C				jz	loc_542			; Jump if zero
020A:3DCD  F6 C4 02				test	ah,2
020A:3DD0  74 04				jz	loc_541			; Jump if zero
020A:3DD2  A8 08				test	al,8
020A:3DD4  75 03				jnz	loc_542			; Jump if not zero
020A:3DD6			loc_541:
020A:3DD6  E9 0100				jmp	loc_561			; (3ED9)
020A:3DD9			loc_542:
020A:3DD9  F6 C3 04				test	bl,4
020A:3DDC  74 14				jz	loc_543			; Jump if zero
020A:3DDE  3C 53				cmp	al,53h			; 'S'
020A:3DE0  75 39				jne	loc_547			; Jump if not equal
020A:3DE2  C7 06 0072 1234			mov	word ptr data_107,1234h	; (020A:0072=0C3Fh)
020A:3DE8  83 26 0096 10			and	data_114,10h		; (020A:0096=0)
020A:3DED  EA FFFF:0000		;*		jmp	far ptr loc_2898	;*(FFFF:0000)
020A:3DED  EA 00 00 FF FF			db	0EAh, 00h, 00h,0FFh,0FFh
020A:3DF2			loc_543:
020A:3DF2  E8 F734		;*		call	sub_44			;*(3529)
020A:3DF2  E8 34 F7				db	0E8h, 34h,0F7h
020A:3DF5  72 8B				jc	loc_533			; Jump if carry Set
020A:3DF7  3C 39				cmp	al,39h			; '9'
020A:3DF9  75 05				jne	loc_544			; Jump if not equal
020A:3DFB  B0 20				mov	al,20h			; ' '
020A:3DFD  E9 0282				jmp	loc_598			; (4082)
020A:3E00			loc_544:
020A:3E00  F7 C5 8000				test	bp,8000h
020A:3E04  74 42				jz	loc_550			; Jump if zero
020A:3E06  3C 0F				cmp	al,0Fh
020A:3E08  75 06				jne	loc_545			; Jump if not equal
020A:3E0A  B8 A500				mov	ax,0A500h
020A:3E0D  E9 0272				jmp	loc_598			; (4082)
020A:3E10			loc_545:
020A:3E10  3C 4A				cmp	al,4Ah			; 'J'
020A:3E12  74 04				je	loc_546			; Jump if equal
020A:3E14  3C 4E				cmp	al,4Eh			; 'N'
020A:3E16  75 30				jne	loc_550			; Jump if not equal
020A:3E18			loc_546:
020A:3E18  E9 00A7				jmp	loc_559			; (3EC2)
020A:3E1B			loc_547:
020A:3E1B  2E: 3A 06 0EEE			cmp	al,byte ptr cs:[0EEEh]	; (020A:0EEE=0)
020A:3E20  75 09				jne	loc_548			; Jump if not equal
020A:3E22  2E: C6 06 06EF 00			mov	cs:data_176,0		; (020A:06EF=0CDh)
020A:3E28  E9 FF57				jmp	loc_533			; (3D82)
020A:3E2B			loc_548:
020A:3E2B  2E: 3A 06 0EEF			cmp	al,cs:data_217		; (020A:0EEF=74h)
020A:3E30  75 09				jne	loc_549			; Jump if not equal
020A:3E32  2E: C6 06 06EF FF			mov	cs:data_176,0FFh	; (020A:06EF=0CDh)
020A:3E38  E9 FF47				jmp	loc_533			; (3D82)
020A:3E3B			loc_549:
020A:3E3B  2E: 80 3E 06EF FF			cmp	cs:data_176,0FFh	; (020A:06EF=0CDh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 134

020A:3E41  75 05				jne	loc_550			; Jump if not equal
020A:3E43  E8 F6E3		;*		call	sub_44			;*(3529)
020A:3E43  E8 E3 F6				db	0E8h,0E3h,0F6h
020A:3E46  72 1F				jc	loc_551			; Jump if carry Set
020A:3E48			loc_550:
020A:3E48  BF 0520				mov	di,520h
020A:3E4B  B9 000A				mov	cx,0Ah
020A:3E4E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E50  75 18				jnz	loc_552			; Jump if not zero
020A:3E52  F6 C7 02				test	bh,2
020A:3E55  75 76				jnz	loc_560			; Jump if not zero
020A:3E57  81 EF 0521				sub	di,521h
020A:3E5B  A0 0019				mov	al,byte ptr data_75+3	; (020A:0019=0)
020A:3E5E  B4 0A				mov	ah,0Ah
020A:3E60  F6 E4				mul	ah			; ax = reg * al
020A:3E62  03 C7				add	ax,di
020A:3E64  A2 0019				mov	byte ptr data_75+3,al	; (020A:0019=0)
020A:3E67			loc_551:
020A:3E67  E9 FF18				jmp	loc_533			; (3D82)
020A:3E6A			loc_552:
020A:3E6A  C6 06 0019 00			mov	byte ptr data_75+3,0	; (020A:0019=0)
020A:3E6F  B9 001A				mov	cx,1Ah
020A:3E72  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E74  74 47				jz	loc_558			; Jump if zero
020A:3E76  3C 02				cmp	al,2
020A:3E78  72 48				jb	loc_559			; Jump if below
020A:3E7A  3C 0D				cmp	al,0Dh
020A:3E7C  77 05				ja	loc_554			; Jump if above
020A:3E7E  80 C4 76				add	ah,76h			; 'v'
020A:3E81  EB 3A				jmp	short loc_558		; (3EBD)
020A:3E83			loc_554:
020A:3E83  3C 57				cmp	al,57h			; 'W'
020A:3E85  72 08				jb	loc_555			; Jump if below
020A:3E87  2C 52				sub	al,52h			; 'R'
020A:3E89  BB 0544				mov	bx,544h
020A:3E8C  E9 01DC				jmp	locloop_597		; (406B)
020A:3E8F			loc_555:
020A:3E8F  F6 C7 02				test	bh,2
020A:3E92  74 1E				jz	loc_557			; Jump if zero
020A:3E94  F7 C5 8000				test	bp,8000h
020A:3E98  74 18				jz	loc_557			; Jump if zero
020A:3E9A  3C 1C				cmp	al,1Ch
020A:3E9C  75 06				jne	loc_556			; Jump if not equal
020A:3E9E  B8 A600				mov	ax,0A600h
020A:3EA1  E9 01DE				jmp	loc_598			; (4082)
020A:3EA4			loc_556:
020A:3EA4  3C 53				cmp	al,53h			; 'S'
020A:3EA6  74 25				je	loc_560			; Jump if equal
020A:3EA8  3C 35				cmp	al,35h			; '5'
020A:3EAA  75 BB				jne	loc_551			; Jump if not equal
020A:3EAC  B8 A400				mov	ax,0A400h
020A:3EAF  E9 01D0				jmp	loc_598			; (4082)
020A:3EB2			loc_557:
020A:3EB2  3C 3B				cmp	al,3Bh			; ';'
020A:3EB4  72 0C				jb	loc_559			; Jump if below
020A:3EB6  3C 44				cmp	al,44h			; 'D'
020A:3EB8  77 AD				ja	loc_551			; Jump if above
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 135

020A:3EBA  80 C4 2D				add	ah,2Dh			; '-'
020A:3EBD			loc_558:
020A:3EBD  32 C0				xor	al,al			; Zero register
020A:3EBF  E9 01C0				jmp	loc_598			; (4082)
020A:3EC2			loc_559:
020A:3EC2  F7 C5 8000				test	bp,8000h
020A:3EC6  74 9F				jz	loc_551			; Jump if zero
020A:3EC8  B0 F0				mov	al,0F0h
020A:3ECA  E9 01B5				jmp	loc_598			; (4082)
020A:3ECD			loc_560:
020A:3ECD  F7 C5 8000				test	bp,8000h
020A:3ED1  74 EA				jz	loc_558			; Jump if zero
020A:3ED3  04 50				add	al,50h			; 'P'
020A:3ED5  8A E0				mov	ah,al
020A:3ED7  EB E4				jmp	short loc_558		; (3EBD)
020A:3ED9			loc_561:
020A:3ED9  F6 C3 04				test	bl,4
020A:3EDC  75 03				jnz	loc_562			; Jump if not zero
020A:3EDE  E9 00B2				jmp	loc_575			; (3F93)
020A:3EE1			loc_562:
020A:3EE1  3C 46				cmp	al,46h			; 'F'
020A:3EE3  75 29				jne	loc_564			; Jump if not equal
020A:3EE5  F7 C5 0200				test	bp,200h
020A:3EE9  75 0A				jnz	loc_563			; Jump if not zero
020A:3EEB  F6 C7 10				test	bh,10h
020A:3EEE  74 05				jz	loc_563			; Jump if zero
020A:3EF0  F6 C7 02				test	bh,2
020A:3EF3  74 19				jz	loc_564			; Jump if zero
020A:3EF5			loc_563:
020A:3EF5  8B 1E 001A				mov	bx,data_79		; (020A:001A=0AE9Ch)
020A:3EF9  89 1E 001C				mov	word ptr data_79+2,bx	; (020A:001C=148Fh)
020A:3EFD  C6 06 0071 80			mov	byte ptr ds:[71h],80h	; (020A:0071=3Eh)
020A:3F02  B4 04				mov	ah,4
020A:3F04  C4					db	0C4h
020A:3F05  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3F07  CD 1B				int	1Bh			; Keyboard break (cntrl-break)
020A:3F09  2B C0				sub	ax,ax
020A:3F0B  E9 0174				jmp	loc_598			; (4082)
020A:3F0E			loc_564:
020A:3F0E  3C 45				cmp	al,45h			; 'E'
020A:3F10  75 3B				jne	loc_569			; Jump if not equal
020A:3F12  F6 C7 10				test	bh,10h
020A:3F15  74 06				jz	loc_565			; Jump if zero
020A:3F17  F7 C5 0200				test	bp,200h
020A:3F1B  74 30				jz	loc_569			; Jump if zero
020A:3F1D			loc_565:
020A:3F1D  80 0E 0018 08			or	byte ptr data_75+2,8	; (020A:0018=0)
020A:3F22  B0 AE				mov	al,0AEh
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:3F24			loc_566:
020A:3F24  E8 01C5				call	sub_51			; (40EC)
020A:3F27  B4 03				mov	ah,3
020A:3F29  C4					db	0C4h
020A:3F2A  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3F2C  E8 0209				call	sub_54			; (4138)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 136

020A:3F2F			loc_567:
020A:3F2F  B9 0010				mov	cx,10h
020A:3F32  33 C0				xor	ax,ax			; Zero register
020A:3F34  C4					db	0C4h
020A:3F35  C4 5A F6				les	bx,dword ptr [bp+si-0Ah]	; Load 32 bit ptr
020A:3F38  06					push	es
020A:3F39  18 00				sbb	[bx+si],al
020A:3F3B  08 74 04				or	[si+4],dh
020A:3F3E  E1 F7		;*		loopz	locloop_568		;*Loop if zf=1, cx>0
  
020A:3F3E  E1 F7				db	0E1h,0F7h
020A:3F40  75 ED				jnz	loc_567			; Jump if not zero
020A:3F42  E8 021B				call	sub_55			; (4160)
020A:3F45  80 26 0018 F7			and	byte ptr ds:[18h],0F7h	; (ss:0018=6Eh)
020A:3F4A  E9 FE55				jmp	loc_537			; (3DA2)
020A:3F4D			loc_569:
020A:3F4D  3C 37				cmp	al,37h			; '7'
020A:3F4F  75 1D				jne	loc_572			; Jump if not equal
020A:3F51  F7 C5 0200				test	bp,200h
020A:3F55  74 07				jz	loc_570			; Jump if zero
020A:3F57  F6 C7 02				test	bh,2
020A:3F5A  74 0C				jz	loc_571			; Jump if zero
020A:3F5C  EB 2F				jmp	short loc_574		; (3F8D)
020A:3F5E			loc_570:
020A:3F5E  F6 C7 10				test	bh,10h
020A:3F61  74 05				jz	loc_571			; Jump if zero
020A:3F63  F6 C7 02				test	bh,2
020A:3F66  74 25				jz	loc_574			; Jump if zero
020A:3F68			loc_571:
020A:3F68  B8 7200				mov	ax,7200h
020A:3F6B  E9 0114				jmp	loc_598			; (4082)
020A:3F6E			loc_572:
020A:3F6E  E8 F5B8		;*		call	sub_44			;*(3529)
020A:3F6E  E8 B8 F5				db	0E8h,0B8h,0F5h
020A:3F71  72 58				jc	loc_579			; Jump if carry Set
020A:3F73  3C 0F				cmp	al,0Fh
020A:3F75  74 16				je	loc_574			; Jump if equal
020A:3F77  3C 35				cmp	al,35h			; '5'
020A:3F79  75 0B				jne	loc_573			; Jump if not equal
020A:3F7B  F6 C7 02				test	bh,2
020A:3F7E  74 06				jz	loc_573			; Jump if zero
020A:3F80  B8 9500				mov	ax,9500h
020A:3F83  E9 00FC				jmp	loc_598			; (4082)
020A:3F86			loc_573:
020A:3F86  BB 0570				mov	bx,570h
020A:3F89  3C 3B				cmp	al,3Bh			; ';'
020A:3F8B  72 74				jb	loc_586			; Jump if below
020A:3F8D			loc_574:
020A:3F8D  BB 0570				mov	bx,570h
020A:3F90  E9 00D8				jmp	locloop_597		; (406B)
020A:3F93			loc_575:
020A:3F93  E8 F593		;*		call	sub_44			;*(3529)
020A:3F93  E8 93 F5				db	0E8h, 93h,0F5h
020A:3F96  72 33				jc	loc_579			; Jump if carry Set
020A:3F98  3C 37				cmp	al,37h			; '7'
020A:3F9A  75 32				jne	loc_580			; Jump if not equal
020A:3F9C  F7 C5 0200				test	bp,200h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 137

020A:3FA0  74 07				jz	loc_576			; Jump if zero
020A:3FA2  F6 C7 02				test	bh,2
020A:3FA5  74 0E				jz	loc_577			; Jump if zero
020A:3FA7  EB 4B				jmp	short loc_583		; (3FF4)
020A:3FA9			loc_576:
020A:3FA9  F6 C7 10				test	bh,10h
020A:3FAC  74 07				jz	loc_577			; Jump if zero
020A:3FAE  F6 C7 02				test	bh,2
020A:3FB1  75 07				jnz	loc_578			; Jump if not zero
020A:3FB3  EB 3F				jmp	short loc_583		; (3FF4)
020A:3FB5			loc_577:
020A:3FB5  F6 C3 03				test	bl,3
020A:3FB8  74 3A				jz	loc_583			; Jump if zero
020A:3FBA			loc_578:
020A:3FBA  80 26 0096 FC			and	byte ptr ds:[96h],0FCh	; (ss:0096=2Eh)
020A:3FBF  B4 03				mov	ah,3
020A:3FC1  C4					db	0C4h
020A:3FC2  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3FC4  55					push	bp
020A:3FC5  CD 05				int	5			; Print screen (status at 50:0h)
020A:3FC7  5D					pop	bp
020A:3FC8  E9 FDD7				jmp	loc_537			; (3DA2)
020A:3FCB			loc_579:
020A:3FCB  E9 FDB4				jmp	loc_533			; (3D82)
020A:3FCE			loc_580:
020A:3FCE  3C 3A				cmp	al,3Ah			; ':'
020A:3FD0  77 31				ja	loc_587			; Jump if above
020A:3FD2  F6 C7 08				test	bh,8
020A:3FD5  75 F4				jnz	loc_579			; Jump if not zero
020A:3FD7  3C 35				cmp	al,35h			; '5'
020A:3FD9  75 05				jne	loc_581			; Jump if not equal
020A:3FDB  F6 C7 02				test	bh,2
020A:3FDE  75 14				jnz	loc_583			; Jump if not zero
020A:3FE0			loc_581:
020A:3FE0  B9 001A				mov	cx,1Ah
020A:3FE3  BF 052A				mov	di,52Ah
020A:3FE6  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3FE8  75 05				jnz	loc_582			; Jump if not zero
020A:3FEA  F6 C3 40				test	bl,40h			; '@'
020A:3FED  75 0A				jnz	loc_584			; Jump if not zero
020A:3FEF			loc_582:
020A:3FEF  F6 C3 03				test	bl,3
020A:3FF2  75 0A				jnz	loc_585			; Jump if not zero
020A:3FF4			loc_583:
020A:3FF4  BB 05EE				mov	bx,5EEh
020A:3FF7  EB 5D				jmp	short loc_596		; (4056)
020A:3FF9			loc_584:
020A:3FF9  F6 C3 03				test	bl,3
020A:3FFC  75 F6				jnz	loc_583			; Jump if not zero
020A:3FFE			loc_585:
020A:3FFE  BB 066C				mov	bx,66Ch
020A:4001			loc_586:
020A:4001  EB 53				jmp	short loc_596		; (4056)
020A:4003			loc_587:
020A:4003  3C 44				cmp	al,44h			; 'D'
020A:4005  77 02				ja	loc_588			; Jump if above
020A:4007  EB 43				jmp	short loc_595		; (404C)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 138

020A:4009			loc_588:
020A:4009  3C 53				cmp	al,53h			; 'S'
020A:400B  77 31				ja	loc_593			; Jump if above
020A:400D  3C 4A				cmp	al,4Ah			; 'J'
020A:400F  74 ED				je	loc_585			; Jump if equal
020A:4011  3C 4E				cmp	al,4Eh			; 'N'
020A:4013  74 E9				je	loc_585			; Jump if equal
020A:4015  F6 C7 02				test	bh,2
020A:4018  75 0A				jnz	loc_589			; Jump if not zero
020A:401A  F6 C3 20				test	bl,20h			; ' '
020A:401D  75 18				jnz	loc_591			; Jump if not zero
020A:401F  F6 C3 03				test	bl,3
020A:4022  75 18				jnz	loc_592			; Jump if not zero
020A:4024			loc_589:
020A:4024  3C 4C				cmp	al,4Ch			; 'L'
020A:4026  75 0A				jne	loc_590			; Jump if not equal
020A:4028  F7 C5 8000				test	bp,8000h
020A:402C  74 57				jz	loc_599			; Jump if zero
020A:402E  B0 F0				mov	al,0F0h
020A:4030  EB 50				jmp	short loc_598		; (4082)
020A:4032			loc_590:
020A:4032  BB 05EE				mov	bx,5EEh
020A:4035  EB 34				jmp	short locloop_597	; (406B)
020A:4037			loc_591:
020A:4037  F6 C3 03				test	bl,3
020A:403A  75 E8				jnz	loc_589			; Jump if not zero
020A:403C			loc_592:
020A:403C  EB C0				jmp	short loc_585		; (3FFE)
020A:403E			loc_593:
020A:403E  3C 56				cmp	al,56h			; 'V'
020A:4040  75 04				jne	loc_594			; Jump if not equal
020A:4042  B0 3A				mov	al,3Ah			; ':'
020A:4044  EB 88				jmp	short loc_580		; (3FCE)
020A:4046			loc_594:
020A:4046  F7 C5 8000				test	bp,8000h
020A:404A  74 39				jz	loc_599			; Jump if zero
020A:404C			loc_595:
020A:404C  F6 C3 03				test	bl,3
020A:404F  74 D3				jz	loc_589			; Jump if zero
020A:4051  BB 066C				mov	bx,66Ch
020A:4054  EB 15				jmp	short locloop_597	; (406B)
020A:4056			loc_596:
020A:4056  FE C8				dec	al
020A:4058  2E: D7				xlat cs:[bx]			; al=[al+[bx]] table
020A:405A  F6 06 0096 02			test	byte ptr ds:[96h],2	; (ss:0096=2Eh)
020A:405F  74 21				jz	loc_598			; Jump if zero
020A:4061  F7 C5 8000				test	bp,8000h
020A:4065  74 1B				jz	loc_598			; Jump if zero
020A:4067  B4 E0				mov	ah,0E0h
020A:4069  EB 17				jmp	short loc_598		; (4082)
  
020A:406B			locloop_597:
020A:406B  FE C8				dec	al
020A:406D  2E: D7				xlat cs:[bx]			; al=[al+[bx]] table
020A:406F  8A E0				mov	ah,al
020A:4071  32 C0				xor	al,al			; Zero register
020A:4073  F6 06 0096 02			test	byte ptr ds:[96h],2	; (ss:0096=2Eh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 139

020A:4078  74 08				jz	loc_598			; Jump if zero
020A:407A  F7 C5 8000				test	bp,8000h
020A:407E  74 02				jz	loc_598			; Jump if zero
020A:4080  B0			data_582	db	0B0h
020A:4081  E0 E8				loopnz	locloop_597		; Loop if zf=0, cx>0
  
020A:4083  04 00				add	al,0
020A:4085			loc_599:
020A:4085  E9 FCFA				jmp	loc_533			; (3D82)
020A:4088  00 80 FFFC				add	[bx+si-4],al
020A:408C  74 48				jz	loc_604			; Jump if zero
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_50		proc	near
020A:408E  56					push	si
020A:408F  53					push	bx
020A:4090  1E					push	ds
020A:4091  BB 0040				mov	bx,40h
020A:4094  8E DB				mov	ds,bx
020A:4096  8B 1E 001C				mov	bx,word ptr ds:[1Ch]	; (0040:001C=20h)
020A:409A  8B F3				mov	si,bx
020A:409C  43					inc	bx
020A:409D  43					inc	bx
020A:409E  F7 C5 0800				test	bp,800h
020A:40A2  75 0B				jnz	loc_600			; Jump if not zero
020A:40A4  81 FB 003E				cmp	bx,3Eh
020A:40A8  75 0F				jne	loc_601			; Jump if not equal
020A:40AA  BB 001E				mov	bx,1Eh
020A:40AD  EB 0A				jmp	short loc_601		; (40B9)
020A:40AF			loc_600:
020A:40AF  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (0040:0082=3Eh)
020A:40B3  75 04				jne	loc_601			; Jump if not equal
020A:40B5  8B 1E 0080				mov	bx,word ptr ds:[80h]	; (0040:0080=1Eh)
020A:40B9			loc_601:
020A:40B9  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (0040:001A=20h)
020A:40BD  74 0E				je	loc_602			; Jump if equal
020A:40BF  89 04				mov	[si],ax
020A:40C1  89 1E 001C				mov	word ptr ds:[1Ch],bx	; (0040:001C=20h)
020A:40C5  2E: C6 06 0CA8 01			mov	cs:data_199,1		; (020A:0CA8=0A2h)
020A:40CB  EB 06				jmp	short loc_603		; (40D3)
020A:40CD			loc_602:
020A:40CD  2E: C6 06 06EA 01			mov	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:40D3			loc_603:
020A:40D3  1F					pop	ds
020A:40D4  5B					pop	bx
020A:40D5  5E					pop	si
020A:40D6			loc_604:
020A:40D6  C3					retn
				sub_50		endp
  
020A:40D7  2E: 80 3E 06EA 01			cmp	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:40DD  75 0C				jne	loc_605			; Jump if not equal
020A:40DF  2E: C6 06 06EA 00			mov	byte ptr cs:[6EAh],0	; (020A:06EA=32h)
020A:40E5  B4 0E				mov	ah,0Eh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 140

020A:40E7  B0 07				mov	al,7
020A:40E9  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:40EB			loc_605:
020A:40EB  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_51		proc	near
020A:40EC  E6 64				out	64h,al			; port 64h, kybd cntrlr functn
020A:40EE  C3					retn
				sub_51		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_52		proc	near
020A:40EF  F6 06 0097 40			test	byte ptr ds:[97h],40h	; (0040:0097=0) '@'
020A:40F4  75 1B				jnz	loc_606			; Jump if not zero
020A:40F6  80 0E 0097 40			or	byte ptr ds:[97h],40h	; (0040:0097=0) '@'
020A:40FB  E8 0014				call	sub_53			; (4112)
020A:40FE  80 26 0097 F8			and	byte ptr ds:[97h],0F8h	; (0040:0097=0)
020A:4103  08 06 0097				or	byte ptr ds:[97h],al	; (0040:0097=0)
020A:4107  B4 03				mov	ah,3
020A:4109  C4					db	0C4h
020A:410A  C4 16 2680				les	dx,dword ptr ds:[2680h]	; (0040:2680=1174h) Load 32 bit ptr
020A:410E  97					xchg	ax,di
020A:410F  00 3F				add	[bx],bh
020A:4111			loc_606:
020A:4111  C3					retn
				sub_52		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_53		proc	near
020A:4112  51					push	cx
020A:4113  A0 0017				mov	al,byte ptr ds:[17h]	; (0040:0017=0)
020A:4116  24 70				and	al,70h			; 'p'
020A:4118  B1 04				mov	cl,4
020A:411A  D2 C0				rol	al,cl			; Rotate
020A:411C  24 07				and	al,7
020A:411E  59					pop	cx
020A:411F  C3					retn
				sub_53		endp
  
020A:4120  50					push	ax
020A:4121  51					push	cx
020A:4122  B9 03E3				mov	cx,3E3h
  
020A:4125			locloop_607:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 141

020A:4125  E4 61				in	al,61h			; port 61h, 8255 port B, read
020A:4127  24 10				and	al,10h
020A:4129  3A C4				cmp	al,ah
020A:412B  74 F8				je	locloop_607		; Jump if equal
020A:412D  8A E0				mov	ah,al
020A:412F  E4 64				in	al,64h			; port 64h, keyboard status
020A:4131  A8 02				test	al,2
020A:4133  E0 F0				loopnz	locloop_607		; Loop if zf=0, cx>0
  
020A:4135  59					pop	cx
020A:4136  58					pop	ax
020A:4137  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_54		proc	near
020A:4138  1E					push	ds
020A:4139  50					push	ax
020A:413A  B8 0040				mov	ax,40h
020A:413D  8E D8				mov	ds,ax
020A:413F  9F					lahf				; Load ah from flags
020A:4140  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:4146  75 14				jnz	loc_609			; Jump if not zero
020A:4148  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:414E  75 0C				jnz	loc_609			; Jump if not zero
020A:4150  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:4157			loc_608:
020A:4157  9E					sahf				; Store ah into flags
020A:4158  58					pop	ax
020A:4159  1F					pop	ds
020A:415A  EB 03				jmp	short loc_610		; (415F)
020A:415C			loc_609:
020A:415C  FB					sti				; Enable interrupts
020A:415D  EB F8				jmp	short loc_608		; (4157)
020A:415F			loc_610:
020A:415F  C3					retn
				sub_54		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_55		proc	near
020A:4160  1E					push	ds
020A:4161  50					push	ax
020A:4162  B8 0040				mov	ax,40h
020A:4165  8E D8				mov	ds,ax
020A:4167  9F					lahf				; Load ah from flags
020A:4168  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:416E  75 0C				jnz	loc_612			; Jump if not zero
020A:4170  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:4177			loc_611:
020A:4177  9E					sahf				; Store ah into flags
020A:4178  58					pop	ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 142

020A:4179  1F					pop	ds
020A:417A  EB 03				jmp	short loc_613		; (417F)
020A:417C			loc_612:
020A:417C  FA					cli				; Disable interrupts
020A:417D  EB F8				jmp	short loc_611		; (4177)
020A:417F			loc_613:
020A:417F  C3					retn
				sub_55		endp
  
020A:4180			loc_614:
020A:4180  1E					push	ds
020A:4181  50					push	ax
020A:4182  B8 0040				mov	ax,40h
020A:4185  8E D8				mov	ds,ax
020A:4187  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:418D  75 4F				jnz	loc_622			; Jump if not zero
020A:418F  55					push	bp
020A:4190  8B EC				mov	bp,sp
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_56		proc	near
020A:4192  8B 46 0A				mov	ax,[bp+0Ah]
020A:4195  5D					pop	bp
020A:4196  A9 0100				test	ax,100h
020A:4199  75 43				jnz	loc_622			; Jump if not zero
020A:419B  A9 0200				test	ax,200h
020A:419E  74 22				jz	loc_618			; Jump if zero
020A:41A0  F0> 81 0E 0314 0200	           lock	or	data_161,200h		; (020A:0314=3231h)
020A:41A7  F7 06 0314 0003			test	data_161,3		; (020A:0314=3231h)
020A:41AD  75 2F				jnz	loc_622			; Jump if not zero
020A:41AF			loc_615:
020A:41AF  86 E0				xchg	ah,al
020A:41B1  FC					cld				; Clear direction
020A:41B2  A8 04				test	al,4
020A:41B4  75 25				jnz	loc_621			; Jump if not zero
020A:41B6			loc_616:
020A:41B6  A8 08				test	al,8
020A:41B8  75 11				jnz	loc_619			; Jump if not zero
020A:41BA  70 19				jo	loc_620			; Jump if overflow=1
020A:41BC			loc_617:
020A:41BC  9E					sahf				; Store ah into flags
020A:41BD  58					pop	ax
020A:41BE  1F					pop	ds
020A:41BF  CA 0002				retf	2			; Return far
020A:41C2			loc_618:
020A:41C2  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (ss:0314=0BE00h)
020A:41C9  EB E4				jmp	short loc_615		; (41AF)
020A:41CB			loc_619:
020A:41CB  70 EF				jo	loc_617			; Jump if overflow=1
020A:41CD  50					push	ax
020A:41CE  B0 7F				mov	al,7Fh
020A:41D0  04 02				add	al,2
020A:41D2  58					pop	ax
020A:41D3  EB E7				jmp	short loc_617		; (41BC)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 143

020A:41D5			loc_620:
020A:41D5  50					push	ax
020A:41D6  32 C0				xor	al,al			; Zero register
020A:41D8  58					pop	ax
020A:41D9  EB E1				jmp	short loc_617		; (41BC)
020A:41DB			loc_621:
020A:41DB  FD					std				; Set direction flag
020A:41DC  EB D8				jmp	short loc_616		; (41B6)
020A:41DE			loc_622:
020A:41DE  58					pop	ax
020A:41DF  1F					pop	ds
020A:41E0  CF					iret				; Interrupt return
				sub_56		endp
  
020A:41E1  000F[00]				db	15 dup (0)
020A:41F0  80 FC AD				cmp	ah,0ADh
020A:41F3  74 05				je	loc_624			; Jump if equal
020A:41F5			loc_623:
020A:41F5  2E: FF 2E 0EC9			jmp	dword ptr cs:[0EC9h]	; (020A:0EC9=0B901h)
020A:41FA			loc_624:
020A:41FA  55					push	bp
020A:41FB  8B EC				mov	bp,sp
020A:41FD  83			data_584	db	83h
020A:41FE  0666			data_585	dw	666h
020A:4200  FE					db	0FEh
020A:4201  E8			data_586	db	0E8h
020A:4202  03			data_587	db	3
020A:4203  00			data_588	db	0
020A:4204  5D			data_589	db	5Dh
020A:4205  EB			data_590	db	0EBh
020A:4206  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_57		proc	near
020A:4207  3C 80				cmp	al,80h
020A:4209  75 0C				jne	loc_625			; Jump if not equal
020A:420B  B8 FFFF				mov	ax,0FFFFh
020A:420E  BB 0100				mov	bx,100h
020A:4211  BF 0EC5				mov	di,0EC5h
020A:4214  0E					push	cs
020A:4215  07					pop	es
020A:4216  C3					retn
020A:4217			loc_625:
020A:4217  3C 81				cmp	al,81h
020A:4219  75 28				jne	loc_630			; Jump if not equal
020A:421B  2E: 8B 36 0EE3			mov	si,cs:data_212		; (020A:0EE3=0A6F3h)
020A:4220			loc_626:
020A:4220  83 FE FF				cmp	si,0FFFFh
020A:4223  74 16				je	loc_628			; Jump if equal
020A:4225  2E: 3B 5C 02				cmp	bx,cs:[si+2]
020A:4229  75 0B				jne	loc_627			; Jump if not equal
020A:422B  2E: 89 36 0EE1			mov	word ptr cs:[0EE1h],si	; (020A:0EE1=0FC00h)
020A:4230  2E: 89 1E 0EDD			mov	word ptr cs:[0EDDh],bx	; (020A:0EDD=1C5h)
020A:4235  C3					retn
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 144

020A:4236			loc_627:
020A:4236  2E: 8B 34				mov	si,cs:[si]
020A:4239  EB E5				jmp	short loc_626		; (4220)
020A:423B			loc_628:
020A:423B  B8 0001				mov	ax,1
020A:423E			loc_629:
020A:423E  83 4E 06 01				or	word ptr [bp+6],1
020A:4242  C3					retn
020A:4243			loc_630:
020A:4243  3C 82				cmp	al,82h
020A:4245  75 46				jne	loc_634			; Jump if not equal
020A:4247  FE C3				inc	bl
020A:4249  80 FB 02				cmp	bl,2
020A:424C  FE CB				dec	bl
020A:424E  73 EE				jnc	loc_629			; Jump if carry=0
020A:4250  2E: 88 1E 06EF			mov	cs:data_176,bl		; (020A:06EF=0CDh)
020A:4255  EB 36				jmp	short loc_634		; (428D)
020A:4257			loc_631:
020A:4257  3C 83				cmp	al,83h
020A:4259  75 1A				jne	loc_633			; Jump if not equal
020A:425B  33 C0				xor	ax,ax			; Zero register
020A:425D  2E: 0A 06 06EF			or	al,cs:data_176		; (020A:06EF=0CDh)
020A:4262  74 10				jz	loc_632			; Jump if zero
020A:4264  2E: F7 06 0EEB 1000			test	cs:data_215,1000h	; (020A:0EEB=16FFh)
020A:426B  74 07				jz	loc_632			; Jump if zero
020A:426D  2E: A0 0116				mov	al,byte ptr cs:data_124+2	; (020A:0116=0)
020A:4271  24 01				and	al,1
020A:4273  40					inc	ax
020A:4274			loc_632:
020A:4274  C3					retn
020A:4275			loc_633:
020A:4275  3C 84				cmp	al,84h
020A:4277  75 14				jne	loc_634			; Jump if not equal
020A:4279  2E: 8A 3E 0116			mov	bh,byte ptr cs:data_124+2	; (020A:0116=0)
020A:427E  F6 C3 FE				test	bl,0FEh
020A:4281  75 D4				jnz	loc_631			; Jump if not zero
020A:4283  80 E7 FE				and	bh,0FEh
020A:4286  0A FB				or	bh,bl
020A:4288  2E: 88 3E 0116			mov	byte ptr cs:data_124+2,bh	; (020A:0116=0)
020A:428D			loc_634:
020A:428D  C3					retn
				sub_57		endp
  
020A:428E  00 00				add	[bx+si],al
020A:4290  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4292  26: C6 06 0ED5 01			mov	es:data_209,1		; (020A:0ED5=1)
020A:4298  CD 21				int	21h			; DOS Services  ah=function 00h
										;  terminate, cs=progm seg prefx
020A:429A  53					push	bx
020A:429B  48					dec	ax
020A:429C  41					inc	cx
020A:429D  52					push	dx
020A:429E  45					inc	bp
020A:429F  44					inc	sp
020A:42A0  20 44 41				and	[si+41h],al
020A:42A3  54					push	sp
020A:42A4  41					inc	cx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 145

020A:42A5  0A 04				or	al,[si]
020A:42A7  0A 02				or	al,[bp+si]
020A:42A9  50					push	ax
020A:42AA  09 AD 00D3				or	data_116[di],bp		; (020A:00D3=40h)
020A:42AE  00 00				add	[bx+si],al
020A:42B0  00 00				add	[bx+si],al
020A:42B2  10 40 80				adc	[bx+si-80h],al
020A:42B5  01 00				add	[bx+si],ax
020A:42B7  00			data_594	db	0
020A:42B8  00 00				add	[bx+si],al
020A:42BA  00 52 55				add	[bp+si+55h],dl
020A:42BD  62					db	62h
020A:42BE  03 00				add	ax,[bx+si]
020A:42C0  00 62 0F				add	[bp+si+0Fh],ah
020A:42C3  62					db	62h
020A:42C4  0F			data_597	db	0Fh
020A:42C5  C5 17				lds	dx,dword ptr [bx]	; Load 32 bit ptr
020A:42C7  F4					hlt				; Halt processor
020A:42C8  480E			data_599	dw	480Eh
020A:42CA  000F			data_600	dw	0Fh
020A:42CC  0030			data_601	dw	30h
020A:42CE  3C3B			data_602	dw	3C3Bh
020A:42D0  0000			data_603	dw	0
020A:42D2  0000			data_604	dw	0
020A:42D4  0054			data_605	dw	54h
020A:42D6  3000			data_606	dw	3000h
020A:42D8  8050			data_607	dw	8050h
020A:42DA  0404			data_608	dw	404h
020A:42DC  200C			data_609	dw	200Ch
020A:42DE  4014			data_610	dw	4014h
020A:42E0  0200			data_611	dw	200h
020A:42E2  B0A0			data_612	dw	0B0A0h
020A:42E4  0030			data_613	dw	30h
020A:42E6  A001			data_614	dw	0A001h
020A:42E8  8F60			data_615	dw	8F60h
020A:42EA  3030			data_616	dw	3030h
020A:42EC  0092			data_617	dw	92h
020A:42EE  3000			data_618	dw	3000h
020A:42F0  0C			data_619	db	0Ch
020A:42F1  0C40			data_620	dw	0C40h
020A:42F3  0520			data_621	dw	520h
020A:42F5  1B01			data_622	dw	1B01h
020A:42F7  0402			data_623	dw	402h
020A:42F9  4080			data_624	dw	4080h
020A:42FB  06					push	es
020A:42FC  00 40 40				add	[bx+si+40h],al
020A:42FF  2003			data_625	dw	2003h
020A:4301  0440			data_626	dw	440h
020A:4303  30 20				xor	[bx+si],ah
020A:4305  40					inc	ax
020A:4306  05 4000				add	ax,4000h
020A:4309  40					inc	ax
020A:430A  04 20				add	al,20h			; ' '
020A:430C  40					inc	ax
020A:430D  03 30				add	si,[bx+si]
020A:430F  30 30				xor	[bx+si],dh
020A:4311  20 80 6000				and	byte ptr ds:[6000h][bx+si],al	; (0010:6000=21h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 146

020A:4315  8004			data_630	dw	8004h
020A:4317  0740			data_631	dw	740h
020A:4319  30			data_632	db	30h
020A:431A  20 03				and	[bp+di],al
020A:431C  08 1C				or	[si],bl
020A:431E  80 40 07 30				add	byte ptr [bx+si+7],30h	; '0'
020A:4322  30 30				xor	[bx+si],dh
020A:4324  30 92 0000				xor	[bp+si+0],dl
020A:4328  FF					db	0FFh
020A:4329  FF					db	0FFh
020A:432A  FF					db	0FFh
020A:432B  FF 14				call	word ptr [si]		;*
020A:432D  00 8F FFFF				add	[bx-1],cl
020A:4331  FF					db	0FFh
020A:4332  FF 03				inc	word ptr [bp+di]
020A:4334  00 2A				add	[bp+si],ch
020A:4336  05 3600				add	ax,3600h
020A:4339  05 1D01				add	ax,1D01h
020A:433C  05 0001				add	ax,1
020A:433F  00 00				add	[bx+si],al
020A:4341  00 48 0F				add	[bx+si+0Fh],cl
020A:4344  62					db	62h
020A:4345  03 0F				add	cx,[bx]
020A:4347  00 05				add	[di],al
020A:4349  FF					db	0FFh
020A:434A  FF					db	0FFh
020A:434B  FF					db	0FFh
020A:434C  FF 06 C000				inc	word ptr ds:[0C000h]	; (0010:C000=15EEh)
020A:4350  01 35				add	[di],si
020A:4352  2E: 00 00				add	cs:[bx+si],al
020A:4355  1B 00				sbb	ax,[bx+si]
020A:4357  06					push	es
020A:4358  FF					db	0FFh
020A:4359  FF					db	0FFh
020A:435A  FF					db	0FFh
020A:435B  FF 12				call	word ptr [bp+si]
020A:435D  00 C0				add	al,al
020A:435F  07					pop	es
020A:4360  03 22				add	sp,[bp+si]
020A:4362  04 FC				add	al,0FCh
020A:4364  05 073B				add	ax,73Bh
020A:4367  3A 08				cmp	cl,[bx+si]
020A:4369  3F					aas				; Ascii adjust
020A:436A  2B 2F				sub	bp,[bx]
020A:436C  35 002C				xor	ax,2Ch
020A:436F  00 25				add	[di],ah
020A:4371  00 07				add	[bx],al
020A:4373  FF					db	0FFh
020A:4374  FF					db	0FFh
020A:4375  FF					db	0FFh
020A:4376  FF 1C				call	dword ptr [si]		;*
020A:4378  00 C0				add	al,al
020A:437A  0C 03				or	al,3
020A:437C  40					inc	ax
020A:437D  04 23				add	al,23h			; '#'
020A:437F  05 07FD				add	ax,7FDh
020A:4382  5E					pop	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 147

020A:4383  08 26 2409				or	byte ptr ds:[2409h],ah	; (0010:2409=5)
020A:4387  1A 5B 1B				sbb	bl,[bp+di+1Bh]
020A:438A  5D					pop	bp
020A:438B  2B 7C 33				sub	di,[si+33h]
020A:438E  343C			data_634	dw	343Ch
020A:4390  353E			data_635	dw	353Eh
020A:4392  2F			data_636	db	2Fh
020A:4393  00 00				add	[bx+si],al
020A:4395  43					inc	bx
020A:4396  00 03				add	[bp+di],al
020A:4398  FF					db	0FFh
020A:4399  FF					db	0FFh
020A:439A  FF					db	0FFh
020A:439B  FF 11				call	word ptr [bx+di]	;*
020A:439D  00 80 1B10				add	byte ptr ds:[1B10h][bx+si],al	; (0010:1B10=10h)
020A:43A1  A9 E3E6				test	ax,0E3E6h
020A:43A4  AA					stosb				; Store al to es:[di]
020A:43A5  A5					movsw				; Mov [si] to es:[di]
020A:43A6  AD					lodsw				; String [si] to ax
020A:43A7  A3 E9E8				mov	word ptr ds:[0E9E8h],ax	; (0010:E9E8=260Fh)
020A:43AA  A7					cmpsw				; Cmp [si] to es:[di]
020A:43AB  E5 EA				in	ax,0EAh			; port 0EAh
020A:43AD  0A 00				or	al,[bx+si]
020A:43AF  80 1E E422 EB			sbb	byte ptr ds:[0E422h],0EBh	; (0010:E422=0B0h)
020A:43B4  A2 AFA0				mov	byte ptr ds:[0AFA0h],al	; (0010:AFA0=0FAh)
020A:43B7  0B 00				or	ax,[bx+si]
020A:43B9  80 24 29				and	byte ptr [si],29h	; ')'
020A:43BC  AE					scasb				; Scan es:[di] for al
020A:43BD  AB					stosw				; Store ax to es:[di]
020A:43BE  A4					movsb				; Mov [si] to es:[di]
020A:43BF  A6					cmpsb				; Cmp [si] to es:[di]
020A:43C0  ED					in	ax,dx			; port 1828h
020A:43C1  F1					db	0F1h
020A:43C2  0E					push	cs
020A:43C3  00 80 342C				add	byte ptr ds:[342Ch][bx+si],al	; (0010:342C=0)
020A:43C7  EF					out	dx,ax			; port 1828h
020A:43C8  E7 E1				out	0E1h,ax			; port 0E1h, Memory encode reg1
020A:43CA  AC					lodsb				; String [si] to al
020A:43CB  A8 E2				test	al,0E2h
020A:43CD  EC					in	al,dx			; port 1828h
020A:43CE  A1 06EE				mov	ax,word ptr ds:[6EEh]	; (0010:06EE=15C0h)
020A:43D1  00 60 01				add	[bx+si+1],ah
020A:43D4  23 E0				and	sp,ax
020A:43D6  00 00				add	[bx+si],al
020A:43D8  3E					db	3Eh
020A:43D9  00 04				add	[si],al
020A:43DB  FF					db	0FFh
020A:43DC  FF					db	0FFh
020A:43DD  FF					db	0FFh
020A:43DE  FF 11				call	word ptr [bx+di]	;*
020A:43E0  00 80 1B10				add	byte ptr ds:[1B10h][bx+si],al	; (0010:1B10=10h)
020A:43E4  89 96 8A93				mov	[bp-756Dh],dx
020A:43E8  85 8D 9883				test	cx,word ptr ds:[9883h][di]	; (0010:9883=8303h)
020A:43EC  99					cwd				; Word to double word
020A:43ED  87 95 109A				xchg	dx,word ptr ds:[109Ah][di]	; (0010:109A=0)
020A:43F1  00 80 281E				add	byte ptr ds:[281Eh][bx+si],al	; (0010:281E=0)
020A:43F5  94					xchg	ax,sp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 148

020A:43F6  9B					db	9Bh
020A:43F7  82 80 908F 8E			add	byte ptr ds:[908Fh][bx+si],8Eh	; (0010:908F=3Fh)
020A:43FC  8B 84 9D86				mov	ax,word ptr ds:[9D86h][si]	; (0010:9D86=7501h)
020A:4400  0E					push	cs
020A:4401  00 80 342C				add	byte ptr ds:[342Ch][bx+si],al	; (0010:342C=0)
020A:4405  9F					lahf				; Load ah from flags
020A:4406  97					xchg	ax,di
020A:4407  91					xchg	ax,cx
020A:4408  8C 88 9C92				mov	word ptr ds:[9C92h][bx+si],cs	; (0010:9C92=6E06h)
020A:440C  81 9E 0006 0160			sbb	word ptr [bp+6],160h
020A:4412  29 F0				sub	ax,si
020A:4414  00 00				add	[bx+si],al
020A:4416  00 00				add	[bx+si],al
020A:4418  18 BA 8F8E				sbb	[bp+si-7072h],bh
020A:441C  EB 13				jmp	short loc_636		; (4431)
020A:441E  B4 59				mov	ah,59h			; 'Y'
020A:4420  33 DB				xor	bx,bx			; Zero register
020A:4422  CD 21				int	21h			; DOS Services  ah=function 59h
										;  get extended error info in ax
020A:4424  3D 0041				cmp	ax,41h
020A:4427  75 05				jne	loc_635			; Jump if not equal
020A:4429  BA 8D8E				mov	dx,8D8Eh
020A:442C  EB 03				jmp	short loc_636		; (4431)
020A:442E			loc_635:
020A:442E  BA 8D80				mov	dx,8D80h
020A:4431			loc_636:
020A:4431  E9 08E0				jmp	loc_754			; (4D14)
020A:4434  B4 66				mov	ah,66h			; 'f'
020A:4436  B0 01				mov	al,1
020A:4438  CD 21				int	21h			; DOS Services  ah=function 66h
										;  get/set global code page
020A:443A  89 1E 9AC7				mov	word ptr ds:[9AC7h],bx	; (0010:9AC7=0FEFFh)
020A:443E  BA 8D9C				mov	dx,8D9Ch
020A:4441  E8 2E9D				call	sub_111			; (72E1)
020A:4444  C3					retn
020A:4445  1E					push	ds
020A:4446  07					pop	es
020A:4447  BE 0081				mov	si,81h
020A:444A  BF 930F				mov	di,930Fh
020A:444D  33 C9				xor	cx,cx			; Zero register
020A:444F  33 D2				xor	dx,dx			; Zero register
020A:4451  E8 00E2				call	sub_59			; (4536)
020A:4454  BF 95D8				mov	di,95D8h
020A:4457  3D			data_637	db	3Dh
020A:4458  FF					db	0FFh
020A:4459  FF 74 0E				push	word ptr [si+0Eh]
020A:445C  3D 0000				cmp	ax,0
020A:445F  75 36				jne	loc_642			; Jump if not equal
020A:4461  80 3E A48D 06			cmp	byte ptr data_759,6	; (020A:A48D=0E8h)
020A:4466  74 09				je	loc_638			; Jump if equal
020A:4468  EB 19				jmp	short loc_639		; (4483)
020A:446A			loc_637:
020A:446A  B4 00				mov	ah,0
020A:446C  B0 2E				mov	al,2Eh			; '.'
020A:446E  AB					stosw				; Store ax to es:[di]
020A:446F  EB 29				jmp	short loc_643		; (449A)
020A:4471			loc_638:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 149

020A:4471  56					push	si
020A:4472  BE A491				mov	si,0A491h
020A:4475  AC					lodsb				; String [si] to al
020A:4476  04 40				add	al,40h			; '@'
020A:4478  AA					stosb				; Store al to es:[di]
020A:4479  B8 2E3A				mov	ax,2E3Ah
020A:447C  AB					stosw				; Store ax to es:[di]
020A:447D  B0 00				mov	al,0
020A:447F  AA					stosb				; Store al to es:[di]
020A:4480  5E					pop	si
020A:4481  EB 0C				jmp	short loc_641		; (448F)
020A:4483			loc_639:
020A:4483  56					push	si
020A:4484  C5 36 A491				lds	si,data_760		; (020A:A491=168Bh) Load 32 bit ptr
020A:4488			loc_640:
020A:4488  AC					lodsb				; String [si] to al
020A:4489  AA					stosb				; Store al to es:[di]
020A:448A  3C 00				cmp	al,0
020A:448C  75 FA				jne	loc_640			; Jump if not equal
020A:448E  5E					pop	si
020A:448F			loc_641:
020A:448F  BF 930F				mov	di,930Fh
020A:4492  E8 008A				call	sub_58			; (451F)
020A:4495  74 03				jz	loc_643			; Jump if zero
020A:4497			loc_642:
020A:4497  E9 087A				jmp	loc_754			; (4D14)
020A:449A			loc_643:
020A:449A  BE 95D8				mov	si,95D8h
020A:449D  BF 970B				mov	di,970Bh
020A:44A0  B4 60				mov	ah,60h			; '`'
020A:44A2  CD 21				int	21h			; DOS Services  ah=function 60h
										;  resolve path ds:si to es:di
020A:44A4  73 11				jnc	loc_644			; Jump if carry=0
020A:44A6  E8 FB9A		;*		call	sub_47			;*(4043)
020A:44A6  E8 9A FB				db	0E8h, 9Ah,0FBh
020A:44A9  C7 06 9B4D 95D8			mov	word ptr ds:[9B4Dh],95D8h	; (0092:9B4D=672h)
020A:44AF  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (0092:8D23=0EDh)
020A:44B4  E9 085D				jmp	loc_754			; (4D14)
020A:44B7			loc_644:
020A:44B7  C7 06 9B4D 970B			mov	word ptr ds:[9B4Dh],970Bh	; (0092:9B4D=672h)
020A:44BD  BA 8EE8				mov	dx,8EE8h
020A:44C0  E8 04A3				call	sub_80			; (4966)
020A:44C3  E8 2E0C				call	sub_109			; (72D2)
020A:44C6  C3					retn
020A:44C7  1E					push	ds
020A:44C8  8E 1E 995F				mov	ds,data_727		; (020A:995F=16FAh)
020A:44CC  80 3E 02B0 00			cmp	byte ptr ds:[2B0h],0	; (16FA:02B0=8Ah)
020A:44D1  74 0B				je	loc_645			; Jump if equal
020A:44D3  83 3E 02B1 FF			cmp	word ptr ds:[2B1h],0FFFFh	; (16FA:02B1=0B4E9h)
020A:44D8  74 13				je	loc_646			; Jump if equal
020A:44DA  C4					db	0C4h
020A:44DB  C4 54 00				les	dx,dword ptr [si+0]	; Load 32 bit ptr
020A:44DE			loc_645:
020A:44DE  B8 122E				mov	ax,122Eh
020A:44E1  B2 05				mov	dl,5
020A:44E3  8B 3E 02C7				mov	di,word ptr ds:[2C7h]	; (16FA:02C7=3C77h)
020A:44E7  8E 06 02C9				mov	es,word ptr ds:[2C9h]	; (16FA:02C9=7420h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 150

020A:44EB  CD 2F				int	2Fh			; Multiplex/Spooler al=func 2Eh
020A:44ED			loc_646:
020A:44ED  1F					pop	ds
020A:44EE  E8 031B				call	sub_75			; (480C)
020A:44F1  8E 06 995F				mov	es,data_727		; (020A:995F=16FAh)
020A:44F5  26: A1 024B				mov	ax,word ptr es:[24Bh]	; (16FA:024B=6C6h)
020A:44F9  26: A3 0016				mov	word ptr es:[16h],ax	; (16FA:0016=0F24h)
020A:44FD  26: A1 024D				mov	ax,word ptr es:[24Dh]	; (16FA:024D=386Eh)
020A:4501  26: A3 000A				mov	word ptr es:[0Ah],ax	; (16FA:000A=0F88Ah)
020A:4505  26: A1 024F				mov	ax,word ptr es:[24Fh]	; (16FA:024F=0B400h)
020A:4509  26: A3 000C				mov	word ptr es:[0Ch],ax	; (16FA:000C=0C38Ah)
020A:450D  06					push	es
020A:450E  8E 06 996F				mov	es,data_730		; (020A:996F=7500h)
020A:4512  B4 49				mov	ah,49h			; 'I'
020A:4514  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:4516  07					pop	es
020A:4517  B4 4C				mov	ah,4Ch			; 'L'
020A:4519  26: A0 02A7				mov	al,byte ptr es:[2A7h]	; (16FA:02A7=0CBh)
020A:451D  CD 21				int	21h			; DOS Services  ah=function 4Ch
										;  terminate with al=return code
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_58		proc	near
020A:451F  33 D2				xor	dx,dx			; Zero register
020A:4521  89 36 9AC5				mov	word ptr ds:[9AC5h],si	; (0092:9AC5=47Ch)
020A:4525  E8 2D9E				call	sub_108			; (72C6)
020A:4528  3C FF				cmp	al,0FFh
020A:452A  74 09				je	loc_648			; Jump if equal
020A:452C  3D 0000				cmp	ax,0
020A:452F  75 01				jne	loc_647			; Jump if not equal
020A:4531  40					inc	ax
020A:4532			loc_647:
020A:4532  E8 0015				call	sub_60			; (454A)
020A:4535			loc_648:
020A:4535  C3					retn
				sub_58		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_59		proc	near
020A:4536  89 36 9AC5				mov	data_736,si		; (020A:9AC5=0E1E2h)
020A:453A  E8 2D89				call	sub_108			; (72C6)
020A:453D  3C FF				cmp	al,0FFh
020A:453F  74 08				je	loc_649			; Jump if equal
020A:4541  3D 0000				cmp	ax,0
020A:4544  74 03				je	loc_649			; Jump if equal
020A:4546  E8 0001				call	sub_60			; (454A)
020A:4549			loc_649:
020A:4549  C3					retn
				sub_59		endp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 151

  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_60		proc	near
020A:454A  C6 06 8D1F 02			mov	byte ptr ds:[8D1Fh],2	; (0092:8D1F=0BEh)
020A:454F  BA 8D21				mov	dx,8D21h
020A:4552  C6 04 00				mov	byte ptr [si],0
020A:4555  A3 8D21				mov	word ptr ds:[8D21h],ax	; (0092:8D21=3242h)
020A:4558  3D 0002				cmp	ax,2
020A:455B  74 0D				je	loc_650			; Jump if equal
020A:455D  8B 36 9AC5				mov	si,word ptr ds:[9AC5h]	; (0092:9AC5=47Ch)
020A:4561  89 36 9B4D				mov	word ptr ds:[9B4Dh],si	; (0092:9B4D=672h)
020A:4565  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (0092:8D23=0EDh)
020A:456A			loc_650:
020A:456A  46					inc	si
020A:456B  C3					retn
				sub_60		endp
  
020A:456C  E8 00FE				call	sub_61			; (466D)
020A:456F  E8 01B5				call	sub_67			; (4727)
020A:4572  56					push	si
020A:4573  E8 01A3				call	sub_66			; (4719)
020A:4576  5E					pop	si
020A:4577  75 01				jnz	loc_652			; Jump if not zero
020A:4579			loc_651:
020A:4579  C3					retn
020A:457A			loc_652:
020A:457A  E8 017D				call	sub_65			; (46FA)
020A:457D  E8 0199				call	sub_66			; (4719)
020A:4580  56					push	si
020A:4581  EB 53				jmp	short loc_658		; (45D6)
020A:4583			loc_653:
020A:4583  E9 00BE				jmp	loc_665			; (4644)
020A:4586  E8 0190				call	sub_66			; (4719)
020A:4589  74 F8				jz	loc_653			; Jump if zero
020A:458B  33 DB				xor	bx,bx			; Zero register
020A:458D  56					push	si
020A:458E			loc_654:
020A:458E  AC					lodsb				; String [si] to al
020A:458F  3C 0D				cmp	al,0Dh
020A:4591  74 0F				je	loc_655			; Jump if equal
020A:4593  3C 3D				cmp	al,3Dh			; '='
020A:4595  75 F7				jne	loc_654			; Jump if not equal
020A:4597  FE C3				inc	bl
020A:4599  80 3C 0D				cmp	byte ptr [si],0Dh
020A:459C  75 F0				jne	loc_654			; Jump if not equal
020A:459E  FE C7				inc	bh
020A:45A0  EB EC				jmp	short loc_654		; (458E)
020A:45A2			loc_655:
020A:45A2  5E					pop	si
020A:45A3  FE CB				dec	bl
020A:45A5  74 06				jz	loc_656			; Jump if zero
020A:45A7  BA 8DB9				mov	dx,8DB9h
020A:45AA  E9 0767				jmp	loc_754			; (4D14)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 152

020A:45AD			loc_656:
020A:45AD  53					push	bx
020A:45AE  E8 00BF				call	sub_62			; (4670)
020A:45B1  5B					pop	bx
020A:45B2  FE CF				dec	bh
020A:45B4  74 C3				jz	loc_ret_651		; Jump if zero
020A:45B6  E8 016E				call	sub_67			; (4727)
020A:45B9  8B DF				mov	bx,di
020A:45BB  E8 013C				call	sub_65			; (46FA)
020A:45BE  56					push	si
020A:45BF  87 DF				xchg	bx,di
020A:45C1  C6 06 9261 00			mov	byte ptr data_722,0	; (020A:9261=26h)
020A:45C6  BE 8F9D				mov	si,8F9Dh
020A:45C9  B9 0004				mov	cx,4
020A:45CC  F3/ A7				repe	cmpsw			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:45CE  75 04				jnz	loc_657			; Jump if not zero
020A:45D0  FE 06 9261				inc	data_722		; (020A:9261=26h)
020A:45D4			loc_657:
020A:45D4  8B FB				mov	di,bx
020A:45D6			loc_658:
020A:45D6  5E					pop	si
020A:45D7  56					push	si
020A:45D8			loc_659:
020A:45D8  AC					lodsb				; String [si] to al
020A:45D9  3C 0D				cmp	al,0Dh
020A:45DB  74 05				je	loc_660			; Jump if equal
020A:45DD  E8 01B6				call	sub_73			; (4796)
020A:45E0  EB F6				jmp	short loc_659		; (45D8)
020A:45E2			loc_660:
020A:45E2  5E					pop	si
020A:45E3  80 3E 9261 00			cmp	byte ptr data_722,0	; (020A:9261=26h)
020A:45E8			loc_661:
020A:45E8  74 8F				je	loc_ret_651		; Jump if equal
020A:45EA  E8 0386				call	sub_81			; (4973)
020A:45ED  8E 06 995F				mov	es,data_727		; (020A:995F=16FAh)
020A:45F1  BF 0258				mov	di,258h
020A:45F4  8B DF				mov	bx,di
020A:45F6  33 C0				xor	ax,ax			; Zero register
020A:45F8  26: A2 02A1				mov	byte ptr es:[2A1h],al	; (16FA:02A1=0FFh)
020A:45FC  50					push	ax
020A:45FD  8A 04				mov	al,[si]
020A:45FF  E8 0147				call	sub_70			; (4749)
020A:4602  58					pop	ax
020A:4603  75 18				jnz	loc_662			; Jump if not zero
020A:4605  80 7C 01 3A				cmp	byte ptr [si+1],3Ah	; ':'
020A:4609  75 12				jne	loc_662			; Jump if not equal
020A:460B  8A 04				mov	al,[si]
020A:460D  E8 0163				call	sub_71			; (4773)
020A:4610  2C 41				sub	al,41h			; 'A'
020A:4612  83 C7 02				add	di,2
020A:4615  FE C0				inc	al
020A:4617  26: A2 02A1				mov	byte ptr es:[2A1h],al	; (16FA:02A1=0FFh)
020A:461B  04 40				add	al,40h			; '@'
020A:461D			loc_662:
020A:461D  26: 89 3E 0237			mov	word ptr es:[237h],di	; (16FA:0237=383Eh)
020A:4622  26: A2 023C				mov	byte ptr es:[23Ch],al	; (16FA:023C=54h)
020A:4626  8B FB				mov	di,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 153

020A:4628			loc_663:
020A:4628  AC					lodsb				; String [si] to al
020A:4629  E8 034F				call	sub_82			; (497B)
020A:462C  74 07				jz	loc_664			; Jump if zero
020A:462E  3C 0D				cmp	al,0Dh
020A:4630  74 03				je	loc_664			; Jump if equal
020A:4632  AA					stosb				; Store al to es:[di]
020A:4633  EB F3				jmp	short loc_663		; (4628)
020A:4635			loc_664:
020A:4635  32 C0				xor	al,al			; Zero register
020A:4637  AA					stosb				; Store al to es:[di]
020A:4638  C6 06 9261 00			mov	byte ptr data_722,0	; (020A:9261=26h)
020A:463D  4F					dec	di
020A:463E  26: 89 3E 0298			mov	word ptr es:[298h],di	; (16FA:0298=0EBF9h)
020A:4643  C3					retn
020A:4644			loc_665:
020A:4644  8E 1E 995F				mov	ds,data_727		; (020A:995F=16FAh)
020A:4648  8E 1E 0458				mov	ds,word ptr ds:[458h]	; (16FA:0458=2E05h)
020A:464C  33 F6				xor	si,si			; Zero register
020A:464E			loc_666:
020A:464E  80 3C 00				cmp	byte ptr [si],0
020A:4651  74 95				je	loc_661			; Jump if equal
020A:4653  BF 9AC9				mov	di,9AC9h
020A:4656			loc_667:
020A:4656  AC					lodsb				; String [si] to al
020A:4657  AA					stosb				; Store al to es:[di]
020A:4658  0A C0				or	al,al			; Zero ?
020A:465A  75 FA				jnz	loc_667			; Jump if not zero
020A:465C  BA 8EBE				mov	dx,8EBEh
020A:465F  1E					push	ds
020A:4660  06					push	es
020A:4661  1F					pop	ds
020A:4662  E8 2C6D				call	sub_109			; (72D2)
020A:4665  1F					pop	ds
020A:4666  EB E6				jmp	short loc_666		; (464E)
020A:4668  BE 8F91				mov	si,8F91h
020A:466B  EB 03				jmp	short loc_668		; (4670)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_61		proc	near
020A:466D  BE 8F96				mov	si,8F96h
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_62:
020A:4670			loc_668:
020A:4670  56					push	si
020A:4671  1E					push	ds
020A:4672  E8 002C				call	sub_63			; (46A1)
020A:4675  72 17				jc	loc_670			; Jump if carry Set
020A:4677  8B F7				mov	si,di
020A:4679  E8 00C5				call	sub_69			; (4741)
020A:467C  87 F7				xchg	si,di
020A:467E  26: 80 3C 00				cmp	byte ptr es:[si],0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 154

020A:4682  75 01				jne	loc_669			; Jump if not equal
020A:4684  4E					dec	si
020A:4685			loc_669:
020A:4685  E8 0170				call	sub_74			; (47F8)
020A:4688  2B CE				sub	cx,si
020A:468A  06					push	es
020A:468B  1F					pop	ds
020A:468C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:468E			loc_670:
020A:468E  1F					pop	ds
020A:468F  5E					pop	si
020A:4690			loc_671:
020A:4690  C3					retn
				sub_61		endp
  
020A:4691  BE 8F91				mov	si,8F91h
020A:4694  EB 03				jmp	short loc_672		; (4699)
020A:4696  BE 8F96				mov	si,8F96h
020A:4699			loc_672:
020A:4699  E8 0005				call	sub_63			; (46A1)
020A:469C  72 F2				jc	loc_ret_671		; Jump if carry Set
020A:469E  E9 009C				jmp	loc_684			; (473D)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_63		proc	near
020A:46A1  FC					cld				; Clear direction
020A:46A2  E8 0041				call	sub_64			; (46E6)
020A:46A5  8E 06 995F				mov	es,data_727		; (020A:995F=16FAh)
020A:46A9  26: 8E 06 0458			mov	es,word ptr es:[458h]	; (16FA:0458=2E05h)
020A:46AE  33 FF				xor	di,di			; Zero register
020A:46B0			loc_673:
020A:46B0  51					push	cx
020A:46B1  56					push	si
020A:46B2  57					push	di
  
020A:46B3			locloop_674:
020A:46B3  AC					lodsb				; String [si] to al
020A:46B4  E8 0092				call	sub_70			; (4749)
020A:46B7  74 0F				jz	loc_675			; Jump if zero
020A:46B9  4E					dec	si
020A:46BA  AD					lodsw				; String [si] to ax
020A:46BB  47					inc	di
020A:46BC  47					inc	di
020A:46BD  26: 3B 45 FE				cmp	ax,es:[di-2]
020A:46C1  75 11				jne	loc_676			; Jump if not equal
020A:46C3  49					dec	cx
020A:46C4  E2 ED				loop	locloop_674		; Loop if cx > 0
  
020A:46C6  EB 0C				jmp	short loc_676		; (46D4)
020A:46C8			loc_675:
020A:46C8  E8 00A8				call	sub_71			; (4773)
020A:46CB  47					inc	di
020A:46CC  26: 3A 45 FF				cmp	al,es:[di-1]
020A:46D0  75 02				jne	loc_676			; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 155

020A:46D2  E2 DF				loop	locloop_674		; Loop if cx > 0
  
020A:46D4			loc_676:
020A:46D4  5F					pop	di
020A:46D5  5E					pop	si
020A:46D6  59					pop	cx
020A:46D7  74 B7				jz	loc_ret_671		; Jump if zero
020A:46D9  51					push	cx
020A:46DA  E8 0064				call	sub_69			; (4741)
020A:46DD  59					pop	cx
020A:46DE  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:46E2  75 CC				jne	loc_673			; Jump if not equal
020A:46E4  F9					stc				; Set carry flag
020A:46E5  C3					retn
				sub_63		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_64		proc	near
020A:46E6  1E					push	ds
020A:46E7  07					pop	es
020A:46E8  8B FE				mov	di,si
020A:46EA  57					push	di
020A:46EB  E8 004F				call	sub_68			; (473D)
020A:46EE  EB 04				jmp	short loc_677		; (46F4)
020A:46F0  57					push	di
020A:46F1  E8 004D				call	sub_69			; (4741)
020A:46F4			loc_677:
020A:46F4  59					pop	cx
020A:46F5  2B F9				sub	di,cx
020A:46F7  87 F9				xchg	di,cx
020A:46F9			loc_678:
020A:46F9  C3					retn
				sub_64		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_65		proc	near
020A:46FA			loc_679:
020A:46FA  80 3C 0D				cmp	byte ptr [si],0Dh
020A:46FD  74 FA				je	loc_ret_678		; Jump if equal
020A:46FF  AC					lodsb				; String [si] to al
020A:4700  E8 0046				call	sub_70			; (4749)
020A:4703  74 09				jz	loc_680			; Jump if zero
020A:4705  E8 008E				call	sub_73			; (4796)
020A:4708  AC					lodsb				; String [si] to al
020A:4709  E8 008A				call	sub_73			; (4796)
020A:470C  EB EC				jmp	short loc_679		; (46FA)
020A:470E			loc_680:
020A:470E  E8 0062				call	sub_71			; (4773)
020A:4711  E8 0082				call	sub_73			; (4796)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 156

020A:4714  3C 3D				cmp	al,3Dh			; '='
020A:4716  75 E2				jne	loc_679			; Jump if not equal
020A:4718			loc_681:
020A:4718  C3					retn
				sub_65		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_66		proc	near
020A:4719  BE 0080				mov	si,80h
020A:471C  AC					lodsb				; String [si] to al
020A:471D  0A C0				or	al,al			; Zero ?
020A:471F  74 F7				jz	loc_ret_681		; Jump if zero
020A:4721  E8 024F				call	sub_81			; (4973)
020A:4724  3C 0D				cmp	al,0Dh
020A:4726			loc_682:
020A:4726  C3					retn
				sub_66		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_67		proc	near
020A:4727  8E 06 995F				mov	es,data_727		; (020A:995F=16FAh)
020A:472B  26: 8E 06 0458			mov	es,word ptr es:[458h]	; (16FA:0458=2E05h)
020A:4730  33 FF				xor	di,di			; Zero register
020A:4732			loc_683:
020A:4732  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:4736  74 EE				je	loc_ret_682		; Jump if equal
020A:4738  E8 0006				call	sub_69			; (4741)
020A:473B  EB F5				jmp	short loc_683		; (4732)
				sub_67		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_68		proc	near
020A:473D			loc_684:
020A:473D  B0 3D				mov	al,3Dh			; '='
020A:473F  EB 02				jmp	short loc_685		; (4743)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_69:
020A:4741  32 C0				xor	al,al			; Zero register
020A:4743			loc_685:
020A:4743  B9 1000				mov	cx,1000h
020A:4746  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4748  C3					retn
				sub_68		endp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 157

  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_70		proc	near
020A:4749  1E					push	ds
020A:474A  56					push	si
020A:474B  50					push	ax
020A:474C  2E: 8E 1E 995F			mov	ds,cs:data_727		; (020A:995F=16FAh)
020A:4751  C5 36 02CB				lds	si,dword ptr ds:[2CBh]	; (16FA:02CB=8073h) Load 32 bit ptr
020A:4755			loc_686:
020A:4755  83 3C 00				cmp	word ptr [si],0
020A:4758  74 0E				je	loc_687			; Jump if equal
020A:475A  58					pop	ax
020A:475B  50					push	ax
020A:475C  3A 04				cmp	al,[si]
020A:475E  72 08				jb	loc_687			; Jump if below
020A:4760  46					inc	si
020A:4761  3A 04				cmp	al,[si]
020A:4763  76 07				jbe	loc_688			; Jump if below or =
020A:4765  46					inc	si
020A:4766  EB ED				jmp	short loc_686		; (4755)
020A:4768			loc_687:
020A:4768  33 C0				xor	ax,ax			; Zero register
020A:476A  EB 03				jmp	short loc_689		; (476F)
020A:476C			loc_688:
020A:476C  33 C0				xor	ax,ax			; Zero register
020A:476E  40					inc	ax
020A:476F			loc_689:
020A:476F  58					pop	ax
020A:4770  5E					pop	si
020A:4771  1F					pop	ds
020A:4772  C3					retn
				sub_70		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_71		proc	near
020A:4773  3C 80				cmp	al,80h
020A:4775  72 14				jb	loc_690			; Jump if below
020A:4777  2C 80				sub	al,80h
020A:4779  1E					push	ds
020A:477A  53					push	bx
020A:477B  8E 1E 995F				mov	ds,data_727		; (020A:995F=16FAh)
020A:477F  C5 1E 02C3				lds	bx,dword ptr ds:[2C3h]	; (16FA:02C3=3C08h) Load 32 bit ptr
020A:4783  83 C3 02				add	bx,2
020A:4786  D7					xlat				; al=[al+[bx]] table
020A:4787  5B					pop	bx
020A:4788  1F					pop	ds
020A:4789  EB 0A				jmp	short loc_691		; (4795)
020A:478B			loc_690:
020A:478B  3C 61				cmp	al,61h			; 'a'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 158

020A:478D  72 06				jb	loc_691			; Jump if below
020A:478F  3C 7A				cmp	al,7Ah			; 'z'
020A:4791  77 02				ja	loc_691			; Jump if above
020A:4793  2C 20				sub	al,20h			; ' '
020A:4795			loc_691:
020A:4795  C3					retn
				sub_71		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_73		proc	near
020A:4796  51					push	cx
020A:4797  53					push	bx
020A:4798  06					push	es
020A:4799  1E					push	ds
020A:479A  8E 1E 995F				mov	ds,data_727		; (020A:995F=16FAh)
020A:479E  8E 06 0458				mov	es,word ptr ds:[458h]	; (16FA:0458=2E05h)
020A:47A2  1F					pop	ds
020A:47A3  E8 0052				call	sub_74			; (47F8)
020A:47A6  8B D9				mov	bx,cx
020A:47A8  83 EB 02				sub	bx,2
020A:47AB  3B FB				cmp	di,bx
020A:47AD  72 3F				jb	loc_695			; Jump if below
020A:47AF  50					push	ax
020A:47B0  51					push	cx
020A:47B1  53			data_642	db	53h
020A:47B2  E8 E1F8				call	sub_41			; (29AD)
020A:47B5  5B			data_644	db	5Bh
020A:47B6  83 C3 02				add	bx,2
020A:47B9  81 FB 8000				cmp	bx,8000h
020A:47BD  72 03				jb	loc_693			; Jump if below
020A:47BF			loc_692:
020A:47BF  F9					stc				; Set carry flag
020A:47C0  EB 16				jmp	short loc_694		; (47D8)
020A:47C2			loc_693:
020A:47C2  B1 04				mov	cl,4
020A:47C4  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:47C6  43					inc	bx
020A:47C7  8C C1				mov	cx,es
020A:47C9  03 CB				add	cx,bx
020A:47CB  83 C1 20				add	cx,20h
020A:47CE  8C C8				mov	ax,cs
020A:47D0  3B C8				cmp	cx,ax
020A:47D2  73 EB				jae	loc_692			; Jump if above or =
020A:47D4  B4 4A				mov	ah,4Ah			; 'J'
020A:47D6  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:47D8			loc_694:
020A:47D8  9C					pushf				; Push flags
020A:47D9  06					push	es
020A:47DA  8E 06 995F				mov	es,data_727		; (020A:995F=16FAh)
020A:47DE  E8 E1DC		;*		call	sub_42			;*(29BD)
020A:47DE  E8 DC E1				db	0E8h,0DCh,0E1h
020A:47E1  07					pop	es
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 159

020A:47E2  9D					popf				; Pop flags
020A:47E3  59					pop	cx
020A:47E4  58					pop	ax
020A:47E5  73 07				jnc	loc_695			; Jump if carry=0
020A:47E7  07					pop	es
020A:47E8  BA 8D38				mov	dx,8D38h
020A:47EB  E9 0526				jmp	loc_754			; (4D14)
020A:47EE			loc_695:
020A:47EE  AA					stosb				; Store al to es:[di]
020A:47EF  26: C7 05 0000			mov	word ptr es:[di],0
020A:47F4  07					pop	es
020A:47F5  5B					pop	bx
020A:47F6  59					pop	cx
020A:47F7  C3					retn
				sub_73		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_74		proc	near
020A:47F8  06					push	es
020A:47F9  50					push	ax
020A:47FA  8C C0				mov	ax,es
020A:47FC  48					dec	ax
020A:47FD  8E C0				mov	es,ax
020A:47FF  26: A1 0003				mov	ax,word ptr es:[3]	; (C40D:0003=0)
020A:4803  B1 04				mov	cl,4
020A:4805  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:4807  8B C8				mov	cx,ax
020A:4809  58					pop	ax
020A:480A  07					pop	es
020A:480B			loc_696:
020A:480B  C3					retn
				sub_74		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_75		proc	near
020A:480C  1E					push	ds
020A:480D  8E 1E 995F				mov	ds,data_727		; (020A:995F=16FAh)
020A:4811  80 3E 02AF 00			cmp	byte ptr ds:[2AFh],0	; (16FA:02AF=0)
020A:4816  1F					pop	ds
020A:4817  74 F2				jz	loc_ret_696		; Jump if zero
020A:4819  BA 978E				mov	dx,978Eh
020A:481C  B4 3B				mov	ah,3Bh			; ';'
020A:481E  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4820  32 C0				xor	al,al			; Zero register
020A:4822  E8 089F				call	sub_91			; (50C4)
020A:4825  C3					retn
				sub_75		endp
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 160

020A:4826  BE 0081				mov	si,81h
020A:4829  BF 930F				mov	di,930Fh
020A:482C  33 C9				xor	cx,cx			; Zero register
020A:482E  33 D2				xor	dx,dx			; Zero register
020A:4830  E8 FD03				call	sub_59			; (4536)
020A:4833  3D FFFF				cmp	ax,0FFFFh
020A:4836  74 16				je	loc_697			; Jump if equal
020A:4838  3D 0000				cmp	ax,0
020A:483B  75 50				jne	loc_702			; Jump if not equal
020A:483D  80 3E A48D 06			cmp	byte ptr data_759,6	; (020A:A48D=0E8h)
020A:4842  75 11				jne	loc_699			; Jump if not equal
020A:4844  BF 930F				mov	di,930Fh
020A:4847  33 D2				xor	dx,dx			; Zero register
020A:4849  E8 FCD3				call	sub_58			; (451F)
020A:484C  75 3F				jnz	loc_702			; Jump if not zero
020A:484E			loc_697:
020A:484E  E8 F941				call	sub_56			; (4192)
020A:4851  E8 0112				call	sub_80			; (4966)
020A:4854			loc_698:
020A:4854  C3					retn
020A:4855			loc_699:
020A:4855  56					push	si
020A:4856  C5 36 A491				lds	si,data_760		; (020A:A491=168Bh) Load 32 bit ptr
020A:485A  E8 0829				call	sub_89			; (5086)
020A:485D  5E					pop	si
020A:485E  BF 930F				mov	di,930Fh
020A:4861  D233			data_648	dw	0D233h
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:4863			loc_700:
020A:4863  B9E8			data_649	dw	0B9E8h
020A:4865  75FC			data_650	dw	75FCh
020A:4867  E825			data_651	dw	0E825h
020A:4869  064D			data_652	dw	64Dh
020A:486B  06F6			data_653	dw	6F6h
020A:486D  9B68			data_654	dw	9B68h
020A:486F  7502			data_655	dw	7502h
020A:4871  B418			data_656	dw	0B418h
020A:4873  CD3B			data_657	dw	0CD3Bh
020A:4875  7321			data_658	dw	7321h
020A:4877  E8DC			data_659	dw	0E8DCh
020A:4879  D8 F7				esc	0,bh			; coprocessor escape
020A:487B  3D 0003				cmp	ax,3
020A:487E  74 0A				je	loc_701			; Jump if equal
020A:4880  3D 0005				cmp	ax,5
020A:4883  74 05				je	loc_701			; Jump if equal
020A:4885  E8 00A3				call	sub_78			; (492B)
020A:4888  EB 03				jmp	short loc_702		; (488D)
020A:488A			loc_701:
020A:488A  BA 8E5C				mov	dx,8E5Ch
020A:488D			loc_702:
020A:488D  E8 2A49				call	sub_110			; (72D9)
020A:4890			loc_703:
020A:4890  C3					retn
020A:4891  E8 003F				call	sub_77			; (48D3)
020A:4894  72 39				jc	loc_706			; Jump if carry Set
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 161

020A:4896  B4 39				mov	ah,39h			; '9'
020A:4898  CD 21				int	21h			; DOS Services  ah=function 39h
										;  create subdir, path ptr ds:dx
020A:489A  73 F4				jnc	loc_ret_703		; Jump if carry=0
020A:489C  E8 F7B4		;*		call	sub_48			;*(4053)
020A:489C  E8 B4 F7				db	0E8h,0B4h,0F7h
020A:489F  3D 0003				cmp	ax,3
020A:48A2  74 28				je	loc_705			; Jump if equal
020A:48A4  3D 0005				cmp	ax,5
020A:48A7  74 05				je	loc_704			; Jump if equal
020A:48A9  E8 007F				call	sub_78			; (492B)
020A:48AC  EB 21				jmp	short loc_706		; (48CF)
020A:48AE			loc_704:
020A:48AE  BA 95D8				mov	dx,95D8h
020A:48B1  B4 1A				mov	ah,1Ah
020A:48B3  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA to ds:dx
020A:48B5  B4 4E				mov	ah,4Eh			; 'N'
020A:48B7  B9 0010				mov	cx,10h
020A:48BA  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:48BC  72 0E				jc	loc_705			; Jump if carry Set
020A:48BE  8A 16 95ED				mov	dl,byte ptr ds:[95EDh]	; (0092:95ED=76h)
020A:48C2  F6 C2 10				test	dl,10h
020A:48C5  74 05				jz	loc_705			; Jump if zero
020A:48C7  BA 8F4C				mov	dx,8F4Ch
020A:48CA  EB 03				jmp	short loc_706		; (48CF)
020A:48CC			loc_705:
020A:48CC  BA 8E5F				mov	dx,8E5Fh
020A:48CF			loc_706:
020A:48CF  E8 2A07				call	sub_110			; (72D9)
020A:48D2			loc_707:
020A:48D2  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_77		proc	near
020A:48D3  BE 0081				mov	si,81h
020A:48D6  BF 9306				mov	di,9306h
020A:48D9  33 C9				xor	cx,cx			; Zero register
020A:48DB  33 D2				xor	dx,dx			; Zero register
020A:48DD  E8 FC56				call	sub_59			; (4536)
020A:48E0  3D 0000				cmp	ax,0
020A:48E3  75 19				jne	loc_709			; Jump if not equal
020A:48E5  BF 95D8				mov	di,95D8h
020A:48E8  57					push	di
020A:48E9  56					push	si
020A:48EA  C5 36 A491				lds	si,data_760		; (020A:A491=168Bh) Load 32 bit ptr
020A:48EE			loc_708:
020A:48EE  AC					lodsb				; String [si] to al
020A:48EF  AA					stosb				; Store al to es:[di]
020A:48F0  3C 00				cmp	al,0
020A:48F2  75 FA				jne	loc_708			; Jump if not equal
020A:48F4  5E					pop	si
020A:48F5  BF 9306				mov	di,9306h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 162

020A:48F8  E8 FC24				call	sub_58			; (451F)
020A:48FB  5A					pop	dx
020A:48FC  74 D4				jz	loc_ret_707		; Jump if zero
020A:48FE			loc_709:
020A:48FE  BA 8D21				mov	dx,8D21h
020A:4901  33 C0				xor	ax,ax			; Zero register
020A:4903  F9					stc				; Set carry flag
020A:4904			loc_710:
020A:4904  C3					retn
				sub_77		endp
  
020A:4905  E8 FFCB				call	sub_77			; (48D3)
020A:4908  72 1D				jc	loc_712			; Jump if carry Set
020A:490A  75 18				jnz	loc_711			; Jump if not zero
020A:490C  B4 3A				mov	ah,3Ah			; ':'
020A:490E  CD 21				int	21h			; DOS Services  ah=function 3Ah
										;  delete subdir, path ptr ds:dx
020A:4910  73 F2				jnc	loc_ret_710		; Jump if carry=0
020A:4912  E8 F73E		;*		call	sub_48			;*(4053)
020A:4912  E8 3E F7				db	0E8h, 3Eh,0F7h
020A:4915  3D 0003				cmp	ax,3
020A:4918  74 0A				je	loc_711			; Jump if equal
020A:491A  3D 0005				cmp	ax,5
020A:491D  74 05				je	loc_711			; Jump if equal
020A:491F  E8 0009				call	sub_78			; (492B)
020A:4922  EB 03				jmp	short loc_712		; (4927)
020A:4924			loc_711:
020A:4924  BA 8E62				mov	dx,8E62h
020A:4927			loc_712:
020A:4927  E8 29AF				call	sub_110			; (72D9)
020A:492A			loc_713:
020A:492A  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_78		proc	near
020A:492B  C6 06 8D1F 01			mov	byte ptr ds:[8D1Fh],1	; (ss:8D1F=4)
020A:4930  89 16 9B4D				mov	word ptr ds:[9B4Dh],dx	; (ss:9B4D=6116h)
020A:4934  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (ss:8D23=0A4h)
020A:4939  BA 8D21				mov	dx,8D21h
020A:493C  A3 8D21				mov	word ptr ds:[8D21h],ax	; (ss:8D21=36FFh)
020A:493F  C3					retn
				sub_78		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_79		proc	near
020A:4940  BF 978E				mov	di,978Eh
020A:4943  8A C2				mov	al,dl
020A:4945  04 40				add	al,40h			; '@'
020A:4947  3C 40				cmp	al,40h			; '@'
020A:4949  75 06				jne	loc_714			; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 163

020A:494B  02 06 9973				add	al,data_731		; (020A:9973=42h)
020A:494F  FE C0				inc	al
020A:4951			loc_714:
020A:4951  AA					stosb				; Store al to es:[di]
020A:4952  8A 26 9964				mov	ah,data_729		; (020A:9964=58h)
020A:4956  B0 3A				mov	al,3Ah			; ':'
020A:4958  AB					stosw				; Store ax to es:[di]
020A:4959  06					push	es
020A:495A  1F					pop	ds
020A:495B  8B F7				mov	si,di
020A:495D  B4 47				mov	ah,47h			; 'G'
020A:495F  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
020A:4961  72 C7				jc	loc_ret_713		; Jump if carry Set
020A:4963  0E					push	cs
020A:4964  1F					pop	ds
020A:4965  C3					retn
				sub_79		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_80		proc	near
020A:4966  52					push	dx
020A:4967  BA 8F00				mov	dx,8F00h
020A:496A  1E					push	ds
020A:496B  0E					push	cs
020A:496C  1F					pop	ds
020A:496D  E8 2971				call	sub_111			; (72E1)
020A:4970  1F					pop	ds
020A:4971  5A					pop	dx
020A:4972  C3					retn
				sub_80		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_81		proc	near
020A:4973			loc_715:
020A:4973  AC					lodsb				; String [si] to al
020A:4974  E8 0004				call	sub_82			; (497B)
020A:4977  74 FA				jz	loc_715			; Jump if zero
020A:4979  4E					dec	si
020A:497A			loc_716:
020A:497A  C3					retn
				sub_81		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_82		proc	near
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 164

020A:497B  3C 20				cmp	al,20h			; ' '
020A:497D  74 FB				je	loc_ret_716		; Jump if equal
020A:497F  3C 3D				cmp	al,3Dh			; '='
020A:4981  74 F7				je	loc_ret_716		; Jump if equal
020A:4983  3C 2C				cmp	al,2Ch			; ','
020A:4985  74 F3				je	loc_ret_716		; Jump if equal
020A:4987  3C 3B				cmp	al,3Bh			; ';'
020A:4989  74 EF				je	loc_ret_716		; Jump if equal
020A:498B  3C 09				cmp	al,9
020A:498D  74 EB				je	loc_ret_716		; Jump if equal
020A:498F  3C 0A				cmp	al,0Ah
020A:4991  C3					retn
				sub_82		endp
  
020A:4992  B9 0008				mov	cx,8
  
020A:4995			locloop_717:
020A:4995  AC					lodsb				; String [si] to al
020A:4996  3C 20				cmp	al,20h			; ' '
020A:4998  74 01				je	loc_718			; Jump if equal
020A:499A  AA					stosb				; Store al to es:[di]
020A:499B			loc_718:
020A:499B  E2 F8				loop	locloop_717		; Loop if cx > 0
  
020A:499D  AC					lodsb				; String [si] to al
020A:499E  3C 20				cmp	al,20h			; ' '
020A:49A0  74 12				je	loc_720			; Jump if equal
020A:49A2  8A E0				mov	ah,al
020A:49A4  B0 2E				mov	al,2Eh			; '.'
020A:49A6  AA					stosb				; Store al to es:[di]
020A:49A7  86 C4				xchg	al,ah
020A:49A9  AA					stosb				; Store al to es:[di]
020A:49AA  B1 02				mov	cl,2
  
020A:49AC			locloop_719:
020A:49AC  AC					lodsb				; String [si] to al
020A:49AD  3C 20				cmp	al,20h			; ' '
020A:49AF  74 03				je	loc_720			; Jump if equal
020A:49B1  AA					stosb				; Store al to es:[di]
020A:49B2  E2 F8				loop	locloop_719		; Loop if cx > 0
  
020A:49B4			loc_720:
020A:49B4  32 C0				xor	al,al			; Zero register
020A:49B6  AA					stosb				; Store al to es:[di]
020A:49B7			loc_721:
020A:49B7  C3					retn
020A:49B8			loc_722:
020A:49B8  A6					cmpsb				; Cmp [si] to es:[di]
020A:49B9  75 FC				jnz	loc_ret_721		; Jump if not zero
020A:49BB  80 7C FF 00				cmp	byte ptr [si-1],0
020A:49BF  74 F6				je	loc_ret_721		; Jump if equal
020A:49C1  EB F5				jmp	short loc_722		; (49B8)
020A:49C3  50					push	ax
020A:49C4  B0 0D				mov	al,0Dh
020A:49C6  51					push	cx
020A:49C7  57					push	di
020A:49C8  8B FA				mov	di,dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 165

020A:49CA  B9 FFFF				mov	cx,0FFFFh
020A:49CD  06					push	es
020A:49CE  1E					push	ds
020A:49CF  07					pop	es
020A:49D0  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:49D2  C6 45 FF 00				mov	byte ptr [di-1],0
020A:49D6  07					pop	es
020A:49D7  89 16 9B4D				mov	data_737,dx		; (020A:9B4D=44B4h)
020A:49DB  BA 8EE8				mov	dx,8EE8h
020A:49DE  E8 2900				call	sub_111			; (72E1)
020A:49E1  C6 45 FF 0D				mov	byte ptr [di-1],0Dh
020A:49E5  72 04				jc	loc_723			; Jump if carry Set
020A:49E7  5F					pop	di
020A:49E8  59					pop	cx
020A:49E9  58					pop	ax
020A:49EA  C3					retn
020A:49EB			loc_723:
020A:49EB  0E					push	cs
020A:49EC  1F					pop	ds
020A:49ED  8E 06 995F				mov	es,data_727		; (020A:995F=16FAh)
020A:49F1  BA 8D35				mov	dx,8D35h
020A:49F4  26: 80 3E 0331 00			cmp	byte ptr es:[331h],0	; (16FA:0331=74h)
020A:49FA  74 06				je	loc_724			; Jump if equal
020A:49FC  E8 0977				call	sub_92			; (5376)
020A:49FF  BA 8E82				mov	dx,8E82h
020A:4A02			loc_724:
020A:4A02  E9 030F				jmp	loc_754			; (4D14)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_83		proc	near
020A:4A05  50					push	ax
020A:4A06  B4 2F				mov	ah,2Fh			; '/'
020A:4A08  38 26 9963				cmp	data_728,ah		; (020A:9963=1)
020A:4A0C  74 04				je	loc_725			; Jump if equal
020A:4A0E  3C 2F				cmp	al,2Fh			; '/'
020A:4A10  74 02				je	loc_726			; Jump if equal
020A:4A12			loc_725:
020A:4A12  3C 5C				cmp	al,5Ch			; '\'
020A:4A14			loc_726:
020A:4A14  58					pop	ax
020A:4A15  C3					retn
				sub_83		endp
  
020A:4A16  C7 06 9CD1 0000			mov	data_740,0		; (020A:9CD1=4F9Fh)
020A:4A1C  8A 16 005C				mov	dl,data_100		; (020A:005C=8Fh)
020A:4A20  E8 FF1D				call	sub_79			; (4940)
020A:4A23  72 33				jc	loc_728			; Jump if carry Set
020A:4A25  E8 0490				call	sub_86			; (4EB8)
020A:4A28  F6 06 9B68 02			test	byte ptr data_739,2	; (020A:9B68=0B9h)
020A:4A2D  75 2C				jnz	loc_729			; Jump if not zero
020A:4A2F  B4 3B				mov	ah,3Bh			; ';'
020A:4A31  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4A33  73 13				jnc	loc_727			; Jump if carry=0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 166

020A:4A35  E8 F61B		;*		call	sub_48			;*(4053)
020A:4A35  E8 1B F6				db	0E8h, 1Bh,0F6h
020A:4A38  3D 0003				cmp	ax,3
020A:4A3B  74 1E				je	loc_729			; Jump if equal
020A:4A3D  3D 0005				cmp	ax,5
020A:4A40  74 19				je	loc_729			; Jump if equal
020A:4A42  A3 9CD1				mov	data_740,ax		; (020A:9CD1=4F9Fh)
020A:4A45  E9 008B				jmp	loc_737			; (4AD3)
020A:4A48			loc_727:
020A:4A48  E8 0677				call	sub_90			; (50C2)
020A:4A4B  B0 3F				mov	al,3Fh			; '?'
020A:4A4D  BF 005D				mov	di,5Dh
020A:4A50  B9 000B				mov	cx,0Bh
020A:4A53  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4A55  32 C0				xor	al,al			; Zero register
020A:4A57  C3					retn
020A:4A58			loc_728:
020A:4A58  E9 0083				jmp	loc_739			; (4ADE)
020A:4A5B			loc_729:
020A:4A5B  8B 36 9ABC				mov	si,data_734		; (020A:9ABC=0)
020A:4A5F  4E					dec	si
020A:4A60  8A 44 FF				mov	al,[si-1]
020A:4A63  80 3E 9CEC 00			cmp	byte ptr data_742,0	; (020A:9CEC=2Eh)
020A:4A68  75 05				jne	loc_730			; Jump if not equal
020A:4A6A  E8 FF98				call	sub_83			; (4A05)
020A:4A6D  74 64				jz	loc_737			; Jump if zero
020A:4A6F			loc_730:
020A:4A6F  8B CE				mov	cx,si
020A:4A71  8B F2				mov	si,dx
020A:4A73  52					push	dx
020A:4A74			loc_731:
020A:4A74  3B F1				cmp	si,cx
020A:4A76  74 13				je	loc_733			; Jump if equal
020A:4A78  AC					lodsb				; String [si] to al
020A:4A79  E8 FCCD				call	sub_70			; (4749)
020A:4A7C  74 03				jz	loc_732			; Jump if zero
020A:4A7E  46					inc	si
020A:4A7F  EB F3				jmp	short loc_731		; (4A74)
020A:4A81			loc_732:
020A:4A81  E8 FF81				call	sub_83			; (4A05)
020A:4A84  75 EE				jnz	loc_731			; Jump if not zero
020A:4A86  8B D6				mov	dx,si
020A:4A88  4A					dec	dx
020A:4A89  EB E9				jmp	short loc_731		; (4A74)
020A:4A8B			loc_733:
020A:4A8B  8B F2				mov	si,dx
020A:4A8D  5A					pop	dx
020A:4A8E  3B F2				cmp	si,dx
020A:4A90  74 56				je	loc_741			; Jump if equal
020A:4A92  8B CE				mov	cx,si
020A:4A94  8B F2				mov	si,dx
020A:4A96			loc_734:
020A:4A96  3B F1				cmp	si,cx
020A:4A98  74 12				je	loc_735			; Jump if equal
020A:4A9A  C6 06 9CEC 00			mov	byte ptr data_742,0	; (020A:9CEC=2Eh)
020A:4A9F  AC					lodsb				; String [si] to al
020A:4AA0  E8 FCA6				call	sub_70			; (4749)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 167

020A:4AA3  74 F1				jz	loc_734			; Jump if zero
020A:4AA5  46					inc	si
020A:4AA6  FE 06 9CEC				inc	data_742		; (020A:9CEC=2Eh)
020A:4AAA  EB EA				jmp	short loc_734		; (4A96)
020A:4AAC			loc_735:
020A:4AAC  50					push	ax
020A:4AAD  B0 2E				mov	al,2Eh			; '.'
020A:4AAF  38 44 01				cmp	[si+1],al
020A:4AB2  75 09				jne	loc_736			; Jump if not equal
020A:4AB4  38 44 02				cmp	[si+2],al
020A:4AB7  74 04				je	loc_736			; Jump if equal
020A:4AB9  80 7C 02 00				cmp	byte ptr [si+2],0
020A:4ABD			loc_736:
020A:4ABD  58					pop	ax
020A:4ABE  74 13				jz	loc_737			; Jump if zero
020A:4AC0  8A 44 FF				mov	al,[si-1]
020A:4AC3  3C 3A				cmp	al,3Ah			; ':'
020A:4AC5  74 21				je	loc_741			; Jump if equal
020A:4AC7  80 3E 9CEC 00			cmp	byte ptr data_742,0	; (020A:9CEC=2Eh)
020A:4ACC  75 07				jne	loc_738			; Jump if not equal
020A:4ACE  E8 FF34				call	sub_83			; (4A05)
020A:4AD1  75 02				jnz	loc_738			; Jump if not zero
020A:4AD3			loc_737:
020A:4AD3  F9					stc				; Set carry flag
020A:4AD4  C3					retn
020A:4AD5			loc_738:
020A:4AD5  C6 04 00				mov	byte ptr [si],0
020A:4AD8  B4 3B				mov	ah,3Bh			; ';'
020A:4ADA  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4ADC  73 20				jnc	loc_742			; Jump if carry=0
020A:4ADE			loc_739:
020A:4ADE  E8 F572		;*		call	sub_48			;*(4053)
020A:4ADE  E8 72 F5				db	0E8h, 72h,0F5h
020A:4AE1  A3 9CD1				mov	data_740,ax		; (020A:9CD1=4F9Fh)
020A:4AE4  0B F6				or	si,si			; Zero ?
020A:4AE6  F9					stc				; Set carry flag
020A:4AE7			loc_740:
020A:4AE7  C3					retn
020A:4AE8			loc_741:
020A:4AE8  8A 04				mov	al,[si]
020A:4AEA  E8 FF18				call	sub_83			; (4A05)
020A:4AED  F9					stc				; Set carry flag
020A:4AEE  75 F7				jnz	loc_ret_740		; Jump if not zero
020A:4AF0  32 DB				xor	bl,bl			; Zero register
020A:4AF2  86 5C 01				xchg	bl,[si+1]
020A:4AF5  B4 3B				mov	ah,3Bh			; ';'
020A:4AF7  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4AF9  72 E3				jc	loc_739			; Jump if carry Set
020A:4AFB  88 5C 01				mov	[si+1],bl
020A:4AFE			loc_742:
020A:4AFE  E8 05C1				call	sub_90			; (50C2)
020A:4B01  46					inc	si
020A:4B02  89 36 9B66				mov	data_738,si		; (020A:9B66=0FFFFh)
020A:4B06  9C					pushf				; Push flags
020A:4B07  80 3E 9AC4 FF			cmp	byte ptr data_735,0FFh	; (020A:9AC4=47h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 168

020A:4B0C  74 08				je	loc_743			; Jump if equal
020A:4B0E  BF 005C				mov	di,5Ch
020A:4B11  B8 2902				mov	ax,2902h
020A:4B14  CD 21				int	21h			; DOS Services  ah=function 29h
										;  parse filenam @ds:si FCBes:di
020A:4B16			loc_743:
020A:4B16  9D					popf				; Pop flags
020A:4B17  C3					retn
020A:4B18			loc_744:
020A:4B18  93					xchg	ax,bx
020A:4B19  C3					retn
020A:4B1A  33 DB				xor	bx,bx			; Zero register
020A:4B1C			loc_745:
020A:4B1C  E8 FE54				call	sub_81			; (4973)
020A:4B1F  3A 06 9963				cmp	al,data_728		; (020A:9963=1)
020A:4B23  75 F3				jne	loc_744			; Jump if not equal
020A:4B25  81 CB 8000				or	bx,8000h
020A:4B29  46					inc	si
020A:4B2A  E8 FE46				call	sub_81			; (4973)
020A:4B2D  3C 0D				cmp	al,0Dh
020A:4B2F  74 E7				je	loc_744			; Jump if equal
020A:4B31  46					inc	si
020A:4B32  E8 FC3E				call	sub_71			; (4773)
020A:4B35  BF 9250				mov	di,9250h
020A:4B38  B9 0006				mov	cx,6
020A:4B3B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4B3D  75 09				jnz	loc_746			; Jump if not zero
020A:4B3F  B8 0001				mov	ax,1
020A:4B42  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:4B44  0B D8				or	bx,ax
020A:4B46  EB D4				jmp	short loc_745		; (4B1C)
020A:4B48			loc_746:
020A:4B48  EB D2				jmp	short loc_745		; (4B1C)
020A:4B4A  BA 8D7D				mov	dx,8D7Dh
020A:4B4D  E9 01C4				jmp	loc_754			; (4D14)
020A:4B50			loc_747:
020A:4B50  E9 0102				jmp	loc_753			; (4C55)
020A:4B53  0A C0				or	al,al			; Zero ?
020A:4B55  74 F9				jz	loc_747			; Jump if zero
020A:4B57  E8 034D				call	sub_85			; (4EA7)
020A:4B5A  74 29				jz	loc_748			; Jump if zero
020A:4B5C  8A 0E 99E7				mov	cl,data_732		; (020A:99E7=6)
020A:4B60  B5 00				mov	ch,0
020A:4B62  89 0E 9ABC				mov	data_734,cx		; (020A:9ABC=0)
020A:4B66  FE 06 9CD3				inc	data_741		; (020A:9CD3=8Eh)
020A:4B6A  E8 03E3				call	sub_87			; (4F50)
020A:4B6D  BE 99E7				mov	si,99E7h
020A:4B70  BA FFFF				mov	dx,0FFFFh
020A:4B73  BF 57A4				mov	di,57A4h
020A:4B76  B8 AE01				mov	ax,0AE01h
020A:4B79  CD 2F				int	2Fh			; Multiplex/Spooler al=func 01h
										;  add file to print queue
020A:4B7B  80 3E 99E7 00			cmp	byte ptr data_732,0	; (020A:99E7=6)
020A:4B80  75 03				jne	loc_748			; Jump if not equal
020A:4B82  E9 00A0				jmp	loc_752			; (4C25)
020A:4B85			loc_748:
020A:4B85  BF 90CF				mov	di,90CFh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 169

020A:4B88  33 C9				xor	cx,cx			; Zero register
020A:4B8A  BE 99E8				mov	si,99E8h
020A:4B8D  8A 0D				mov	cl,[di]
020A:4B8F  47					inc	di
020A:4B90  E3 BE				jcxz	loc_747			; Jump if cx=0
020A:4B92  3A 0E 99E7				cmp	cl,data_732		; (020A:99E7=6)
020A:4B96  75 06				jne	loc_750			; Jump if not equal
020A:4B98  89 0E 9ABC				mov	data_734,cx		; (020A:9ABC=0)
020A:4B9C  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:4B9E			loc_750:
020A:4B9E  9F					lahf				; Load ah from flags
020A:4B9F  03 F9				add	di,cx
020A:4BA1  8A 05				mov	al,[di]
020A:4BA3  A2 0871				mov	data_185,al		; (020A:0871=2Eh)
020A:4BA6  74 E4		;*		jz	loc_749			;*Jump if zero
020A:4BA6  74 E4				db	 74h,0E4h
020A:4BA8  3C 06				cmp	al,6
020A:4BAA  75 06				jne	loc_751			; Jump if not equal
020A:4BAC  26: 88 55 04				mov	es:[di+4],dl
020A:4BB0  4D					dec	bp
020A:4BB1  FF 06 0038				inc	word ptr data_94+1	; (020A:0038=0)
020A:4BB5  0F					pop	cs			; Dangerous 8088 only
020A:4BB6  2E: A1 14AE				mov	ax,cs:data_235		; (020A:14AE=0)
020A:4BBA  40					inc	ax
020A:4BBB  26: 89 45 04				mov	es:[di+4],ax
020A:4BBF  26 43 4F 4D 53 50			db	'&COMSPEC=C:\WINDOWS\SYSTEM32\COM'
020A:4BC5  45 43 3D 43 3A 5C
020A:4BCB  57 49 4E 44 4F 57
020A:4BD1  53 5C 53 59 53 54
020A:4BD7  45 4D 33 32 5C 43
020A:4BDD  4F 4D
020A:4BDF  4D 41 4E 44 2E 43			db	'MAND.COM', 0
020A:4BE5  4F 4D 00
020A:4BE8  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
020A:4BEE  52 53 50 52 4F 46
020A:4BF4  49 4C 45 3D 43 3A
020A:4BFA  5C 44 4F 43 55 4D
020A:4C00  45 7E 31 5C 41 4C
020A:4C06  4C 55
020A:4C08  53 45 7E 31 00			db	'SE~1', 0
020A:4C0D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\CDC2'
020A:4C13  41 3D 43 3A 5C 44
020A:4C19  4F 43 55 4D 45 7E
020A:4C1F  31 5C 43 44 43 32
020A:4C25			loc_752:
020A:4C25  7E 31 5C 41 50 50			db	'~1\APPLIC~1', 0
020A:4C2B  4C 49 43 7E 31 00
020A:4C31  43 4C 49 45 4E 54			db	'CLIENTNAME=Console', 0
020A:4C37  4E 41 4D 45 3D 43
020A:4C3D  6F 6E 73 6F 6C 65
020A:4C43  00
020A:4C44  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILE'
020A:4C4A  50 52 4F 47 52 41
020A:4C50  4D 46 49 4C 45
020A:4C55			loc_753:
020A:4C55  53 3D 43 3A 5C 50			db	'S=C:\PROGRA~1\COMMON~1', 0
020A:4C5B  52 4F 47 52 41 7E
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 170

020A:4C61  31 5C 43 4F 4D 4D
020A:4C67  4F 4E 7E 31 00
020A:4C6C  43 4F 4D 50 55 54			db	'COMPUTERNAME=WINDOWS-XP', 0
020A:4C72  45 52 4E 41 4D 45
020A:4C78  3D 57 49 4E 44 4F
020A:4C7E  57 53 2D 58 50 00
020A:4C84  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020A:4C8A  48 4F 53 54 5F 43
020A:4C90  48 45 43 4B 3D 4E
020A:4C96  4F 00
020A:4C98  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020A:4C9E  49 56 45 3D 43 3A
020A:4CA4  00
020A:4CA5  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020A:4CAB  54 48 3D 5C 44 6F
020A:4CB1  63 75 6D 65 6E 74
020A:4CB7  73 20 61 6E 64 20
020A:4CBD  53 65 74 74 69 6E
020A:4CC3  67 73
020A:4CC5  5C 27 5F				db	'\', 27h, '_'
020A:4CC8  A0 5F5F				mov	al,data_688		; (020A:5F5F=0A3h)
020A:4CCB  63					db	63h
020A:4CCC  20 5F F0				and	[bx-10h],bl
020A:4CCF  A0 A7F0				mov	al,data_771		; (020A:A7F0=5Fh)
020A:4CD2  5F					pop	di
020A:4CD3  2D 52F2				sub	ax,52F2h
020A:4CD6  00 4C 4F				add	[si+4Fh],cl
020A:4CD9  47 4F 4E 53 45 52	data_664	db	'GONSERVER=\\WINDOWS-XP', 0
020A:4CDF  56 45 52 3D 5C 5C
020A:4CE5  57 49 4E 44 4F 57
020A:4CEB  53 2D 58 50 00
020A:4CF0  4E 55 4D 42 45 52			db	'NUMBER_OF_PROCESSORS=1', 0
020A:4CF6  5F 4F 46 5F 50 52
020A:4CFC  4F 43 45 53 53 4F
020A:4D02  52 53 3D 31 00
020A:4D07  4F 53 3D 57 69 6E			db	'OS=Windows_NT'
020A:4D0D  64 6F 77 73 5F 4E
020A:4D13  54
020A:4D14			loc_754:
020A:4D14  00 50 41				add	[bx+si+41h],dl
020A:4D17  54 48 3D 43 3A 5C	data_667	db	'TH=C:\WINDOWS\system32;C:\WINDOW'
020A:4D1D  57 49 4E 44 4F 57
020A:4D23  53 5C 73 79 73 74
020A:4D29  65 6D 33 32 3B 43
020A:4D2F  3A 5C 57 49 4E 44
020A:4D35  4F 57
020A:4D37  53 3B 43 3A 5C 57			db	'S;C:\WINDOWS\System32\Wbem', 0
020A:4D3D  49 4E 44 4F 57 53
020A:4D43  5C 53 79 73 74 65
020A:4D49  6D 33 32 5C 57 62
020A:4D4F  65 6D 00
020A:4D52  50 41 54 48 45 58			db	'PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS'
020A:4D58  54 3D 2E 43 4F 4D
020A:4D5E  3B 2E 45 58 45 3B
020A:4D64  2E 42 41 54 3B 2E
020A:4D6A  43 4D 44 3B 2E 56
020A:4D70  42 53
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 171

020A:4D72  3B 2E 56 42 45 3B			db	';.VBE;.JS;.JSE;.WSF;.WSH', 0
020A:4D78  2E 4A 53 3B 2E 4A
020A:4D7E  53 45 3B 2E 57 53
020A:4D84  46 3B 2E 57 53 48
020A:4D8A  00
020A:4D8B  50 52 4F 43 45 53			db	'PROCESSOR_ARCHITECTURE=x86', 0
020A:4D91  53 4F 52 5F 41 52
020A:4D97  43 48 49 54 45 43
020A:4D9D  54 55 52 45 3D 78
020A:4DA3  38 36 00
020A:4DA6  50 52 4F 43 45 53			db	'PROCESSOR_IDENTIFIER=x86 Family '
020A:4DAC  53 4F 52 5F 49 44
020A:4DB2  45 4E 54 49 46 49
020A:4DB8  45 52 3D 78 38 36
020A:4DBE  20 46 61 6D 69 6C
020A:4DC4  79 20
020A:4DC6  32 33 20 4D 6F 64			db	'23 Model 24 Stepping 1, Authenti'
020A:4DCC  65 6C 20 32 34 20
020A:4DD2  53 74 65 70 70 69
020A:4DD8  6E 67 20 31 2C 20
020A:4DDE  41 75 74 68 65 6E
020A:4DE4  74 69
020A:4DE6  63 41 4D 44 00			db	'cAMD', 0
020A:4DEB  50 52 4F 43 45 53			db	'PROCESSOR_LEVEL=23', 0
020A:4DF1  53 4F 52 5F 4C 45
020A:4DF7  56 45 4C 3D 32 33
020A:4DFD  00
020A:4DFE  50 52 4F 43 45 53			db	'PROCESSOR_REVISION=1801', 0
020A:4E04  53 4F 52 5F 52 45
020A:4E0A  56 49 53 49 4F 4E
020A:4E10  3D 31 38 30 31 00
020A:4E16  50 52 4F 47 52 41			db	'PROGRAMFILES=C:\PROGRA~1', 0
020A:4E1C  4D 46 49 4C 45 53
020A:4E22  3D 43 3A 5C 50 52
020A:4E28  4F 47 52 41 7E 31
020A:4E2E  00
020A:4E2F  50 52 4F 4D 50 54			db	'PROMPT=$'
020A:4E35  3D 24
020A:4E37  50 24				db	'P$'
020A:4E39  47 00				db	'G', 0
020A:4E3B  53 45 53 53 49 4F			db	'SESSIONNAME=Console', 0
020A:4E41  4E 4E 41 4D 45 3D
020A:4E47  43 6F 6E 73 6F 6C
020A:4E4D  65 00
020A:4E4F  53 59 53 54 45 4D			db	'SYSTEMDRIVE=C:', 0
020A:4E55  44 52 49 56 45 3D
020A:4E5B  43 3A 00
020A:4E5E  53 59 53 54 45 4D			db	'SYSTEMROOT=C:\WINDOWS', 0
020A:4E64  52 4F 4F 54 3D 43
020A:4E6A  3A 5C 57 49 4E 44
020A:4E70  4F 57 53 00
020A:4E74  54 45 4D 50 3D 43			db	'TEMP=C:\WINDOWS\TEMP', 0
020A:4E7A  3A 5C 57 49 4E 44
020A:4E80  4F 57 53 5C 54 45
020A:4E86  4D 50 00
020A:4E89  54 4D 50 3D 43 3A			db	'TMP=C:\WINDOWS\TEMP', 0
020A:4E8F  5C 57 49 4E 44 4F
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 172

020A:4E95  57 53 5C 54 45 4D
020A:4E9B  50 00
020A:4E9D  55 53 45 52 44 4F			db	'USERDOMAIN=WINDOWS-XP', 0
020A:4EA3  4D 41 49 4E 3D 57
020A:4EA9  49 4E 44 4F 57 53
020A:4EAF  2D 58 50 00
020A:4EB3  55 53 45 52 4E 41			db	'USERNAME=', 27h, '_'
020A:4EB9  4D 45 3D 27 5F
020A:4EBE  A0 5F5F				mov	al,data_688		; (020A:5F5F=0A3h)
020A:4EC1  63					db	63h
020A:4EC2  20 5F F0				and	[bx-10h],bl
020A:4EC5  A0 A7F0				mov	al,data_771		; (020A:A7F0=5Fh)
020A:4EC8  5F					pop	di
020A:4EC9  2D 52F2				sub	ax,52F2h
020A:4ECC  00 55 53				add	[di+53h],dl
020A:4ECF  45 52 50 52 4F 46			db	'ERPROFILE=C:\DOCUME~1\CDC2~1', 0
020A:4ED5  49 4C 45 3D 43 3A
020A:4EDB  5C 44 4F 43 55 4D
020A:4EE1  45 7E 31 5C 43 44
020A:4EE7  43 32 7E 31 00
020A:4EEC  42 4C 41 53 54 45			db	'BLASTER=A220 I5 D1 P330 T3'
020A:4EF2  52 3D 41 32 32 30
020A:4EF8  20 49 35 20 44 31
020A:4EFE  20 50 33 33 30 20
020A:4F04  54 33
020A:4F06  00 00				add	[bx+si],al
020A:4F08  01 00				add	[bx+si],ax
020A:4F0A  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\CDC2~1\0016~1\SOURCE'
020A:4F10  55 4D 45 7E 31 5C
020A:4F16  43 44 43 32 7E 31
020A:4F1C  5C 30 30 31 36 7E
020A:4F22  31 5C 53 4F 55 52
020A:4F28  43 45
020A:4F2A  7E 31 2E 45 4E 47			db	'~1.ENG\SR.EXE', 0
020A:4F30  5C 53 52 2E 45 58
020A:4F36  45 00
020A:4F38  5B					db	'['
020A:4F39  C3					retn
020A:4F3A			loc_755:
020A:4F3A  AC					lodsb				; String [si] to al
020A:4F3B  E8 0022				call	sub_88			; (4F60)
020A:4F3E  74 18				jz	loc_756			; Jump if zero
020A:4F40  5A					pop	dx
020A:4F41  FF 06 9900				inc	data_726		; (020A:9900=6F06h)
020A:4F45  2E: F6 06 5253 00			test	byte ptr cs:data_680,0	; (020A:5253=37h)
020A:4F4B  74 ED				jz	loc_755			; Jump if zero
020A:4F4D  2E: F6 06 20CD FF			test	cs:data_277,0FFh	; (020A:20CD=54h)
020A:4F53  9F					lahf				; Load ah from flags
020A:4F54  00 9A FEF0				add	[bp+si-110h],bl
020A:4F58			loc_756:
020A:4F58  1D DEF0				sbb	ax,0DEF0h
020A:4F5B  01 0E 4B04				add	word ptr ds:[4B04h],cx	; (020A:4B04=9B66h)
020A:4F5F  01 0E 5604				add	data_683,cx		; (020A:5604=47C6h)
020A:4F63  01 0E 0E04				add	data_204,cx		; (020A:0E04=0DFE8h)
020A:4F67  04 01				add	al,1
020A:4F69  01 01				add	[bx+di],ax
020A:4F6B  00 02				add	[bp+si],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 173

020A:4F6D  000F[03]				db	15 dup (3)
020A:4F7C  C6 06 048E 7B			mov	byte ptr ds:[48Eh],7Bh	; (020A:048E=2) '{'
020A:4F81  18 14				sbb	[si],dl
020A:4F83  00 18				add	[bx+si],bl
020A:4F85  00 FF				add	bh,bh
020A:4F87  06					push	es
020A:4F88  FF					db	0FFh
020A:4F89  FF					db	0FFh
020A:4F8A  FF					db	0FFh
020A:4F8B  FF 00				inc	word ptr [bx+si]
020A:4F8D  00 00				add	[bx+si],al
020A:4F8F  00 05				add	[di],al
020A:4F91  000F[00]				db	15 dup (0)
020A:4FA0  CD 21				int	21h			; DOS Services  ah=function 23h
										;  get file size, FCB @ ds:dx
020A:4FA2  CB					retf				; Return far
020A:4FA3  000A[00]				db	10 dup (0)
020A:4FAD  000B[20]				db	11 dup (20h)
020A:4FB8  00 00				add	[bx+si],al
020A:4FBA  00 00				add	[bx+si],al
020A:4FBC  00 20				add	[bx+si],ah
020A:4FBE  000A[20]				db	10 dup (20h)
020A:4FC8  0009[00]				db	9 dup (0)
020A:4FD1  0D 2020				or	ax,2020h
020A:4FD4  20 53 45				and	[bp+di+45h],dl
020A:4FD7  54					push	sp
020A:4FD8  20 42 4C				and	[bp+si+4Ch],al
020A:4FDB  41					inc	cx
020A:4FDC  53					push	bx
020A:4FDD  54					push	sp
020A:4FDE  45					inc	bp
020A:4FDF  52					push	dx
020A:4FE0  3D 3041				cmp	ax,3041h
020A:4FE3  0D A8AD				or	ax,0A8ADh
020A:4FE6  A5					movsw				; Mov [si] to es:[di]
020A:4FE7  20 A4 EFAB				and	data_864[si],ah		; (020A:EFAB=3Eh)
020A:4FEB  20 A1 A7A2				and	data_770[bx+di],ah	; (020A:A7A2=2)
020A:4FEF  AE					scasb				; Scan es:[di] for al
020A:4FF0  A2 A3AE				mov	data_756,al		; (020A:A3AE=4)
020A:4FF3  AE					scasb				; Scan es:[di] for al
020A:4FF4  20 AF E0AE				and	data_820[bx],ch		; (020A:E0AE=1)
020A:4FF8  E2 A0		;*		loop	locloop_757		;*Loop if cx > 0
  
020A:4FF8  E2 A0				db	0E2h,0A0h
020A:4FFA  20 A2 AEA2				and	[bp+si-515Eh],ah
020A:4FFE  A4					movsb				; Mov [si] to es:[di]
020A:4FFF  A0 A22D				mov	al,data_751		; (020A:A22D=41h)
020A:5002  EB A2		;*		jmp	short loc_758		;*(4FA6)
020A:5002  EB A2				db	0EBh,0A2h
020A:5004  AE					scasb				; Scan es:[di] for al
  
020A:5005			locloop_759:
020A:5005  A4					movsb				; Mov [si] to es:[di]
020A:5006  A0 5320				mov	al,data_682		; (020A:5320=0)
020A:5009  42					inc	dx
020A:500A  2C 20				sub	al,20h			; ' '
020A:500C  AD					lodsw				; String [si] to ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 174

020A:500D  A0 E0AF				mov	al,data_821		; (020A:E0AF=80h)
020A:5010  A8 AC				test	al,0ACh
020A:5012  A5					movsw				; Mov [si] to es:[di]
020A:5013  E0 3A				loopnz	locloop_760		; Loop if zf=0, cx>0
  
020A:5015  0D 0DEC				or	ax,0DECh
020A:5018  E0 EB				loopnz	locloop_759		; Loop if zf=0, cx>0
  
020A:501A  A5					movsw				; Mov [si] to es:[di]
020A:501B  0D 0000				or	ax,0
020A:501E  0032[00]				db	50 dup (0)
020A:5050  53 6F 75 72 63 65			db	'Sourcer - V Communications, Inc.'
020A:5056  72 20 2D 20 56 20
020A:505C  43 6F 6D 6D 75 6E
020A:5062  69 63 61 74 69 6F
020A:5068  6E 73 2C 20 49 6E
020A:506E  63 2E
020A:5070  20 43 6F 70 79 72			db	' Copyright 1988, 1989, 1990 V3.0'
020A:5076  69 67 68 74 20 31
020A:507C  39 38 38 2C 20 31
020A:5082  39 38 39 2C 20 31
020A:5088  39 39 30 20 56 33
020A:508E  2E 30
020A:5090  37 20 20 73 2F 6E			db	'7  s/n B116236By Frank van Gillu'
020A:5096  20 42 31 31 36 32
020A:509C  33 36 42 79 20 46
020A:50A2  72 61 6E 6B 20 76
020A:50A8  61 6E 20 47 69 6C
020A:50AE  6C 75
020A:50B0  77 65 20 26 20 47			db	'we & Geoff Caras (08/10/90,08:59'
020A:50B6  65 6F 66 66 20 43
020A:50BC  61 72 61 73 20 28
020A:50C2  30 38 2F 31 30 2F
020A:50C8  39 30 2C 30 38 3A
020A:50CE  35 39
020A:50D0  3A 35 39 29				db	':59)'
020A:50D4  000C[00]				db	12 dup (0)
020A:50E0  FF 06 28DC				inc	word ptr ds:[28DCh]	; (020A:28DC=414Dh)
020A:50E4  00 00				add	[bx+si],al
020A:50E6  2E: 8C 06 0090			mov	word ptr cs:[90h],es	; (020A:0090=1FBFh)
020A:50EB  E8 481A				call	sub_151			; (9908)
020A:50EE  9A 5F9F:2FA0		;*		call	far ptr sub_344		;*(5F9F:2FA0)
020A:50EE  9A A0 2F 9F 5F			db	 9Ah,0A0h, 2Fh, 9Fh, 5Fh
020A:50F3  E8 47D6				call	sub_150			; (98CC)
020A:50F6  9A 5F9F:30F0		;*		call	far ptr sub_345		;*(5F9F:30F0)
020A:50F6  9A F0 30 9F 5F			db	 9Ah,0F0h, 30h, 9Fh, 5Fh
020A:50FB  BE 0080				mov	si,80h
020A:50FE  BF 0140				mov	di,140h
020A:5101  03 FE				add	di,si
020A:5103  2E: 80 85 0100 CD			add	cs:data_118[di],0CDh	; (020A:0100=28h)
020A:5109  8A 0C				mov	cl,[si]
020A:510B  0A C9				or	cl,cl			; Zero ?
020A:510D  75 03				jnz	loc_761			; Jump if not zero
020A:510F  E9 015B				jmp	loc_777			; (526D)
020A:5112			loc_761:
020A:5112  32 ED				xor	ch,ch			; Zero register
020A:5114  BE 0081				mov	si,81h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 175

020A:5117  51					push	cx
  
020A:5118			locloop_762:
020A:5118  81 3C 2D20				cmp	word ptr [si],2D20h
020A:511C  74 0D				je	loc_765			; Jump if equal
020A:511E  26: 81 3D 2F20			cmp	word ptr es:[di],2F20h
020A:5123  74 06				je	loc_765			; Jump if equal
020A:5125			loc_763:
020A:5125  46					inc	si
020A:5126  E2 F0				loop	locloop_762		; Loop if cx > 0
  
020A:5128			loc_764:
020A:5128  E9 0122				jmp	loc_774			; (524D)
020A:512B			loc_765:
020A:512B  46					inc	si
020A:512C  49					dec	cx
020A:512D  E3 F9				jcxz	loc_764			; Jump if cx=0
020A:512F  46					inc	si
020A:5130  49					dec	cx
020A:5131  75 03				jnz	loc_766			; Jump if not zero
020A:5133  E9 0117				jmp	loc_774			; (524D)
020A:5136			loc_766:
020A:5136  8A 04				mov	al,[si]
020A:5138  24 DF				and	al,0DFh
020A:513A  3C 56				cmp	al,56h			; 'V'
020A:513C  75 08				jne	loc_767			; Jump if not equal
020A:513E  26: C6 06 2641 01			mov	byte ptr es:[2641h],1	; (020A:2641=0)
020A:5144  EB DF				jmp	short loc_763		; (5125)
020A:5146			loc_767:
020A:5146  3C 44				cmp	al,44h			; 'D'
020A:5148  75 08				jne	loc_768			; Jump if not equal
020A:514A  26: C6 06 38A9 01			mov	byte ptr es:[38A9h],1	; (020A:38A9=16h)
020A:5150  EB D3				jmp	short loc_763		; (5125)
020A:5152			loc_768:
020A:5152  3C 53				cmp	al,53h			; 'S'
020A:5154  75 26				jne	loc_770			; Jump if not equal
020A:5156  46					inc	si
020A:5157  49					dec	cx
020A:5158  E3 1F				jcxz	loc_769			; Jump if cx=0
020A:515A  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:515D  74 C6				je	loc_763			; Jump if equal
020A:515F  8B 04				mov	ax,[si]
020A:5161  26: A3 1301				mov	es:data_226,ax		; (020A:1301=0)
020A:5165  8B 44 02				mov	ax,[si+2]
020A:5168  26: A3 1303				mov	es:data_227,ax		; (020A:1303=0)
020A:516C  83 C6 03				add	si,3
020A:516F  83 F9 04				cmp	cx,4
020A:5172  76 05				jbe	loc_769			; Jump if below or =
020A:5174  83 E9 03				sub	cx,3
020A:5177  EB AC				jmp	short loc_763		; (5125)
020A:5179			loc_769:
020A:5179  E9 00D1				jmp	loc_774			; (524D)
020A:517C			loc_770:
020A:517C  3C 4E				cmp	al,4Eh			; 'N'
020A:517E  75 A5				jne	loc_763			; Jump if not equal
020A:5180  26: C6 06 1309 01			mov	es:data_230,1		; (020A:1309=0)
020A:5186  26: C6 06 2641 01			mov	byte ptr es:[2641h],1	; (020A:2641=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 176

020A:518C  80 7C 01 31				cmp	byte ptr [si+1],31h	; '1'
020A:5190  74 63				je	loc_772			; Jump if equal
020A:5192  26: C7 06 07A6 BFC0			mov	word ptr es:[7A6h],0BFC0h	; (020A:07A6=11h)
020A:5199  26: C7 06 07F4 D9DA			mov	word ptr es:[7F4h],0D9DAh	; (020A:07F4=314h)
020A:51A0  26: C7 06 07F6 C020			mov	word ptr es:[7F6h],0C020h	; (020A:07F6=200h)
020A:51A7  26: C7 06 0844 20D9			mov	es:data_184,20D9h	; (020A:0844=1601h)
020A:51AE  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:51B3  06					push	es
020A:51B4  E8 4A5A				call	sub_163			; (9C11)
020A:51B7  B4 24				mov	ah,24h			; '$'
020A:51B9  8A C4				mov	al,ah
020A:51BB  26: C7 06 05F3 BFC0			mov	word ptr es:[5F3h],0BFC0h	; (020A:05F3=2A8h)
020A:51C2  26: 01 06 05F3			add	word ptr es:[5F3h],ax	; (020A:05F3=2A8h)
020A:51C7  26: C7 06 0641 D9DA			mov	word ptr es:[641h],0D9DAh	; (020A:0641=9AA4h)
020A:51CE  26: 01 06 0641			add	word ptr es:[641h],ax	; (020A:0641=9AA4h)
020A:51D3  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:51D8  5A					pop	dx
020A:51D9  8E C2				mov	es,dx
020A:51DB  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:51E0  5A					pop	dx
020A:51E1  75 0A				jnz	loc_771			; Jump if not zero
020A:51E3  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:51E8  74 03				je	loc_771			; Jump if equal
020A:51EA  E8 4CF7				call	sub_168			; (9EE4)
020A:51ED			loc_771:
020A:51ED  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:51F2  E9 FF30				jmp	loc_763			; (5125)
020A:51F5			loc_772:
020A:51F5  26: C6 06 2642 01			mov	es:data_305,1		; (020A:2642=0)
020A:51FB  26: 81 0E 42CE 0080			or	es:data_602,80h		; (020A:42CE=3C3Bh)
020A:5202  46					inc	si
020A:5203  B8 2020				mov	ax,2020h
020A:5206  26: A3 07A6				mov	word ptr es:[7A6h],ax	; (020A:07A6=11h)
020A:520A  26: A3 07F4				mov	word ptr es:[7F4h],ax	; (020A:07F4=314h)
020A:520E  26: A3 07F6				mov	word ptr es:[7F6h],ax	; (020A:07F6=200h)
020A:5212  26: A3 0844				mov	es:data_184,ax		; (020A:0844=1601h)
020A:5216  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:521B  06					push	es
020A:521C  E8 49F2				call	sub_163			; (9C11)
020A:521F  B4 44				mov	ah,44h			; 'D'
020A:5221  8A C4				mov	al,ah
020A:5223  26: A3 05F3				mov	word ptr es:[5F3h],ax	; (020A:05F3=2A8h)
020A:5227  26: A3 0641				mov	word ptr es:[641h],ax	; (020A:0641=9AA4h)
020A:522B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:5230  5A					pop	dx
020A:5231  8E C2				mov	es,dx
020A:5233  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:5238  5A					pop	dx
020A:5239  75 0A				jnz	loc_773			; Jump if not zero
020A:523B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:5240  74 03				je	loc_773			; Jump if equal
020A:5242  E8 4C9F				call	sub_168			; (9EE4)
020A:5245			loc_773:
020A:5245  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:524A  E9 FED8				jmp	loc_763			; (5125)
020A:524D			loc_774:
020A:524D  59					pop	cx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 177

020A:524E  BE 0081				mov	si,81h
020A:5251  BF 37AA				mov	di,37AAh
  
020A:5254			locloop_775:
020A:5254  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5257  75 05				jne	locloop_776		; Jump if not equal
020A:5259  46					inc	si
020A:525A  E2 F8				loop	locloop_775		; Loop if cx > 0
  
020A:525C  EB 0F				jmp	short loc_777		; (526D)
  
020A:525E			locloop_776:
020A:525E  81 3C 2D20				cmp	word ptr [si],2D20h
020A:5262  74 09				je	loc_777			; Jump if equal
020A:5264  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5267  74 04				je	loc_777			; Jump if equal
020A:5269  FC					cld				; Clear direction
020A:526A  A4					movsb				; Mov [si] to es:[di]
020A:526B  E2 F1				loop	locloop_776		; Loop if cx > 0
  
020A:526D			loc_777:
020A:526D  E8 4989				call	sub_157			; (9BF9)
020A:5270  C6 06 2638 00			mov	byte ptr ds:[2638h],0	; (9B68:2638=0E0h)
020A:5275  83 3E 1301 00			cmp	word ptr ds:[1301h],0	; (9B68:1301=0E0E2h)
020A:527A  74 14				je	loc_778			; Jump if equal
020A:527C  BE 1301				mov	si,1301h
020A:527F  8B C6				mov	ax,si
020A:5281  05 0004				add	ax,4
020A:5284  A3 44FC				mov	word ptr ds:[44FCh],ax	; (9B68:44FC=0)
020A:5287  E8 08AA				call	sub_98			; (5B34)
020A:528A  72 04				jc	loc_778			; Jump if carry Set
020A:528C  89 16 12FF				mov	word ptr ds:[12FFh],dx	; (9B68:12FF=0A5ACh)
020A:5290			loc_778:
020A:5290  B9 004E				mov	cx,4Eh
020A:5293  81 E9 0041				sub	cx,41h
020A:5297  BF 01A5				mov	di,1A5h
020A:529A  BE 0041				mov	si,41h
020A:529D  B8 070F				mov	ax,70Fh
020A:52A0  8E D8				mov	ds,ax
020A:52A2  E8 4969				call	sub_162			; (9C0E)
020A:52A5  FC					cld				; Clear direction
020A:52A6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:52A8  E8 494E				call	sub_157			; (9BF9)
020A:52AB  2E: A1 0090				mov	ax,word ptr cs:[90h]	; (020A:0090=1FBFh)
020A:52AF  A3 48E1				mov	word ptr ds:[48E1h],ax	; (9B68:48E1=99h)
020A:52B2  E8 814B				call	sub_198			; (D400)
020A:52B5  8A F0				mov	dh,al
020A:52B7  A8 70				test	al,70h			; 'p'
020A:52B9  74 19				jz	loc_779			; Jump if zero
020A:52BB  E8 493B				call	sub_157			; (9BF9)
020A:52BE  A1 2A95				mov	ax,word ptr ds:[2A95h]	; (4D00:2A95=4140h)
020A:52C1  A3 2A99				mov	word ptr ds:[2A99h],ax	; (4D00:2A99=0A00h)
020A:52C4  A1 2A97				mov	ax,word ptr ds:[2A97h]	; (4D00:2A97=1200h)
020A:52C7  A3 2A9B				mov	word ptr ds:[2A9Bh],ax	; (4D00:2A9B=4902h)
020A:52CA  80 FE 40				cmp	dh,40h			; '@'
020A:52CD  75 05				jne	loc_779			; Jump if not equal
020A:52CF  C6 06 2A79 0C			mov	byte ptr ds:[2A79h],0Ch	; (4D00:2A79=2)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 178

020A:52D4			loc_779:
020A:52D4  88 36 2A78				mov	byte ptr ds:[2A78h],dh	; (4D00:2A78=5Eh)
020A:52D8  B6 00				mov	dh,0
020A:52DA  E8 3367				call	sub_122			; (8644)
020A:52DD  B4 01				mov	ah,1
020A:52DF  9A 16FA:082C		;*		call	far ptr sub_246		;*(16FA:082C)
020A:52DF  9A 2C 08 FA 16			db	 9Ah, 2Ch, 08h,0FAh, 16h
020A:52E4  B8 3300				mov	ax,3300h
020A:52E7  CD 21				int	21h			; DOS Services  ah=function 33h
										;  ctrl-break flag al=off/on
020A:52E9  88 16 2643				mov	byte ptr ds:[2643h],dl	; (4D00:2643=0FFh)
020A:52ED  B8 3301				mov	ax,3301h
020A:52F0  32 D2				xor	dl,dl			; Zero register
020A:52F2  CD 21				int	21h			; DOS Services  ah=function 33h
										;  ctrl-break flag al=off/on
020A:52F4  1E					push	ds
020A:52F5  B8 16FA				mov	ax,16FAh
020A:52F8  BA 08F7				mov	dx,8F7h
020A:52FB  B8 2523				mov	ax,2523h
020A:52FE  CD 21				int	21h			; DOS Services  ah=function 25h
										;  set intrpt vector al to ds:dx
020A:5300  1F					pop	ds
020A:5301  B9 0350				mov	cx,350h
020A:5304  51					push	cx
020A:5305  E8 4906				call	sub_162			; (9C0E)
020A:5308  83 F9 03				cmp	cx,3
020A:530B  77 03				ja	loc_780			; Jump if above
020A:530D  E9 0090				jmp	loc_781			; (53A0)
020A:5310			loc_780:
020A:5310  90					nop
020A:5311  56					push	si
020A:5312  49					dec	cx
020A:5313  45					inc	bp
020A:5314  57					push	di
020A:5315  2D 4E49				sub	ax,4E49h
020A:5318  46					inc	si
020A:5319  4F					dec	di
020A:531A  2D 2031				sub	ax,2031h
020A:531D  03 00				add	ax,[bx+si]
020A:531F  03 00				add	ax,[bx+si]
020A:5321  03 00				add	ax,[bx+si]
020A:5323  03 00				add	ax,[bx+si]
020A:5325  58					pop	ax
020A:5326  58					pop	ax
020A:5327  58					pop	ax
020A:5328  03 00				add	ax,[bx+si]
020A:532A  E8 48C9				call	sub_156			; (9BF6)
020A:532D  03 00				add	ax,[bx+si]
020A:532F  BF 005B				mov	di,5Bh
020A:5332  03 00				add	ax,[bx+si]
020A:5334  03 00				add	ax,[bx+si]
020A:5336  BE 7460				mov	si,7460h
020A:5339  03 00				add	ax,[bx+si]
020A:533B  03 00				add	ax,[bx+si]
020A:533D  B9 BA91				mov	cx,0BA91h
020A:5340  81 E9 76D3				sub	cx,76D3h
020A:5344  9A 5F9F:0000		;*		call	far ptr sub_343		;*(5F9F:0000)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 179

020A:5344  9A 00 00 9F 5F			db	 9Ah, 00h, 00h, 9Fh, 5Fh
020A:5349  03 00				add	ax,[bx+si]
020A:534B  03 00				add	ax,[bx+si]
020A:534D  E8 48A9				call	sub_157			; (9BF9)
020A:5350  BE 0076				mov	si,76h
020A:5353  03 00				add	ax,[bx+si]
020A:5355  03 00				add	ax,[bx+si]
020A:5357  22B9					dw	22B9h
020A:5359  01 03				add	[bp+di],ax
020A:535B  00 9A 0000				add	[bp+si+0],bl
020A:535F  9F					lahf				; Load ah from flags
020A:5360  5F					pop	di
020A:5361  03 00				add	ax,[bx+si]
020A:5363  03 00				add	ax,[bx+si]
020A:5365  BE 000D				mov	si,0Dh
020A:5368  03 00				add	ax,[bx+si]
020A:536A  03 00				add	ax,[bx+si]
020A:536C  03 00				add	ax,[bx+si]
020A:536E  03 00				add	ax,[bx+si]
020A:5370  B9 0036				mov	cx,36h
020A:5373  81 E9 0032				sub	cx,32h
020A:5377  9A 5F9F:0000		;*		call	far ptr sub_343		;*(5F9F:0000)
020A:5377  9A 00 00 9F 5F			db	 9Ah, 00h, 00h, 9Fh, 5Fh
020A:537C  03 00				add	ax,[bx+si]
020A:537E  03 00				add	ax,[bx+si]
020A:5380  8B 45 17				mov	ax,[di+17h]
020A:5383  3B 45 19				cmp	ax,[di+19h]
020A:5386  74 18				je	loc_781			; Jump if equal
020A:5388  03 00				add	ax,[bx+si]
020A:538A  BF 42A5				mov	di,42A5h
020A:538D  03 00				add	ax,[bx+si]
020A:538F  03 00				add	ax,[bx+si]
020A:5391  83 4D 21 02				or	word ptr [di+21h],2
020A:5395  03 00				add	ax,[bx+si]
020A:5397  03 00				add	ax,[bx+si]
020A:5399  03 00				add	ax,[bx+si]
020A:539B  C7 45 23 FFFF			mov	word ptr [di+23h],0FFFFh
020A:53A0			loc_781:
020A:53A0  BF 1121				mov	di,1121h
020A:53A3  81 EF 1023				sub	di,1023h
020A:53A7  E8 11D6				call	sub_104			; (6580)
020A:53AA  9A 5F9F:3120		;*		call	far ptr sub_346		;*(5F9F:3120)
020A:53AA  9A 20 31 9F 5F			db	 9Ah, 20h, 31h, 9Fh, 5Fh
020A:53AF  9A 16FA:0648		;*		call	far ptr sub_241		;*(16FA:0648)
020A:53AF  9A 48 06 FA 16			db	 9Ah, 48h, 06h,0FAh, 16h
020A:53B4  E8 31D5				call	sub_121			; (858C)
020A:53B7  E8 8216				call	sub_201			; (D5D0)
020A:53BA  80 3E 37AA 00			cmp	byte ptr ds:[37AAh],0	; (9B68:37AA=0)
020A:53BF  74 42				je	loc_783			; Jump if equal
020A:53C1  BF 37AA				mov	di,37AAh
020A:53C4  B0 00				mov	al,0
020A:53C6  9A 16FA:04A4		;*		call	far ptr sub_238		;*(16FA:04A4)
020A:53C6  9A A4 04 FA 16			db	 9Ah,0A4h, 04h,0FAh, 16h
020A:53CB  9A 16FA:0510		;*		call	far ptr sub_239		;*(16FA:0510)
020A:53CB  9A 10 05 FA 16			db	 9Ah, 10h, 05h,0FAh, 16h
020A:53D0  A2 2C3F				mov	byte ptr ds:[2C3Fh],al	; (9B68:2C3F=0ABh)
020A:53D3  3C 00				cmp	al,0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 180

020A:53D5  74 2C				je	loc_783			; Jump if equal
020A:53D7  50					push	ax
020A:53D8  57					push	di
020A:53D9  BE 37AA				mov	si,37AAh
020A:53DC  BF 2BB2				mov	di,2BB2h
020A:53DF  8B CB				mov	cx,bx
020A:53E1  FC					cld				; Clear direction
020A:53E2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:53E4  5F					pop	di
020A:53E5  4F					dec	di
020A:53E6  9A 16FA:1740		;*		call	far ptr sub_275		;*(16FA:1740)
020A:53E6  9A 40 17 FA 16			db	 9Ah, 40h, 17h,0FAh, 16h
020A:53EB  58					pop	ax
020A:53EC  83 FB 0C				cmp	bx,0Ch
020A:53EF  77 0D				ja	loc_782			; Jump if above
020A:53F1  3C 01				cmp	al,1
020A:53F3  74 17				je	loc_784			; Jump if equal
020A:53F5  80 3E 38A9 01			cmp	byte ptr ds:[38A9h],1	; (9B68:38A9=48h)
020A:53FA  75 13				jne	loc_785			; Jump if not equal
020A:53FC  EB 1F				jmp	short loc_786		; (541D)
020A:53FE			loc_782:
020A:53FE  C6 06 2C3F 00			mov	byte ptr ds:[2C3Fh],0	; (9B68:2C3F=0ABh)
020A:5403			loc_783:
020A:5403  80 3E 38A9 01			cmp	byte ptr ds:[38A9h],1	; (9B68:38A9=48h)
020A:5408  75 05				jne	loc_785			; Jump if not equal
020A:540A  EB 19				jmp	short loc_787		; (5425)
020A:540C			loc_784:
020A:540C  E9 1BB1				jmp	loc_1111		; (6FC0)
020A:540F			loc_785:
020A:540F  BD 37AA				mov	bp,37AAh
020A:5412  BE 389B				mov	si,389Bh
020A:5415  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:5415  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:541A  E9 1BA3				jmp	loc_1111		; (6FC0)
020A:541D			loc_786:
020A:541D  E8 6584				call	sub_179			; (B9A4)
020A:5420  73 03				jnc	loc_787			; Jump if carry=0
020A:5422  E9 E8B4		;*		jmp	loc_519			;*(3CD9)
020A:5422  E9 B4 E8				db	0E9h,0B4h,0E8h
020A:5425			loc_787:
020A:5425  C6 06 2638 01			mov	byte ptr ds:[2638h],1	; (9B68:2638=0E0h)
020A:542A  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:542E  E8 3367				call	sub_125			; (8798)
020A:5431  E8 30A8				call	sub_117			; (84DC)
020A:5434  80 3E 4392 01			cmp	byte ptr ds:[4392h],1	; (9B68:4392=0)
020A:5439  75 08				jne	loc_788			; Jump if not equal
020A:543B  C6 06 4392 00			mov	byte ptr ds:[4392h],0	; (9B68:4392=0)
020A:5440  E9 117D				jmp	loc_1007		; (65C0)
020A:5443			loc_788:
020A:5443  E8 47C8				call	sub_162			; (9C0E)
020A:5446  B4 07				mov	ah,7
020A:5448  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:544A  3C 00				cmp	al,0
020A:544C  75 0D				jne	loc_790			; Jump if not equal
020A:544E  B4 07				mov	ah,7
020A:5450  CD 21				int	21h			; DOS Services  ah=function 07h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 181

										;  get keybd char al, no echo
020A:5452  3C 3B				cmp	al,3Bh			; ';'
020A:5454  75 03				jne	loc_789			; Jump if not equal
020A:5456  E9 1862				jmp	loc_1073		; (6CBB)
020A:5459			loc_789:
020A:5459  EB 34				jmp	short loc_793		; (548F)
020A:545B			loc_790:
020A:545B  3C 3F				cmp	al,3Fh			; '?'
020A:545D  75 03				jne	loc_791			; Jump if not equal
020A:545F  E9 1859				jmp	loc_1073		; (6CBB)
020A:5462			loc_791:
020A:5462  3C 1B				cmp	al,1Bh
020A:5464  75 03				jne	loc_792			; Jump if not equal
020A:5466  E9 1624				jmp	loc_1050		; (6A8D)
020A:5469			loc_792:
020A:5469  3C 80				cmp	al,80h
020A:546B  73 EC				jae	loc_789			; Jump if above or =
020A:546D  A8 40				test	al,40h			; '@'
020A:546F  74 E8				jz	loc_789			; Jump if zero
020A:5471  24 5F				and	al,5Fh			; '_'
020A:5473  B9 44CA				mov	cx,44CAh
020A:5476  81 E9 44B2				sub	cx,44B2h
020A:547A  BF 44B2				mov	di,44B2h
020A:547D  FC					cld				; Clear direction
020A:547E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:5480  E3 0D				jcxz	loc_793			; Jump if cx=0
020A:5482  4F					dec	di
020A:5483  81 EF 44B2				sub	di,44B2h
020A:5487  D1 E7				shl	di,1			; Shift w/zeros fill
020A:5489  81 C7 44CA				add	di,44CAh
020A:548D  FF 25				jmp	word ptr [di]		;*
020A:548F			loc_793:
020A:548F  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:548F  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:5494  EB AD				jmp	short loc_788		; (5443)
020A:5496  E8 32A3				call	sub_123			; (873C)
020A:5499  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:549D  B4 22				mov	ah,22h			; '"'
020A:549F  E8 32F6				call	sub_125			; (8798)
020A:54A2  E8 3037				call	sub_117			; (84DC)
020A:54A5  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:54AA  75 2C				jne	loc_796			; Jump if not equal
020A:54AC  B4 02				mov	ah,2
020A:54AE  32 FF				xor	bh,bh			; Zero register
020A:54B0  BA 0500				mov	dx,500h
020A:54B3  E8 373E				call	sub_136			; (8BF4)
020A:54B6  BE 0643				mov	si,643h
020A:54B9  B9 0BE3				mov	cx,0BE3h
020A:54BC  81 E9 0643				sub	cx,643h
020A:54C0  49					dec	cx
020A:54C1  E8 474D				call	sub_163			; (9C11)
  
020A:54C4			locloop_794:
020A:54C4  26: 8A 14				mov	dl,es:[si]
020A:54C7  80 FA F4				cmp	dl,0F4h
020A:54CA  72 02				jb	loc_795			; Jump if below
020A:54CC  B2 20				mov	dl,20h			; ' '
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 182

020A:54CE			loc_795:
020A:54CE  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:54CE  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:54D3  46					inc	si
020A:54D4  E2 EE				loop	locloop_794		; Loop if cx > 0
  
020A:54D6  EB 65				jmp	short loc_804		; (553D)
020A:54D8			loc_796:
020A:54D8  8B 16 12FB				mov	dx,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:54DC  8E C2				mov	es,dx
020A:54DE  BF 0320				mov	di,320h
020A:54E1  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:54E5  E8 3008				call	sub_118			; (84F0)
020A:54E8  E8 4711				call	sub_158			; (9BFC)
020A:54EB  BE 0643				mov	si,643h
020A:54EE  B9 0BE3				mov	cx,0BE3h
020A:54F1  81 E9 0643				sub	cx,643h
020A:54F5  B0 20				mov	al,20h			; ' '
020A:54F7  B7 07				mov	bh,7
  
020A:54F9			locloop_797:
020A:54F9  8A DF				mov	bl,bh
020A:54FB  80 3C FE				cmp	byte ptr [si],0FEh
020A:54FE  75 0F				jne	loc_800			; Jump if not equal
020A:5500  80 FF 07				cmp	bh,7
020A:5503  75 04				jne	loc_798			; Jump if not equal
020A:5505  B7 0F				mov	bh,0Fh
020A:5507  EB 02				jmp	short loc_799		; (550B)
020A:5509			loc_798:
020A:5509  B7 07				mov	bh,7
020A:550B			loc_799:
020A:550B  8A DF				mov	bl,bh
020A:550D  EB 0F				jmp	short loc_801		; (551E)
020A:550F			loc_800:
020A:550F  80 3C F4				cmp	byte ptr [si],0F4h
020A:5512  72 13				jb	loc_802			; Jump if below
020A:5514  1E					push	ds
020A:5515  E8 46E1				call	sub_157			; (9BF9)
020A:5518  8A 1E 11E7				mov	bl,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:551C  1F					pop	ds
020A:551D  FC					cld				; Clear direction
020A:551E			loc_801:
020A:551E  AA					stosb				; Store al to es:[di]
020A:551F  46					inc	si
020A:5520  26: 88 1D				mov	es:[di],bl
020A:5523  47					inc	di
020A:5524  49					dec	cx
020A:5525  EB 0E				jmp	short loc_803		; (5535)
020A:5527			loc_802:
020A:5527  80 3C 80				cmp	byte ptr [si],80h
020A:552A  72 09				jb	loc_803			; Jump if below
020A:552C  1E					push	ds
020A:552D  E8 46C9				call	sub_157			; (9BF9)
020A:5530  8A 1E 11E6				mov	bl,byte ptr ds:[11E6h]	; (9B68:11E6=0ADh)
020A:5534  1F					pop	ds
020A:5535			loc_803:
020A:5535  FC					cld				; Clear direction
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 183

020A:5536  A4					movsb				; Mov [si] to es:[di]
020A:5537  26: 88 1D				mov	es:[di],bl
020A:553A  47					inc	di
020A:553B  E2 BC				loop	locloop_797		; Loop if cx > 0
  
020A:553D			loc_804:
020A:553D  E8 46B9				call	sub_157			; (9BF9)
020A:5540  E8 2FD1				call	sub_119			; (8514)
020A:5543  83 26 42C6 FE			and	word ptr ds:[42C6h],0FFFEh	; (9B68:42C6=0)
020A:5548  8B 1E 42CC				mov	bx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:554C  E8 3511				call	sub_131			; (8A60)
020A:554F			loc_805:
020A:554F  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:554F  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:5554  3C 00				cmp	al,0
020A:5556  74 0A				je	loc_806			; Jump if equal
020A:5558  24 5F				and	al,5Fh			; '_'
020A:555A  3C 41				cmp	al,41h			; 'A'
020A:555C  72 04				jb	loc_806			; Jump if below
020A:555E  3C 5A				cmp	al,5Ah			; 'Z'
020A:5560  76 03				jbe	loc_807			; Jump if below or =
020A:5562			loc_806:
020A:5562  E9 0098				jmp	loc_812			; (55FD)
020A:5565			loc_807:
020A:5565  3C 50				cmp	al,50h			; 'P'
020A:5567  77 29				ja	loc_808			; Jump if above
020A:5569  2C 41				sub	al,41h			; 'A'
020A:556B  BB 8000				mov	bx,8000h
020A:556E  8A C8				mov	cl,al
020A:5570  D3 CB				ror	bx,cl			; Rotate
020A:5572  8B 16 42CC				mov	dx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:5576  8B CA				mov	cx,dx
020A:5578  23 D3				and	dx,bx
020A:557A  F7 D2				not	dx
020A:557C  23 D3				and	dx,bx
020A:557E  F7 D3				not	bx
020A:5580  23 CB				and	cx,bx
020A:5582  0B CA				or	cx,dx
020A:5584  F7 06 42C6 0002			test	word ptr ds:[42C6h],2	; (9B68:42C6=0)
020A:558A  75 62				jnz	loc_810			; Jump if not zero
020A:558C  89 0E 42CC				mov	word ptr ds:[42CCh],cx	; (9B68:42CC=0)
020A:5590  EB 61				jmp	short loc_811		; (55F3)
020A:5592			loc_808:
020A:5592  3C 54				cmp	al,54h			; 'T'
020A:5594  77 2F				ja	loc_809			; Jump if above
020A:5596  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:559B  74 51				je	loc_810			; Jump if equal
020A:559D  2C 51				sub	al,51h			; 'Q'
020A:559F  B3 04				mov	bl,4
020A:55A1  8A C8				mov	cl,al
020A:55A3  D2 CB				ror	bl,cl			; Rotate
020A:55A5  8A 16 430B				mov	dl,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:55A9  8A CA				mov	cl,dl
020A:55AB  22 D3				and	dl,bl
020A:55AD  F6 D2				not	dl
020A:55AF  22 D3				and	dl,bl
020A:55B1  F6 D3				not	bl
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 184

020A:55B3  22 CB				and	cl,bl
020A:55B5  0A CA				or	cl,dl
020A:55B7  F7 06 42C6 0002			test	word ptr ds:[42C6h],2	; (9B68:42C6=0)
020A:55BD  75 2F				jnz	loc_810			; Jump if not zero
020A:55BF  88 0E 430B				mov	byte ptr ds:[430Bh],cl	; (9B68:430B=0)
020A:55C3  EB 2E				jmp	short loc_811		; (55F3)
020A:55C5			loc_809:
020A:55C5  2C 55				sub	al,55h			; 'U'
020A:55C7  BB 0080				mov	bx,80h
020A:55CA  8A C8				mov	cl,al
020A:55CC  D3 CB				ror	bx,cl			; Rotate
020A:55CE  8B 16 42CE				mov	dx,word ptr ds:[42CEh]	; (9B68:42CE=0)
020A:55D2  8B CA				mov	cx,dx
020A:55D4  23 D3				and	dx,bx
020A:55D6  F7 D2				not	dx
020A:55D8  23 D3				and	dx,bx
020A:55DA  F7 D3				not	bx
020A:55DC  23 CB				and	cx,bx
020A:55DE  0B CA				or	cx,dx
020A:55E0  F7 06 42C6 0002			test	word ptr ds:[42C6h],2	; (9B68:42C6=0)
020A:55E6  75 06				jnz	loc_810			; Jump if not zero
020A:55E8  89 0E 42CE				mov	word ptr ds:[42CEh],cx	; (9B68:42CE=0)
020A:55EC  EB 05				jmp	short loc_811		; (55F3)
020A:55EE			loc_810:
020A:55EE  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:55EE  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:55F3			loc_811:
020A:55F3  8B 1E 42CC				mov	bx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:55F7  E8 3466				call	sub_131			; (8A60)
020A:55FA  E9 FF52				jmp	loc_805			; (554F)
020A:55FD			loc_812:
020A:55FD  E8 3164				call	sub_124			; (8764)
020A:5600  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5604  47C6			data_683	dw	47C6h
020A:5606  67					db	67h
020A:5607  00 C6				add	dh,al
020A:5609  06					push	es
020A:560A  38 26 8A01				cmp	byte ptr ds:[8A01h],ah	; (9B68:8A01=0)
020A:560E  26					db	26h
020A:560F  3E					db	3Eh
020A:5610  2C E8				sub	al,0E8h
020A:5612  84 31				test	dh,[bx+di]
020A:5614  E8 2EC5				call	sub_117			; (84DC)
020A:5617  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:561A  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:561F  74 0C				jz	loc_813			; Jump if zero
020A:5621  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (9B68:263D=0AEh)
020A:5626  73 05				jae	loc_813			; Jump if above or =
020A:5628  B0 0A				mov	al,0Ah
020A:562A  E8 3957				call	sub_142			; (8F84)
020A:562D			loc_813:
020A:562D  E8 34A8				call	sub_132			; (8AD8)
020A:5630  E9 FE10				jmp	loc_788			; (5443)
020A:5633  E8 3106				call	sub_123			; (873C)
020A:5636  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:563A  C6 47 39 0F				mov	byte ptr [bx+39h],0Fh
020A:563E  C6 47 79 0F				mov	byte ptr [bx+79h],0Fh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 185

020A:5642  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:5646  B4 02				mov	ah,2
020A:5648  32 FF				xor	bh,bh			; Zero register
020A:564A  BA 1313				mov	dx,1313h
020A:564D  E8 35A4				call	sub_136			; (8BF4)
020A:5650  E8 3401				call	sub_130			; (8A54)
020A:5653  E8 2DDA				call	sub_116			; (8430)
020A:5656  B1 04				mov	cl,4
020A:5658  B3 02				mov	bl,2
020A:565A  BE 0679				mov	si,679h
020A:565D  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:565D  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:5662  3C 1B				cmp	al,1Bh
020A:5664  75 03				jne	loc_814			; Jump if not equal
020A:5666  E9 009B				jmp	loc_821			; (5704)
020A:5669			loc_814:
020A:5669  80 F9 00				cmp	cl,0
020A:566C  74 03				je	loc_815			; Jump if equal
020A:566E  E9 008E				jmp	loc_820			; (56FF)
020A:5671			loc_815:
020A:5671  B9 0080				mov	cx,80h
020A:5674  BF 0679				mov	di,679h
020A:5677  E8 02BE				call	sub_95			; (5938)
020A:567A  72 03				jc	loc_816			; Jump if carry Set
020A:567C  E9 0080				jmp	loc_820			; (56FF)
020A:567F			loc_816:
020A:567F  89 16 2A18				mov	word ptr ds:[2A18h],dx	; (9B68:2A18=0AEE0h)
020A:5683  B2 3A				mov	dl,3Ah			; ':'
020A:5685  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:5685  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:568A  B1 04				mov	cl,4
020A:568C  B3 02				mov	bl,2
020A:568E  BE 067E				mov	si,67Eh
020A:5691  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:5691  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:5696  3C 1B				cmp	al,1Bh
020A:5698  74 6A				je	loc_821			; Jump if equal
020A:569A  80 F9 00				cmp	cl,0
020A:569D  75 60				jne	loc_820			; Jump if not equal
020A:569F  B9 0080				mov	cx,80h
020A:56A2  BF 067E				mov	di,67Eh
020A:56A5  E8 0290				call	sub_95			; (5938)
020A:56A8  73 55				jnc	loc_820			; Jump if carry=0
020A:56AA  E8 4558				call	sub_159			; (9C05)
020A:56AD  26: 89 16 0002			mov	word ptr es:[2],dx	; (A0AF:0002=0)
020A:56B2  26: 83 3E 0006 FF			cmp	word ptr es:[6],0FFFFh	; (A0AF:0006=0)
020A:56B8  75 07				jne	loc_817			; Jump if not equal
020A:56BA  26: C7 06 0004 0000			mov	word ptr es:[4],0	; (A0AF:0004=0)
020A:56C1			loc_817:
020A:56C1  A1 2A18				mov	ax,word ptr ds:[2A18h]	; (9B68:2A18=0AEE0h)
020A:56C4  26: A3 0000				mov	word ptr es:[0],ax	; (A0AF:0000=0)
020A:56C8  26: A3 0006				mov	word ptr es:[6],ax	; (A0AF:0006=0)
020A:56CC  26: A3 0008				mov	word ptr es:[8],ax	; (A0AF:0008=0)
020A:56D0  26: C6 06 000E 00			mov	byte ptr es:[0Eh],0	; (A0AF:000E=0)
020A:56D6  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (A0AF:000A=0)
020A:56DC  75 12				jne	loc_818			; Jump if not equal
020A:56DE  26: C7 06 000A 0000			mov	word ptr es:[0Ah],0	; (A0AF:000A=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 186

020A:56E5  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:56EA  77 04				ja	loc_818			; Jump if above
020A:56EC  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:56F0			loc_818:
020A:56F0  E8 451B				call	sub_162			; (9C0E)
020A:56F3			loc_819:
020A:56F3  E8 40BA				call	sub_149			; (97B0)
020A:56F6  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:56FA  E8 309B				call	sub_125			; (8798)
020A:56FD  EB 05				jmp	short loc_821		; (5704)
020A:56FF			loc_820:
020A:56FF  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:56FF  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:5704			loc_821:
020A:5704  E8 327D				call	sub_127			; (8984)
020A:5707  E8 305A				call	sub_124			; (8764)
020A:570A  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:570E  C6 47 79 07				mov	byte ptr [bx+79h],7
020A:5712  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:5716  E8 332F				call	sub_129			; (8A48)
020A:5719  E8 2D14				call	sub_116			; (8430)
020A:571C  E9 FD24				jmp	loc_788			; (5443)
020A:571F  8A 36 2C40				mov	dh,byte ptr ds:[2C40h]	; (9B68:2C40=0E3h)
020A:5723  FE C6				inc	dh
020A:5725  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:5728  80 FE 06				cmp	dh,6
020A:572B  76 08				jbe	loc_822			; Jump if below or =
020A:572D  B6 01				mov	dh,1
020A:572F  3C 09				cmp	al,9
020A:5731  75 02				jne	loc_822			; Jump if not equal
020A:5733  B0 04				mov	al,4
020A:5735			loc_822:
020A:5735  88 36 2C40				mov	byte ptr ds:[2C40h],dh	; (9B68:2C40=0E3h)
020A:5739  80 FE 01				cmp	dh,1
020A:573C  76 06				jbe	loc_823			; Jump if below or =
020A:573E  3C 04				cmp	al,4
020A:5740  75 02				jne	loc_823			; Jump if not equal
020A:5742  B0 12				mov	al,12h
020A:5744			loc_823:
020A:5744  E8 0DAD				call	sub_103			; (64F4)
020A:5747  E8 383A				call	sub_142			; (8F84)
020A:574A  9A 16FA:066C		;*		call	far ptr sub_242		;*(16FA:066C)
020A:574A  9A 6C 06 FA 16			db	 9Ah, 6Ch, 06h,0FAh, 16h
020A:574F  E8 3232				call	sub_127			; (8984)
020A:5752  E8 2D87				call	sub_117			; (84DC)
020A:5755  E9 FCEB				jmp	loc_788			; (5443)
020A:5758  E8 2FE1				call	sub_123			; (873C)
020A:575B  C6 47 52 07				mov	byte ptr [bx+52h],7
020A:575F  C6 47 3C 0F				mov	byte ptr [bx+3Ch],0Fh
020A:5763  C6 47 4F 0F				mov	byte ptr [bx+4Fh],0Fh
020A:5767  B4 1E				mov	ah,1Eh
020A:5769  E8 302C				call	sub_125			; (8798)
020A:576C  C6 06 064E 20			mov	byte ptr ds:[64Eh],20h	; (9B68:064E=0D8h) ' '
020A:5771  B4 02				mov	ah,2
020A:5773  32 FF				xor	bh,bh			; Zero register
020A:5775  BA 1238				mov	dx,1238h
020A:5778  E8 3479				call	sub_136			; (8BF4)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 187

020A:577B  E8 32D6				call	sub_130			; (8A54)
020A:577E  E8 2CAF				call	sub_116			; (8430)
020A:5781  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:5781  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:5786  3C 80				cmp	al,80h
020A:5788  73 28				jae	loc_824			; Jump if above or =
020A:578A  A8 40				test	al,40h			; '@'
020A:578C  74 24				jz	loc_824			; Jump if zero
020A:578E  24 5F				and	al,5Fh			; '_'
020A:5790  3C 41				cmp	al,41h			; 'A'
020A:5792  72 1E				jb	loc_824			; Jump if below
020A:5794  3C 5A				cmp	al,5Ah			; 'Z'
020A:5796  77 1A				ja	loc_824			; Jump if above
020A:5798  8A D0				mov	dl,al
020A:579A  80 EA 41				sub	dl,41h			; 'A'
020A:579D  8A DA				mov	bl,dl
020A:579F  52					push	dx
020A:57A0  B4 02				mov	ah,2
020A:57A2  32 FF				xor	bh,bh			; Zero register
020A:57A4  BA 184F				mov	dx,184Fh
020A:57A7  E8 344A				call	sub_136			; (8BF4)
020A:57AA  E8 329B				call	sub_129			; (8A48)
020A:57AD  5A					pop	dx
020A:57AE  B4 0E				mov	ah,0Eh
020A:57B0  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:57B2			loc_824:
020A:57B2  B4 19				mov	ah,19h
020A:57B4  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:57B6  A2 2A94				mov	byte ptr ds:[2A94h],al	; (9B68:2A94=20h)
020A:57B9  04 61				add	al,61h			; 'a'
020A:57BB  A2 064E				mov	byte ptr ds:[64Eh],al	; (9B68:064E=0D8h)
020A:57BE  E8 2DCB				call	sub_121			; (858C)
020A:57C1  8A 16 2A93				mov	dl,byte ptr ds:[2A93h]	; (9B68:2A93=0A0h)
020A:57C5  B4 0E				mov	ah,0Eh
020A:57C7  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:57C9  E8 2F98				call	sub_124			; (8764)
020A:57CC  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:57D0  C6 47 4F 07				mov	byte ptr [bx+4Fh],7
020A:57D4  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:57D8  E8 2FBD				call	sub_125			; (8798)
020A:57DB  E8 326A				call	sub_129			; (8A48)
020A:57DE  E8 2CFB				call	sub_117			; (84DC)
020A:57E1  E9 FC5F				jmp	loc_788			; (5443)
020A:57E4  E8 2F55				call	sub_123			; (873C)
020A:57E7  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:57EB  C6 47 3A 0F				mov	byte ptr [bx+3Ah],0Fh
020A:57EF  C6 47 7A 0F				mov	byte ptr [bx+7Ah],0Fh
020A:57F3  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:57F7  80 0E 1594 02			or	byte ptr ds:[1594h],2	; (9B68:1594=20h)
020A:57FC  E8 3185				call	sub_127			; (8984)
020A:57FF  B4 02				mov	ah,2
020A:5801  32 FF				xor	bh,bh			; Zero register
020A:5803  BA 1418				mov	dx,1418h
020A:5806  E8 33EB				call	sub_136			; (8BF4)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 188

020A:5809  E8 3248				call	sub_130			; (8A54)
020A:580C  E8 2C21				call	sub_116			; (8430)
020A:580F  B1 04				mov	cl,4
020A:5811  B3 02				mov	bl,2
020A:5813  BE 06CE				mov	si,6CEh
020A:5816  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:5816  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:581B  3C 1B				cmp	al,1Bh
020A:581D  74 6A				je	loc_828			; Jump if equal
020A:581F  80 F9 00				cmp	cl,0
020A:5822  75 60				jne	loc_827			; Jump if not equal
020A:5824  B9 0080				mov	cx,80h
020A:5827  BF 06CE				mov	di,6CEh
020A:582A  E8 010B				call	sub_95			; (5938)
020A:582D  73 55				jnc	loc_827			; Jump if carry=0
020A:582F  E8 43D3				call	sub_159			; (9C05)
020A:5832  26: 89 16 0004			mov	word ptr es:[4],dx	; (A0AF:0004=0)
020A:5837  26: 83 3E 0000 FF			cmp	word ptr es:[0],0FFFFh	; (A0AF:0000=0)
020A:583D  75 31				jne	loc_826			; Jump if not equal
020A:583F  33 C0				xor	ax,ax			; Zero register
020A:5841  26: A3 0000				mov	word ptr es:[0],ax	; (A0AF:0000=0)
020A:5845  26: A3 0002				mov	word ptr es:[2],ax	; (A0AF:0002=0)
020A:5849  26: A3 0000				mov	word ptr es:[0],ax	; (A0AF:0000=0)
020A:584D  26: A3 0006				mov	word ptr es:[6],ax	; (A0AF:0006=0)
020A:5851  26: A3 0008				mov	word ptr es:[8],ax	; (A0AF:0008=0)
020A:5855  26: A2 000E				mov	byte ptr es:[0Eh],al	; (A0AF:000E=0)
020A:5859  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (A0AF:000A=0)
020A:585F  75 04				jne	loc_825			; Jump if not equal
020A:5861  26: A3 000A				mov	word ptr es:[0Ah],ax	; (A0AF:000A=0)
020A:5865			loc_825:
020A:5865  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:586A  77 04				ja	loc_826			; Jump if above
020A:586C  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:5870			loc_826:
020A:5870  C6 06 1594 01			mov	byte ptr ds:[1594h],1	; (9B68:1594=20h)
020A:5875  E8 4396				call	sub_162			; (9C0E)
020A:5878  E8 3F35				call	sub_149			; (97B0)
020A:587B  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:587F  E8			data_684	db	0E8h
020A:5880  16					push	ss
020A:5881  2F					das				; Decimal adjust
020A:5882  EB 0D				jmp	short loc_829		; (5891)
020A:5884			loc_827:
020A:5884  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:5884  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:5889			loc_828:
020A:5889  80 26 1594 FD			and	byte ptr ds:[1594h],0FDh	; (9B68:1594=20h)
020A:588E  E8 30F3				call	sub_127			; (8984)
020A:5891			loc_829:
020A:5891  E8 2ED0				call	sub_124			; (8764)
020A:5894  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5898  C6 47 7A 07				mov	byte ptr [bx+7Ah],7
020A:589C  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:58A0  E8 31A5				call	sub_129			; (8A48)
020A:58A3  E8 2C36				call	sub_117			; (84DC)
020A:58A6  E9 FB9A				jmp	loc_788			; (5443)
020A:58A9  E8 4362				call	sub_162			; (9C0E)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 189

020A:58AC  B0 41				mov	al,41h			; 'A'
020A:58AE  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:58B3  74 02				je	loc_830			; Jump if equal
020A:58B5  B0 4C				mov	al,4Ch			; 'L'
020A:58B7			loc_830:
020A:58B7  E8 061E				call	sub_100			; (5ED8)
020A:58BA  E8 2C1F				call	sub_117			; (84DC)
020A:58BD  E9 FB83				jmp	loc_788			; (5443)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_93		proc	near
020A:58C0  8A 15				mov	dl,[di]
020A:58C2  80 FA 40				cmp	dl,40h			; '@'
020A:58C5  72 03				jb	loc_831			; Jump if below
020A:58C7  80 E2 DF				and	dl,0DFh
020A:58CA			loc_831:
020A:58CA  80 EA 30				sub	dl,30h			; '0'
020A:58CD  80 FA 09				cmp	dl,9
020A:58D0  76 08				jbe	loc_832			; Jump if below or =
020A:58D2  80 EA 07				sub	dl,7
020A:58D5  80 FA 0F				cmp	dl,0Fh
020A:58D8  77 0C				ja	loc_833			; Jump if above
020A:58DA			loc_832:
020A:58DA  32 F6				xor	dh,dh			; Zero register
020A:58DC  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:58DC  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:58E1  72 03				jc	loc_833			; Jump if carry Set
020A:58E3  F9					stc				; Set carry flag
020A:58E4  EB 01				jmp	short loc_834		; (58E7)
020A:58E6			loc_833:
020A:58E6  F8					clc				; Clear carry flag
020A:58E7			loc_834:
020A:58E7  C3					retn
				sub_93		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_94		proc	near
020A:58E8  51					push	cx
020A:58E9  B1 04				mov	cl,4
020A:58EB  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:58ED  59					pop	cx
020A:58EE  8A 05				mov	al,[di]
020A:58F0  3C 40				cmp	al,40h			; '@'
020A:58F2  72 02				jb	loc_835			; Jump if below
020A:58F4  24 DF				and	al,0DFh
020A:58F6			loc_835:
020A:58F6  2C 30				sub	al,30h			; '0'
020A:58F8  3C 09				cmp	al,9
020A:58FA  76 06				jbe	loc_836			; Jump if below or =
020A:58FC  2C 07				sub	al,7
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 190

020A:58FE  3C 0F				cmp	al,0Fh
020A:5900  77 33				ja	loc_839			; Jump if above
020A:5902			loc_836:
020A:5902  32 E4				xor	ah,ah			; Zero register
020A:5904  03 D0				add	dx,ax
020A:5906  51					push	cx
020A:5907  B1 04				mov	cl,4
020A:5909  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:590B  59					pop	cx
020A:590C  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:590C  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5911  72 22				jc	loc_839			; Jump if carry Set
020A:5913  8A 05				mov	al,[di]
020A:5915  3C 40				cmp	al,40h			; '@'
020A:5917  72 02				jb	loc_837			; Jump if below
020A:5919  24 DF				and	al,0DFh
020A:591B			loc_837:
020A:591B  2C 30				sub	al,30h			; '0'
020A:591D  3C 09				cmp	al,9
020A:591F  76 06				jbe	loc_838			; Jump if below or =
020A:5921  2C 07				sub	al,7
020A:5923  3C 0F				cmp	al,0Fh
020A:5925  77 0E				ja	loc_839			; Jump if above
020A:5927			loc_838:
020A:5927  32 E4				xor	ah,ah			; Zero register
020A:5929  03 D0				add	dx,ax
020A:592B  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:592B  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5930  72 03				jc	loc_839			; Jump if carry Set
020A:5932  F9					stc				; Set carry flag
020A:5933  EB 01				jmp	short loc_840		; (5936)
020A:5935			loc_839:
020A:5935  F8					clc				; Clear carry flag
020A:5936			loc_840:
020A:5936  C3					retn
				sub_94		endp
  
020A:5937  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_95		proc	near
020A:5938  53					push	bx
020A:5939  33 D2				xor	dx,dx			; Zero register
020A:593B  E8 FFAA				call	sub_94			; (58E8)
020A:593E  73 03				jnc	loc_841			; Jump if carry=0
020A:5940  E8 FFA5				call	sub_94			; (58E8)
020A:5943			loc_841:
020A:5943  5B					pop	bx
020A:5944  C3					retn
				sub_95		endp
  
020A:5945  87 DB				xchg	bx,bx
020A:5947  90					nop
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 191

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_96		proc	near
020A:5948  06					push	es
020A:5949  53					push	bx
020A:594A  56					push	si
020A:594B  33 D2				xor	dx,dx			; Zero register
020A:594D  C6 06 2A1C 00			mov	byte ptr ds:[2A1Ch],0	; (020A:2A1C=0A0h)
020A:5952  8A 05				mov	al,[di]
020A:5954  3C 40				cmp	al,40h			; '@'
020A:5956  73 03				jae	loc_842			; Jump if above or =
020A:5958  E9 0101				jmp	loc_856			; (5A5C)
020A:595B			loc_842:
020A:595B  24 DF				and	al,0DFh
020A:595D  3C 53				cmp	al,53h			; 'S'
020A:595F  74 03				je	loc_843			; Jump if equal
020A:5961  E9 00ED				jmp	loc_855			; (5A51)
020A:5964			loc_843:
020A:5964  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5964  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5969  73 02				jnc	loc_844			; Jump if carry=0
020A:596B  EB 7D				jmp	short loc_849		; (59EA)
020A:596D			loc_844:
020A:596D  8A 05				mov	al,[di]
020A:596F  24 DF				and	al,0DFh
020A:5971  3C 45				cmp	al,45h			; 'E'
020A:5973  75 77				jne	loc_850			; Jump if not equal
020A:5975  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5975  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:597A  72 6E				jc	loc_849			; Jump if carry Set
020A:597C  8A 05				mov	al,[di]
020A:597E  24 DF				and	al,0DFh
020A:5980  3C 47				cmp	al,47h			; 'G'
020A:5982  75 66				jne	loc_849			; Jump if not equal
020A:5984  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5984  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5989  72 5F				jc	loc_849			; Jump if carry Set
020A:598B  8A 05				mov	al,[di]
020A:598D  3C 5F				cmp	al,5Fh			; '_'
020A:598F  75 07				jne	loc_845			; Jump if not equal
020A:5991  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5991  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5996  72 52				jc	loc_849			; Jump if carry Set
020A:5998			loc_845:
020A:5998  8A 05				mov	al,[di]
020A:599A  24 DF				and	al,0DFh
020A:599C  2C 41				sub	al,41h			; 'A'
020A:599E  3C 19				cmp	al,19h
020A:59A0  77 48				ja	loc_849			; Jump if above
020A:59A2  50					push	ax
020A:59A3  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:59A3  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:59A8  73 04				jnc	loc_846			; Jump if carry=0
020A:59AA  58					pop	ax
020A:59AB  E9 00B8				jmp	loc_857			; (5A66)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 192

020A:59AE			loc_846:
020A:59AE  8A 15				mov	dl,[di]
020A:59B0  80 E2 DF				and	dl,0DFh
020A:59B3  80 EA 41				sub	dl,41h			; 'A'
020A:59B6  80 FA 19				cmp	dl,19h
020A:59B9  77 17				ja	loc_848			; Jump if above
020A:59BB  58					pop	ax
020A:59BC  FE C0				inc	al
020A:59BE  52					push	dx
020A:59BF  B2 1A				mov	dl,1Ah
020A:59C1  F6 E2				mul	dl			; ax = reg * al
020A:59C3  5A					pop	dx
020A:59C4  32 F6				xor	dh,dh			; Zero register
020A:59C6  03 C2				add	ax,dx
020A:59C8  3D 00FA				cmp	ax,0FAh
020A:59CB  73 02				jae	loc_847			; Jump if above or =
020A:59CD  EB 65				jmp	short loc_853		; (5A34)
020A:59CF			loc_847:
020A:59CF  E9 0094				jmp	loc_857			; (5A66)
020A:59D2			loc_848:
020A:59D2  58					pop	ax
020A:59D3  32 E4				xor	ah,ah			; Zero register
020A:59D5  D1 C0				rol	ax,1			; Rotate
020A:59D7  BE 28F3				mov	si,28F3h
020A:59DA  E8 4228				call	sub_159			; (9C05)
020A:59DD  03 F0				add	si,ax
020A:59DF  26: 8B 14				mov	dx,es:[si]
020A:59E2  83 FA FF				cmp	dx,0FFFFh
020A:59E5  74 03				je	loc_849			; Jump if equal
020A:59E7  E9 007F				jmp	loc_858			; (5A69)
020A:59EA			loc_849:
020A:59EA  EB 7A				jmp	short loc_857		; (5A66)
020A:59EC			loc_850:
020A:59EC  3C 47				cmp	al,47h			; 'G'
020A:59EE  75 76				jne	loc_857			; Jump if not equal
020A:59F0  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:59F0  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:59F5  72 6F				jc	loc_857			; Jump if carry Set
020A:59F7  8A 05				mov	al,[di]
020A:59F9  3C 5F				cmp	al,5Fh			; '_'
020A:59FB  75 07				jne	loc_852			; Jump if not equal
020A:59FD  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:59FD  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5A02  72 E6				jc	loc_849			; Jump if carry Set
020A:5A04			loc_852:
020A:5A04  8A 05				mov	al,[di]
020A:5A06  24 DF				and	al,0DFh
020A:5A08  2C 41				sub	al,41h			; 'A'
020A:5A0A  3C 19				cmp	al,19h
020A:5A0C  77 58				ja	loc_857			; Jump if above
020A:5A0E  B2 1A				mov	dl,1Ah
020A:5A10  F6 E2				mul	dl			; ax = reg * al
020A:5A12  50					push	ax
020A:5A13  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5A13  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5A18  72 4C				jc	loc_857			; Jump if carry Set
020A:5A1A  8A 15				mov	dl,[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 193

020A:5A1C  80 E2 DF				and	dl,0DFh
020A:5A1F  80 EA 41				sub	dl,41h			; 'A'
020A:5A22  80 FA 19				cmp	dl,19h
020A:5A25  77 3F				ja	loc_857			; Jump if above
020A:5A27  58					pop	ax
020A:5A28  32 F6				xor	dh,dh			; Zero register
020A:5A2A  03 C2				add	ax,dx
020A:5A2C  05 001A				add	ax,1Ah
020A:5A2F  3D 00FA				cmp	ax,0FAh
020A:5A32  73 32				jae	loc_857			; Jump if above or =
020A:5A34			loc_853:
020A:5A34  32 E4				xor	ah,ah			; Zero register
020A:5A36  D1 C0				rol	ax,1			; Rotate
020A:5A38  BE 28F3				mov	si,28F3h
020A:5A3B  E8 41C7				call	sub_159			; (9C05)
020A:5A3E  03 F0				add	si,ax
020A:5A40  26: 8B 14				mov	dx,es:[si]
020A:5A43  83 FA FF				cmp	dx,0FFFFh
020A:5A46  74 1E				je	loc_857			; Jump if equal
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:5A48			loc_854:
020A:5A48  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5A48  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5A4D  72 17				jc	loc_857			; Jump if carry Set
020A:5A4F  EB 18				jmp	short loc_858		; (5A69)
020A:5A51			loc_855:
020A:5A51  3C 4E				cmp	al,4Eh			; 'N'
020A:5A53  75 07				jne	loc_856			; Jump if not equal
020A:5A55  C6 06 2A1C 01			mov	byte ptr ds:[2A1Ch],1	; (9B68:2A1C=20h)
020A:5A5A  EB 0D				jmp	short loc_858		; (5A69)
020A:5A5C			loc_856:
020A:5A5C  E8 FE89				call	sub_94			; (58E8)
020A:5A5F  73 05				jnc	loc_857			; Jump if carry=0
020A:5A61  E8 FE84				call	sub_94			; (58E8)
020A:5A64  EB 03				jmp	short loc_858		; (5A69)
020A:5A66			loc_857:
020A:5A66  F8					clc				; Clear carry flag
020A:5A67  EB 01				jmp	short loc_859		; (5A6A)
020A:5A69			loc_858:
020A:5A69  F9					stc				; Set carry flag
020A:5A6A			loc_859:
020A:5A6A  5E					pop	si
020A:5A6B  5B					pop	bx
020A:5A6C  07					pop	es
020A:5A6D  C3					retn
				sub_96		endp
  
020A:5A6E  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_97		proc	near
020A:5A70  56					push	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 194

020A:5A71  E8 00C0				call	sub_98			; (5B34)
020A:5A74  72 03				jc	loc_860			; Jump if carry Set
020A:5A76  E9 00B5				jmp	loc_869			; (5B2E)
020A:5A79			loc_860:
020A:5A79  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5A7C  74 0A				je	loc_861			; Jump if equal
020A:5A7E  80 3C 09				cmp	byte ptr [si],9
020A:5A81  74 05				je	loc_861			; Jump if equal
020A:5A83  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020A:5A86  75 0A				jne	loc_862			; Jump if not equal
020A:5A88			loc_861:
020A:5A88  46					inc	si
020A:5A89  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (ss:44FC=6116h)
020A:5A8D  76 EA				jbe	loc_860			; Jump if below or =
020A:5A8F  E9 009F				jmp	loc_870			; (5B31)
020A:5A92			loc_862:
020A:5A92  8A 04				mov	al,[si]
020A:5A94  24 DF				and	al,0DFh
020A:5A96  3C 53				cmp	al,53h			; 'S'
020A:5A98  75 49				jne	loc_865			; Jump if not equal
020A:5A9A  46					inc	si
020A:5A9B  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (ss:44FC=6116h)
020A:5A9F  74 42				je	loc_865			; Jump if equal
020A:5AA1  8A 04				mov	al,[si]
020A:5AA3  24 DF				and	al,0DFh
020A:5AA5  3C 47				cmp	al,47h			; 'G'
020A:5AA7  74 3C				je	loc_866			; Jump if equal
020A:5AA9  3C 45				cmp	al,45h			; 'E'
020A:5AAB  75 36				jne	loc_865			; Jump if not equal
020A:5AAD  83 C6 02				add	si,2
020A:5AB0  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (ss:44FC=6116h)
020A:5AB4  74 2D				je	loc_865			; Jump if equal
020A:5AB6  8A 04				mov	al,[si]
020A:5AB8  3C 5F				cmp	al,5Fh			; '_'
020A:5ABA  75 1F				jne	loc_864			; Jump if not equal
020A:5ABC  46					inc	si
020A:5ABD  8A 04				mov	al,[si]
020A:5ABF  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (ss:44FC=6116h)
020A:5AC3  74 1E				je	loc_865			; Jump if equal
020A:5AC5  46					inc	si
020A:5AC6  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (ss:44FC=6116h)
020A:5ACA  74 0C				je	loc_863			; Jump if equal
020A:5ACC  8A 04				mov	al,[si]
020A:5ACE  24 DF				and	al,0DFh
020A:5AD0  3C 41				cmp	al,41h			; 'A'
020A:5AD2  72 04				jb	loc_863			; Jump if below
020A:5AD4  3C 5A				cmp	al,5Ah			; 'Z'
020A:5AD6  76 10				jbe	loc_867			; Jump if below or =
020A:5AD8			loc_863:
020A:5AD8  4E					dec	si
020A:5AD9  8A 04				mov	al,[si]
020A:5ADB			loc_864:
020A:5ADB  24 DF				and	al,0DFh
020A:5ADD  2C 41				sub	al,41h			; 'A'
020A:5ADF  3C 1A				cmp	al,1Ah
020A:5AE1  72 32				jb	loc_868			; Jump if below
020A:5AE3			loc_865:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 195

020A:5AE3  EB 4C				jmp	short loc_870		; (5B31)
020A:5AE5			loc_866:
020A:5AE5  83 C6 02				add	si,2
020A:5AE8			loc_867:
020A:5AE8  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (ss:44FC=6116h)
020A:5AEC  73 43				jae	loc_870			; Jump if above or =
020A:5AEE  8A 34				mov	dh,[si]
020A:5AF0  80 E6 DF				and	dh,0DFh
020A:5AF3  80 EE 41				sub	dh,41h			; 'A'
020A:5AF6  80 FE 1A				cmp	dh,1Ah
020A:5AF9  73 36				jae	loc_870			; Jump if above or =
020A:5AFB  8A 44 FF				mov	al,[si-1]
020A:5AFE  24 DF				and	al,0DFh
020A:5B00  2C 40				sub	al,40h			; '@'
020A:5B02  3C 1B				cmp	al,1Bh
020A:5B04  73 2B				jae	loc_870			; Jump if above or =
020A:5B06  B2 1A				mov	dl,1Ah
020A:5B08  F6 E2				mul	dl			; ax = reg * al
020A:5B0A  32 D2				xor	dl,dl			; Zero register
020A:5B0C  86 D6				xchg	dl,dh
020A:5B0E  03 C2				add	ax,dx
020A:5B10  3D 00FA				cmp	ax,0FAh
020A:5B13  73 1C				jae	loc_870			; Jump if above or =
020A:5B15			loc_868:
020A:5B15  32 E4				xor	ah,ah			; Zero register
020A:5B17  D1 C0				rol	ax,1			; Rotate
020A:5B19  56					push	si
020A:5B1A  06					push	es
020A:5B1B  BE 28F3				mov	si,28F3h
020A:5B1E  E8 40E4				call	sub_159			; (9C05)
020A:5B21  03 F0				add	si,ax
020A:5B23  26: 8B 14				mov	dx,es:[si]
020A:5B26  07					pop	es
020A:5B27  5E					pop	si
020A:5B28  83 FA FF				cmp	dx,0FFFFh
020A:5B2B  74 04				je	loc_870			; Jump if equal
020A:5B2D  46					inc	si
020A:5B2E			loc_869:
020A:5B2E  58					pop	ax
020A:5B2F  F8					clc				; Clear carry flag
020A:5B30  C3					retn
020A:5B31			loc_870:
020A:5B31  5E					pop	si
020A:5B32  F9					stc				; Set carry flag
020A:5B33  C3					retn
				sub_97		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_98		proc	near
020A:5B34  56					push	si
020A:5B35			loc_871:
020A:5B35  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5B38  74 0A				je	loc_872			; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 196

020A:5B3A  80 3C 09				cmp	byte ptr [si],9
020A:5B3D  74 05				je	loc_872			; Jump if equal
020A:5B3F  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020A:5B42  75 09				jne	loc_873			; Jump if not equal
020A:5B44			loc_872:
020A:5B44  46					inc	si
020A:5B45  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:5B49  76 EA				jbe	loc_871			; Jump if below or =
020A:5B4B  EB 59				jmp	short loc_880		; (5BA6)
020A:5B4D			loc_873:
020A:5B4D  33 D2				xor	dx,dx			; Zero register
020A:5B4F  B5 04				mov	ch,4
020A:5B51  8A CD				mov	cl,ch
020A:5B53			loc_874:
020A:5B53  8A 04				mov	al,[si]
020A:5B55  3C 40				cmp	al,40h			; '@'
020A:5B57  72 02				jb	loc_875			; Jump if below
020A:5B59  24 DF				and	al,0DFh
020A:5B5B			loc_875:
020A:5B5B  2C 30				sub	al,30h			; '0'
020A:5B5D  3C 09				cmp	al,9
020A:5B5F  76 0A				jbe	loc_876			; Jump if below or =
020A:5B61  2C 07				sub	al,7
020A:5B63  3C 0F				cmp	al,0Fh
020A:5B65  77 1E				ja	loc_879			; Jump if above
020A:5B67  3C 0A				cmp	al,0Ah
020A:5B69  72 1A				jb	loc_879			; Jump if below
020A:5B6B			loc_876:
020A:5B6B  32 E4				xor	ah,ah			; Zero register
020A:5B6D  03 D0				add	dx,ax
020A:5B6F  D3 C2				rol	dx,cl			; Rotate
020A:5B71  FE CD				dec	ch
020A:5B73  80 FD 00				cmp	ch,0
020A:5B76  74 07				je	loc_877			; Jump if equal
020A:5B78  46					inc	si
020A:5B79  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:5B7D  76 D4				jbe	loc_874			; Jump if below or =
020A:5B7F			loc_877:
020A:5B7F  46					inc	si
020A:5B80			loc_878:
020A:5B80  D3 CA				ror	dx,cl			; Rotate
020A:5B82  58					pop	ax
020A:5B83  F8					clc				; Clear carry flag
020A:5B84  C3					retn
020A:5B85			loc_879:
020A:5B85  80 FD 04				cmp	ch,4
020A:5B88  74 1C				je	loc_880			; Jump if equal
020A:5B8A  8A 04				mov	al,[si]
020A:5B8C  3C 20				cmp	al,20h			; ' '
020A:5B8E  74 F0				je	loc_878			; Jump if equal
020A:5B90  3C 09				cmp	al,9
020A:5B92  74 EC				je	loc_878			; Jump if equal
020A:5B94  3C 00				cmp	al,0
020A:5B96  74 E8				je	loc_878			; Jump if equal
020A:5B98  3C 2C				cmp	al,2Ch			; ','
020A:5B9A  74 E4				je	loc_878			; Jump if equal
020A:5B9C  3C 3A				cmp	al,3Ah			; ':'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 197

020A:5B9E  74 E0				je	loc_878			; Jump if equal
020A:5BA0  24 DF				and	al,0DFh
020A:5BA2  3C 48				cmp	al,48h			; 'H'
020A:5BA4  74 DA				je	loc_878			; Jump if equal
020A:5BA6			loc_880:
020A:5BA6  F9					stc				; Set carry flag
020A:5BA7  5E					pop	si
020A:5BA8  C3					retn
				sub_98		endp
  
020A:5BA9  87 DB				xchg	bx,bx
020A:5BAB  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_99		proc	near
020A:5BAC			loc_881:
020A:5BAC  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:5BAF  74 08				je	loc_882			; Jump if equal
020A:5BB1  80 3D 09				cmp	byte ptr [di],9
020A:5BB4  74 03				je	loc_882			; Jump if equal
020A:5BB6  F8					clc				; Clear carry flag
020A:5BB7  EB 09				jmp	short loc_883		; (5BC2)
020A:5BB9			loc_882:
020A:5BB9  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:5BB9  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:5BBE  72 02				jc	loc_883			; Jump if carry Set
020A:5BC0  EB EA				jmp	short loc_881		; (5BAC)
020A:5BC2			loc_883:
020A:5BC2  C3					retn
				sub_99		endp
  
020A:5BC3  000D[00]				db	13 dup (0)
020A:5BD0  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:5BD5  75 07				jne	loc_884			; Jump if not equal
020A:5BD7  80 3E 2EBD 01			cmp	data_450,1		; (020A:2EBD=0)
020A:5BDC  74 03				je	loc_885			; Jump if equal
020A:5BDE			loc_884:
020A:5BDE  E9 00DD				jmp	loc_895			; (5CBE)
020A:5BE1			loc_885:
020A:5BE1  50					push	ax
020A:5BE2  51					push	cx
020A:5BE3  52					push	dx
020A:5BE4  57					push	di
020A:5BE5  8A D7				mov	dl,bh
020A:5BE7  32 FF				xor	bh,bh			; Zero register
020A:5BE9  BF 27B5				mov	di,27B5h
020A:5BEC  83 C7 15				add	di,15h
020A:5BEF  3B EF				cmp	bp,di
020A:5BF1  77 02				ja	loc_886			; Jump if above
020A:5BF3  EB 70				jmp	short loc_890		; (5C65)
020A:5BF5			loc_886:
020A:5BF5  BF 27E8				mov	di,27E8h
020A:5BF8  81 EF 27D5				sub	di,27D5h
020A:5BFC  83 C7 02				add	di,2
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 198

020A:5BFF  8B C5				mov	ax,bp
020A:5C01  2D 27D5				sub	ax,27D5h
020A:5C04  03			data_687	db	3
020A:5C05  C3					retn
020A:5C06  03 C3				add	ax,bx
020A:5C08  40					inc	ax
020A:5C09  80 FB 04				cmp	bl,4
020A:5C0C  75 08				jne	loc_887			; Jump if not equal
020A:5C0E  F6 06 2A77 E0			test	data_391,0E0h		; (020A:2A77=0A5h)
020A:5C13  74 01				jz	loc_887			; Jump if zero
020A:5C15  40					inc	ax
020A:5C16			loc_887:
020A:5C16  80 FA 00				cmp	dl,0
020A:5C19  74 01				je	loc_888			; Jump if equal
020A:5C1B  40					inc	ax
020A:5C1C			loc_888:
020A:5C1C  3B C7				cmp	ax,di
020A:5C1E  72 45				jb	loc_890			; Jump if below
020A:5C20  BD 27E8				mov	bp,27E8h
020A:5C23  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:5C28  BF 27B5				mov	di,27B5h
020A:5C2B  80 3D 00				cmp	byte ptr [di],0
020A:5C2E  75 35				jne	loc_890			; Jump if not equal
020A:5C30  FC					cld				; Clear direction
020A:5C31  B0 20				mov	al,20h			; ' '
020A:5C33  51					push	cx
020A:5C34  B9 0015				mov	cx,15h
020A:5C37  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:5C3C  06					push	es
020A:5C3D  E8 3FCE				call	sub_162			; (9C0E)
020A:5C40  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5C42  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:5C47  5A					pop	dx
020A:5C48  8E C2				mov	es,dx
020A:5C4A  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:5C4F  5A					pop	dx
020A:5C50  75 0A				jnz	loc_889			; Jump if not zero
020A:5C52  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:5C57  74 03				je	loc_889			; Jump if equal
020A:5C59  E8 4288				call	sub_168			; (9EE4)
020A:5C5C			loc_889:
020A:5C5C  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:5C61  59					pop	cx
020A:5C62  BD 27B5				mov	bp,27B5h
020A:5C65			loc_890:
020A:5C65  80 FB 01				cmp	bl,1
020A:5C68  75 14				jne	loc_891			; Jump if not equal
020A:5C6A  26: 8A 04				mov	al,es:[si]
020A:5C6D  9A 16FA:0078		;*		call	far ptr sub_225		;*(16FA:0078)
020A:5C6D  9A 78 00 FA 16			db	 9Ah, 78h, 00h,0FAh, 16h
020A:5C72  80 FA 00				cmp	dl,0
020A:5C75  74 42				je	loc_894			; Jump if equal
020A:5C77  3E: 88 56 00				mov	ds:[bp],dl
020A:5C7B  45					inc	bp
020A:5C7C  EB 3B				jmp	short loc_894		; (5CB9)
020A:5C7E			loc_891:
020A:5C7E  80 FB 02				cmp	bl,2
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 199

020A:5C81  75 0A				jne	loc_892			; Jump if not equal
020A:5C83  26: 8B 04				mov	ax,es:[si]
020A:5C86  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:5C86  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:5C8B  EB 2C				jmp	short loc_894		; (5CB9)
020A:5C8D			loc_892:
020A:5C8D  F6 06 2A77 E0			test	byte ptr ds:[2A77h],0E0h	; (9B68:2A77=0ABh)
020A:5C92  74 0E				jz	loc_893			; Jump if zero
020A:5C94  26: 8B 44 02				mov	ax,es:[si+2]
020A:5C98  26: 8B 1C				mov	bx,es:[si]
020A:5C9B  9A 16FA:0218		;*		call	far ptr sub_230		;*(16FA:0218)
020A:5C9B  9A 18 02 FA 16			db	 9Ah, 18h, 02h,0FAh, 16h
020A:5CA0  EB 17				jmp	short loc_894		; (5CB9)
020A:5CA2			loc_893:
020A:5CA2  26: 8B 44 02				mov	ax,es:[si+2]
020A:5CA6  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:5CA6  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:5CAB  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:5CB0  45					inc	bp
020A:5CB1  26: 8B 04				mov	ax,es:[si]
020A:5CB4  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:5CB4  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:5CB9			loc_894:
020A:5CB9  45					inc	bp
020A:5CBA  5F					pop	di
020A:5CBB  5A					pop	dx
020A:5CBC  59					pop	cx
020A:5CBD  58					pop	ax
020A:5CBE			loc_895:
020A:5CBE  C3					retn
020A:5CBF  00 BA 0005				add	[bp+si+5],bh
020A:5CC3  BB 0C7C				mov	bx,0C7Ch
020A:5CC6  E8 EBF7		;*		call	sub_76			;*(48C0)
020A:5CC6  E8 F7 EB				db	0E8h,0F7h,0EBh
020A:5CC9  C3					retn
020A:5CCA  87 DB				xchg	bx,bx
020A:5CCC  50					push	ax
020A:5CCD  53					push	bx
020A:5CCE  51					push	cx
020A:5CCF  52					push	dx
020A:5CD0  56					push	si
020A:5CD1  57					push	di
020A:5CD2  55					push	bp
020A:5CD3  1E					push	ds
020A:5CD4  BF 0008				mov	di,8
020A:5CD7  BE 0000				mov	si,0
020A:5CDA  E8 3F13				call	sub_155			; (9BF0)
020A:5CDD			loc_896:
020A:5CDD  8B 04				mov	ax,[si]
020A:5CDF  8B 5C 02				mov	bx,[si+2]
020A:5CE2  8B 4C 04				mov	cx,[si+4]
020A:5CE5  26: 3B 3E 0000			cmp	di,es:data_66		; (020A:0000=1828h)
020A:5CEA  72 02				jb	loc_897			; Jump if below
020A:5CEC  EB 57				jmp	short loc_903		; (5D45)
020A:5CEE			loc_897:
020A:5CEE  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:5CF3  74 1F				jz	loc_899			; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 200

020A:5CF5  26: 3B 05				cmp	ax,es:[di]
020A:5CF8  72 10				jb	loc_898			; Jump if below
020A:5CFA  77 42				ja	loc_902			; Jump if above
020A:5CFC  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:5D00  77 3C				ja	loc_902			; Jump if above
020A:5D02  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:5D06  72 02				jb	loc_898			; Jump if below
020A:5D08  EB 0A				jmp	short loc_899		; (5D14)
020A:5D0A			loc_898:
020A:5D0A  83 C6 15				add	si,15h
020A:5D0D  83 3C FF				cmp	word ptr [si],0FFFFh
020A:5D10  74 2C				je	loc_902			; Jump if equal
020A:5D12  EB C9				jmp	short loc_896		; (5CDD)
020A:5D14			loc_899:
020A:5D14  BB 377F				mov	bx,377Fh
020A:5D17  26: 8A 45 05				mov	al,es:[di+5]
020A:5D1B  25 000F				and	ax,0Fh
020A:5D1E  1E					push	ds
020A:5D1F  E8 3ED7				call	sub_157			; (9BF9)
020A:5D22  D7					xlat				; al=[al+[bx]] table
020A:5D23  1F					pop	ds
020A:5D24  0A C0				or	al,al			; Zero ?
020A:5D26  75 04				jnz	loc_900			; Jump if not zero
020A:5D28  26: 8A 45 06				mov	al,es:[di+6]
020A:5D2C			loc_900:
020A:5D2C  03 F8				add	di,ax
020A:5D2E  26: 3B 3E 0000			cmp	di,es:data_66		; (020A:0000=1828h)
020A:5D33  72 02				jb	loc_901			; Jump if below
020A:5D35  EB 0E				jmp	short loc_903		; (5D45)
020A:5D37			loc_901:
020A:5D37  83 3C FF				cmp	word ptr [si],0FFFFh
020A:5D3A  74 02				je	loc_902			; Jump if equal
020A:5D3C  EB 9F				jmp	short loc_896		; (5CDD)
020A:5D3E			loc_902:
020A:5D3E  26: 80 4D 05 80			or	byte ptr es:[di+5],80h
020A:5D43  EB CF				jmp	short loc_899		; (5D14)
020A:5D45			loc_903:
020A:5D45  1F					pop	ds
020A:5D46  5D					pop	bp
020A:5D47  5F					pop	di
020A:5D48  5E					pop	si
020A:5D49  5A					pop	dx
020A:5D4A  59					pop	cx
020A:5D4B  5B					pop	bx
020A:5D4C  58					pop	ax
020A:5D4D  C3					retn
020A:5D4E  00 00				add	[bx+si],al
020A:5D50  50					push	ax
020A:5D51  53					push	bx
020A:5D52  57					push	di
020A:5D53  BF 0008				mov	di,8
020A:5D56  BB 377F				mov	bx,377Fh
020A:5D59			loc_904:
020A:5D59  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:5D5D  75 07				jne	loc_905			; Jump if not equal
020A:5D5F  26: 83 7D 02 FE			cmp	word ptr es:[di+2],0FFFEh
020A:5D64  73 25				jae	loc_908			; Jump if above or =
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 201

020A:5D66			loc_905:
020A:5D66  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:5D6B  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:5D70  74 05				jz	loc_906			; Jump if zero
020A:5D72  C6 06 42B4 01			mov	byte ptr ds:[42B4h],1	; (020A:42B4=80h)
020A:5D77			loc_906:
020A:5D77  26: 8A 45 05				mov	al,es:[di+5]
020A:5D7B  25 000F				and	ax,0Fh
020A:5D7E  D7					xlat				; al=[al+[bx]] table
020A:5D7F  0A C0				or	al,al			; Zero ?
020A:5D81  75 04				jnz	loc_907			; Jump if not zero
020A:5D83  26: 8A 45 06				mov	al,es:[di+6]
020A:5D87			loc_907:
020A:5D87  03 F8				add	di,ax
020A:5D89  EB CE				jmp	short loc_904		; (5D59)
020A:5D8B			loc_908:
020A:5D8B  5F					pop	di
020A:5D8C  5B					pop	bx
020A:5D8D  58					pop	ax
020A:5D8E  C3					retn
020A:5D8F  00 F7				add	bh,dh
020A:5D91  06					push	es
020A:5D92  C6 42 02 00				mov	byte ptr [bp+si+2],0
020A:5D96  74 02				jz	loc_910			; Jump if zero
020A:5D98			loc_909:
020A:5D98  EB 7B				jmp	short loc_917		; (5E15)
020A:5D9A			loc_910:
020A:5D9A  8A 04				mov	al,[si]
020A:5D9C  8A E0				mov	ah,al
020A:5D9E  3C 00				cmp	al,0
020A:5DA0  74 F6				je	loc_909			; Jump if equal
020A:5DA2  24 5F				and	al,5Fh			; '_'
020A:5DA4  3C 41				cmp	al,41h			; 'A'
020A:5DA6  72 F0				jb	loc_909			; Jump if below
020A:5DA8  3C 5A				cmp	al,5Ah			; 'Z'
020A:5DAA  77 EC				ja	loc_909			; Jump if above
020A:5DAC  3C 50				cmp	al,50h			; 'P'
020A:5DAE  77 1E				ja	loc_912			; Jump if above
020A:5DB0  2C 41				sub	al,41h			; 'A'
020A:5DB2  BB 8000				mov	bx,8000h
020A:5DB5  8A C8				mov	cl,al
020A:5DB7  D3 CB				ror	bx,cl			; Rotate
020A:5DB9  8B 16 42CC				mov	dx,data_601		; (020A:42CC=30h)
020A:5DBD  0B D3				or	dx,bx
020A:5DBF  F6 C4 20				test	ah,20h			; ' '
020A:5DC2  74 04				jz	loc_911			; Jump if zero
020A:5DC4  F7 D3				not	bx
020A:5DC6  23 D3				and	dx,bx
020A:5DC8			loc_911:
020A:5DC8  89 16 42CC				mov	data_601,dx		; (020A:42CC=30h)
020A:5DCC  EB 44				jmp	short loc_916		; (5E12)
020A:5DCE			loc_912:
020A:5DCE  3C 54				cmp	al,54h			; 'T'
020A:5DD0  77 24				ja	loc_914			; Jump if above
020A:5DD2  80 3E 2EBD 00			cmp	data_450,0		; (020A:2EBD=0)
020A:5DD7  74 39				je	loc_916			; Jump if equal
020A:5DD9  2C 51				sub	al,51h			; 'Q'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 202

020A:5DDB  B3 04				mov	bl,4
020A:5DDD  8A C8				mov	cl,al
020A:5DDF  D2 CB				ror	bl,cl			; Rotate
020A:5DE1  8A 16 430B				mov	dl,byte ptr ds:[430Bh]	; (020A:430B=20h)
020A:5DE5  0A D3				or	dl,bl
020A:5DE7  F6 C4 20				test	ah,20h			; ' '
020A:5DEA  74 04				jz	loc_913			; Jump if zero
020A:5DEC  F6 D3				not	bl
020A:5DEE  22 D3				and	dl,bl
020A:5DF0			loc_913:
020A:5DF0  88 16 430B				mov	byte ptr ds:[430Bh],dl	; (020A:430B=20h)
020A:5DF4  77 1C				ja	loc_916			; Jump if above
020A:5DF6			loc_914:
020A:5DF6  2C 55				sub	al,55h			; 'U'
020A:5DF8  BB 0080				mov	bx,80h
020A:5DFB  8A C8				mov	cl,al
020A:5DFD  D3 CB				ror	bx,cl			; Rotate
020A:5DFF  8B 16 42CE				mov	dx,data_602		; (020A:42CE=3C3Bh)
020A:5E03  0B D3				or	dx,bx
020A:5E05  F6 C4 20				test	ah,20h			; ' '
020A:5E08  74 04				jz	loc_915			; Jump if zero
020A:5E0A  F7 D3				not	bx
020A:5E0C  23 D3				and	dx,bx
020A:5E0E			loc_915:
020A:5E0E  89 16 42CE				mov	data_602,dx		; (020A:42CE=3C3Bh)
020A:5E12			loc_916:
020A:5E12  46					inc	si
020A:5E13  EB 85				jmp	short loc_910		; (5D9A)
020A:5E15			loc_917:
020A:5E15  A0 263D				mov	al,byte ptr ds:[263Dh]	; (020A:263D=99h)
020A:5E18  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (020A:430B=20h)
020A:5E1D  74 0C				jz	loc_918			; Jump if zero
020A:5E1F  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (020A:263D=99h)
020A:5E24  73 05				jae	loc_918			; Jump if above or =
020A:5E26  B0 0A				mov	al,0Ah
020A:5E28  E8 3159				call	sub_142			; (8F84)
020A:5E2B			loc_918:
020A:5E2B  E8 2CAA				call	sub_132			; (8AD8)
020A:5E2E  F7 06 42CC 0001			test	data_601,1		; (020A:42CC=30h)
020A:5E34  74 07				jz	loc_919			; Jump if zero
020A:5E36  B0 01				mov	al,1
020A:5E38  9A 16FA:12D0		;*		call	far ptr sub_263		;*(16FA:12D0)
020A:5E38  9A D0 12 FA 16			db	 9Ah,0D0h, 12h,0FAh, 16h
020A:5E3D			loc_919:
020A:5E3D  C3					retn
020A:5E3E  87 DB				xchg	bx,bx
020A:5E40  89 36 44FC				mov	word ptr ds:[44FCh],si	; (020A:44FC=2600h)
020A:5E44  01 1E 44FC				add	word ptr ds:[44FCh],bx	; (020A:44FC=2600h)
020A:5E48  E8 FCE9				call	sub_98			; (5B34)
020A:5E4B  72 15				jc	loc_920			; Jump if carry Set
020A:5E4D  E8 3DD6				call	sub_165			; (9C26)
020A:5E50  05 1000				add	ax,1000h
020A:5E53  3B D0				cmp	dx,ax
020A:5E55  72 0B				jb	loc_920			; Jump if below
020A:5E57  89 16 2A22				mov	word ptr ds:[2A22h],dx	; (9B68:2A22=0AEADh)
020A:5E5B  2E: 89 16 4867			mov	cs:data_651,dx		; (020A:4867=0E825h)
020A:5E60  EB 05				jmp	short loc_921		; (5E67)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 203

020A:5E62			loc_920:
020A:5E62  C6 06 4457 31			mov	byte ptr ds:[4457h],31h	; (9B68:4457=0) '1'
020A:5E67			loc_921:
020A:5E67  C3					retn
020A:5E68  B4 01				mov	ah,1
020A:5E6A  3C 46				cmp	al,46h			; 'F'
020A:5E6C  74 25				je	loc_922			; Jump if equal
020A:5E6E  FE C4				inc	ah
020A:5E70  3C 43				cmp	al,43h			; 'C'
020A:5E72  74 1F				je	loc_922			; Jump if equal
020A:5E74  FE C4				inc	ah
020A:5E76  3C 45				cmp	al,45h			; 'E'
020A:5E78  74 19				je	loc_922			; Jump if equal
020A:5E7A  FE C4				inc	ah
020A:5E7C  3C 5A				cmp	al,5Ah			; 'Z'
020A:5E7E  74 13				je	loc_922			; Jump if equal
020A:5E80  FE C4				inc	ah
020A:5E82  3C 44				cmp	al,44h			; 'D'
020A:5E84  74 0D				je	loc_922			; Jump if equal
020A:5E86  FE C4				inc	ah
020A:5E88  3C 4F				cmp	al,4Fh			; 'O'
020A:5E8A  74 07				je	loc_922			; Jump if equal
020A:5E8C  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:5E91  EB 0C				jmp	short loc_923		; (5E9F)
020A:5E93			loc_922:
020A:5E93  88 26 2C40				mov	byte ptr data_417,ah	; (020A:2C40=41h)
020A:5E97  E8 065A				call	sub_103			; (64F4)
020A:5E9A  9A 16FA:066C		;*		call	far ptr sub_242		;*(16FA:066C)
020A:5E9A  9A 6C 06 FA 16			db	 9Ah, 6Ch, 06h,0FAh, 16h
020A:5E9F			loc_923:
020A:5E9F  C3					retn
020A:5EA0  3C 41				cmp	al,41h			; 'A'
020A:5EA2  72 2C				jb	loc_924			; Jump if below
020A:5EA4  3C 5A				cmp	al,5Ah			; 'Z'
020A:5EA6  77 28				ja	loc_924			; Jump if above
020A:5EA8  8A D0				mov	dl,al
020A:5EAA  80 EA 41				sub	dl,41h			; 'A'
020A:5EAD  8A DA				mov	bl,dl
020A:5EAF  B4 19				mov	ah,19h
020A:5EB1  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5EB3  50					push	ax
020A:5EB4  B4 0E				mov	ah,0Eh
020A:5EB6  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5EB8  B4 19				mov	ah,19h
020A:5EBA  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:5EBC  A2 2A94				mov	byte ptr ds:[2A94h],al	; (020A:2A94=8Dh)
020A:5EBF  04 61				add	al,61h			; 'a'
020A:5EC1  A2 064E				mov	data_171,al		; (020A:064E=0B8h)
020A:5EC4  E8 26C5				call	sub_121			; (858C)
020A:5EC7  58					pop	ax
020A:5EC8  8A D0				mov	dl,al
020A:5ECA  B4 0E				mov	ah,0Eh
020A:5ECC  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 204

020A:5ECE  EB 05				jmp	short loc_925		; (5ED5)
020A:5ED0			loc_924:
020A:5ED0  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:5ED5			loc_925:
020A:5ED5  C3					retn
020A:5ED6  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_100		proc	near
020A:5ED8  50					push	ax
020A:5ED9  BF 034A				mov	di,34Ah
020A:5EDC  B9 0009				mov	cx,9
020A:5EDF  B0 2E				mov	al,2Eh			; '.'
020A:5EE1  FC					cld				; Clear direction
020A:5EE2  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:5EE4  4F					dec	di
020A:5EE5  58					pop	ax
020A:5EE6  3C 4C				cmp	al,4Ch			; 'L'
020A:5EE8  74 0C				je	loc_926			; Jump if equal
020A:5EEA  3C 41				cmp	al,41h			; 'A'
020A:5EEC  74 0A				je	loc_927			; Jump if equal
020A:5EEE  C6 06 4457 09			mov	byte ptr ds:[4457h],9	; (9B68:4457=0)
020A:5EF3  E9 00D0				jmp	loc_933			; (5FC6)
020A:5EF6			loc_926:
020A:5EF6  EB 74				jmp	short loc_931		; (5F6C)
020A:5EF8			loc_927:
020A:5EF8  C6 06 2EBD 00			mov	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:5EFD  9A 16FA:0420		;*		call	far ptr sub_237		;*(16FA:0420)
020A:5EFD  9A 20 04 FA 16			db	 9Ah, 20h, 04h,0FAh, 16h
020A:5F02  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:5F06  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:5F0A  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:5F0E  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:5F12  C6 47 65 00				mov	byte ptr [bx+65h],0
020A:5F16  C6 47 66 00				mov	byte ptr [bx+66h],0
020A:5F1A  C6 47 69 00				mov	byte ptr [bx+69h],0
020A:5F1E  C6 47 6A 00				mov	byte ptr [bx+6Ah],0
020A:5F22  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:5F26  C6 47 6C 00				mov	byte ptr [bx+6Ch],0
020A:5F2A  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:5F2E  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:5F32  C6 47 7B 00				mov	byte ptr [bx+7Bh],0
020A:5F36  C6 06 430B 00			mov	byte ptr ds:[430Bh],0	; (9B68:430B=0)
020A:5F3B  B9 0008				mov	cx,8
020A:5F3E  BF 13A1				mov	di,13A1h
020A:5F41  A0 139E				mov	al,byte ptr ds:[139Eh]	; (9B68:139E=20h)
  
020A:5F44			locloop_928:
020A:5F44  3A 05				cmp	al,[di]
020A:5F46  74 05				je	loc_929			; Jump if equal
020A:5F48  83 C7 0F				add	di,0Fh
020A:5F4B  E2 F7				loop	locloop_928		; Loop if cx > 0
  
020A:5F4D			loc_929:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 205

020A:5F4D  81 7D 01 4F4E			cmp	word ptr [di+1],4F4Eh
020A:5F52  75 16				jne	loc_930			; Jump if not equal
020A:5F54  BF 13A1				mov	di,13A1h
020A:5F57  8A 05				mov	al,[di]
020A:5F59  A2 139E				mov	byte ptr ds:[139Eh],al	; (9B68:139E=20h)
020A:5F5C  8B 45 0D				mov	ax,[di+0Dh]
020A:5F5F  A3			data_688	db	0A3h
020A:5F60  9F					lahf				; Load ah from flags
020A:5F61  13 9A 0648				adc	bx,[bp+si+648h]
020A:5F65  FA					cli				; Disable interrupts
020A:5F66  16					push	ss
020A:5F67  E8 24C6				call	sub_116			; (8430)
020A:5F6A			loc_930:
020A:5F6A  EB 49				jmp	short loc_932		; (5FB5)
020A:5F6C			loc_931:
020A:5F6C  C6 06 2EBD 01			mov	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:5F71  9A 16FA:0420		;*		call	far ptr sub_237		;*(16FA:0420)
020A:5F71  9A 20 04 FA 16			db	 9Ah, 20h, 04h,0FAh, 16h
020A:5F76  A0 11E9				mov	al,byte ptr ds:[11E9h]	; (9B68:11E9=20h)
020A:5F79  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:5F7D  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:5F81  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:5F85  C6 47 34 0F				mov	byte ptr [bx+34h],0Fh
020A:5F89  88 47 65				mov	[bx+65h],al
020A:5F8C  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:5F90  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:5F94  C6 47 6A 07				mov	byte ptr [bx+6Ah],7
020A:5F98  C6 47 6C 07				mov	byte ptr [bx+6Ch],7
020A:5F9C  88 47 70				mov	[bx+70h],al
020A:5F9F  C6 47 71 07				mov	byte ptr [bx+71h],7
020A:5FA3  C6 47 7B 07				mov	byte ptr [bx+7Bh],7
020A:5FA7  E8 2B2E				call	sub_132			; (8AD8)
020A:5FAA  80 3E 2EBC 00			cmp	byte ptr ds:[2EBCh],0	; (9B68:2EBC=0A0h)
020A:5FAF  74 04				je	loc_932			; Jump if equal
020A:5FB1  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020A:5FB5			loc_932:
020A:5FB5  BF 2BF5				mov	di,2BF5h
020A:5FB8  B9 003F				mov	cx,3Fh
020A:5FBB  B0 2E				mov	al,2Eh			; '.'
020A:5FBD  FC					cld				; Clear direction
020A:5FBE  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:5FC0  4F					dec	di
020A:5FC1  9A 16FA:0420		;*		call	far ptr sub_237		;*(16FA:0420)
020A:5FC1  9A 20 04 FA 16			db	 9Ah, 20h, 04h,0FAh, 16h
020A:5FC6			loc_933:
020A:5FC6  C3					retn
				sub_100		endp
  
020A:5FC7  90					nop
020A:5FC8  C6 06 4392 01			mov	byte ptr ds:[4392h],1	; (9B68:4392=0)
020A:5FCD  C3					retn
020A:5FCE  87 DB				xchg	bx,bx
020A:5FD0  80 3E 2EBD 00			cmp	data_450,0		; (020A:2EBD=0)
020A:5FD5  74 1B				je	loc_935			; Jump if equal
020A:5FD7  BF 0358				mov	di,358h
020A:5FDA  B9 0021				mov	cx,21h
020A:5FDD  B0 20				mov	al,20h			; ' '
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 206

020A:5FDF  FC					cld				; Clear direction
020A:5FE0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5FE2  B9 0020				mov	cx,20h
020A:5FE5  83 FB 20				cmp	bx,20h
020A:5FE8  77 02				ja	loc_934			; Jump if above
020A:5FEA  8B CB				mov	cx,bx
020A:5FEC			loc_934:
020A:5FEC  BF 0358				mov	di,358h
020A:5FEF  FC					cld				; Clear direction
020A:5FF0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5FF2			loc_935:
020A:5FF2  C3					retn
020A:5FF3  90					nop
020A:5FF4  83 FB 00				cmp	bx,0
020A:5FF7  75 08				jne	loc_936			; Jump if not equal
020A:5FF9  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:5FFE  E9 00B6				jmp	loc_946			; (60B7)
020A:6001			loc_936:
020A:6001  80 3C 3F				cmp	byte ptr [si],3Fh	; '?'
020A:6004  74 21				je	loc_938			; Jump if equal
020A:6006  8B FE				mov	di,si
020A:6008  B0 00				mov	al,0
020A:600A  9A 16FA:04A4		;*		call	far ptr sub_238		;*(16FA:04A4)
020A:600A  9A A4 04 FA 16			db	 9Ah,0A4h, 04h,0FAh, 16h
020A:600F  9A 16FA:0510		;*		call	far ptr sub_239		;*(16FA:0510)
020A:600F  9A 10 05 FA 16			db	 9Ah, 10h, 05h,0FAh, 16h
020A:6014  A2 2C3F				mov	data_416,al		; (020A:2C3F=4Dh)
020A:6017  3C 01				cmp	al,1
020A:6019  76 04				jbe	loc_937			; Jump if below or =
020A:601B  3C 0B				cmp	al,0Bh
020A:601D  76 12				jbe	loc_939			; Jump if below or =
020A:601F			loc_937:
020A:601F  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:6024  E9 0090				jmp	loc_946			; (60B7)
020A:6027			loc_938:
020A:6027  80 3E 2C3F 01			cmp	data_416,1		; (020A:2C3F=4Dh)
020A:602C  77 25				ja	loc_940			; Jump if above
020A:602E  E9 0093				jmp	loc_947			; (60C4)
020A:6031			loc_939:
020A:6031  BF 2BB2				mov	di,2BB2h
020A:6034  B9 0040				mov	cx,40h
020A:6037  B0 00				mov	al,0
020A:6039  FC					cld				; Clear direction
020A:603A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:603C  BF 0629				mov	di,629h
020A:603F  B9 000C				mov	cx,0Ch
020A:6042  B0 20				mov	al,20h			; ' '
020A:6044  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6046  BF 2BB2				mov	di,2BB2h
020A:6049  8B CB				mov	cx,bx
020A:604B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:604D  4F					dec	di
020A:604E  9A 16FA:1740		;*		call	far ptr sub_275		;*(16FA:1740)
020A:604E  9A 40 17 FA 16			db	 9Ah, 40h, 17h,0FAh, 16h
020A:6053			loc_940:
020A:6053  80 3E 2A1E 03			cmp	data_362,3		; (020A:2A1E=0A4h)
020A:6058  75 05				jne	loc_941			; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 207

020A:605A  C6 06 2A1E 04			mov	data_362,4		; (020A:2A1E=0A4h)
020A:605F			loc_941:
020A:605F  E8 5942				call	sub_179			; (B9A4)
020A:6062  73 05				jnc	loc_942			; Jump if carry=0
020A:6064  A2 4457				mov	data_637,al		; (020A:4457=3Dh)
020A:6067  EB 4E				jmp	short loc_946		; (60B7)
020A:6069			loc_942:
020A:6069  80 3E 263A 01			cmp	data_299,1		; (020A:263A=0)
020A:606E  74 05				je	loc_943			; Jump if equal
020A:6070  B0 0A				mov	al,0Ah
020A:6072  E8 2F0F				call	sub_142			; (8F84)
020A:6075			loc_943:
020A:6075  E8 3B8D				call	sub_159			; (9C05)
020A:6078  BE 0000				mov	si,0
020A:607B  BB 28F3				mov	bx,28F3h
020A:607E  B9 00FA				mov	cx,0FAh
020A:6081  32 D2				xor	dl,dl			; Zero register
  
020A:6083			locloop_944:
020A:6083  26: 8B 04				mov	ax,es:[si]
020A:6086  26: 89 07				mov	es:[bx],ax
020A:6089  3D FFFF				cmp	ax,0FFFFh
020A:608C  74 02				je	loc_945			; Jump if equal
020A:608E  FE C2				inc	dl
020A:6090			loc_945:
020A:6090  83 C6 15				add	si,15h
020A:6093  43					inc	bx
020A:6094  43					inc	bx
020A:6095  E2 EC				loop	locloop_944		; Loop if cx > 0
  
020A:6097  88 16 2A2D				mov	byte ptr ds:[2A2Dh],dl	; (020A:2A2D=0ADh)
020A:609B  80 3E 2A1E 04			cmp	data_362,4		; (020A:2A1E=0A4h)
020A:60A0  75 15				jne	loc_946			; Jump if not equal
020A:60A2  FE 0E 2A1E				dec	data_362		; (020A:2A1E=0A4h)
020A:60A6  BF 0000				mov	di,0
020A:60A9  B8 00FF				mov	ax,0FFh
020A:60AC  B9 0015				mov	cx,15h
020A:60AF  FC					cld				; Clear direction
020A:60B0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:60B2  C6 06 2A2B 00			mov	byte ptr ds:[2A2Bh],0	; (020A:2A2B=0A5h)
020A:60B7			loc_946:
020A:60B7  E8 3B54				call	sub_162			; (9C0E)
020A:60BA  51					push	cx
020A:60BB  B4 2A				mov	ah,2Ah			; '*'
020A:60BD  E8 26D8				call	sub_125			; (8798)
020A:60C0  E8 236D				call	sub_116			; (8430)
020A:60C3  59					pop	cx
020A:60C4			loc_947:
020A:60C4  C3					retn
020A:60C5  87 DB				xchg	bx,bx
020A:60C7  90					nop
020A:60C8  89 36 44FC				mov	word ptr ds:[44FCh],si	; (020A:44FC=2600h)
020A:60CC  01 1E 44FC				add	word ptr ds:[44FCh],bx	; (020A:44FC=2600h)
020A:60D0  E8 FA61				call	sub_98			; (5B34)
020A:60D3  72 2A				jc	loc_948			; Jump if carry Set
020A:60D5  89 16 2EC4				mov	data_452,dx		; (020A:2EC4=4F52h)
020A:60D9  89 16 2EC6				mov	data_453,dx		; (020A:2EC6=544Fh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 208

020A:60DD  83 26 2EC6 E7			and	data_453,0FFE7h		; (020A:2EC6=544Fh)
020A:60E2  88 36 47B1				mov	data_642,dh		; (020A:47B1=53h)
020A:60E6  F7 06 2EC4 0002			test	data_452,2		; (020A:2EC4=4F52h)
020A:60EC  74 16				jz	loc_949			; Jump if zero
020A:60EE  BF 2D1C				mov	di,2D1Ch
020A:60F1  83 EF 04				sub	di,4
020A:60F4  B9 0004				mov	cx,4
020A:60F7  2B F9				sub	di,cx
020A:60F9  B0 58				mov	al,58h			; 'X'
020A:60FB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:60FD  EB 05				jmp	short loc_949		; (6104)
020A:60FF			loc_948:
020A:60FF  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:6104			loc_949:
020A:6104  C3					retn
020A:6105  87 DB				xchg	bx,bx
020A:6107  90					nop
020A:6108  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (020A:2A2B=0A5h)
020A:610D  74 2A				je	loc_951			; Jump if equal
020A:610F  B4 12				mov	ah,12h
020A:6111  E8 2684				call	sub_125			; (8798)
020A:6114  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:6118  A0 11E8				mov	al,data_222		; (020A:11E8=0)
020A:611B  88 47 52				mov	[bx+52h],al
020A:611E  E8 230F				call	sub_116			; (8430)
020A:6121  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:6121  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:6126  B4 2A				mov	ah,2Ah			; '*'
020A:6128  E8 266D				call	sub_125			; (8798)
020A:612B  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:612F  B0 0F				mov	al,0Fh
020A:6131  88 47 52				mov	[bx+52h],al
020A:6134  E8 22F9				call	sub_116			; (8430)
020A:6137  B0 42				mov	al,42h			; 'B'
020A:6139			loc_951:
020A:6139  B4 01				mov	ah,1
020A:613B  3C 46				cmp	al,46h			; 'F'
020A:613D  74 16				je	loc_952			; Jump if equal
020A:613F  FE C4				inc	ah
020A:6141  3C 42				cmp	al,42h			; 'B'
020A:6143  74 10				je	loc_952			; Jump if equal
020A:6145  FE C4				inc	ah
020A:6147  3C 44				cmp	al,44h			; 'D'
020A:6149  74 0A				je	loc_952			; Jump if equal
020A:614B  2C 31				sub	al,31h			; '1'
020A:614D  3C 02				cmp	al,2
020A:614F  77 0E				ja	loc_953			; Jump if above
020A:6151  FE C0				inc	al
020A:6153  8A E0				mov	ah,al
020A:6155			loc_952:
020A:6155  88 26 2A1E				mov	data_362,ah		; (020A:2A1E=0A4h)
020A:6159  88 26 2A1F				mov	data_363,ah		; (020A:2A1F=0A5h)
020A:615D  EB 05				jmp	short loc_954		; (6164)
020A:615F			loc_953:
020A:615F  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:6164			loc_954:
020A:6164  C3					retn
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 209

020A:6165  87 DB				xchg	bx,bx
020A:6167  90					nop
020A:6168  32 E4				xor	ah,ah			; Zero register
020A:616A  3C 44				cmp	al,44h			; 'D'
020A:616C  74 19				je	loc_955			; Jump if equal
020A:616E  FE C4				inc	ah
020A:6170  3C 5A				cmp	al,5Ah			; 'Z'
020A:6172  74 13				je	loc_955			; Jump if equal
020A:6174  FE C4				inc	ah
020A:6176  3C 53				cmp	al,53h			; 'S'
020A:6178  74 0D				je	loc_955			; Jump if equal
020A:617A  FE C4				inc	ah
020A:617C  3C 4C				cmp	al,4Ch			; 'L'
020A:617E  74 07				je	loc_955			; Jump if equal
020A:6180  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:6185  EB 0A				jmp	short loc_956		; (6191)
020A:6187			loc_955:
020A:6187  88 26 14AD				mov	data_234,ah		; (020A:14AD=0)
020A:618B  E8 298E				call	sub_133			; (8B1C)
020A:618E  E8 02D0				call	sub_101			; (6461)
020A:6191			loc_956:
020A:6191  C3					retn
020A:6192  87 DB				xchg	bx,bx
020A:6194  C6 06 2A79 01			mov	data_393,1		; (020A:2A79=0E0h)
020A:6199  E9 01D8				jmp	loc_982			; (6374)
020A:619C  C3					retn
020A:619D  87 DB				xchg	bx,bx
020A:619F  90					nop
020A:61A0  83 FB 00				cmp	bx,0
020A:61A3  75 08				jne	loc_957			; Jump if not equal
020A:61A5  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:61AA  E9 008F				jmp	loc_963			; (623C)
020A:61AD			loc_957:
020A:61AD  FC					cld				; Clear direction
020A:61AE  BF 2BF5				mov	di,2BF5h
020A:61B1  B9 0029				mov	cx,29h
020A:61B4  B0 00				mov	al,0
020A:61B6  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:61B8  BF 034A				mov	di,34Ah
020A:61BB  B9 000C				mov	cx,0Ch
020A:61BE  B0 20				mov	al,20h			; ' '
020A:61C0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:61C2  BF 2BF5				mov	di,2BF5h
020A:61C5  8B CB				mov	cx,bx
  
020A:61C7			locloop_958:
020A:61C7  80 3C 2E				cmp	byte ptr [si],2Eh	; '.'
020A:61CA  74 03				je	loc_959			; Jump if equal
020A:61CC  A4					movsb				; Mov [si] to es:[di]
020A:61CD  E2 F8				loop	locloop_958		; Loop if cx > 0
  
020A:61CF			loc_959:
020A:61CF  2B D9				sub	bx,cx
020A:61D1  9A 16FA:0420		;*		call	far ptr sub_237		;*(16FA:0420)
020A:61D1  9A 20 04 FA 16			db	 9Ah, 20h, 04h,0FAh, 16h
020A:61D6  83 C3 04				add	bx,4
020A:61D9  47					inc	di
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 210

020A:61DA  8B CB				mov	cx,bx
020A:61DC			loc_960:
020A:61DC  8A 05				mov	al,[di]
020A:61DE  3C 3A				cmp	al,3Ah			; ':'
020A:61E0  74 0D				je	loc_961			; Jump if equal
020A:61E2  3C 5C				cmp	al,5Ch			; '\'
020A:61E4  74 09				je	loc_961			; Jump if equal
020A:61E6  83 F9 01				cmp	cx,1
020A:61E9  76 05				jbe	loc_962			; Jump if below or =
020A:61EB  49					dec	cx
020A:61EC  4F					dec	di
020A:61ED  EB ED				jmp	short loc_960		; (61DC)
020A:61EF			loc_961:
020A:61EF  47					inc	di
020A:61F0			loc_962:
020A:61F0  2B D9				sub	bx,cx
020A:61F2  8B CB				mov	cx,bx
020A:61F4  41					inc	cx
020A:61F5  83 F9 0C				cmp	cx,0Ch
020A:61F8  77 42				ja	loc_963			; Jump if above
020A:61FA  8B F7				mov	si,di
020A:61FC  BF 034A				mov	di,34Ah
020A:61FF  FC					cld				; Clear direction
020A:6200  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6202  80 3E 2BF6 3A			cmp	data_413,3Ah		; (020A:2BF6=0) ':'
020A:6207  75 33				jne	loc_963			; Jump if not equal
020A:6209  A0 2BF5				mov	al,byte ptr ds:[2BF5h]	; (020A:2BF5=0)
020A:620C  24 5F				and	al,5Fh			; '_'
020A:620E  3C 41				cmp	al,41h			; 'A'
020A:6210  72 2A				jb	loc_963			; Jump if below
020A:6212  3C 5A				cmp	al,5Ah			; 'Z'
020A:6214  77 26				ja	loc_963			; Jump if above
020A:6216  8A D0				mov	dl,al
020A:6218  80 EA 41				sub	dl,41h			; 'A'
020A:621B  8A DA				mov	bl,dl
020A:621D  B4 19				mov	ah,19h
020A:621F  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:6221  50					push	ax
020A:6222  B4 0E				mov	ah,0Eh
020A:6224  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6226  B4 19				mov	ah,19h
020A:6228  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:622A  A2 2A94				mov	byte ptr ds:[2A94h],al	; (020A:2A94=8Dh)
020A:622D  04 61				add	al,61h			; 'a'
020A:622F  A2 064E				mov	data_171,al		; (020A:064E=0B8h)
020A:6232  E8 2357				call	sub_121			; (858C)
020A:6235  58					pop	ax
020A:6236  8A D0				mov	dl,al
020A:6238  B4 0E				mov	ah,0Eh
020A:623A  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:623C			loc_963:
020A:623C  C3					retn
020A:623D  87 DB				xchg	bx,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 211

020A:623F  90					nop
020A:6240  2C 32				sub	al,32h			; '2'
020A:6242  3C 07				cmp	al,7
020A:6244  77 0E				ja	loc_964			; Jump if above
020A:6246  04 02				add	al,2
020A:6248  D0 E0				shl	al,1			; Shift w/zeros fill
020A:624A  E8 2D37				call	sub_142			; (8F84)
020A:624D  C6 06 263A 01			mov	data_299,1		; (020A:263A=0)
020A:6252  EB 05				jmp	short loc_965		; (6259)
020A:6254			loc_964:
020A:6254  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:6259			loc_965:
020A:6259  C3					retn
020A:625A  87 DB				xchg	bx,bx
020A:625C  32 E4				xor	ah,ah			; Zero register
020A:625E  3C 4E				cmp	al,4Eh			; 'N'
020A:6260  74 3E				je	loc_967			; Jump if equal
020A:6262  FE C4				inc	ah
020A:6264  3C 44				cmp	al,44h			; 'D'
020A:6266  74 38				je	loc_967			; Jump if equal
020A:6268  FE C4				inc	ah
020A:626A  3C 49				cmp	al,49h			; 'I'
020A:626C  74 32				je	loc_967			; Jump if equal
020A:626E  B4 04				mov	ah,4
020A:6270  3C 4F				cmp	al,4Fh			; 'O'
020A:6272  74 2C				je	loc_967			; Jump if equal
020A:6274  B4 07				mov	ah,7
020A:6276  3C 41				cmp	al,41h			; 'A'
020A:6278  74 26				je	loc_967			; Jump if equal
020A:627A  3C 45				cmp	al,45h			; 'E'
020A:627C  75 2B				jne	loc_968			; Jump if not equal
020A:627E			loc_966:
020A:627E  46					inc	si
020A:627F  4B					dec	bx
020A:6280  74 27				jz	loc_968			; Jump if zero
020A:6282  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:6285  75 F7				jne	loc_966			; Jump if not equal
020A:6287  46					inc	si
020A:6288  4B					dec	bx
020A:6289  74 1E				jz	loc_968			; Jump if zero
020A:628B  B4 06				mov	ah,6
020A:628D  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020A:6290  74 0E				je	loc_967			; Jump if equal
020A:6292  FE CC				dec	ah
020A:6294  80 3C 49				cmp	byte ptr [si],49h	; 'I'
020A:6297  74 07				je	loc_967			; Jump if equal
020A:6299  B4 03				mov	ah,3
020A:629B  80 3C 4F				cmp	byte ptr [si],4Fh	; 'O'
020A:629E  75 09				jne	loc_968			; Jump if not equal
020A:62A0			loc_967:
020A:62A0  88 26 152A				mov	data_236,ah		; (020A:152A=0)
020A:62A4  E8 28BD				call	sub_134			; (8B64)
020A:62A7  EB 05				jmp	short loc_969		; (62AE)
020A:62A9			loc_968:
020A:62A9  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:62AE			loc_969:
020A:62AE  C3					retn
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 212

020A:62AF  90					nop
020A:62B0  80 3E 2EBD 00			cmp	data_450,0		; (020A:2EBD=0)
020A:62B5  74 0D				je	loc_970			; Jump if equal
020A:62B7  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:62BB  C6 06 2EBC 00			mov	data_449,0		; (020A:2EBC=3Ah)
020A:62C0  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:62C4			loc_970:
020A:62C4  C3					retn
020A:62C5  87 DB				xchg	bx,bx
020A:62C7  90					nop
020A:62C8  BF 13A1				mov	di,13A1h
020A:62CB  8A 05				mov	al,[di]
020A:62CD  A2 139E				mov	data_231,al		; (020A:139E=0)
020A:62D0  33 ED				xor	bp,bp			; Zero register
020A:62D2  8D 55 0D				lea	dx,[di+0Dh]		; Load effective addr
020A:62D5  8D 4D 01				lea	cx,[di+1]		; Load effective addr
020A:62D8  2B D1				sub	dx,cx
020A:62DA  8B CA				mov	cx,dx
020A:62DC  33 DB				xor	bx,bx			; Zero register
020A:62DE  56					push	si
  
020A:62DF			locloop_971:
020A:62DF  8A 04				mov	al,[si]
020A:62E1  3C 00				cmp	al,0
020A:62E3  74 35				je	loc_976			; Jump if equal
020A:62E5  3C 20				cmp	al,20h			; ' '
020A:62E7  74 06				je	loc_972			; Jump if equal
020A:62E9  3C 09				cmp	al,9
020A:62EB  74 02				je	loc_972			; Jump if equal
020A:62ED  EB 03				jmp	short loc_973		; (62F2)
020A:62EF			loc_972:
020A:62EF  46					inc	si
020A:62F0  EB ED				jmp	short locloop_971	; (62DF)
020A:62F2			loc_973:
020A:62F2  38 41 01				cmp	[bx+di+1],al
020A:62F5  75 12				jne	loc_974			; Jump if not equal
020A:62F7  43					inc	bx
020A:62F8  46					inc	si
020A:62F9  80 79 01 2E				cmp	byte ptr [bx+di+1],2Eh	; '.'
020A:62FD  74 21				je	loc_977			; Jump if equal
020A:62FF  80 79 01 20				cmp	byte ptr [bx+di+1],20h	; ' '
020A:6303  74 1B				je	loc_977			; Jump if equal
020A:6305  E2 D8				loop	locloop_971		; Loop if cx > 0
  
020A:6307  E3 17				jcxz	loc_977			; Jump if cx=0
020A:6309			loc_974:
020A:6309  5E					pop	si
020A:630A  56					push	si
020A:630B  45					inc	bp
020A:630C  83 FD 08				cmp	bp,8
020A:630F  73 09				jae	loc_976			; Jump if above or =
020A:6311  8B CA				mov	cx,dx
020A:6313  83 C7 0F				add	di,0Fh
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:6316			loc_975:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 213

020A:6316  33 DB				xor	bx,bx			; Zero register
020A:6318  EB C5				jmp	short locloop_971	; (62DF)
020A:631A			loc_976:
020A:631A  5E					pop	si
020A:631B  B4 36				mov	ah,36h			; '6'
020A:631D  E9 DA8C		;*		jmp	loc_538			;*(3DAC)
020A:631D  E9 8C DA				db	0E9h, 8Ch,0DAh
020A:6320			loc_977:
020A:6320  8A 05				mov	al,[di]
020A:6322  A2 139E				mov	byte ptr ds:[139Eh],al	; (9B68:139E=20h)
020A:6325  8B 45 0D				mov	ax,[di+0Dh]
020A:6328  A3 139F				mov	word ptr ds:[139Fh],ax	; (9B68:139F=2E5Bh)
020A:632B  9A 16FA:0648		;*		call	far ptr sub_241		;*(16FA:0648)
020A:632B  9A 48 06 FA 16			db	 9Ah, 48h, 06h,0FAh, 16h
020A:6330  E8 20FD				call	sub_116			; (8430)
020A:6333  5E					pop	si
020A:6334  C3					retn
020A:6335  87 DB				xchg	bx,bx
020A:6337  90					nop
020A:6338  8B 04				mov	ax,[si]
020A:633A  8A 5C 02				mov	bl,[si+2]
020A:633D  BF 4413				mov	di,4413h
020A:6340			loc_978:
020A:6340  3B 05				cmp	ax,[di]
020A:6342  75 05				jne	loc_979			; Jump if not equal
020A:6344  3A 5D 02				cmp	bl,[di+2]
020A:6347  74 10				je	loc_980			; Jump if equal
020A:6349			loc_979:
020A:6349  83 C7 04				add	di,4
020A:634C  81 FF 4457				cmp	di,4457h
020A:6350  72 EE				jb	loc_978			; Jump if below
020A:6352  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:6357  EB 57				jmp	short loc_986		; (63B0)
020A:6359			loc_980:
020A:6359  8A 45 03				mov	al,[di+3]
020A:635C  3C 80				cmp	al,80h
020A:635E  74 50				je	loc_986			; Jump if equal
020A:6360  8A 36 2A77				mov	dh,data_391		; (020A:2A77=0A5h)
020A:6364  3C 40				cmp	al,40h			; '@'
020A:6366  75 09				jne	loc_981			; Jump if not equal
020A:6368  A0 2A78				mov	al,data_392		; (020A:2A78=20h)
020A:636B  A8 F0				test	al,0F0h
020A:636D  74 02				jz	loc_981			; Jump if zero
020A:636F  0C 08				or	al,8
020A:6371			loc_981:
020A:6371  A2 2A77				mov	data_391,al		; (020A:2A77=0A5h)
020A:6374			loc_982:
020A:6374  A0 2A77				mov	al,data_391		; (020A:2A77=0A5h)
020A:6377  F6 06 2A79 0F			test	data_393,0Fh		; (020A:2A79=0E0h)
020A:637C  74 1B				jz	loc_984			; Jump if zero
020A:637E  C6 06 2A79 01			mov	data_393,1		; (020A:2A79=0E0h)
020A:6383  A8 10				test	al,10h
020A:6385  74 07				jz	loc_983			; Jump if zero
020A:6387  C6 06 2A79 02			mov	data_393,2		; (020A:2A79=0E0h)
020A:638C  EB 1D				jmp	short loc_985		; (63AB)
020A:638E			loc_983:
020A:638E  A8 20				test	al,20h			; ' '
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 214

020A:6390  74 07				jz	loc_984			; Jump if zero
020A:6392  C6 06 2A79 04			mov	data_393,4		; (020A:2A79=0E0h)
020A:6397  EB 12				jmp	short loc_985		; (63AB)
020A:6399			loc_984:
020A:6399  A8 C0				test	al,0C0h
020A:639B  74 0E				jz	loc_985			; Jump if zero
020A:639D  C6 06 2A79 0C			mov	data_393,0Ch		; (020A:2A79=0E0h)
020A:63A2  A8 80				test	al,80h
020A:63A4  74 05				jz	loc_985			; Jump if zero
020A:63A6  C6 06 2A79 14			mov	data_393,14h		; (020A:2A79=0E0h)
020A:63AB			loc_985:
020A:63AB  B6 01				mov	dh,1
020A:63AD  E8 2294				call	sub_122			; (8644)
020A:63B0			loc_986:
020A:63B0  C3					retn
020A:63B1  87 DB				xchg	bx,bx
020A:63B3  90					nop
020A:63B4  55					push	bp
020A:63B5  8B EB				mov	bp,bx
020A:63B7  33 DB				xor	bx,bx			; Zero register
020A:63B9  32 C9				xor	cl,cl			; Zero register
020A:63BB  8A 1C				mov	bl,[si]
020A:63BD  80 EB 30				sub	bl,30h			; '0'
020A:63C0  80 FB 09				cmp	bl,9
020A:63C3  76 03				jbe	loc_987			; Jump if below or =
020A:63C5  E9 008F				jmp	loc_993			; (6457)
020A:63C8			loc_987:
020A:63C8  8A C3				mov	al,bl
020A:63CA  46					inc	si
020A:63CB  4D					dec	bp
020A:63CC  FE C1				inc	cl
020A:63CE  8A 1C				mov	bl,[si]
020A:63D0  80 EB 30				sub	bl,30h			; '0'
020A:63D3  80 FB 09				cmp	bl,9
020A:63D6  76 04				jbe	loc_988			; Jump if below or =
020A:63D8  8A D8				mov	bl,al
020A:63DA  EB 22				jmp	short loc_989		; (63FE)
020A:63DC			loc_988:
020A:63DC  B5 0A				mov	ch,0Ah
020A:63DE  F6 E5				mul	ch			; ax = reg * al
020A:63E0  03 D8				add	bx,ax
020A:63E2  46					inc	si
020A:63E3  4D					dec	bp
020A:63E4  FE C1				inc	cl
020A:63E6  8A 14				mov	dl,[si]
020A:63E8  80 EA 30				sub	dl,30h			; '0'
020A:63EB  80 FA 09				cmp	dl,9
020A:63EE  77 0E				ja	loc_989			; Jump if above
020A:63F0  46					inc	si
020A:63F1  4D					dec	bp
020A:63F2  FE C1				inc	cl
020A:63F4  8B C3				mov	ax,bx
020A:63F6  F6 E5				mul	ch			; ax = reg * al
020A:63F8  32 F6				xor	dh,dh			; Zero register
020A:63FA  03 C2				add	ax,dx
020A:63FC  8B D8				mov	bx,ax
020A:63FE			loc_989:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 215

020A:63FE  83 FB 00				cmp	bx,0
020A:6401  74 0B				je	loc_990			; Jump if equal
020A:6403  83 FB 0A				cmp	bx,0Ah
020A:6406  72 4F				jb	loc_993			; Jump if below
020A:6408  81 FB 00FF				cmp	bx,0FFh
020A:640C  77 49				ja	loc_993			; Jump if above
020A:640E			loc_990:
020A:640E  88 1E 2EBF				mov	data_451,bl		; (020A:2EBF=59h)
020A:6412  80 FB 00				cmp	bl,0
020A:6415  74 40				je	loc_993			; Jump if equal
020A:6417  BF 4BF3				mov	di,4BF3h
020A:641A  C7 45 FF 2020			mov	word ptr [di-1],2020h
020A:641F  56					push	si
020A:6420  4E					dec	si
020A:6421  32 ED				xor	ch,ch			; Zero register
020A:6423  FD					std				; Set direction flag
020A:6424  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6426  FC					cld				; Clear direction
020A:6427  5E					pop	si
020A:6428  83 FD 02				cmp	bp,2
020A:642B  72 2A				jb	loc_993			; Jump if below
020A:642D  83 FD 32				cmp	bp,32h
020A:6430  77 25				ja	loc_993			; Jump if above
020A:6432			loc_991:
020A:6432  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:6435  74 06				je	loc_992			; Jump if equal
020A:6437  4D					dec	bp
020A:6438  74 1D				jz	loc_993			; Jump if zero
020A:643A  46					inc	si
020A:643B  EB F5				jmp	short loc_991		; (6432)
020A:643D			loc_992:
020A:643D  46					inc	si
020A:643E  4D					dec	bp
020A:643F  74 16				jz	loc_993			; Jump if zero
020A:6441  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:6444  74 F7				je	loc_992			; Jump if equal
020A:6446  80 3C 43				cmp	byte ptr [si],43h	; 'C'
020A:6449  75 0C				jne	loc_993			; Jump if not equal
020A:644B  46					inc	si
020A:644C  8A 04				mov	al,[si]
020A:644E  2C 30				sub	al,30h			; '0'
020A:6450  3C 03				cmp	al,3
020A:6452  77 03				ja	loc_993			; Jump if above
020A:6454  A2 2EBA				mov	data_447,al		; (020A:2EBA=3Dh)
020A:6457			loc_993:
020A:6457  5D					pop	bp
020A:6458  C3					retn
020A:6459  87 DB				xchg	bx,bx
020A:645B  90					nop
020A:645C  C6 06 2EB8 00			mov	data_446,0		; (020A:2EB8=56h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_101		proc	near
020A:6461  BE 03B0				mov	si,3B0h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 216

020A:6464  BA 0003				mov	dx,3
020A:6467			loc_994:
020A:6467  B9 0017				mov	cx,17h
020A:646A  E8 2E63				call	sub_144			; (92D0)
020A:646D  83 C6 39				add	si,39h
020A:6470  4A					dec	dx
020A:6471  75 F4				jnz	loc_994			; Jump if not zero
020A:6473  B9 3429				mov	cx,3429h
020A:6476  81 E9 2F0C				sub	cx,2F0Ch
020A:647A  BE 2F0C				mov	si,2F0Ch
020A:647D  E8 2E50				call	sub_144			; (92D0)
020A:6480  B9 5030				mov	cx,5030h
020A:6483  81 E9 4CDE				sub	cx,4CDEh
020A:6487  BE 4CDE				mov	si,4CDEh
020A:648A  E8 2E43				call	sub_144			; (92D0)
020A:648D  C3					retn
				sub_101		endp
  
020A:648E  87 DB				xchg	bx,bx
020A:6490  80 3E 2EBD 00			cmp	data_450,0		; (020A:2EBD=0)
020A:6495  74 35				je	loc_998			; Jump if equal
020A:6497  83 FB 02				cmp	bx,2
020A:649A  72 0F				jb	loc_995			; Jump if below
020A:649C  8A 44 01				mov	al,[si+1]
020A:649F  B3 07				mov	bl,7
020A:64A1  3C 4E				cmp	al,4Eh			; 'N'
020A:64A3  74 0D				je	loc_996			; Jump if equal
020A:64A5  32 DB				xor	bl,bl			; Zero register
020A:64A7  3C 46				cmp	al,46h			; 'F'
020A:64A9  74 07				je	loc_996			; Jump if equal
020A:64AB			loc_995:
020A:64AB  C6 06 4457 09			mov	data_637,9		; (020A:4457=3Dh)
020A:64B0  EB 1A				jmp	short loc_998		; (64CC)
020A:64B2			loc_996:
020A:64B2  88 1E 430B				mov	byte ptr ds:[430Bh],bl	; (020A:430B=20h)
020A:64B6  80 FB 00				cmp	bl,0
020A:64B9  74 0E				je	loc_997			; Jump if equal
020A:64BB  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (020A:263D=99h)
020A:64C0  73 0A				jae	loc_998			; Jump if above or =
020A:64C2  B0 0A				mov	al,0Ah
020A:64C4  E8 2ABD				call	sub_142			; (8F84)
020A:64C7  EB 03				jmp	short loc_998		; (64CC)
020A:64C9			loc_997:
020A:64C9  E8 260C				call	sub_132			; (8AD8)
020A:64CC			loc_998:
020A:64CC  C3					retn
020A:64CD  87 DB				xchg	bx,bx
020A:64CF  90					nop
020A:64D0  2C 30				sub	al,30h			; '0'
020A:64D2  3C 1F				cmp	al,1Fh
020A:64D4  77 03				ja	loc_999			; Jump if above
020A:64D6  A2 2EB1				mov	data_441,al		; (020A:2EB1=53h)
020A:64D9			loc_999:
020A:64D9  C3					retn
020A:64DA  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 217

				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_102		proc	near
020A:64DC  24 DF				and	al,0DFh
020A:64DE			loc_1000:
020A:64DE  80 3F 00				cmp	byte ptr [bx],0
020A:64E1  74 0F				je	loc_1002		; Jump if equal
020A:64E3  3A 07				cmp	al,[bx]
020A:64E5  74 05				je	loc_1001		; Jump if equal
020A:64E7  83 C3 03				add	bx,3
020A:64EA  EB F2				jmp	short loc_1000		; (64DE)
020A:64EC			loc_1001:
020A:64EC  58					pop	ax
020A:64ED  8B 47 01				mov	ax,[bx+1]
020A:64F0  50					push	ax
020A:64F1  C3					retn
020A:64F2			loc_1002:
020A:64F2  C3					retn
				sub_102		endp
  
020A:64F3  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_103		proc	near
020A:64F4  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:64F9  06					push	es
020A:64FA  8A 36 2C40				mov	dh,byte ptr ds:[2C40h]	; (9B68:2C40=0E3h)
020A:64FE  80 FE 02				cmp	dh,2
020A:6501  75 32				jne	loc_1003		; Jump if not equal
020A:6503  E8 36FF				call	sub_159			; (9C05)
020A:6506  26: 83 3E 0000 50			cmp	word ptr es:[0],50h	; (A0AF:0000=0)
020A:650C  76 50				jbe	loc_1004		; Jump if below or =
020A:650E  26: 83 3E 0002 00			cmp	word ptr es:[2],0	; (A0AF:0002=0)
020A:6514  75 48				jne	loc_1004		; Jump if not equal
020A:6516  26: C7 06 0002 0100			mov	word ptr es:[2],100h	; (A0AF:0002=0)
020A:651D  26: 83 2E 0000 10			sub	word ptr es:[0],10h	; (A0AF:0000=0)
020A:6523  26: 81 3E 0004 FE00			cmp	word ptr es:[4],0FE00h	; (A0AF:0004=0)
020A:652A  73 32				jae	loc_1004		; Jump if above or =
020A:652C  26: 81 06 0004 0100			add	word ptr es:[4],100h	; (A0AF:0004=0)
020A:6533  EB 29				jmp	short loc_1004		; (655E)
020A:6535			loc_1003:
020A:6535  E8 36CD				call	sub_159			; (9C05)
020A:6538  26: 81 3E 0002 0100			cmp	word ptr es:[2],100h	; (A0AF:0002=0)
020A:653F  75 1D				jne	loc_1004		; Jump if not equal
020A:6541  26: C7 06 0002 0000			mov	word ptr es:[2],0	; (A0AF:0002=0)
020A:6548  26: 83 06 0000 10			add	word ptr es:[0],10h	; (A0AF:0000=0)
020A:654E  26: 81 3E 0004 0100			cmp	word ptr es:[4],100h	; (A0AF:0004=0)
020A:6555  76 07				jbe	loc_1004		; Jump if below or =
020A:6557  26: 81 2E 0004 0100			sub	word ptr es:[4],100h	; (A0AF:0004=0)
020A:655E			loc_1004:
020A:655E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:6563  5A					pop	dx
020A:6564  8E C2				mov	es,dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 218

020A:6566  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:656B  5A					pop	dx
020A:656C  75 0A				jnz	loc_1005		; Jump if not zero
020A:656E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:6573  74 03				je	loc_1005		; Jump if equal
020A:6575  E8 396C				call	sub_168			; (9EE4)
020A:6578			loc_1005:
020A:6578  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:657D  C3					retn
				sub_103		endp
  
020A:657E  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_104		proc	near
020A:6580  53					push	bx
020A:6581  51					push	cx
020A:6582  56					push	si
020A:6583  1E					push	ds
020A:6584  06					push	es
020A:6585  E8 3686				call	sub_162			; (9C0E)
020A:6588  BE 1551				mov	si,1551h
020A:658B  0E					push	cs
020A:658C  1F					pop	ds
020A:658D  B9 0016				mov	cx,16h
020A:6590  B3 70				mov	bl,70h			; 'p'
020A:6592  FC					cld				; Clear direction
  
020A:6593			locloop_1006:
020A:6593  AC					lodsb				; String [si] to al
020A:6594  2A C3				sub	al,bl
020A:6596  AA					stosb				; Store al to es:[di]
020A:6597  FE C3				inc	bl
020A:6599  E2 F8				loop	locloop_1006		; Loop if cx > 0
  
020A:659B  07					pop	es
020A:659C  1F					pop	ds
020A:659D  5E					pop	si
020A:659E  59					pop	cx
020A:659F  5B					pop	bx
020A:65A0  C3					retn
				sub_104		endp
  
020A:65A1  C6					db	0C6h
020A:65A2  91					xchg	ax,cx
020A:65A3  B5 C2				mov	ch,0C2h
020A:65A5  C1					db	0C1h
020A:65A6  C2 C5CB				retn	0C5CBh
020A:65A9  C1					db	0C1h
020A:65AA  BC CFBB				mov	sp,0CFBBh
020A:65AD  C5					db	0C5h
020A:65AE  CC					int	3			; Debug breakpoint
020A:65AF  CC					int	3			; Debug breakpoint
020A:65B0  D2 AC CBA1				shr	data_802[si],cl		; (020A:CBA1=0D7h) Shift w/zeros fill
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 219

020A:65B4  D1 C7				rol	di,1			; Rotate
020A:65B6  B3 00				mov	bl,0
020A:65B8  0008[00]				db	8 dup (0)
020A:65C0			loc_1007:
020A:65C0  BE 42F0				mov	si,42F0h
020A:65C3  80 3E 2C3E 00			cmp	data_415,0		; (020A:2C3E=4Dh)
020A:65C8  74 03				je	loc_1008		; Jump if equal
020A:65CA  E9 EE58				jmp	loc_787			; (5425)
020A:65CD			loc_1008:
020A:65CD  B6 01				mov	dh,1
020A:65CF  B2 37				mov	dl,37h			; '7'
020A:65D1  E8 78D0				call	sub_212			; (DEA4)
020A:65D4  0A F6				or	dh,dh			; Zero ?
020A:65D6  74 09				jz	loc_1009		; Jump if zero
020A:65D8  83 4C D6 04				or	word ptr [si-2Ah],4
020A:65DC  B2 25				mov	dl,25h			; '%'
020A:65DE  E8 78C3				call	sub_212			; (DEA4)
020A:65E1			loc_1009:
020A:65E1  A1 42CC				mov	ax,data_601		; (020A:42CC=30h)
020A:65E4  A3 42C8				mov	data_599,ax		; (020A:42C8=480Eh)
020A:65E7  A1 42CE				mov	ax,data_602		; (020A:42CE=3C3Bh)
020A:65EA  A3 42CA				mov	data_600,ax		; (020A:42CA=0Fh)
020A:65ED  F7 06 42CC 0002			test	data_601,2		; (020A:42CC=30h)
020A:65F3  74 07				jz	loc_1010		; Jump if zero
020A:65F5  B0 01				mov	al,1
020A:65F7  9A 16FA:12D0		;*		call	far ptr sub_263		;*(16FA:12D0)
020A:65F7  9A D0 12 FA 16			db	 9Ah,0D0h, 12h,0FAh, 16h
020A:65FC			loc_1010:
020A:65FC  8A 16 2A94				mov	dl,byte ptr ds:[2A94h]	; (020A:2A94=8Dh)
020A:6600  80 C2 61				add	dl,61h			; 'a'
020A:6603  88 16 2BF3				mov	data_411,dl		; (020A:2BF3=0)
020A:6607  BA 386F				mov	dx,386Fh
020A:660A  B4 1A				mov	ah,1Ah
020A:660C  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA to ds:dx
020A:660E  BA 2BF5				mov	dx,2BF5h
020A:6611  80 3E 2BF6 3A			cmp	data_413,3Ah		; (020A:2BF6=0) ':'
020A:6616  74 03				je	loc_1011		; Jump if equal
020A:6618  BA 2BF3				mov	dx,2BF3h
020A:661B			loc_1011:
020A:661B  B9 0000				mov	cx,0
020A:661E  B4 4E				mov	ah,4Eh			; 'N'
020A:6620  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:6622  72 51				jc	loc_1014		; Jump if carry Set
020A:6624  B4 02				mov	ah,2
020A:6626  32 FF				xor	bh,bh			; Zero register
020A:6628  BA 174B				mov	dx,174Bh
020A:662B  E8 25C6				call	sub_136			; (8BF4)
020A:662E  E8 2423				call	sub_130			; (8A54)
020A:6631  E8 2108				call	sub_123			; (873C)
020A:6634  A0 11E8				mov	al,data_222		; (020A:11E8=0)
020A:6637  88 47 52				mov	[bx+52h],al
020A:663A  B4 19				mov	ah,19h
020A:663C  E8 2159				call	sub_125			; (8798)
020A:663F  E8 1DEE				call	sub_116			; (8430)
020A:6642			loc_1012:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 220

020A:6642  F7 06 2EC4 0004			test	data_452,4		; (020A:2EC4=4F52h)
020A:6648  75 2B				jnz	loc_1014		; Jump if not zero
020A:664A  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:664A  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:664F  24 DF				and	al,0DFh
020A:6651  3C 59				cmp	al,59h			; 'Y'
020A:6653  74 20				je	loc_1014		; Jump if equal
020A:6655  3C 4E				cmp	al,4Eh			; 'N'
020A:6657  74 07				je	loc_1013		; Jump if equal
020A:6659  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:6659  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:665E  EB E2				jmp	short loc_1012		; (6642)
020A:6660			loc_1013:
020A:6660  8A 16 2A93				mov	dl,byte ptr ds:[2A93h]	; (020A:2A93=14h)
020A:6664  B4 0E				mov	ah,0Eh
020A:6666  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6668  E8 23DD				call	sub_129			; (8A48)
020A:666B  E8 20F6				call	sub_124			; (8764)
020A:666E  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:6672  E9 EDB0				jmp	loc_787			; (5425)
020A:6675			loc_1014:
020A:6675  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:6679  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:667D  E8 23C8				call	sub_129			; (8A48)
020A:6680  E8 358B				call	sub_162			; (9C0E)
020A:6683  B9 000C				mov	cx,0Ch
020A:6686  BE 034A				mov	si,34Ah
020A:6689  BF 2CD0				mov	di,2CD0h
  
020A:668C			locloop_1015:
020A:668C  80 3C 00				cmp	byte ptr [si],0
020A:668F  74 09				je	loc_1016		; Jump if equal
020A:6691  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:6694  74 04				je	loc_1016		; Jump if equal
020A:6696  FC					cld				; Clear direction
020A:6697  A4					movsb				; Mov [si] to es:[di]
020A:6698  E2 F2				loop	locloop_1015		; Loop if cx > 0
  
020A:669A			loc_1016:
020A:669A  BB 4298				mov	bx,4298h
020A:669D  B9 0020				mov	cx,20h
020A:66A0  BE 0358				mov	si,358h
020A:66A3  BF 2CE0				mov	di,2CE0h
020A:66A6  FC					cld				; Clear direction
020A:66A7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:66A9  F7 47 2E 0002			test	word ptr [bx+2Eh],2
020A:66AE  74 03				jz	loc_1017		; Jump if zero
020A:66B0  E9 D699				jmp	loc_527			; (3D4C)
020A:66B3			loc_1017:
020A:66B3  F7 06 42CE 0020			test	word ptr ds:[42CEh],20h	; (9B68:42CE=0)
020A:66B9  75 0A				jnz	loc_1018		; Jump if not zero
020A:66BB  C6 06 587F 2A			mov	byte ptr ds:[587Fh],2Ah	; (9B68:587F=0) '*'
020A:66C0  C6 06 5A95 2A			mov	byte ptr ds:[5A95h],2Ah	; (9B68:5A95=0) '*'
020A:66C5			loc_1018:
020A:66C5  83 3E 2A24 00			cmp	word ptr ds:[2A24h],0	; (9B68:2A24=0AEA3h)
020A:66CA  75 3E				jne	loc_1021		; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 221

020A:66CC  8B 1E 263F				mov	bx,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:66D0  8C C8				mov	ax,cs
020A:66D2  2D 0010				sub	ax,10h
020A:66D5  06					push	es
020A:66D6  8E C0				mov	es,ax
020A:66D8  B4 4A				mov	ah,4Ah			; 'J'
020A:66DA  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:66DC  07					pop	es
020A:66DD  73 06				jnc	loc_1019		; Jump if carry=0
020A:66DF  B8 0008				mov	ax,8
020A:66E2  E9 D5F4		;*		jmp	loc_519			;*(3CD9)
020A:66E2  E9 F4 D5				db	0E9h,0F4h,0D5h
020A:66E5			loc_1019:
020A:66E5  E8 353E				call	sub_165			; (9C26)
020A:66E8  8C CB				mov	bx,cs
020A:66EA  2B C3				sub	ax,bx
020A:66EC  2B 06 263F				sub	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:66F0  B9 FFFF				mov	cx,0FFFFh
020A:66F3  3D 1000				cmp	ax,1000h
020A:66F6  73 0A				jae	loc_1020		; Jump if above or =
020A:66F8  8B C8				mov	cx,ax
020A:66FA  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:66FC  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:66FE  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6700  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6702			loc_1020:
020A:6702  89 0E 430E				mov	word ptr ds:[430Eh],cx	; (9B68:430E=0)
020A:6706  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:6708  EB 26				jmp	short loc_1023		; (6730)
020A:670A			loc_1021:
020A:670A  E8 3504				call	sub_163			; (9C11)
020A:670D  8C C0				mov	ax,es
020A:670F  8B 0E 2A24				mov	cx,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:6713  2B C8				sub	cx,ax
020A:6715  81 F9 1000				cmp	cx,1000h
020A:6719  76 03				jbe	loc_1022		; Jump if below or =
020A:671B  B9 1000				mov	cx,1000h
020A:671E			loc_1022:
020A:671E  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6720  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6722  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:6724  89 0E 430E				mov	word ptr ds:[430Eh],cx	; (9B68:430E=0)
020A:6728  FF 0E 430E				dec	word ptr ds:[430Eh]	; (9B68:430E=0)
020A:672C  D1 26 430E				shl	word ptr ds:[430Eh],1	; (9B68:430E=0) Shift w/zeros fill
020A:6730			loc_1023:
020A:6730  E8 34DE				call	sub_163			; (9C11)
020A:6733  B8 FFFF				mov	ax,0FFFFh
020A:6736  33 FF				xor	di,di			; Zero register
020A:6738  FC					cld				; Clear direction
020A:6739  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:673B  E8 34D0				call	sub_162			; (9C0E)
020A:673E  B4 2C				mov	ah,2Ch			; ','
020A:6740  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dh=sec
020A:6742  89 0E 42FF				mov	word ptr ds:[42FFh],cx	; (9B68:42FF=0)
020A:6746  89 16 4301				mov	word ptr ds:[4301h],dx	; (9B68:4301=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 222

020A:674A  E8 1FEF				call	sub_123			; (873C)
020A:674D  A0 11E7				mov	al,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:6750  88 47 4C				mov	[bx+4Ch],al
020A:6753  C6 47 4E 07				mov	byte ptr [bx+4Eh],7
020A:6757  C6 47 3F 00				mov	byte ptr [bx+3Fh],0
020A:675B  C6 47 40 00				mov	byte ptr [bx+40h],0
020A:675F  C6 47 56 00				mov	byte ptr [bx+56h],0
020A:6763  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:6767  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:676B  C6 47 72 00				mov	byte ptr [bx+72h],0
020A:676F  C6 47 73 00				mov	byte ptr [bx+73h],0
020A:6773  C6 47 74 00				mov	byte ptr [bx+74h],0
020A:6777  C6 47 75 00				mov	byte ptr [bx+75h],0
020A:677B  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:677F  C6 47 35 00				mov	byte ptr [bx+35h],0
020A:6783  C6 47 36 00				mov	byte ptr [bx+36h],0
020A:6787  E8 35AE				call	sub_167			; (9D38)
020A:678A  B2 00				mov	dl,0
020A:678C			loc_1024:
020A:678C  E8 3476				call	sub_159			; (9C05)
020A:678F  B8 0015				mov	ax,15h
020A:6792  F6 E2				mul	dl			; ax = reg * al
020A:6794  05 0000				add	ax,0
020A:6797  8B D8				mov	bx,ax
020A:6799  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:679D  24 03				and	al,3
020A:679F  3C 02				cmp	al,2
020A:67A1  77 1D				ja	loc_1026		; Jump if above
020A:67A3  26: 8B 07				mov	ax,es:[bx]
020A:67A6  26: 8B 7F 02				mov	di,es:[bx+2]
020A:67AA  26: 8B 4F 04				mov	cx,es:[bx+4]
020A:67AE  8E C0				mov	es,ax
020A:67B0  2B CF				sub	cx,di
020A:67B2  81 F9 03E8				cmp	cx,3E8h
020A:67B6  72 03				jb	loc_1025		; Jump if below
020A:67B8  B9 03E8				mov	cx,3E8h
020A:67BB			loc_1025:
020A:67BB  E8 2B36				call	sub_145			; (92F4)
020A:67BE  72 08				jc	loc_1027		; Jump if carry Set
020A:67C0			loc_1026:
020A:67C0  FE C2				inc	dl
020A:67C2  3A 16 2A2B				cmp	dl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:67C6  76 C4				jbe	loc_1024		; Jump if below or =
020A:67C8			loc_1027:
020A:67C8  E9 9F25				jmp	loc_62			; (06F0)
020A:67CB  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:67D0  74 5A				je	loc_1028		; Jump if equal
020A:67D2  E8 3439				call	sub_162			; (9C0E)
020A:67D5  BF 0358				mov	di,358h
020A:67D8  B9 0021				mov	cx,21h
020A:67DB  B0 20				mov	al,20h			; ' '
020A:67DD  FC					cld				; Clear direction
020A:67DE  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:67E0  E8 1F59				call	sub_123			; (873C)
020A:67E3  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:67E7  C6 47 69 0F				mov	byte ptr [bx+69h],0Fh
020A:67EB  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 223

020A:67EF  C6 47 66 0F				mov	byte ptr [bx+66h],0Fh
020A:67F3  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:67F7  B4 02				mov	ah,2
020A:67F9  32 FF				xor	bh,bh			; Zero register
020A:67FB  BA 0912				mov	dx,912h
020A:67FE  E8 23F3				call	sub_136			; (8BF4)
020A:6801  E8 2250				call	sub_130			; (8A54)
020A:6804  E8 1C29				call	sub_116			; (8430)
020A:6807  BE 0358				mov	si,358h
020A:680A  B1 20				mov	cl,20h			; ' '
020A:680C  B3 01				mov	bl,1
020A:680E  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:680E  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:6813  E8 1F4E				call	sub_124			; (8764)
020A:6816  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:681A  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:681E  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:6822  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:6826  E8 221F				call	sub_129			; (8A48)
020A:6829  E8 1CB0				call	sub_117			; (84DC)
020A:682C			loc_1028:
020A:682C  E9 EC14				jmp	loc_788			; (5443)
020A:682F  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_664+0Eh,0	; (020A:4CE7=4Eh)
020A:6835  74 08				je	loc_1029		; Jump if equal
020A:6837  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:6837  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:683C  E9 EC04				jmp	loc_788			; (5443)
020A:683F			loc_1029:
020A:683F  E8 0016				call	sub_105			; (6858)
020A:6842  80 3E 2BB2 00			cmp	byte ptr ds:[2BB2h],0	; (9B68:2BB2=0A4h)
020A:6847  74 03				je	loc_1030		; Jump if equal
020A:6849  E8 34EC				call	sub_167			; (9D38)
020A:684C			loc_1030:
020A:684C  E8 1F15				call	sub_124			; (8764)
020A:684F  E8 1C8A				call	sub_117			; (84DC)
020A:6852  E9 EBEE				jmp	loc_788			; (5443)
020A:6855  87 DB				xchg	bx,bx
020A:6857  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_105		proc	near
020A:6858  E8 1EE1				call	sub_123			; (873C)
020A:685B  C6 47 53 00				mov	byte ptr [bx+53h],0
020A:685F  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:6863  B4 02				mov	ah,2
020A:6865  E8 1F30				call	sub_125			; (8798)
020A:6868  B4 02				mov	ah,2
020A:686A  32 FF				xor	bh,bh			; Zero register
020A:686C  BA 171A				mov	dx,171Ah
020A:686F  E8 2382				call	sub_136			; (8BF4)
020A:6872  E8 21DF				call	sub_130			; (8A54)
020A:6875  E8 1BB8				call	sub_116			; (8430)
020A:6878  B1 28				mov	cl,28h			; '('
020A:687A  B3 01				mov	bl,1
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 224

020A:687C  BE 07C0				mov	si,7C0h
020A:687F  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:687F  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:6884  B3 28				mov	bl,28h			; '('
020A:6886  2A D9				sub	bl,cl
020A:6888  32 FF				xor	bh,bh			; Zero register
020A:688A  83 FB 00				cmp	bx,0
020A:688D  75 02				jne	loc_1031		; Jump if not equal
020A:688F  EB 78				jmp	short loc_1035		; (6909)
020A:6891			loc_1031:
020A:6891  3C 1B				cmp	al,1Bh
020A:6893  75 02				jne	loc_1032		; Jump if not equal
020A:6895  EB 72				jmp	short loc_1035		; (6909)
020A:6897			loc_1032:
020A:6897  E8 3374				call	sub_162			; (9C0E)
020A:689A  BF 07C0				mov	di,7C0h
020A:689D  B0 20				mov	al,20h			; ' '
020A:689F  8B CB				mov	cx,bx
020A:68A1  FC					cld				; Clear direction
020A:68A2  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:68A4  74 63				jz	loc_1035		; Jump if zero
020A:68A6  BF 07C0				mov	di,7C0h
020A:68A9  B0 20				mov	al,20h			; ' '
020A:68AB  9A 16FA:04A4		;*		call	far ptr sub_238		;*(16FA:04A4)
020A:68AB  9A A4 04 FA 16			db	 9Ah,0A4h, 04h,0FAh, 16h
020A:68B0  9A 16FA:0510		;*		call	far ptr sub_239		;*(16FA:0510)
020A:68B0  9A 10 05 FA 16			db	 9Ah, 10h, 05h,0FAh, 16h
020A:68B5  A2 2C3F				mov	byte ptr ds:[2C3Fh],al	; (9B68:2C3F=0ABh)
020A:68B8  3C 01				cmp	al,1
020A:68BA  76 04				jbe	loc_1033		; Jump if below or =
020A:68BC  3C 0B				cmp	al,0Bh
020A:68BE  76 1C				jbe	loc_1034		; Jump if below or =
020A:68C0			loc_1033:
020A:68C0  B4 10				mov	ah,10h
020A:68C2  E8 1ED3				call	sub_125			; (8798)
020A:68C5  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:68C9  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:68CC  88 47 52				mov	[bx+52h],al
020A:68CF  E8 2176				call	sub_129			; (8A48)
020A:68D2  E8 1B5B				call	sub_116			; (8430)
020A:68D5  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:68D5  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:68DA  EB 2D				jmp	short loc_1035		; (6909)
020A:68DC			loc_1034:
020A:68DC  BF 2BB2				mov	di,2BB2h
020A:68DF  B9 0040				mov	cx,40h
020A:68E2  B0 00				mov	al,0
020A:68E4  FC					cld				; Clear direction
020A:68E5  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:68E7  BF 0629				mov	di,629h
020A:68EA  B9 000C				mov	cx,0Ch
020A:68ED  B0 20				mov	al,20h			; ' '
020A:68EF  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:68F1  BE 07C0				mov	si,7C0h
020A:68F4  BF 2BB2				mov	di,2BB2h
020A:68F7  8B CB				mov	cx,bx
020A:68F9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 225

020A:68FB  4F					dec	di
020A:68FC  9A 16FA:1740		;*		call	far ptr sub_275		;*(16FA:1740)
020A:68FC  9A 40 17 FA 16			db	 9Ah, 40h, 17h,0FAh, 16h
020A:6901  E8 50A0				call	sub_179			; (B9A4)
020A:6904  73 03				jnc	loc_1035		; Jump if carry=0
020A:6906  E9 D3D0		;*		jmp	loc_519			;*(3CD9)
020A:6906  E9 D0 D3				db	0E9h,0D0h,0D3h
020A:6909			loc_1035:
020A:6909  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:690D  E8 1E88				call	sub_125			; (8798)
020A:6910  E8 1E51				call	sub_124			; (8764)
020A:6913  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:6917  C6 47 53 07				mov	byte ptr [bx+53h],7
020A:691B  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:691F  E8 2126				call	sub_129			; (8A48)
020A:6922  E8 1BB7				call	sub_117			; (84DC)
020A:6925  C3					retn
				sub_105		endp
  
020A:6926  80 3E 14AC 01			cmp	byte ptr ds:[14ACh],1	; (020A:14AC=0)
020A:692B  75 07				jne	loc_1036		; Jump if not equal
020A:692D  80 36 14AD 01			xor	data_234,1		; (020A:14AD=0)
020A:6932  EB 09				jmp	short loc_1037		; (693D)
020A:6934			loc_1036:
020A:6934  FE 06 14AD				inc	data_234		; (020A:14AD=0)
020A:6938  80 26 14AD 03			and	data_234,3		; (020A:14AD=0)
020A:693D			loc_1037:
020A:693D  E8 21DC				call	sub_133			; (8B1C)
020A:6940  E8 FB1E				call	sub_101			; (6461)
020A:6943  E8 1B96				call	sub_117			; (84DC)
020A:6946  E9 EAFA				jmp	loc_788			; (5443)
020A:6949  F6 06 2A77 C0			test	byte ptr ds:[2A77h],0C0h	; (ss:2A77=44h)
020A:694E  75 23				jnz	loc_1040		; Jump if not zero
020A:6950  368A			data_690	dw	368Ah
020A:6952  2A79			data_691	dw	2A79h
020A:6954  F6 C6 0F				test	dh,0Fh
020A:6957  74 04				jz	loc_1038		; Jump if zero
020A:6959  B6 00				mov	dh,0
020A:695B  EB 25				jmp	short loc_1042		; (6982)
020A:695D			loc_1038:
020A:695D  B6 01				mov	dh,1
020A:695F  F6 06 2A77 10			test	byte ptr ds:[2A77h],10h	; (ss:2A77=44h)
020A:6964  74 02				jz	loc_1039		; Jump if zero
020A:6966  B6 02				mov	dh,2
020A:6968			loc_1039:
020A:6968  F6 06 2A77 20			test	byte ptr ds:[2A77h],20h	; (ss:2A77=44h) ' '
020A:696D  74 13				jz	loc_1042		; Jump if zero
020A:696F  B6 04				mov	dh,4
020A:6971  EB 0F				jmp	short loc_1042		; (6982)
020A:6973			loc_1040:
020A:6973  F6 06 2A77 40			test	byte ptr ds:[2A77h],40h	; (ss:2A77=44h) '@'
020A:6978  74 04				jz	loc_1041		; Jump if zero
020A:697A  B6 0C				mov	dh,0Ch
020A:697C  EB 04				jmp	short loc_1042		; (6982)
020A:697E			loc_1041:
020A:697E  B6 14				mov	dh,14h
020A:6980  EB 00				jmp	short loc_1042		; (6982)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 226

020A:6982			loc_1042:
020A:6982  88 36 2A79				mov	byte ptr ds:[2A79h],dh	; (ss:2A79=1)
020A:6986  B6 01				mov	dh,1
020A:6988  E8 1CB9				call	sub_122			; (8644)
020A:698B  E9 EAB5				jmp	loc_788			; (5443)
020A:698E  E8 1DAB				call	sub_123			; (873C)
020A:6991  C6 47 68 00				mov	byte ptr [bx+68h],0
020A:6995  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:6999  B4 03				mov	ah,3
020A:699B  E8 1DFA				call	sub_125			; (8798)
020A:699E  B4 02				mov	ah,2
020A:69A0  32 FF				xor	bh,bh			; Zero register
020A:69A2  BA 171A				mov	dx,171Ah
020A:69A5  E8 224C				call	sub_136			; (8BF4)
020A:69A8  E8 20A9				call	sub_130			; (8A54)
020A:69AB  E8 1A82				call	sub_116			; (8430)
020A:69AE  B1 28				mov	cl,28h			; '('
020A:69B0  B3 03				mov	bl,3
020A:69B2  BE 07C0				mov	si,7C0h
020A:69B5  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:69B5  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:69BA  B3 28				mov	bl,28h			; '('
020A:69BC  2A D9				sub	bl,cl
020A:69BE  32 FF				xor	bh,bh			; Zero register
020A:69C0  83 FB 00				cmp	bx,0
020A:69C3  74 13				je	loc_1043		; Jump if equal
020A:69C5  3C 1B				cmp	al,1Bh
020A:69C7  74 0F				je	loc_1043		; Jump if equal
020A:69C9  E8 3242				call	sub_162			; (9C0E)
020A:69CC  BF 07C0				mov	di,7C0h
020A:69CF  B0 20				mov	al,20h			; ' '
020A:69D1  8B CB				mov	cx,bx
020A:69D3  FC					cld				; Clear direction
020A:69D4  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:69D6  75 03				jnz	loc_1044		; Jump if not zero
020A:69D8			loc_1043:
020A:69D8  E9 0086				jmp	loc_1048		; (6A61)
020A:69DB			loc_1044:
020A:69DB  FC					cld				; Clear direction
020A:69DC  BF 2BF5				mov	di,2BF5h
020A:69DF  B9 0029				mov	cx,29h
020A:69E2  B0 00				mov	al,0
020A:69E4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:69E6  BF 034A				mov	di,34Ah
020A:69E9  B9 000C				mov	cx,0Ch
020A:69EC  B0 20				mov	al,20h			; ' '
020A:69EE  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:69F0  BE 07C0				mov	si,7C0h
020A:69F3  BF 2BF5				mov	di,2BF5h
020A:69F6  8B CB				mov	cx,bx
020A:69F8  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:69FA  9A 16FA:0420		;*		call	far ptr sub_237		;*(16FA:0420)
020A:69FA  9A 20 04 FA 16			db	 9Ah, 20h, 04h,0FAh, 16h
020A:69FF  83 C3 04				add	bx,4
020A:6A02  47					inc	di
020A:6A03  8B CB				mov	cx,bx
020A:6A05			loc_1045:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 227

020A:6A05  8A 05				mov	al,[di]
020A:6A07  3C 3A				cmp	al,3Ah			; ':'
020A:6A09  74 0D				je	loc_1046		; Jump if equal
020A:6A0B  3C 5C				cmp	al,5Ch			; '\'
020A:6A0D  74 09				je	loc_1046		; Jump if equal
020A:6A0F  83 F9 01				cmp	cx,1
020A:6A12  76 05				jbe	loc_1047		; Jump if below or =
020A:6A14  49					dec	cx
020A:6A15  4F					dec	di
020A:6A16  EB ED				jmp	short loc_1045		; (6A05)
020A:6A18			loc_1046:
020A:6A18  47					inc	di
020A:6A19			loc_1047:
020A:6A19  2B D9				sub	bx,cx
020A:6A1B  8B CB				mov	cx,bx
020A:6A1D  41					inc	cx
020A:6A1E  83 F9 0C				cmp	cx,0Ch
020A:6A21  77 3E				ja	loc_1048		; Jump if above
020A:6A23  8B F7				mov	si,di
020A:6A25  BF 034A				mov	di,34Ah
020A:6A28  FC					cld				; Clear direction
020A:6A29  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6A2B  80 3E 2BF6 3A			cmp	byte ptr ds:[2BF6h],3Ah	; (9B68:2BF6=0A5h) ':'
020A:6A30  75 2F				jne	loc_1048		; Jump if not equal
020A:6A32  A0 2BF5				mov	al,byte ptr ds:[2BF5h]	; (9B68:2BF5=0A0h)
020A:6A35  24 5F				and	al,5Fh			; '_'
020A:6A37  3C 41				cmp	al,41h			; 'A'
020A:6A39  72 26				jb	loc_1048		; Jump if below
020A:6A3B  3C 5A				cmp	al,5Ah			; 'Z'
020A:6A3D  77 22				ja	loc_1048		; Jump if above
020A:6A3F  8A D0				mov	dl,al
020A:6A41  80 EA 41				sub	dl,41h			; 'A'
020A:6A44  8A DA				mov	bl,dl
020A:6A46  B4 0E				mov	ah,0Eh
020A:6A48  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6A4A  B4 19				mov	ah,19h
020A:6A4C  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:6A4E  A2 2A94				mov	byte ptr ds:[2A94h],al	; (9B68:2A94=20h)
020A:6A51  04 61				add	al,61h			; 'a'
020A:6A53  A2 064E				mov	byte ptr ds:[64Eh],al	; (9B68:064E=0D8h)
020A:6A56  E8 1B33				call	sub_121			; (858C)
020A:6A59  8A 16 2A93				mov	dl,byte ptr ds:[2A93h]	; (9B68:2A93=0A0h)
020A:6A5D  B4 0E				mov	ah,0Eh
020A:6A5F  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6A61			loc_1048:
020A:6A61  E8 1D00				call	sub_124			; (8764)
020A:6A64  C6 47 68 07				mov	byte ptr [bx+68h],7
020A:6A68  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:6A6C  8A 26 2C3E				mov	ah,byte ptr ds:[2C3Eh]	; (9B68:2C3E=0E1h)
020A:6A70  E8 1D25				call	sub_125			; (8798)
020A:6A73  E8 1FD2				call	sub_129			; (8A48)
020A:6A76  E8 1A63				call	sub_117			; (84DC)
020A:6A79  E9 E9C7				jmp	loc_788			; (5443)
020A:6A7C  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 228

020A:6A7F  04 02				add	al,2
020A:6A81  3C 14				cmp	al,14h
020A:6A83  72 02				jb	loc_1049		; Jump if below
020A:6A85  B0 04				mov	al,4
020A:6A87			loc_1049:
020A:6A87  E8 24FA				call	sub_142			; (8F84)
020A:6A8A  E9 E9B6				jmp	loc_788			; (5443)
020A:6A8D			loc_1050:
020A:6A8D  B4 11				mov	ah,11h
020A:6A8F  E9 D31A		;*		jmp	loc_538			;*(3DAC)
020A:6A8F  E9 1A D3				db	0E9h, 1Ah,0D3h
020A:6A92  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:6A95  BB 152C				mov	bx,152Ch
020A:6A98  D7					xlat				; al=[al+[bx]] table
020A:6A99  A2 152A				mov	byte ptr ds:[152Ah],al	; (9B68:152A=20h)
020A:6A9C  E8 20C5				call	sub_134			; (8B64)
020A:6A9F  E8 1A3A				call	sub_117			; (84DC)
020A:6AA2  E9 E99E				jmp	loc_788			; (5443)
020A:6AA5  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:6AAA  74 22				je	loc_1053		; Jump if equal
020A:6AAC  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:6AB0  80 3E 2EBC 00			cmp	byte ptr ds:[2EBCh],0	; (9B68:2EBC=0A0h)
020A:6AB5  74 0B				je	loc_1051		; Jump if equal
020A:6AB7  C6 06 2EBC 00			mov	byte ptr ds:[2EBCh],0	; (9B68:2EBC=0A0h)
020A:6ABC  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:6AC0  EB 09				jmp	short loc_1052		; (6ACB)
020A:6AC2			loc_1051:
020A:6AC2  C6 06 2EBC 01			mov	byte ptr ds:[2EBCh],1	; (9B68:2EBC=0A0h)
020A:6AC7  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020A:6ACB			loc_1052:
020A:6ACB  E8 1A0E				call	sub_117			; (84DC)
020A:6ACE			loc_1053:
020A:6ACE  E9 E972				jmp	loc_788			; (5443)
020A:6AD1  BF 13A1				mov	di,13A1h
020A:6AD4  A0 139E				mov	al,byte ptr ds:[139Eh]	; (9B68:139E=20h)
020A:6AD7  32 C9				xor	cl,cl			; Zero register
020A:6AD9			loc_1054:
020A:6AD9  3A 05				cmp	al,[di]
020A:6ADB  74 0C				je	loc_1055		; Jump if equal
020A:6ADD  FE C1				inc	cl
020A:6ADF  80 F9 08				cmp	cl,8
020A:6AE2  73 05				jae	loc_1055		; Jump if above or =
020A:6AE4  83 C7 0F				add	di,0Fh
020A:6AE7  EB F0				jmp	short loc_1054		; (6AD9)
020A:6AE9			loc_1055:
020A:6AE9  80 F9 07				cmp	cl,7
020A:6AEC  72 03				jb	loc_1056		; Jump if below
020A:6AEE  BF 1392				mov	di,1392h
020A:6AF1			loc_1056:
020A:6AF1  83 C7 0F				add	di,0Fh
020A:6AF4  8A 05				mov	al,[di]
020A:6AF6  A2 139E				mov	byte ptr ds:[139Eh],al	; (9B68:139E=20h)
020A:6AF9  8B 45 0D				mov	ax,[di+0Dh]
020A:6AFC  A3 139F				mov	word ptr ds:[139Fh],ax	; (9B68:139F=2E5Bh)
020A:6AFF  9A 16FA:0648		;*		call	far ptr sub_241		;*(16FA:0648)
020A:6AFF  9A 48 06 FA 16			db	 9Ah, 48h, 06h,0FAh, 16h
020A:6B04  E8 19D5				call	sub_117			; (84DC)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 229

020A:6B07  E9 E939				jmp	loc_788			; (5443)
020A:6B0A  01 02				add	[bp+si],ax
020A:6B0C  04 10				add	al,10h
020A:6B0E  18 20				sbb	[bx+si],ah
020A:6B10  28 40 48				sub	[bx+si+48h],al
020A:6B13  00 80 8A88				add	byte ptr ds:[8A88h][bx+si],al	; (9B68:8A88=0)
020A:6B17  36					db	36h
020A:6B18  77 2A				ja	loc_1060		; Jump if above
020A:6B1A  B8 0000				mov	ax,0
020A:6B1D  56					push	si
020A:6B1E  BE 1ABA				mov	si,1ABAh
020A:6B21			loc_1057:
020A:6B21  2E: 3A 34				cmp	dh,cs:[si]
020A:6B24  74 11				je	loc_1059		; Jump if equal
020A:6B26  46					inc	si
020A:6B27  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:6B2B  74 02				je	loc_1058		; Jump if equal
020A:6B2D  EB F2				jmp	short loc_1057		; (6B21)
020A:6B2F			loc_1058:
020A:6B2F  B6 01				mov	dh,1
020A:6B31  C6 06 2A79 00			mov	byte ptr ds:[2A79h],0	; (9B68:2A79=20h)
020A:6B36  4E					dec	si
020A:6B37			loc_1059:
020A:6B37  46					inc	si
020A:6B38  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:6B3C  75 08				jne	loc_1061		; Jump if not equal
020A:6B3E  BE 1ABA				mov	si,1ABAh
020A:6B41  C6 06 2A79 00			mov	byte ptr ds:[2A79h],0	; (9B68:2A79=20h)
020A:6B46			loc_1061:
020A:6B46  2E: 8A 34				mov	dh,cs:[si]
020A:6B49  5E					pop	si
020A:6B4A  88 36 2A77				mov	byte ptr ds:[2A77h],dh	; (9B68:2A77=0ABh)
020A:6B4E  F6 06 2A79 0F			test	byte ptr ds:[2A79h],0Fh	; (9B68:2A79=20h)
020A:6B53  74 1D				jz	loc_1063		; Jump if zero
020A:6B55  C6 06 2A79 01			mov	byte ptr ds:[2A79h],1	; (9B68:2A79=20h)
020A:6B5A  F6 C6 10				test	dh,10h
020A:6B5D  74 07				jz	loc_1062		; Jump if zero
020A:6B5F  C6 06 2A79 02			mov	byte ptr ds:[2A79h],2	; (9B68:2A79=20h)
020A:6B64  EB 0C				jmp	short loc_1063		; (6B72)
020A:6B66			loc_1062:
020A:6B66  F6 C6 20				test	dh,20h			; ' '
020A:6B69  74 07				jz	loc_1063		; Jump if zero
020A:6B6B  C6 06 2A79 04			mov	byte ptr ds:[2A79h],4	; (9B68:2A79=20h)
020A:6B70  EB 18				jmp	short loc_1064		; (6B8A)
020A:6B72			loc_1063:
020A:6B72  F6 06 2A77 C0			test	byte ptr ds:[2A77h],0C0h	; (9B68:2A77=0ABh)
020A:6B77  74 11				jz	loc_1064		; Jump if zero
020A:6B79  C6 06 2A79 0C			mov	byte ptr ds:[2A79h],0Ch	; (9B68:2A79=20h)
020A:6B7E  F6 06 2A77 80			test	byte ptr ds:[2A77h],80h	; (9B68:2A77=0ABh)
020A:6B83  74 05				jz	loc_1064		; Jump if zero
020A:6B85  C6 06 2A79 14			mov	byte ptr ds:[2A79h],14h	; (9B68:2A79=20h)
020A:6B8A			loc_1064:
020A:6B8A  B6 01				mov	dh,1
020A:6B8C  E8 1AB5				call	sub_122			; (8644)
020A:6B8F  E9 E8B1				jmp	loc_788			; (5443)
020A:6B92  80 3E 2EB8 00			cmp	byte ptr ds:[2EB8h],0	; (9B68:2EB8=0AAh)
020A:6B97  74 07				je	loc_1065		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 230

020A:6B99  C6 06 2EB8 00			mov	byte ptr ds:[2EB8h],0	; (9B68:2EB8=0AAh)
020A:6B9E  EB 05				jmp	short loc_1066		; (6BA5)
020A:6BA0			loc_1065:
020A:6BA0  C6 06 2EB8 60			mov	byte ptr ds:[2EB8h],60h	; (9B68:2EB8=0AAh) '`'
020A:6BA5			loc_1066:
020A:6BA5  E8 F8B9				call	sub_101			; (6461)
020A:6BA8  E8 1931				call	sub_117			; (84DC)
020A:6BAB  E9 E895				jmp	loc_788			; (5443)
020A:6BAE  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:6BB3  74 23				je	loc_1069		; Jump if equal
020A:6BB5  8A 1E 430B				mov	bl,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:6BB9  F6 C3 07				test	bl,7
020A:6BBC  74 07				jz	loc_1067		; Jump if zero
020A:6BBE  C6 06 430B 00			mov	byte ptr ds:[430Bh],0	; (9B68:430B=0)
020A:6BC3  EB 0D				jmp	short loc_1068		; (6BD2)
020A:6BC5			loc_1067:
020A:6BC5  80 0E 430B 07			or	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:6BCA  B0 0A				mov	al,0Ah
020A:6BCC  E8 23B5				call	sub_142			; (8F84)
020A:6BCF  E9 E871				jmp	loc_788			; (5443)
020A:6BD2			loc_1068:
020A:6BD2  E8 1F03				call	sub_132			; (8AD8)
020A:6BD5  E9 E86B				jmp	loc_788			; (5443)
020A:6BD8			loc_1069:
020A:6BD8  E9 E8B4				jmp	loc_793			; (548F)
020A:6BDB  E8 1B5E				call	sub_123			; (873C)
020A:6BDE  B4 18				mov	ah,18h
020A:6BE0  E8 1BB5				call	sub_125			; (8798)
020A:6BE3  E8 18F6				call	sub_117			; (84DC)
020A:6BE6  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:6BE6  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:6BEB  2C 30				sub	al,30h			; '0'
020A:6BED  3C 3F				cmp	al,3Fh			; '?'
020A:6BEF  77 2F				ja	loc_1070		; Jump if above
020A:6BF1  A2 2EB1				mov	byte ptr ds:[2EB1h],al	; (9B68:2EB1=0A0h)
020A:6BF4  50					push	ax
020A:6BF5  51					push	cx
020A:6BF6  57					push	di
020A:6BF7  06					push	es
020A:6BF8  1E					push	ds
020A:6BF9  07					pop	es
020A:6BFA  B9 001D				mov	cx,1Dh
020A:6BFD  B0 20				mov	al,20h			; ' '
020A:6BFF  BF 06E8				mov	di,6E8h
020A:6C02  FC					cld				; Clear direction
020A:6C03  F3/ AA		data_694	db	0AAh
020A:6C05  BD 06FC				mov	bp,6FCh
020A:6C08  A1 430E				mov	ax,word ptr ds:[430Eh]	; (9B68:430E=0)
020A:6C0B  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:6C0B  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:6C10  8B 3E 1306				mov	di,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:6C14  C6 45 5D 07				mov	byte ptr [di+5Dh],7
020A:6C18  07					pop	es
020A:6C19  5F					pop	di
020A:6C1A  59					pop	cx
020A:6C1B  58					pop	ax
020A:6C1C  A8 08				test	al,8
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 231

020A:6C1E  75 03				jnz	loc_1071		; Jump if not zero
020A:6C20			loc_1070:
020A:6C20  E9 008F				jmp	loc_1072		; (6CB2)
020A:6C23			loc_1071:
020A:6C23  80 26 2EB1 F7			and	byte ptr ds:[2EB1h],0F7h	; (9B68:2EB1=0A0h)
020A:6C28  B4 23				mov	ah,23h			; '#'
020A:6C2A  E8 1B6B				call	sub_125			; (8798)
020A:6C2D  B4 02				mov	ah,2
020A:6C2F  32 FF				xor	bh,bh			; Zero register
020A:6C31  BA 1710				mov	dx,1710h
020A:6C34  E8 1FBD				call	sub_136			; (8BF4)
020A:6C37  E8 1E1A				call	sub_130			; (8A54)
020A:6C3A  E8 17F3				call	sub_116			; (8430)
020A:6C3D  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:6C3D  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:6C42  8A D0				mov	dl,al
020A:6C44  2C 30				sub	al,30h			; '0'
020A:6C46  3C 10				cmp	al,10h
020A:6C48  77 68				ja	loc_1072		; Jump if above
020A:6C4A  D0 E0				shl	al,1			; Shift w/zeros fill
020A:6C4C  A2 2EB2				mov	byte ptr ds:[2EB2h],al	; (9B68:2EB2=0A1h)
020A:6C4F  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:6C4F  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:6C54  B4 02				mov	ah,2
020A:6C56  32 FF				xor	bh,bh			; Zero register
020A:6C58  BA 1727				mov	dx,1727h
020A:6C5B  E8 1F96				call	sub_136			; (8BF4)
020A:6C5E  B1 04				mov	cl,4
020A:6C60  B3 02				mov	bl,2
020A:6C62  BE 07CD				mov	si,7CDh
020A:6C65  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:6C65  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:6C6A  3C 1B				cmp	al,1Bh
020A:6C6C  74 44				je	loc_1072		; Jump if equal
020A:6C6E  80 F9 00				cmp	cl,0
020A:6C71  75 3F				jne	loc_1072		; Jump if not equal
020A:6C73  B9 0080				mov	cx,80h
020A:6C76  BF 07CD				mov	di,7CDh
020A:6C79  E8 ECBC				call	sub_95			; (5938)
020A:6C7C  73 34				jnc	loc_1072		; Jump if carry=0
020A:6C7E  89 16 2EB3				mov	word ptr ds:[2EB3h],dx	; (9B68:2EB3=0E0AEh)
020A:6C82  B2 3A				mov	dl,3Ah			; ':'
020A:6C84  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:6C84  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:6C89  B1 04				mov	cl,4
020A:6C8B  B3 02				mov	bl,2
020A:6C8D  BE 07D2				mov	si,7D2h
020A:6C90  9A 16FA:02B0		;*		call	far ptr sub_232		;*(16FA:02B0)
020A:6C90  9A B0 02 FA 16			db	 9Ah,0B0h, 02h,0FAh, 16h
020A:6C95  3C 1B				cmp	al,1Bh
020A:6C97  74 19				je	loc_1072		; Jump if equal
020A:6C99  80 F9 00				cmp	cl,0
020A:6C9C  75 14				jne	loc_1072		; Jump if not equal
020A:6C9E  B9 0080				mov	cx,80h
020A:6CA1  BF 07D2				mov	di,7D2h
020A:6CA4  E8 EC91				call	sub_95			; (5938)
020A:6CA7  73 09				jnc	loc_1072		; Jump if carry=0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 232

020A:6CA9  89 16 2EB5				mov	word ptr ds:[2EB5h],dx	; (9B68:2EB5=202Ch)
020A:6CAD  80 0E 2EB1 08			or	byte ptr ds:[2EB1h],8	; (9B68:2EB1=0A0h)
020A:6CB2			loc_1072:
020A:6CB2  E8 1D93				call	sub_129			; (8A48)
020A:6CB5  E8 1AAC				call	sub_124			; (8764)
020A:6CB8  E9 E76A				jmp	loc_787			; (5425)
020A:6CBB			loc_1073:
020A:6CBB  FF2E			data_695	dw	0FF2Eh
020A:6CBD  6336			data_696	dw	6336h
020A:6CBF  0648			data_697	dw	648h
020A:6CC1  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:6CC6  3575			data_700	dw	3575h			; Data table (indexed access)
020A:6CC8  B4 02				mov	ah,2
020A:6CCA  32 FF				xor	bh,bh			; Zero register
020A:6CCC  BA 0500				mov	dx,500h
020A:6CCF  E8 1F22				call	sub_136			; (8BF4)
020A:6CD2  BE 0053				mov	si,53h
020A:6CD5  B9 0643				mov	cx,643h
020A:6CD8  81 E9 0053				sub	cx,53h
020A:6CDC  49					dec	cx
020A:6CDD  E8 2F31				call	sub_163			; (9C11)
  
020A:6CE0			locloop_1074:
020A:6CE0  26: 8A 14				mov	dl,es:[si]
020A:6CE3  80 EA 24				sub	dl,24h			; '$'
020A:6CE6  80 FA 23				cmp	dl,23h			; '#'
020A:6CE9  74 05				je	loc_1075		; Jump if equal
020A:6CEB  80 FA 40				cmp	dl,40h			; '@'
020A:6CEE  75 02				jne	loc_1076		; Jump if not equal
020A:6CF0			loc_1075:
020A:6CF0  B2 20				mov	dl,20h			; ' '
020A:6CF2			loc_1076:
020A:6CF2  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:6CF2  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:6CF7  46					inc	si
020A:6CF8  E2 E6				loop	locloop_1074		; Loop if cx > 0
  
020A:6CFA  E9 00AD				jmp	loc_1085		; (6DAA)
020A:6CFD			loc_1077:
020A:6CFD  8B 16 12FB				mov	dx,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:6D01  8E C2				mov	es,dx
020A:6D03  BF 0320				mov	di,320h
020A:6D06  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:6D0A  BE 0053				mov	si,53h
020A:6D0D  B9 0643				mov	cx,643h
020A:6D10  81 E9 0053				sub	cx,53h
020A:6D14  E8 17D9				call	sub_118			; (84F0)
020A:6D17  B0 20				mov	al,20h			; ' '
020A:6D19  B7 07				mov	bh,7
020A:6D1B  E8 2EDE				call	sub_158			; (9BFC)
  
020A:6D1E			locloop_1078:
020A:6D1E  8A DF				mov	bl,bh
020A:6D20  80 3C 64				cmp	byte ptr [si],64h	; 'd'
020A:6D23  75 06				jne	loc_1079		; Jump if not equal
020A:6D25  B7 0F				mov	bh,0Fh
020A:6D27  8A DF				mov	bl,bh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 233

020A:6D29  EB 0E				jmp	short loc_1080		; (6D39)
020A:6D2B			loc_1079:
020A:6D2B  80 3C 47				cmp	byte ptr [si],47h	; 'G'
020A:6D2E  75 13				jne	loc_1081		; Jump if not equal
020A:6D30  1E					push	ds
020A:6D31  E8 2EC5				call	sub_157			; (9BF9)
020A:6D34  8A 1E 11E7				mov	bl,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:6D38  1F					pop	ds
020A:6D39			loc_1080:
020A:6D39  FC					cld				; Clear direction
020A:6D3A  AA					stosb				; Store al to es:[di]
020A:6D3B  46					inc	si
020A:6D3C  26: 88 1D				mov	es:[di],bl
020A:6D3F  47					inc	di
020A:6D40  49					dec	cx
020A:6D41  EB 0E				jmp	short loc_1082		; (6D51)
020A:6D43			loc_1081:
020A:6D43  80 3C A4				cmp	byte ptr [si],0A4h
020A:6D46  72 09				jb	loc_1082		; Jump if below
020A:6D48  1E					push	ds
020A:6D49  E8 2EAD				call	sub_157			; (9BF9)
020A:6D4C  8A 1E 11E6				mov	bl,byte ptr ds:[11E6h]	; (9B68:11E6=0ADh)
020A:6D50  1F					pop	ds
020A:6D51			loc_1082:
020A:6D51  FC					cld				; Clear direction
020A:6D52  50					push	ax
020A:6D53  AC					lodsb				; String [si] to al
020A:6D54  2C 24				sub	al,24h			; '$'
020A:6D56  AA					stosb				; Store al to es:[di]
020A:6D57  58					pop	ax
020A:6D58  26: 88 1D				mov	es:[di],bl
020A:6D5B  47					inc	di
020A:6D5C  E2 C0				loop	locloop_1078		; Loop if cx > 0
  
020A:6D5E  BE 0021				mov	si,21h
020A:6D61  B9 003A				mov	cx,3Ah
020A:6D64  81 E9 0021				sub	cx,21h
020A:6D68  BF 014B				mov	di,14Bh
020A:6D6B  81 EF 0076				sub	di,76h
020A:6D6F  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6D71  1E					push	ds
020A:6D72  E8 2E84				call	sub_157			; (9BF9)
020A:6D75  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:6D79  1F					pop	ds
020A:6D7A  FC					cld				; Clear direction
  
020A:6D7B			locloop_1083:
020A:6D7B  A4					movsb				; Mov [si] to es:[di]
020A:6D7C  47					inc	di
020A:6D7D  E2 FC				loop	locloop_1083		; Loop if cx > 0
  
020A:6D7F  BE 003A				mov	si,3Ah
020A:6D82  B9 003A				mov	cx,3Ah
020A:6D85  81 E9 0021				sub	cx,21h
020A:6D89  BF 014B				mov	di,14Bh
020A:6D8C  81 EF 0076				sub	di,76h
020A:6D90  D1 E7				shl	di,1			; Shift w/zeros fill
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 234

020A:6D92  81 C7 00A0				add	di,0A0h
020A:6D96  1E					push	ds
020A:6D97  E8 2E5F				call	sub_157			; (9BF9)
020A:6D9A  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:6D9E  1F					pop	ds
020A:6D9F  FC					cld				; Clear direction
  
020A:6DA0			locloop_1084:
020A:6DA0  A4					movsb				; Mov [si] to es:[di]
020A:6DA1  47					inc	di
020A:6DA2  E2 FC				loop	locloop_1084		; Loop if cx > 0
  
020A:6DA4  E8 2E52				call	sub_157			; (9BF9)
020A:6DA7  E8 176A				call	sub_119			; (8514)
020A:6DAA			loc_1085:
020A:6DAA  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:6DAA  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:6DAF  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:6DB4  5A					pop	dx
020A:6DB5  8E C2				mov	es,dx
020A:6DB7  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:6DBC  5A					pop	dx
020A:6DBD  75 0A				jnz	loc_1086		; Jump if not zero
020A:6DBF  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:6DC4  74 03				je	loc_1086		; Jump if equal
020A:6DC6  E8 311B				call	sub_168			; (9EE4)
020A:6DC9			loc_1086:
020A:6DC9  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:6DCE  E9 E654				jmp	loc_787			; (5425)
020A:6DD1  000F[00]				db	15 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_106		proc	near
020A:6DE0  F7 06 2EC4 0008			test	word ptr ds:[2EC4h],8	; (9B68:2EC4=0ADA8h)
020A:6DE6  75 02				jnz	loc_1087		; Jump if not zero
020A:6DE8  EB 71				jmp	short loc_1091		; (6E5B)
020A:6DEA			loc_1087:
020A:6DEA  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:6DF0  75 08				jne	loc_1088		; Jump if not equal
020A:6DF2  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_664+0Eh,0	; (020A:4CE7=4Eh)
020A:6DF8  74 61				je	loc_1091		; Jump if equal
020A:6DFA			loc_1088:
020A:6DFA  50					push	ax
020A:6DFB  53					push	bx
020A:6DFC  51					push	cx
020A:6DFD  52					push	dx
020A:6DFE  56					push	si
020A:6DFF  57					push	di
020A:6E00  55					push	bp
020A:6E01  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:6E06  1E					push	ds
020A:6E07  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:6E0C  06					push	es
020A:6E0D  BB 1E0C				mov	bx,1E0Ch
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 235

020A:6E10  BA 0007				mov	dx,7
020A:6E13  E8 DAAA		;*		call	sub_76			;*(48C0)
020A:6E13  E8 AA DA				db	0E8h,0AAh,0DAh
020A:6E16  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:6E1B  5A					pop	dx
020A:6E1C  8E C2				mov	es,dx
020A:6E1E  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:6E23  5A					pop	dx
020A:6E24  75 0A				jnz	loc_1089		; Jump if not zero
020A:6E26  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:6E2B  74 03				je	loc_1089		; Jump if equal
020A:6E2D  E8 30B4				call	sub_168			; (9EE4)
020A:6E30			loc_1089:
020A:6E30  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:6E35  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:6E3A  5A					pop	dx
020A:6E3B  8E DA				mov	ds,dx
020A:6E3D  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:6E42  5A					pop	dx
020A:6E43  75 0A				jnz	loc_1090		; Jump if not zero
020A:6E45  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:6E4A  74 03				je	loc_1090		; Jump if equal
020A:6E4C  E8 3095				call	sub_168			; (9EE4)
020A:6E4F			loc_1090:
020A:6E4F  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:6E54  5D					pop	bp
020A:6E55  5F					pop	di
020A:6E56  5E					pop	si
020A:6E57  5A					pop	dx
020A:6E58  59					pop	cx
020A:6E59  5B					pop	bx
020A:6E5A  58					pop	ax
020A:6E5B			loc_1091:
020A:6E5B  C3					retn
				sub_106		endp
  
020A:6E5C  50					push	ax
020A:6E5D  53					push	bx
020A:6E5E  51					push	cx
020A:6E5F  52					push	dx
020A:6E60  56					push	si
020A:6E61  57					push	di
020A:6E62  55					push	bp
020A:6E63  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:6E68  1E					push	ds
020A:6E69  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:6E6E  06					push	es
020A:6E6F  26: 8B 2E 0000			mov	bp,word ptr es:[0]	; (D233:0000=0)
020A:6E74  BE 0008				mov	si,8
020A:6E77  E8 2D7F				call	sub_157			; (9BF9)
020A:6E7A  83 3E 2A82 06			cmp	word ptr ds:[2A82h],6	; (9B68:2A82=0A5A2h)
020A:6E7F  76 02				jbe	loc_1092		; Jump if below or =
020A:6E81  EB 77				jmp	short loc_1101		; (6EFA)
020A:6E83			loc_1092:
020A:6E83  BF 6C4B				mov	di,6C4Bh
020A:6E86  BB 377F				mov	bx,377Fh
020A:6E89  26: 8A 44 05				mov	al,es:[si+5]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 236

020A:6E8D  25 000F				and	ax,0Fh
020A:6E90  D7					xlat				; al=[al+[bx]] table
020A:6E91  0A C0				or	al,al			; Zero ?
020A:6E93  75 04				jnz	loc_1093		; Jump if not zero
020A:6E95  26: 8A 44 06				mov	al,es:[si+6]
020A:6E99			loc_1093:
020A:6E99  3D 0006				cmp	ax,6
020A:6E9C  77 03				ja	loc_1094		; Jump if above
020A:6E9E  E9 009F				jmp	loc_1104		; (6F40)
020A:6EA1			loc_1094:
020A:6EA1  8B C8				mov	cx,ax
020A:6EA3  26: 8A 44 05				mov	al,es:[si+5]
020A:6EA7  24 0C				and	al,0Ch
020A:6EA9  83 FE 08				cmp	si,8
020A:6EAC  75 02				jne	loc_1095		; Jump if not equal
020A:6EAE  8A D0				mov	dl,al
020A:6EB0			loc_1095:
020A:6EB0  BF 6C5A				mov	di,6C5Ah
020A:6EB3  3A C2				cmp	al,dl
020A:6EB5  74 03				je	loc_1096		; Jump if equal
020A:6EB7  E9 0086				jmp	loc_1104		; (6F40)
020A:6EBA			loc_1096:
020A:6EBA  3C 08				cmp	al,8
020A:6EBC  74 0A				je	loc_1097		; Jump if equal
020A:6EBE  3C 04				cmp	al,4
020A:6EC0  74 06				je	loc_1097		; Jump if equal
020A:6EC2  3C 00				cmp	al,0
020A:6EC4  74 02				je	loc_1097		; Jump if equal
020A:6EC6  EB 78				jmp	short loc_1104		; (6F40)
020A:6EC8			loc_1097:
020A:6EC8  BF 6C2D				mov	di,6C2Dh
020A:6ECB  26: 8B 1C				mov	bx,es:[si]
020A:6ECE  26: 8B 44 02				mov	ax,es:[si+2]
020A:6ED2  83 FB FF				cmp	bx,0FFFFh
020A:6ED5  75 07				jne	loc_1098		; Jump if not equal
020A:6ED7  3D FFFF				cmp	ax,0FFFFh
020A:6EDA  75 02				jne	loc_1098		; Jump if not equal
020A:6EDC  EB 13				jmp	short loc_1100		; (6EF1)
020A:6EDE			loc_1098:
020A:6EDE  03 F1				add	si,cx
020A:6EE0  26: 3B 1C				cmp	bx,es:[si]
020A:6EE3  72 0A				jb	loc_1099		; Jump if below
020A:6EE5  77 59				ja	loc_1104		; Jump if above
020A:6EE7  26: 3B 44 02				cmp	ax,es:[si+2]
020A:6EEB  76 02				jbe	loc_1099		; Jump if below or =
020A:6EED  77 51				ja	loc_1104		; Jump if above
020A:6EEF			loc_1099:
020A:6EEF  EB 92				jmp	short loc_1092		; (6E83)
020A:6EF1			loc_1100:
020A:6EF1  BF 6C3C				mov	di,6C3Ch
020A:6EF4  03 F1				add	si,cx
020A:6EF6  3B F5				cmp	si,bp
020A:6EF8  75 46				jne	loc_1104		; Jump if not equal
020A:6EFA			loc_1101:
020A:6EFA  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:6EFF  5A					pop	dx
020A:6F00  8E C2				mov	es,dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 237

020A:6F02  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:6F07  5A					pop	dx
020A:6F08  75 0A				jnz	loc_1102		; Jump if not zero
020A:6F0A  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:6F0F  74 03				je	loc_1102		; Jump if equal
020A:6F11  E8 2FD0				call	sub_168			; (9EE4)
020A:6F14			loc_1102:
020A:6F14  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:6F19  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:6F1E  5A					pop	dx
020A:6F1F  8E DA				mov	ds,dx
020A:6F21  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:6F26  5A					pop	dx
020A:6F27  75 0A				jnz	loc_1103		; Jump if not zero
020A:6F29  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:6F2E  74 03				je	loc_1103		; Jump if equal
020A:6F30  E8 2FB1				call	sub_168			; (9EE4)
020A:6F33			loc_1103:
020A:6F33  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:6F38  5D					pop	bp
020A:6F39  5F					pop	di
020A:6F3A  5E					pop	si
020A:6F3B  5A					pop	dx
020A:6F3C  59					pop	cx
020A:6F3D  5B					pop	bx
020A:6F3E  58					pop	ax
020A:6F3F  C3					retn
020A:6F40			loc_1104:
020A:6F40  E8 2CB6				call	sub_157			; (9BF9)
020A:6F43  56					push	si
020A:6F44  BD 2432				mov	bp,2432h
020A:6F47  80 FA 08				cmp	dl,8
020A:6F4A  74 0F				je	loc_1105		; Jump if equal
020A:6F4C  80 FA 04				cmp	dl,4
020A:6F4F  74 0F				je	loc_1106		; Jump if equal
020A:6F51  80 FA 00				cmp	dl,0
020A:6F54  74 0F				je	loc_1107		; Jump if equal
020A:6F56  BE 6C01				mov	si,6C01h
020A:6F59  EB 0F				jmp	short loc_1108		; (6F6A)
020A:6F5B			loc_1105:
020A:6F5B  BE 6BF6				mov	si,6BF6h
020A:6F5E  EB 0A				jmp	short loc_1108		; (6F6A)
020A:6F60			loc_1106:
020A:6F60  BE 6BE0				mov	si,6BE0h
020A:6F63  EB 05				jmp	short loc_1108		; (6F6A)
020A:6F65			loc_1107:
020A:6F65  BE 6BEB				mov	si,6BEBh
020A:6F68  EB 00				jmp	short loc_1108		; (6F6A)
020A:6F6A			loc_1108:
020A:6F6A  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:6F6A  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:6F6F  BD 243D				mov	bp,243Dh
020A:6F72  8C C0				mov	ax,es
020A:6F74  2E: 3B 06 4861			cmp	ax,cs:data_648		; (020A:4861=0D233h)
020A:6F79  75 09				jne	loc_1109		; Jump if not equal
020A:6F7B  BE 6C17				mov	si,6C17h
020A:6F7E  2E: A1 4863				mov	ax,cs:data_649		; (020A:4863=0B9E8h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 238

020A:6F82  EB 03				jmp	short loc_1110		; (6F87)
020A:6F84			loc_1109:
020A:6F84  BE 6C22				mov	si,6C22h
020A:6F87			loc_1110:
020A:6F87  50					push	ax
020A:6F88  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:6F88  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:6F8D  58					pop	ax
020A:6F8E  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:6F8E  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:6F93  5E					pop	si
020A:6F94  8B C6				mov	ax,si
020A:6F96  BD 2457				mov	bp,2457h
020A:6F99  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:6F99  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:6F9E  BD 245E				mov	bp,245Eh
020A:6FA1  A0 263B				mov	al,data_300		; (020A:263B=3Eh)
020A:6FA4  9A 16FA:0078		;*		call	far ptr sub_225		;*(16FA:0078)
020A:6FA4  9A 78 00 FA 16			db	 9Ah, 78h, 00h,0FAh, 16h
020A:6FA9  8B F7				mov	si,di
020A:6FAB  BD 2461				mov	bp,2461h
020A:6FAE  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:6FAE  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:6FB3  E9 CDDD				jmp	loc_535			; (3D93)
020A:6FB6  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_107		proc	near
020A:6FB8  C3					retn
				sub_107		endp
  
020A:6FB9  0007[00]				db	7 dup (0)
020A:6FC0			loc_1111:
020A:6FC0  B4 2A				mov	ah,2Ah			; '*'
020A:6FC2  E8 17D3				call	sub_125			; (8798)
020A:6FC5  E8 1468				call	sub_116			; (8430)
020A:6FC8  BA 37AA				mov	dx,37AAh
020A:6FCB  B4 3D				mov	ah,3Dh			; '='
020A:6FCD  B0 00				mov	al,0
020A:6FCF  B9 0000				mov	cx,0
020A:6FD2  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:6FD4  73 14				jnc	loc_1114		; Jump if carry=0
020A:6FD6  80 3E 2C3F 01			cmp	byte ptr ds:[2C3Fh],1	; (9B68:2C3F=0ABh)
020A:6FDB  77 0A				ja	loc_1113		; Jump if above
020A:6FDD  75 05				jnz	loc_1112		; Jump if not zero
020A:6FDF  B3 01				mov	bl,1
020A:6FE1  E9 CC11		;*		jmp	loc_495			;*(3BF5)
020A:6FE1  E9 11 CC				db	0E9h, 11h,0CCh
020A:6FE4			loc_1112:
020A:6FE4  E9 E43E				jmp	loc_787			; (5425)
020A:6FE7			loc_1113:
020A:6FE7  E9 E433				jmp	loc_786			; (541D)
020A:6FEA			loc_1114:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 239

020A:6FEA  A3 37EA				mov	word ptr ds:[37EAh],ax	; (9B68:37EA=3002h)
020A:6FED  C6 06 2A2B 00			mov	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:6FF2  C6 06 38AE FF			mov	byte ptr ds:[38AEh],0FFh	; (9B68:38AE=0)
020A:6FF7  FF 06 38AC				inc	word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:6FFB  E8 2C10				call	sub_162			; (9C0E)
020A:6FFE			loc_1115:
020A:6FFE  80 3E 386E 01			cmp	byte ptr ds:[386Eh],1	; (9B68:386E=0)
020A:7003  74 24				je	loc_1117		; Jump if equal
020A:7005  C6 06 386E 00			mov	byte ptr ds:[386Eh],0	; (9B68:386E=0)
020A:700A  B4 3F				mov	ah,3Fh			; '?'
020A:700C  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:7010  B9 0080				mov	cx,80h
020A:7013  BA 37EE				mov	dx,37EEh
020A:7016  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:7018  73 05				jnc	loc_1116		; Jump if carry=0
020A:701A  B3 0E				mov	bl,0Eh
020A:701C  E9 0C12				jmp	loc_1292		; (7C31)
020A:701F			loc_1116:
020A:701F  3D 0080				cmp	ax,80h
020A:7022  74 44				je	loc_1120		; Jump if equal
020A:7024  3D 0000				cmp	ax,0
020A:7027  75 03				jne	loc_1118		; Jump if not equal
020A:7029			loc_1117:
020A:7029  E9 0C0B				jmp	loc_1294		; (7C37)
020A:702C			loc_1118:
020A:702C  C6 06 386E 01			mov	byte ptr ds:[386Eh],1	; (9B68:386E=0)
020A:7031  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:7036  06					push	es
020A:7037  E8 2BD4				call	sub_162			; (9C0E)
020A:703A  BF 37EE				mov	di,37EEh
020A:703D  03 F8				add	di,ax
020A:703F  B9 0080				mov	cx,80h
020A:7042  2B C8				sub	cx,ax
020A:7044  B0 20				mov	al,20h			; ' '
020A:7046  FC					cld				; Clear direction
020A:7047  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:7049  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:704E  5A					pop	dx
020A:704F  8E C2				mov	es,dx
020A:7051  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:7056  5A					pop	dx
020A:7057  75 0A				jnz	loc_1119		; Jump if not zero
020A:7059  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:705E  74 03				je	loc_1119		; Jump if equal
020A:7060  E8 2E81				call	sub_168			; (9EE4)
020A:7063			loc_1119:
020A:7063  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:7068			loc_1120:
020A:7068  BF 37EE				mov	di,37EEh
020A:706B  B9 0080				mov	cx,80h
020A:706E			loc_1121:
020A:706E  80 3E 38AE FF			cmp	byte ptr ds:[38AEh],0FFh	; (9B68:38AE=0)
020A:7073  75 06				jne	loc_1122		; Jump if not equal
020A:7075  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7079  EB 3A				jmp	short loc_1125		; (70B5)
020A:707B			loc_1122:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 240

020A:707B  B0 0A				mov	al,0Ah
020A:707D  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:7082  06					push	es
020A:7083  E8 2B88				call	sub_162			; (9C0E)
020A:7086  FC					cld				; Clear direction
020A:7087  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:7089  9C					pushf				; Push flags
020A:708A  5D					pop	bp
020A:708B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:7090  5A					pop	dx
020A:7091  8E C2				mov	es,dx
020A:7093  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:7098  5A					pop	dx
020A:7099  75 0A				jnz	loc_1123		; Jump if not zero
020A:709B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:70A0  74 03				je	loc_1123		; Jump if equal
020A:70A2  E8 2E3F				call	sub_168			; (9EE4)
020A:70A5			loc_1123:
020A:70A5  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:70AA  55					push	bp
020A:70AB  9D					popf				; Pop flags
020A:70AC  74 03				jz	loc_1124		; Jump if zero
020A:70AE  E9 FF4D				jmp	loc_1115		; (6FFE)
020A:70B1			loc_1124:
020A:70B1  FF 06 38AC				inc	word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:70B5			loc_1125:
020A:70B5  51					push	cx
020A:70B6  57					push	di
020A:70B7  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:70BC  06					push	es
020A:70BD  A1 38AC				mov	ax,word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:70C0  B3 01				mov	bl,1
020A:70C2  BD 21F3				mov	bp,21F3h
020A:70C5  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:70C5  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:70CA  B9 0005				mov	cx,5
020A:70CD  8E 06 12FB				mov	es,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:70D1  BD 21F3				mov	bp,21F3h
020A:70D4  BF 07A9				mov	di,7A9h
020A:70D7  81 EF 0076				sub	di,76h
020A:70DB  81 C7 21F3				add	di,21F3h
020A:70DF  81 EF 21D5				sub	di,21D5h
020A:70E3  D1 E7				shl	di,1			; Shift w/zeros fill
  
020A:70E5			locloop_1126:
020A:70E5  1E					push	ds
020A:70E6  E8 2B10				call	sub_157			; (9BF9)
020A:70E9  3E: 8A 66 00				mov	ah,ds:[bp]
020A:70ED  1F					pop	ds
020A:70EE  E8 143F				call	sub_120			; (8530)
020A:70F1  45					inc	bp
020A:70F2  47					inc	di
020A:70F3  47					inc	di
020A:70F4  E2 EF				loop	locloop_1126		; Loop if cx > 0
  
020A:70F6  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:70FB  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 241

020A:70FC  8E C2				mov	es,dx
020A:70FE  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:7103  5A					pop	dx
020A:7104  75 0A				jnz	loc_1127		; Jump if not zero
020A:7106  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:710B  74 03				je	loc_1127		; Jump if equal
020A:710D  E8 2DD4				call	sub_168			; (9EE4)
020A:7110			loc_1127:
020A:7110  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:7115  5F					pop	di
020A:7116  59					pop	cx
020A:7117  81 FF 386E				cmp	di,386Eh
020A:711B  72 11				jb	loc_1128		; Jump if below
020A:711D  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:711D  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:7122  73 0A				jnc	loc_1128		; Jump if carry=0
020A:7124  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7129  73 19				jae	loc_1129		; Jump if above or =
020A:712B  E9 0AFE				jmp	loc_1291		; (7C2C)
020A:712E			loc_1128:
020A:712E  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7131  74 14				je	loc_1130		; Jump if equal
020A:7133  80 3D 09				cmp	byte ptr [di],9
020A:7136  74 0F				je	loc_1130		; Jump if equal
020A:7138  80 3D 0D				cmp	byte ptr [di],0Dh
020A:713B  74 0A				je	loc_1130		; Jump if equal
020A:713D  80 3D 1A				cmp	byte ptr [di],1Ah
020A:7140  74 02				je	loc_1129		; Jump if equal
020A:7142  EB 36				jmp	short loc_1135		; (717A)
020A:7144			loc_1129:
020A:7144  E9 0AF0				jmp	loc_1294		; (7C37)
020A:7147			loc_1130:
020A:7147  80 3E 4507 02			cmp	byte ptr ds:[4507h],2	; (9B68:4507=0)
020A:714C  72 03				jb	loc_1131		; Jump if below
020A:714E  E9 0881				jmp	loc_1258		; (79D2)
020A:7151			loc_1131:
020A:7151  80 3E 38AE 14			cmp	byte ptr ds:[38AEh],14h	; (9B68:38AE=0)
020A:7156  74 0E				je	loc_1132		; Jump if equal
020A:7158  80 3E 38AE 03			cmp	byte ptr ds:[38AEh],3	; (9B68:38AE=0)
020A:715D  74 14				je	loc_1134		; Jump if equal
020A:715F  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7164  74 03				je	loc_1133		; Jump if equal
020A:7166			loc_1132:
020A:7166  E9 FF05				jmp	loc_1121		; (706E)
020A:7169			loc_1133:
020A:7169  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:716D  E8 2A95				call	sub_159			; (9C05)
020A:7170  E9 FEFB				jmp	loc_1121		; (706E)
020A:7173			loc_1134:
020A:7173  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7177  E9 FEF4				jmp	loc_1121		; (706E)
020A:717A			loc_1135:
020A:717A  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:717F  76 2B				jbe	loc_1140		; Jump if below or =
020A:7181  80 3E 38AE 02			cmp	byte ptr ds:[38AEh],2	; (9B68:38AE=0)
020A:7186  75 03				jne	loc_1136		; Jump if not equal
020A:7188  E9 0117				jmp	loc_1156		; (72A2)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 242

020A:718B			loc_1136:
020A:718B  80 3E 38AE 03			cmp	byte ptr ds:[38AEh],3	; (9B68:38AE=0)
020A:7190  75 03				jne	loc_1137		; Jump if not equal
020A:7192  E9 0111				jmp	loc_1157		; (72A6)
020A:7195			loc_1137:
020A:7195  80 3E 38AE 04			cmp	byte ptr ds:[38AEh],4	; (9B68:38AE=0)
020A:719A  75 03				jne	loc_1138		; Jump if not equal
020A:719C  E9 0265				jmp	loc_1171		; (7404)
020A:719F			loc_1138:
020A:719F  80 3E 4507 02			cmp	byte ptr ds:[4507h],2	; (9B68:4507=0)
020A:71A4  72 03				jb	loc_1139		; Jump if below
020A:71A6  E9 0829				jmp	loc_1258		; (79D2)
020A:71A9			loc_1139:
020A:71A9  E9 02AE				jmp	loc_1174		; (745A)
020A:71AC			loc_1140:
020A:71AC  8A 05				mov	al,[di]
020A:71AE  A2 4319				mov	byte ptr ds:[4319h],al	; (9B68:4319=0)
020A:71B1  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:71B6  74 04				je	loc_1141		; Jump if equal
020A:71B8  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:71BC			loc_1141:
020A:71BC  E8 2A4F				call	sub_162			; (9C0E)
020A:71BF  C6 06 4500 01			mov	byte ptr ds:[4500h],1	; (9B68:4500=0)
020A:71C4  A0 4319				mov	al,byte ptr ds:[4319h]	; (9B68:4319=0)
020A:71C7  24 DF				and	al,0DFh
020A:71C9  51					push	cx
020A:71CA  57					push	di
020A:71CB  B9 4332				mov	cx,4332h
020A:71CE  81 E9 431A				sub	cx,431Ah
020A:71D2  BF 431A				mov	di,431Ah
020A:71D5  FC					cld				; Clear direction
020A:71D6  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:71D8  0B C9				or	cx,cx			; Zero ?
020A:71DA  75 07				jnz	loc_1142		; Jump if not zero
020A:71DC  5F					pop	di
020A:71DD  59					pop	cx
020A:71DE  B0 01				mov	al,1
020A:71E0  E9 0A42				jmp	loc_1290		; (7C25)
020A:71E3			loc_1142:
020A:71E3  4F					dec	di
020A:71E4  81 EF 431A				sub	di,431Ah
020A:71E8  D1 E7				shl	di,1			; Shift w/zeros fill
020A:71EA  D1 E7				shl	di,1			; Shift w/zeros fill
020A:71EC  81 C7 4332				add	di,4332h
020A:71F0  8B 45 02				mov	ax,[di+2]
020A:71F3  A3 4390				mov	word ptr ds:[4390h],ax	; (9B68:4390=0)
020A:71F6  8B 05				mov	ax,[di]
020A:71F8  A3 438E				mov	word ptr ds:[438Eh],ax	; (9B68:438E=0)
020A:71FB  5F					pop	di
020A:71FC  59					pop	cx
020A:71FD  BE 4393				mov	si,4393h
020A:7200  BB 4413				mov	bx,4413h
020A:7203  81 EB 4393				sub	bx,4393h
020A:7207  4B					dec	bx
020A:7208  F6 C4 10				test	ah,10h
020A:720B  75 5D				jnz	loc_1151		; Jump if not zero
020A:720D			loc_1143:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 243

020A:720D  8A 05				mov	al,[di]
020A:720F  3C 0D				cmp	al,0Dh
020A:7211  74 4A				je	loc_1150		; Jump if equal
020A:7213  3C 1A				cmp	al,1Ah
020A:7215  74 46				je	loc_1150		; Jump if equal
020A:7217  F6 C4 01				test	ah,1
020A:721A  75 09				jnz	loc_1144		; Jump if not zero
020A:721C  3C 3D				cmp	al,3Dh			; '='
020A:721E  75 31				jne	loc_1149		; Jump if not equal
020A:7220  80 CC 01				or	ah,1
020A:7223  EB 2C				jmp	short loc_1149		; (7251)
020A:7225			loc_1144:
020A:7225  F6 C4 02				test	ah,2
020A:7228  74 05				jz	loc_1145		; Jump if zero
020A:722A  F6 C4 40				test	ah,40h			; '@'
020A:722D  75 08				jnz	loc_1146		; Jump if not zero
020A:722F			loc_1145:
020A:722F  3C 20				cmp	al,20h			; ' '
020A:7231  74 1E				je	loc_1149		; Jump if equal
020A:7233  3C 09				cmp	al,9
020A:7235  74 1A				je	loc_1149		; Jump if equal
020A:7237			loc_1146:
020A:7237  3C 09				cmp	al,9
020A:7239  75 02				jne	loc_1147		; Jump if not equal
020A:723B  B0 20				mov	al,20h			; ' '
020A:723D			loc_1147:
020A:723D  80 CC 02				or	ah,2
020A:7240  F6 C4 20				test	ah,20h			; ' '
020A:7243  74 06				jz	loc_1148		; Jump if zero
020A:7245  A8 40				test	al,40h			; '@'
020A:7247  74 02				jz	loc_1148		; Jump if zero
020A:7249  24 DF				and	al,0DFh
020A:724B			loc_1148:
020A:724B  88 04				mov	[si],al
020A:724D  46					inc	si
020A:724E  4B					dec	bx
020A:724F  74 19				jz	loc_1151		; Jump if zero
020A:7251			loc_1149:
020A:7251  50					push	ax
020A:7252  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:7252  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:7257  58					pop	ax
020A:7258  73 B3				jnc	loc_1143		; Jump if carry=0
020A:725A  E9 09C8				jmp	loc_1290		; (7C25)
020A:725D			loc_1150:
020A:725D  50					push	ax
020A:725E  B8 4413				mov	ax,4413h
020A:7261  2D 4393				sub	ax,4393h
020A:7264  48					dec	ax
020A:7265  3B D8				cmp	bx,ax
020A:7267  58					pop	ax
020A:7268  74 2A				jz	loc_1152		; Jump if zero
020A:726A			loc_1151:
020A:726A  C6 04 00				mov	byte ptr [si],0
020A:726D  B8 4413				mov	ax,4413h
020A:7270  2D 4393				sub	ax,4393h
020A:7273  48					dec	ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 244

020A:7274  2B C3				sub	ax,bx
020A:7276  8B D8				mov	bx,ax
020A:7278  51					push	cx
020A:7279  57					push	di
020A:727A  E8 2991				call	sub_162			; (9C0E)
020A:727D  C6 06 4457 00			mov	byte ptr ds:[4457h],0	; (9B68:4457=0)
020A:7282  BE 4393				mov	si,4393h
020A:7285  8A 04				mov	al,[si]
020A:7287  FF 16 4390				call	word ptr ds:[4390h]	; (9B68:4390=0)
020A:728B  5F					pop	di
020A:728C  59					pop	cx
020A:728D  80 3E 4457 00			cmp	byte ptr ds:[4457h],0	; (9B68:4457=0)
020A:7292  74 05				je	loc_1153		; Jump if equal
020A:7294			loc_1152:
020A:7294  B0 01				mov	al,1
020A:7296  E9 098C				jmp	loc_1290		; (7C25)
020A:7299			loc_1153:
020A:7299  E9 FDD2				jmp	loc_1121		; (706E)
020A:729C			loc_1154:
020A:729C  E9 0986				jmp	loc_1290		; (7C25)
020A:729F			loc_1155:
020A:729F  E9 098A				jmp	loc_1291		; (7C2C)
020A:72A2			loc_1156:
020A:72A2  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:72A6			loc_1157:
020A:72A6  80 3E 2A1E 01			cmp	byte ptr ds:[2A1Eh],1	; (9B68:2A1E=0A0h)
020A:72AB  75 03				jne	loc_1158		; Jump if not equal
020A:72AD  E9 FDBE				jmp	loc_1121		; (706E)
020A:72B0			loc_1158:
020A:72B0  B8 0015				mov	ax,15h
020A:72B3  8A 1E 2A2B				mov	bl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:72B7  F6 E3				mul	bl			; ax = reg * al
020A:72B9  05 0000				add	ax,0
020A:72BC  8B D8				mov	bx,ax
020A:72BE  E8 E687				call	sub_96			; (5948)
020A:72C1  73 D9				jnc	loc_1154		; Jump if carry=0
020A:72C3  80 3E 2A1C 01			cmp	byte ptr ds:[2A1Ch],1	; (9B68:2A1C=20h)
020A:72C8  75 03				jne	loc_1159		; Jump if not equal
020A:72CA  E9 FDA1				jmp	loc_1121		; (706E)
020A:72CD			loc_1159:
020A:72CD  26: 89 17				mov	es:[bx],dx
020A:72D0  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:72D0  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:72D5  72 C8				jc	loc_1155		; Jump if carry Set
020A:72D7  E8 E65E				call	sub_95			; (5938)
020A:72DA  73 C0				jnc	loc_1154		; Jump if carry=0
020A:72DC  26: 89 57 02				mov	es:[bx+2],dx
020A:72E0  E8 E8C9				call	sub_99			; (5BAC)
020A:72E3  72 BA				jc	loc_1155		; Jump if carry Set
020A:72E5  E8 E650				call	sub_95			; (5938)
020A:72E8  73 B2				jnc	loc_1154		; Jump if carry=0
020A:72EA  26: 89 57 04				mov	es:[bx+4],dx
020A:72EE  E8 E8BB				call	sub_99			; (5BAC)
020A:72F1  72 AC				jc	loc_1155		; Jump if carry Set
020A:72F3  26: 3B 57 02				cmp	dx,es:[bx+2]
020A:72F7  75 03				jne	loc_1160		; Jump if not equal
020A:72F9  E9 0929				jmp	loc_1290		; (7C25)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 245

020A:72FC			loc_1160:
020A:72FC  E8 E649				call	sub_96			; (5948)
020A:72FF  73 9B				jnc	loc_1154		; Jump if carry=0
020A:7301  26: 89 57 06				mov	es:[bx+6],dx
020A:7305  89 16 2A40				mov	word ptr ds:[2A40h],dx	; (9B68:2A40=2020h)
020A:7309  E8 E8A0				call	sub_99			; (5BAC)
020A:730C  72 91				jc	loc_1155		; Jump if carry Set
020A:730E  E8 E637				call	sub_96			; (5948)
020A:7311  73 89				jnc	loc_1154		; Jump if carry=0
020A:7313  26: 89 57 08				mov	es:[bx+8],dx
020A:7317  E8 E892				call	sub_99			; (5BAC)
020A:731A  72 83				jc	loc_1155		; Jump if carry Set
020A:731C  8A 05				mov	al,[di]
020A:731E  2C 30				sub	al,30h			; '0'
020A:7320  3C 05				cmp	al,5
020A:7322  76 4B				jbe	loc_1163		; Jump if below or =
020A:7324  8A 15				mov	dl,[di]
020A:7326  80 E2 DF				and	dl,0DFh
020A:7329  32 C0				xor	al,al			; Zero register
020A:732B  80 FA 41				cmp	dl,41h			; 'A'
020A:732E  74 3F				je	loc_1163		; Jump if equal
020A:7330  FE C0				inc	al
020A:7332  80 FA 43				cmp	dl,43h			; 'C'
020A:7335  74 38				je	loc_1163		; Jump if equal
020A:7337  FE C0				inc	al
020A:7339  80 FA 44				cmp	dl,44h			; 'D'
020A:733C  74 31				je	loc_1163		; Jump if equal
020A:733E  FE C0				inc	al
020A:7340  80 FA 53				cmp	dl,53h			; 'S'
020A:7343  74 2A				je	loc_1163		; Jump if equal
020A:7345  FE C0				inc	al
020A:7347  80 FA 52				cmp	dl,52h			; 'R'
020A:734A  74 03				je	loc_1161		; Jump if equal
020A:734C  E9 00AF				jmp	loc_1169		; (73FE)
020A:734F			loc_1161:
020A:734F  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:734F  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:7354  73 03				jnc	loc_1162		; Jump if carry=0
020A:7356  E9 00A8				jmp	loc_1170		; (7401)
020A:7359			loc_1162:
020A:7359  B0 04				mov	al,4
020A:735B  8A 15				mov	dl,[di]
020A:735D  80 E2 DF				and	dl,0DFh
020A:7360  80 FA 41				cmp	dl,41h			; 'A'
020A:7363  74 0A				je	loc_1163		; Jump if equal
020A:7365  FE C0				inc	al
020A:7367  80 FA 43				cmp	dl,43h			; 'C'
020A:736A  74 03				je	loc_1163		; Jump if equal
020A:736C  E9 008F				jmp	loc_1169		; (73FE)
020A:736F			loc_1163:
020A:736F  B4 01				mov	ah,1
020A:7371  26: 89 47 0A				mov	es:[bx+0Ah],ax
020A:7375  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:737A			loc_1164:
020A:737A  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:737A  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:737F  73 02				jnc	loc_1165		; Jump if carry=0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 246

020A:7381  EB 7E				jmp	short loc_1170		; (7401)
020A:7383			loc_1165:
020A:7383  8A 15				mov	dl,[di]
020A:7385  80 FA 0D				cmp	dl,0Dh
020A:7388  74 4D				je	loc_1166		; Jump if equal
020A:738A  80 FA 0A				cmp	dl,0Ah
020A:738D  74 48				je	loc_1166		; Jump if equal
020A:738F  80 FA 3B				cmp	dl,3Bh			; ';'
020A:7392  74 43				je	loc_1166		; Jump if equal
020A:7394  80 E2 DF				and	dl,0DFh
020A:7397  80 FA 55				cmp	dl,55h			; 'U'
020A:739A  75 DE				jne	loc_1164		; Jump if not equal
020A:739C  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:739C  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:73A1  8A 15				mov	dl,[di]
020A:73A3  80 E2 DF				and	dl,0DFh
020A:73A6  80 FA 53				cmp	dl,53h			; 'S'
020A:73A9  75 CF				jne	loc_1164		; Jump if not equal
020A:73AB  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:73AB  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:73B0  8A 15				mov	dl,[di]
020A:73B2  80 E2 DF				and	dl,0DFh
020A:73B5  80 FA 45				cmp	dl,45h			; 'E'
020A:73B8  75 1D				jne	loc_1166		; Jump if not equal
020A:73BA  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:73BA  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:73BF  8A 15				mov	dl,[di]
020A:73C1  80 FA 33				cmp	dl,33h			; '3'
020A:73C4  75 11				jne	loc_1166		; Jump if not equal
020A:73C6  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:73C6  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:73CB  8A 15				mov	dl,[di]
020A:73CD  80 FA 32				cmp	dl,32h			; '2'
020A:73D0  75 05				jne	loc_1166		; Jump if not equal
020A:73D2  26: 80 4F 0E 01			or	byte ptr es:[bx+0Eh],1
020A:73D7			loc_1166:
020A:73D7  3C 03				cmp	al,3
020A:73D9  75 12				jne	loc_1167		; Jump if not equal
020A:73DB  C6 06 2A26 01			mov	byte ptr ds:[2A26h],1	; (9B68:2A26=20h)
020A:73E0  26: 8B 07				mov	ax,es:[bx]
020A:73E3  A3 2A4C				mov	word ptr ds:[2A4Ch],ax	; (9B68:2A4C=0E1AAh)
020A:73E6  26: 8B 47 04				mov	ax,es:[bx+4]
020A:73EA  A3 2A4A				mov	word ptr ds:[2A4Ah],ax	; (9B68:2A4A=0A592h)
020A:73ED			loc_1167:
020A:73ED  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:73F1  80 3E 2A2B FA			cmp	byte ptr ds:[2A2Bh],0FAh	; (9B68:2A2B=0A0h)
020A:73F6  72 03				jb	loc_1168		; Jump if below
020A:73F8  E9 C804		;*		jmp	loc_496			;*(3BFF)
020A:73F8  E9 04 C8				db	0E9h, 04h,0C8h
020A:73FB			loc_1168:
020A:73FB  E9 FC70				jmp	loc_1121		; (706E)
020A:73FE			loc_1169:
020A:73FE  E9 0824				jmp	loc_1290		; (7C25)
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:7401			loc_1170:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 247

020A:7401  E9 0828				jmp	loc_1291		; (7C2C)
020A:7404			loc_1171:
020A:7404  50					push	ax
020A:7405  53					push	bx
020A:7406  51					push	cx
020A:7407  52					push	dx
020A:7408  56					push	si
020A:7409  57					push	di
020A:740A  55					push	bp
020A:740B  E8 D382		;*		call	sub_72			;*(4790)
020A:740B  E8 82 D3				db	0E8h, 82h,0D3h
020A:740E  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:7414  74 1F				je	loc_1172		; Jump if equal
020A:7416  E8 291F				call	sub_167			; (9D38)
020A:7419  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_664+0Eh,0	; (020A:4CE7=4Eh)
020A:741F  75 14				jne	loc_1172		; Jump if not equal
020A:7421  E8 F434				call	sub_105			; (6858)
020A:7424  E8 2911				call	sub_167			; (9D38)
020A:7427  2E: 80 3E 4CE7 00			cmp	byte ptr cs:data_664+0Eh,0	; (020A:4CE7=4Eh)
020A:742D  75 06				jne	loc_1172		; Jump if not equal
020A:742F  BB 0002				mov	bx,2
020A:7432  E9 C8A4		;*		jmp	loc_519			;*(3CD9)
020A:7432  E9 A4 C8				db	0E9h,0A4h,0C8h
020A:7435			loc_1172:
020A:7435  B4 2A				mov	ah,2Ah			; '*'
020A:7437  E8 135E				call	sub_125			; (8798)
020A:743A  E8 0FF3				call	sub_116			; (8430)
020A:743D  5D					pop	bp
020A:743E  5F					pop	di
020A:743F  5E					pop	si
020A:7440  5A					pop	dx
020A:7441  59					pop	cx
020A:7442  5B					pop	bx
020A:7443  58					pop	ax
020A:7444  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:7448			loc_1173:
020A:7448  EB 00				jmp	short $+2		; delay for I/O
020A:744A  80 3E 4500 01			cmp	byte ptr ds:[4500h],1	; (9B68:4500=0)
020A:744F  75 09				jne	loc_1174		; Jump if not equal
020A:7451  FE 06 4500				inc	byte ptr ds:[4500h]	; (9B68:4500=0)
020A:7455  C6 06 38AE 14			mov	byte ptr ds:[38AEh],14h	; (9B68:38AE=0)
020A:745A			loc_1174:
020A:745A  E8 E4EB				call	sub_96			; (5948)
020A:745D  73 3D				jnc	loc_1178		; Jump if carry=0
020A:745F  80 3E 2A1C 01			cmp	byte ptr ds:[2A1Ch],1	; (9B68:2A1C=20h)
020A:7464  75 03				jne	loc_1175		; Jump if not equal
020A:7466  E9 07CE				jmp	loc_1294		; (7C37)
020A:7469			loc_1175:
020A:7469  89 16 44FA				mov	word ptr ds:[44FAh],dx	; (9B68:44FA=0)
020A:746D  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:746D  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:7472  72 2B				jc	loc_1179		; Jump if carry Set
020A:7474  E8 E4C1				call	sub_95			; (5938)
020A:7477  73 23				jnc	loc_1178		; Jump if carry=0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 248

020A:7479  89 16 44F8				mov	word ptr ds:[44F8h],dx	; (9B68:44F8=0)
020A:747D			loc_1176:
020A:747D  BB 0078				mov	bx,78h
020A:7480  BE 4393				mov	si,4393h
020A:7483			loc_1177:
020A:7483  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:7483  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:7488  72 15				jc	loc_1179		; Jump if carry Set
020A:748A  8A 05				mov	al,[di]
020A:748C  3C 1A				cmp	al,1Ah
020A:748E  74 12				je	loc_1180		; Jump if equal
020A:7490  3C 0D				cmp	al,0Dh
020A:7492  74 0E				je	loc_1180		; Jump if equal
020A:7494  88 04				mov	[si],al
020A:7496  46					inc	si
020A:7497  4B					dec	bx
020A:7498  75 E9				jnz	loc_1177		; Jump if not zero
020A:749A  EB 06				jmp	short loc_1180		; (74A2)
020A:749C			loc_1178:
020A:749C  E9 0786				jmp	loc_1290		; (7C25)
020A:749F			loc_1179:
020A:749F  E9 078A				jmp	loc_1291		; (7C2C)
020A:74A2			loc_1180:
020A:74A2  C7 04 0000				mov	word ptr [si],0
020A:74A6  89 36 44FC				mov	word ptr ds:[44FCh],si	; (9B68:44FC=0)
020A:74AA  57					push	di
020A:74AB  51					push	cx
020A:74AC  BE 4393				mov	si,4393h
020A:74AF			loc_1181:
020A:74AF  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:74B2  74 05				je	loc_1182		; Jump if equal
020A:74B4  80 3C 09				cmp	byte ptr [si],9
020A:74B7  75 0A				jne	loc_1183		; Jump if not equal
020A:74B9			loc_1182:
020A:74B9  46					inc	si
020A:74BA  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:74BE  75 EF				jne	loc_1181		; Jump if not equal
020A:74C0  E9 0755				jmp	loc_1288		; (7C18)
020A:74C3			loc_1183:
020A:74C3  8A 14				mov	dl,[si]
020A:74C5  80 E2 DF				and	dl,0DFh
020A:74C8  8A C2				mov	al,dl
020A:74CA  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:74CF  74 04				je	loc_1184		; Jump if equal
020A:74D1  3C 44				cmp	al,44h			; 'D'
020A:74D3  75 07				jne	loc_1185		; Jump if not equal
020A:74D5			loc_1184:
020A:74D5  46					inc	si
020A:74D6  BB 4459				mov	bx,4459h
020A:74D9  E8 F000				call	sub_102			; (64DC)
020A:74DC			loc_1185:
020A:74DC  E9 0739				jmp	loc_1288		; (7C18)
020A:74DF  BF 472B				mov	di,472Bh
020A:74E2  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (9B68:44FA=0)
020A:74E5  89 05				mov	[di],ax
020A:74E7  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:74EA  89 45 02				mov	[di+2],ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 249

020A:74ED  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:74F1  C6 45 05 02				mov	byte ptr [di+5],2
020A:74F5  C6 45 06 00				mov	byte ptr [di+6],0
020A:74F9			loc_1186:
020A:74F9  9A 16FA:03E4		;*		call	far ptr sub_236		;*(16FA:03E4)
020A:74F9  9A E4 03 FA 16			db	 9Ah,0E4h, 03h,0FAh, 16h
020A:74FE  72 3E				jc	loc_1190		; Jump if carry Set
020A:7500  46					inc	si
020A:7501  80 FA 46				cmp	dl,46h			; 'F'
020A:7504  75 08				jne	loc_1188		; Jump if not equal
020A:7506  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:750B  E9 0086				jmp	loc_1194		; (7594)
020A:750E			loc_1188:
020A:750E  BB 4466				mov	bx,4466h
020A:7511  E8 EFC8				call	sub_102			; (64DC)
020A:7514			loc_1189:
020A:7514  E9 0701				jmp	loc_1288		; (7C18)
020A:7517  E8 E61A				call	sub_98			; (5B34)
020A:751A  72 F8				jc	loc_1189		; Jump if carry Set
020A:751C  88 55 06				mov	[di+6],dl
020A:751F  C6 06 394F 01			mov	byte ptr ds:[394Fh],1	; (9B68:394F=0A4h)
020A:7524  EB D3				jmp	short loc_1186		; (74F9)
020A:7526  80 4D 05 10				or	byte ptr [di+5],10h
020A:752A  EB CD				jmp	short loc_1186		; (74F9)
020A:752C  80 4D 05 30				or	byte ptr [di+5],30h	; '0'
020A:7530  EB C7				jmp	short loc_1186		; (74F9)
020A:7532  80 4D 05 20				or	byte ptr [di+5],20h	; ' '
020A:7536  EB C1				jmp	short loc_1186		; (74F9)
020A:7538  80 65 04 BF				and	byte ptr [di+4],0BFh
020A:753C  EB BB				jmp	short loc_1186		; (74F9)
020A:753E			loc_1190:
020A:753E  57					push	di
020A:753F  83 C7 07				add	di,7
020A:7542  9A 16FA:0EE0		;*		call	far ptr sub_249		;*(16FA:0EE0)
020A:7542  9A E0 0E FA 16			db	 9Ah,0E0h, 0Eh,0FAh, 16h
020A:7547  5F					pop	di
020A:7548  73 17				jnc	loc_1192		; Jump if carry=0
020A:754A  C6 06 14AC 01			mov	byte ptr ds:[14ACh],1	; (9B68:14AC=0E0h)
020A:754F  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:7553  80 3E 14AD 02			cmp	byte ptr ds:[14ADh],2	; (9B68:14AD=0E3h)
020A:7558  73 04				jae	loc_1191		; Jump if above or =
020A:755A  80 4D 05 01				or	byte ptr [di+5],1
020A:755E			loc_1191:
020A:755E  E9 0681				jmp	loc_1284		; (7BE2)
020A:7561			loc_1192:
020A:7561  57					push	di
020A:7562  8B 45 07				mov	ax,[di+7]
020A:7565  0D 6060				or	ax,6060h
020A:7568  3D 7473				cmp	ax,7473h
020A:756B  75 1B				jne	loc_1193		; Jump if not equal
020A:756D  8B 45 09				mov	ax,[di+9]
020A:7570  0D 6060				or	ax,6060h
020A:7573  3D 7261				cmp	ax,7261h
020A:7576  75 10				jne	loc_1193		; Jump if not equal
020A:7578  8B 45 0B				mov	ax,[di+0Bh]
020A:757B  0D 0060				or	ax,60h
020A:757E  3D 2074				cmp	ax,2074h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 250

020A:7581  75 05				jne	loc_1193		; Jump if not equal
020A:7583  C6 06 3BD9 01			mov	byte ptr ds:[3BD9h],1	; (9B68:3BD9=0)
020A:7588			loc_1193:
020A:7588  5F					pop	di
020A:7589  B8 0016				mov	ax,16h
020A:758C  9A 16FA:0F40		;*		call	far ptr sub_250		;*(16FA:0F40)
020A:758C  9A 40 0F FA 16			db	 9Ah, 40h, 0Fh,0FAh, 16h
020A:7591  E9 064E				jmp	loc_1284		; (7BE2)
020A:7594			loc_1194:
020A:7594  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:7598  8A 5C 01				mov	bl,[si+1]
020A:759B  80 E3 DF				and	bl,0DFh
020A:759E  56					push	si
020A:759F  BE 4206				mov	si,4206h
020A:75A2  32 ED				xor	ch,ch			; Zero register
020A:75A4  8A 0E 42B0				mov	cl,byte ptr ds:[42B0h]	; (9B68:42B0=0)
  
020A:75A8			locloop_1195:
020A:75A8  3B 04				cmp	ax,[si]
020A:75AA  75 0D				jne	loc_1196		; Jump if not equal
020A:75AC  80 7C 02 20				cmp	byte ptr [si+2],20h	; ' '
020A:75B0  74 10				je	loc_1197		; Jump if equal
020A:75B2  3A 5C 02				cmp	bl,[si+2]
020A:75B5  75 02				jne	loc_1196		; Jump if not equal
020A:75B7  EB 09				jmp	short loc_1197		; (75C2)
020A:75B9			loc_1196:
020A:75B9  83 C6 05				add	si,5
020A:75BC  E2 EA				loop	locloop_1195		; Loop if cx > 0
  
020A:75BE  5E					pop	si
020A:75BF  E9 FF52				jmp	loc_1189		; (7514)
020A:75C2			loc_1197:
020A:75C2  8B 54 03				mov	dx,[si+3]
020A:75C5  5E					pop	si
020A:75C6  88 55 09				mov	[di+9],dl
020A:75C9  80 FE 01				cmp	dh,1
020A:75CC  75 03				jne	loc_1198		; Jump if not equal
020A:75CE  E9 0119				jmp	loc_1222		; (76EA)
020A:75D1			loc_1198:
020A:75D1  80 FE 03				cmp	dh,3
020A:75D4  75 03				jne	loc_1199		; Jump if not equal
020A:75D6  E9 00C8				jmp	loc_1215		; (76A1)
020A:75D9			loc_1199:
020A:75D9  80 FE 04				cmp	dh,4
020A:75DC  75 03				jne	loc_1200		; Jump if not equal
020A:75DE  E9 00E0				jmp	loc_1218		; (76C1)
020A:75E1			loc_1200:
020A:75E1  80 FE 05				cmp	dh,5
020A:75E4  74 22				je	loc_1203		; Jump if equal
020A:75E6  80 FE 06				cmp	dh,6
020A:75E9  74 03				je	loc_1201		; Jump if equal
020A:75EB  E9 015B				jmp	loc_1225		; (7749)
020A:75EE			loc_1201:
020A:75EE  C6 45 05 02				mov	byte ptr [di+5],2
020A:75F2  B8 0016				mov	ax,16h
020A:75F5  57					push	di
020A:75F6  9A 16FA:0F40		;*		call	far ptr sub_250		;*(16FA:0F40)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 251

020A:75F6  9A 40 0F FA 16			db	 9Ah, 40h, 0Fh,0FAh, 16h
020A:75FB  5F					pop	di
020A:75FC  80 7D 05 02				cmp	byte ptr [di+5],2
020A:7600  74 03				je	loc_1202		; Jump if equal
020A:7602  E9 05DD				jmp	loc_1284		; (7BE2)
020A:7605			loc_1202:
020A:7605  E9 05E2				jmp	loc_1285		; (7BEA)
020A:7608			loc_1203:
020A:7608  C7 45 0A 0000			mov	word ptr [di+0Ah],0
020A:760D  C6 45 0C 00				mov	byte ptr [di+0Ch],0
020A:7611  C7 45 0D FFFF			mov	word ptr [di+0Dh],0FFFFh
020A:7616  C6 45 0F FF				mov	byte ptr [di+0Fh],0FFh
020A:761A			loc_1204:
020A:761A  8A 04				mov	al,[si]
020A:761C  3C 3D				cmp	al,3Dh			; '='
020A:761E  74 09				je	loc_1206		; Jump if equal
020A:7620  3C 00				cmp	al,0
020A:7622  74 03				je	loc_1205		; Jump if equal
020A:7624  46					inc	si
020A:7625  EB F3				jmp	short loc_1204		; (761A)
020A:7627			loc_1205:
020A:7627  EB 75				jmp	short loc_1214		; (769E)
020A:7629			loc_1206:
020A:7629  46					inc	si
020A:762A			loc_1207:
020A:762A  8A 04				mov	al,[si]
020A:762C  8A E0				mov	ah,al
020A:762E  3C 00				cmp	al,0
020A:7630  74 6C				je	loc_1214		; Jump if equal
020A:7632  3C 20				cmp	al,20h			; ' '
020A:7634  74 65				je	loc_1213		; Jump if equal
020A:7636  3C 09				cmp	al,9
020A:7638  74 61				je	loc_1213		; Jump if equal
020A:763A  24 5F				and	al,5Fh			; '_'
020A:763C  3C 41				cmp	al,41h			; 'A'
020A:763E  72 5E				jb	loc_1214		; Jump if below
020A:7640  3C 5A				cmp	al,5Ah			; 'Z'
020A:7642  77 5A				ja	loc_1214		; Jump if above
020A:7644  80 FC 5A				cmp	ah,5Ah			; 'Z'
020A:7647  76 2B				jbe	loc_1210		; Jump if below or =
020A:7649  80 FC 70				cmp	ah,70h			; 'p'
020A:764C  77 11				ja	loc_1209		; Jump if above
020A:764E  80 EC 61				sub	ah,61h			; 'a'
020A:7651  BB 8000				mov	bx,8000h
020A:7654  8A CC				mov	cl,ah
020A:7656  D3 CB				ror	bx,cl			; Rotate
020A:7658  F7 D3				not	bx
020A:765A  21 5D 0D				and	[di+0Dh],bx
020A:765D			loc_1208:
020A:765D  EB 3C				jmp	short loc_1213		; (769B)
020A:765F			loc_1209:
020A:765F  80 FC 74				cmp	ah,74h			; 't'
020A:7662  76 F9				jbe	loc_1208		; Jump if below or =
020A:7664  80 EC 75				sub	ah,75h			; 'u'
020A:7667  B3 80				mov	bl,80h
020A:7669  8A CC				mov	cl,ah
020A:766B  D2 CB				ror	bl,cl			; Rotate
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 252

020A:766D  F6 D3				not	bl
020A:766F  20 5D 0F				and	[di+0Fh],bl
020A:7672  EB 27				jmp	short loc_1213		; (769B)
020A:7674			loc_1210:
020A:7674  80 FC 50				cmp	ah,50h			; 'P'
020A:7677  77 0F				ja	loc_1212		; Jump if above
020A:7679  80 EC 41				sub	ah,41h			; 'A'
020A:767C  BB 8000				mov	bx,8000h
020A:767F  8A CC				mov	cl,ah
020A:7681  D3 CB				ror	bx,cl			; Rotate
020A:7683  09 5D 0A				or	[di+0Ah],bx
020A:7686			loc_1211:
020A:7686  EB 13				jmp	short loc_1213		; (769B)
020A:7688			loc_1212:
020A:7688  80 FC 54				cmp	ah,54h			; 'T'
020A:768B  76 F9				jbe	loc_1211		; Jump if below or =
020A:768D  80 EC 55				sub	ah,55h			; 'U'
020A:7690  B3 80				mov	bl,80h
020A:7692  8A CC				mov	cl,ah
020A:7694  D2 CB				ror	bl,cl			; Rotate
020A:7696  08 5D 0C				or	[di+0Ch],bl
020A:7699  EB 00				jmp	short loc_1213		; (769B)
020A:769B			loc_1213:
020A:769B  46					inc	si
020A:769C  EB 8C				jmp	short loc_1207		; (762A)
020A:769E			loc_1214:
020A:769E  E9 0541				jmp	loc_1284		; (7BE2)
020A:76A1			loc_1215:
020A:76A1  46					inc	si
020A:76A2  46					inc	si
020A:76A3  46					inc	si
020A:76A4  81 3C 3233				cmp	word ptr [si],3233h
020A:76A8  74 09				je	loc_1216		; Jump if equal
020A:76AA  81 3C 3631				cmp	word ptr [si],3631h
020A:76AE  74 0A				je	loc_1217		; Jump if equal
020A:76B0  E9 052F				jmp	loc_1284		; (7BE2)
020A:76B3			loc_1216:
020A:76B3  C6 45 09 05				mov	byte ptr [di+9],5
020A:76B7  E9 0528				jmp	loc_1284		; (7BE2)
020A:76BA			loc_1217:
020A:76BA  C6 45 09 04				mov	byte ptr [di+9],4
020A:76BE  E9 0521				jmp	loc_1284		; (7BE2)
020A:76C1			loc_1218:
020A:76C1  46					inc	si
020A:76C2  B9 0005				mov	cx,5
  
020A:76C5			locloop_1219:
020A:76C5  9A 16FA:117C		;*		call	far ptr sub_259		;*(16FA:117C)
020A:76C5  9A 7C 11 FA 16			db	 9Ah, 7Ch, 11h,0FAh, 16h
020A:76CA  72 09				jc	loc_1220		; Jump if carry Set
020A:76CC  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:76D0  77 15				ja	loc_1221		; Jump if above
020A:76D2  46					inc	si
020A:76D3  E2 F0				loop	locloop_1219		; Loop if cx > 0
  
020A:76D5			loc_1220:
020A:76D5  E8 E45C				call	sub_98			; (5B34)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 253

020A:76D8  72 0D				jc	loc_1221		; Jump if carry Set
020A:76DA  89 55 0C				mov	[di+0Ch],dx
020A:76DD  E8 E454				call	sub_98			; (5B34)
020A:76E0  72 05				jc	loc_1221		; Jump if carry Set
020A:76E2  89 55 0A				mov	[di+0Ah],dx
020A:76E5  EB 62				jmp	short loc_1225		; (7749)
020A:76E7			loc_1221:
020A:76E7  E9 052E				jmp	loc_1288		; (7C18)
020A:76EA			loc_1222:
020A:76EA  F6 45 09 40				test	byte ptr [di+9],40h	; '@'
020A:76EE  75 24				jnz	loc_1223		; Jump if not zero
020A:76F0  80 7D 09 08				cmp	byte ptr [di+9],8
020A:76F4  75 23				jne	loc_1224		; Jump if not equal
020A:76F6  46					inc	si
020A:76F7  8A 34				mov	dh,[si]
020A:76F9  80 E6 5F				and	dh,5Fh			; '_'
020A:76FC  80 FE 53				cmp	dh,53h			; 'S'
020A:76FF  74 13				je	loc_1223		; Jump if equal
020A:7701  FE 45 09				inc	byte ptr [di+9]
020A:7704  80 FE 4C				cmp	dh,4Ch			; 'L'
020A:7707  74 0B				je	loc_1223		; Jump if equal
020A:7709  FE 45 09				inc	byte ptr [di+9]
020A:770C  80 FE 44				cmp	dh,44h			; 'D'
020A:770F  74 03				je	loc_1223		; Jump if equal
020A:7711  E9 0504				jmp	loc_1288		; (7C18)
020A:7714			loc_1223:
020A:7714  C7 45 0A FFFF			mov	word ptr [di+0Ah],0FFFFh
020A:7719			loc_1224:
020A:7719  46					inc	si
020A:771A  E8 E353				call	sub_97			; (5A70)
020A:771D  72 2D				jc	loc_1226		; Jump if carry Set
020A:771F  89 55 0A				mov	[di+0Ah],dx
020A:7722  F6 45 09 10				test	byte ptr [di+9],10h
020A:7726  74 21				jz	loc_1225		; Jump if zero
020A:7728  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:772B  75 25				jne	loc_1227		; Jump if not equal
020A:772D  46					inc	si
020A:772E  E8 E403				call	sub_98			; (5B34)
020A:7731  72 1F				jc	loc_1227		; Jump if carry Set
020A:7733  89 55 0C				mov	[di+0Ch],dx
020A:7736  C6 45 0E 00				mov	byte ptr [di+0Eh],0
020A:773A  46					inc	si
020A:773B  3B 36 44FC				cmp	si,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:773F  73 08				jae	loc_1225		; Jump if above or =
020A:7741  E8 E3F0				call	sub_98			; (5B34)
020A:7744  72 03				jc	loc_1225		; Jump if carry Set
020A:7746  88 55 0E				mov	[di+0Eh],dl
020A:7749			loc_1225:
020A:7749  E9 0496				jmp	loc_1284		; (7BE2)
020A:774C			loc_1226:
020A:774C  F6 45 09 48				test	byte ptr [di+9],48h	; 'H'
020A:7750  75 F7				jnz	loc_1225		; Jump if not zero
020A:7752			loc_1227:
020A:7752  E9 04C3				jmp	loc_1288		; (7C18)
020A:7755  BF 472B				mov	di,472Bh
020A:7758  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (9B68:44FA=0)
020A:775B  89 05				mov	[di],ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 254

020A:775D  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:7760  89 45 02				mov	[di+2],ax
020A:7763  C6 45 05 06				mov	byte ptr [di+5],6
020A:7767  C7 45 08 0001			mov	word ptr [di+8],1
020A:776C  C7 06 44FE 0000			mov	word ptr ds:[44FEh],0	; (9B68:44FE=0)
020A:7772  C7 45 06 0000			mov	word ptr [di+6],0
020A:7777  8A 04				mov	al,[si]
020A:7779  46					inc	si
020A:777A  BB 4476				mov	bx,4476h
020A:777D  E8 ED5C				call	sub_102			; (64DC)
020A:7780  E9 0495				jmp	loc_1288		; (7C18)
020A:7783  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020A:7787  EB 45				jmp	short loc_1228		; (77CE)
020A:7789  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:778D  EB 3F				jmp	short loc_1228		; (77CE)
020A:778F  C6 45 04 44				mov	byte ptr [di+4],44h	; 'D'
020A:7793  C7 45 08 0004			mov	word ptr [di+8],4
020A:7798  EB 34				jmp	short loc_1228		; (77CE)
020A:779A  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:779F  75 49				jne	loc_1231		; Jump if not equal
020A:77A1  C6 06 4507 01			mov	byte ptr ds:[4507h],1	; (9B68:4507=0)
020A:77A6  C7 06 450D 0000			mov	word ptr ds:[450Dh],0	; (9B68:450D=0)
020A:77AC  C7 06 450F 0000			mov	word ptr ds:[450Fh],0	; (9B68:450F=0)
020A:77B2  EB 1A				jmp	short loc_1228		; (77CE)
020A:77B4  C6 45 04 42				mov	byte ptr [di+4],42h	; 'B'
020A:77B8  C7 45 08 0002			mov	word ptr [di+8],2
020A:77BD  EB 0F				jmp	short loc_1228		; (77CE)
020A:77BF  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (9B68:4507=0)
020A:77C4  75 24				jne	loc_1231		; Jump if not equal
020A:77C6  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:77CA  80 4D 07 10				or	byte ptr [di+7],10h
020A:77CE			loc_1228:
020A:77CE  9A 16FA:03E4		;*		call	far ptr sub_236		;*(16FA:03E4)
020A:77CE  9A E4 03 FA 16			db	 9Ah,0E4h, 03h,0FAh, 16h
020A:77D3  73 03				jnc	loc_1229		; Jump if carry=0
020A:77D5  E9 00EB				jmp	loc_1237		; (78C3)
020A:77D8			loc_1229:
020A:77D8  80 3E 4507 01			cmp	byte ptr ds:[4507h],1	; (9B68:4507=0)
020A:77DD  75 04				jne	loc_1230		; Jump if not equal
020A:77DF  3C 52				cmp	al,52h			; 'R'
020A:77E1  75 07				jne	loc_1231		; Jump if not equal
020A:77E3			loc_1230:
020A:77E3  46					inc	si
020A:77E4  BB 4489				mov	bx,4489h
020A:77E7  E8 ECF2				call	sub_102			; (64DC)
020A:77EA			loc_1231:
020A:77EA  E9 042B				jmp	loc_1288		; (7C18)
020A:77ED  8A 45 04				mov	al,[di+4]
020A:77F0  24 3F				and	al,3Fh			; '?'
020A:77F2  3C 02				cmp	al,2
020A:77F4  77 F4				ja	loc_1231		; Jump if above
020A:77F6  3C 00				cmp	al,0
020A:77F8  75 04				jne	loc_1232		; Jump if not equal
020A:77FA  80 4D 04 01				or	byte ptr [di+4],1
020A:77FE			loc_1232:
020A:77FE  80 4D 04 20				or	byte ptr [di+4],20h	; ' '
020A:7802  EB CA				jmp	short loc_1228		; (77CE)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 255

020A:7804  80 4D 07 40				or	byte ptr [di+7],40h	; '@'
020A:7808  80 4D 07 20				or	byte ptr [di+7],20h	; ' '
020A:780C  EB C0				jmp	short loc_1228		; (77CE)
020A:780E  80 4D 07 80				or	byte ptr [di+7],80h
020A:7812  EB BA				jmp	short loc_1228		; (77CE)
020A:7814  8A 45 04				mov	al,[di+4]
020A:7817  24 3F				and	al,3Fh			; '?'
020A:7819  3C 02				cmp	al,2
020A:781B  75 48				jne	loc_1236		; Jump if not equal
020A:781D  8B C6				mov	ax,si
020A:781F  40					inc	ax
020A:7820  3B 06 44FC				cmp	ax,word ptr ds:[44FCh]	; (9B68:44FC=0)
020A:7824  73 3F				jae	loc_1236		; Jump if above or =
020A:7826  8B 04				mov	ax,[si]
020A:7828  25 DFDF				and	ax,0DFDFh
020A:782B  80 65 04 C0				and	byte ptr [di+4],0C0h
020A:782F  80 4D 04 10				or	byte ptr [di+4],10h
020A:7833  C7 45 08 0002			mov	word ptr [di+8],2
020A:7838  80 FC 4E				cmp	ah,4Eh			; 'N'
020A:783B  74 0E				je	loc_1233		; Jump if equal
020A:783D  80 FC 46				cmp	ah,46h			; 'F'
020A:7840  75 23				jne	loc_1236		; Jump if not equal
020A:7842  80 4D 04 01				or	byte ptr [di+4],1
020A:7846  C7 45 08 0004			mov	word ptr [di+8],4
020A:784B			loc_1233:
020A:784B  3C 53				cmp	al,53h			; 'S'
020A:784D  74 12				je	loc_1235		; Jump if equal
020A:784F  3C 4C				cmp	al,4Ch			; 'L'
020A:7851  75 06				jne	loc_1234		; Jump if not equal
020A:7853  80 4D 04 02				or	byte ptr [di+4],2
020A:7857  EB 08				jmp	short loc_1235		; (7861)
020A:7859			loc_1234:
020A:7859  3C 44				cmp	al,44h			; 'D'
020A:785B  75 08				jne	loc_1236		; Jump if not equal
020A:785D  80 4D 04 04				or	byte ptr [di+4],4
020A:7861			loc_1235:
020A:7861  46					inc	si
020A:7862  E9 FF69				jmp	loc_1228		; (77CE)
020A:7865			loc_1236:
020A:7865  E9 03B0				jmp	loc_1288		; (7C18)
020A:7868  E8 E2C9				call	sub_98			; (5B34)
020A:786B  72 F8				jc	loc_1236		; Jump if carry Set
020A:786D  81 E2 03FF				and	dx,3FFh
020A:7871  89 55 06				mov	[di+6],dx
020A:7874  C6 06 394F 01			mov	byte ptr ds:[394Fh],1	; (9B68:394F=0A4h)
020A:7879  E9 FF52				jmp	loc_1228		; (77CE)
020A:787C  E8 E2B5				call	sub_98			; (5B34)
020A:787F  72 E4				jc	loc_1236		; Jump if carry Set
020A:7881  89 16 44FE				mov	word ptr ds:[44FEh],dx	; (9B68:44FE=0)
020A:7885  E9 FF46				jmp	loc_1228		; (77CE)
020A:7888  57					push	di
020A:7889  BF 472B				mov	di,472Bh
020A:788C  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (9B68:44FA=0)
020A:788F  89 05				mov	[di],ax
020A:7891  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (9B68:44F8=0)
020A:7894  89 45 02				mov	[di+2],ax
020A:7897  FF 75 04				push	word ptr [di+4]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 256

020A:789A  FF 75 05				push	word ptr [di+5]
020A:789D  FF 75 06				push	word ptr [di+6]
020A:78A0  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:78A4  C6 45 05 00				mov	byte ptr [di+5],0
020A:78A8  C6 45 06 00				mov	byte ptr [di+6],0
020A:78AC  E8 33B1				call	sub_174			; (AC60)
020A:78AF  8F 45 04				pop	word ptr [di+4]
020A:78B2  8F 45 05				pop	word ptr [di+5]
020A:78B5  8F 45 06				pop	word ptr [di+6]
020A:78B8  5F					pop	di
020A:78B9  E9 FF12				jmp	loc_1228		; (77CE)
020A:78BC  80 65 04 BF				and	byte ptr [di+4],0BFh
020A:78C0  E9 FF0B				jmp	loc_1228		; (77CE)
020A:78C3			loc_1237:
020A:78C3  80 3E 4507 01			cmp	byte ptr ds:[4507h],1	; (D233:4507=37h)
020A:78C8  75 1A				jne	loc_1240		; Jump if not equal
020A:78CA  FE 06 4507				inc	byte ptr ds:[4507h]	; (D233:4507=37h)
020A:78CE  A1 44FE				mov	ax,word ptr ds:[44FEh]	; (D233:44FE=0C4C4h)
020A:78D1  3D 0100				cmp	ax,100h
020A:78D4  72 02				jb	loc_1238		; Jump if below
020A:78D6  B0 FF				mov	al,0FFh
020A:78D8			loc_1238:
020A:78D8  0A C0				or	al,al			; Zero ?
020A:78DA  75 02				jnz	loc_1239		; Jump if not zero
020A:78DC  FE C0				inc	al
020A:78DE			loc_1239:
020A:78DE  A2 4508				mov	byte ptr ds:[4508h],al	; (D233:4508=0C4h)
020A:78E1  E9 030B				jmp	loc_1286		; (7BEF)
020A:78E4			loc_1240:
020A:78E4  83 3E 44FE 00			cmp	word ptr ds:[44FEh],0	; (D233:44FE=0C4C4h)
020A:78E9  74 03				je	loc_1241		; Jump if equal
020A:78EB  E9 0093				jmp	loc_1252		; (7981)
020A:78EE			loc_1241:
020A:78EE  FF 06 44FE				inc	word ptr ds:[44FEh]	; (D233:44FE=0C4C4h)
020A:78F2  8A 45 04				mov	al,[di+4]
020A:78F5  24 3F				and	al,3Fh			; '?'
020A:78F7  3C 20				cmp	al,20h			; ' '
020A:78F9  74 03				je	loc_1242		; Jump if equal
020A:78FB  E9 0083				jmp	loc_1252		; (7981)
020A:78FE			loc_1242:
020A:78FE  51					push	cx
020A:78FF  52					push	dx
020A:7900  56					push	si
020A:7901  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:7906  06					push	es
020A:7907  8B 75 02				mov	si,[di+2]
020A:790A  8B 05				mov	ax,[di]
020A:790C  56					push	si
020A:790D  BE 28EF				mov	si,28EFh
020A:7910  E8 22F2				call	sub_159			; (9C05)
020A:7913			loc_1243:
020A:7913  81 FE 0000				cmp	si,0
020A:7917  74 45				je	loc_1249		; Jump if equal
020A:7919  83 EE 15				sub	si,15h
020A:791C  26: 39 04				cmp	es:[si],ax
020A:791F  75 F2				jne	loc_1243		; Jump if not equal
020A:7921  26: 8B 4C 04				mov	cx,es:[si+4]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 257

020A:7925  5E					pop	si
020A:7926  8E C0				mov	es,ax
020A:7928  3B CE				cmp	cx,si
020A:792A  76 33				jbe	loc_1250		; Jump if below or =
020A:792C  2B CE				sub	cx,si
020A:792E  41					inc	cx
020A:792F  75 01				jnz	loc_1244		; Jump if not zero
020A:7931  49					dec	cx
020A:7932			loc_1244:
020A:7932  8B D1				mov	dx,cx
020A:7934  BB 47DD				mov	bx,47DDh
  
020A:7937			locloop_1245:
020A:7937  26: 8A 04				mov	al,es:[si]
020A:793A  0A C0				or	al,al			; Zero ?
020A:793C  74 12				jz	loc_1247		; Jump if zero
020A:793E  3C 24				cmp	al,24h			; '$'
020A:7940  74 0E				je	loc_1247		; Jump if equal
020A:7942  D7					xlat				; al=[al+[bx]] table
020A:7943  0A C0				or	al,al			; Zero ?
020A:7945  74 04				jz	loc_1246		; Jump if zero
020A:7947  3B CA				cmp	cx,dx
020A:7949  75 06				jne	loc_1248		; Jump if not equal
020A:794B			loc_1246:
020A:794B  46					inc	si
020A:794C  E2 E9				loop	locloop_1245		; Loop if cx > 0
  
020A:794E  EB 01				jmp	short loc_1248		; (7951)
020A:7950			loc_1247:
020A:7950  49					dec	cx
020A:7951			loc_1248:
020A:7951  2B D1				sub	dx,cx
020A:7953  83 FA 00				cmp	dx,0
020A:7956  74 07				je	loc_1250		; Jump if equal
020A:7958  89 16 44FE				mov	word ptr ds:[44FEh],dx	; (D233:44FE=0C4C4h)
020A:795C  EB 01				jmp	short loc_1250		; (795F)
020A:795E			loc_1249:
020A:795E  5E					pop	si
020A:795F			loc_1250:
020A:795F  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:7964  5A					pop	dx
020A:7965  8E C2				mov	es,dx
020A:7967  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:796C  5A					pop	dx
020A:796D  75 0A				jnz	loc_1251		; Jump if not zero
020A:796F  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:7974  74 03				je	loc_1251		; Jump if equal
020A:7976  E8 256B				call	sub_168			; (9EE4)
020A:7979			loc_1251:
020A:7979  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:797E  5E					pop	si
020A:797F  5A					pop	dx
020A:7980  59					pop	cx
020A:7981			loc_1252:
020A:7981  8B 45 08				mov	ax,[di+8]
020A:7984  F7 26 44FE				mul	word ptr ds:[44FEh]	; (D233:44FE=0C4C4h) ax = data * ax
020A:7988  72 04				jc	loc_1253		; Jump if carry Set
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 258

020A:798A  0B C0				or	ax,ax			; Zero ?
020A:798C  75 03				jnz	loc_1254		; Jump if not zero
020A:798E			loc_1253:
020A:798E  E9 FED4				jmp	loc_1236		; (7865)
020A:7991			loc_1254:
020A:7991  89 45 08				mov	[di+8],ax
020A:7994  A3 450F				mov	word ptr ds:[450Fh],ax	; (D233:450F=1453h)
020A:7997  01 06 450D				add	word ptr ds:[450Dh],ax	; (D233:450D=0C4C4h)
020A:799B  57					push	di
020A:799C  83 C7 0A				add	di,0Ah
020A:799F  9A 16FA:0EE0		;*		call	far ptr sub_249		;*(16FA:0EE0)
020A:799F  9A E0 0E FA 16			db	 9Ah,0E0h, 0Eh,0FAh, 16h
020A:79A4  5F					pop	di
020A:79A5  73 17				jnc	loc_1256		; Jump if carry=0
020A:79A7  C6 06 14AC 01			mov	byte ptr ds:[14ACh],1	; (D233:14AC=1Ch)
020A:79AC  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:79B0  80 3E 14AD 02			cmp	byte ptr ds:[14ADh],2	; (D233:14AD=20h)
020A:79B5  73 04				jae	loc_1255		; Jump if above or =
020A:79B7  80 4D 05 01				or	byte ptr [di+5],1
020A:79BB			loc_1255:
020A:79BB  E9 0231				jmp	loc_1286		; (7BEF)
020A:79BE			loc_1256:
020A:79BE  80 3E 4507 00			cmp	byte ptr ds:[4507h],0	; (D233:4507=37h)
020A:79C3  75 0A				jne	loc_1257		; Jump if not equal
020A:79C5  B8 0019				mov	ax,19h
020A:79C8  9A 16FA:0F40		;*		call	far ptr sub_250		;*(16FA:0F40)
020A:79C8  9A 40 0F FA 16			db	 9Ah, 40h, 0Fh,0FAh, 16h
020A:79CD  EB 00				jmp	short loc_1257		; (79CF)
020A:79CF			loc_1257:
020A:79CF  E9 021D				jmp	loc_1286		; (7BEF)
020A:79D2			loc_1258:
020A:79D2  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:79D5  74 05				je	loc_1259		; Jump if equal
020A:79D7  80 3D 09				cmp	byte ptr [di],9
020A:79DA  75 12				jne	loc_1261		; Jump if not equal
020A:79DC			loc_1259:
020A:79DC  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (D233:44F8=0C434h)
020A:79DF  03 06 450F				add	ax,word ptr ds:[450Fh]	; (D233:450F=1453h)
020A:79E3  72 06				jc	loc_1260		; Jump if carry Set
020A:79E5  A3 44F8				mov	word ptr ds:[44F8h],ax	; (D233:44F8=0C434h)
020A:79E8  E9 FA92				jmp	loc_1176		; (747D)
020A:79EB			loc_1260:
020A:79EB  E9 022A				jmp	loc_1288		; (7C18)
020A:79EE			loc_1261:
020A:79EE  FF 0E 38AC				dec	word ptr ds:[38ACh]	; (D233:38AC=18h)
020A:79F2  57					push	di
020A:79F3  51					push	cx
020A:79F4  80 3E 4508 01			cmp	byte ptr ds:[4508h],1	; (D233:4508=0C4h)
020A:79F9  75 03				jne	loc_1262		; Jump if not equal
020A:79FB  E9 013C				jmp	loc_1278		; (7B3A)
020A:79FE			loc_1262:
020A:79FE  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (B9E8:0006=720h)
020A:7A03  BB 377F				mov	bx,377Fh
020A:7A06  26: 8A 45 05				mov	al,es:[di+5]
020A:7A0A  25 000F				and	ax,0Fh
020A:7A0D  D7					xlat				; al=[al+[bx]] table
020A:7A0E  0A C0				or	al,al			; Zero ?
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 259

020A:7A10  75 04				jnz	loc_1263		; Jump if not zero
020A:7A12  26: 8A 45 06				mov	al,es:[di+6]
020A:7A16			loc_1263:
020A:7A16  03 F8				add	di,ax
020A:7A18  89 3E 4509				mov	word ptr ds:[4509h],di	; (D233:4509=53C4h)
020A:7A1C  2B 3E 450B				sub	di,word ptr ds:[450Bh]	; (D233:450B=3814h)
020A:7A20  A0 4508				mov	al,byte ptr ds:[4508h]	; (D233:4508=0C4h)
020A:7A23  FE C8				dec	al
020A:7A25  32 E4				xor	ah,ah			; Zero register
020A:7A27  52					push	dx
020A:7A28  F7 E7				mul	di			; dx:ax = reg * ax
020A:7A2A  83 FA 00				cmp	dx,0
020A:7A2D  5A					pop	dx
020A:7A2E  74 03				jz	loc_1264		; Jump if zero
020A:7A30  E9 01EB				jmp	loc_1289		; (7C1E)
020A:7A33			loc_1264:
020A:7A33  8B C8				mov	cx,ax
020A:7A35  53					push	bx
020A:7A36  26: 8B 1E 0000			mov	bx,word ptr es:[0]	; (B9E8:0000=720h)
020A:7A3B  03 D9				add	bx,cx
020A:7A3D  5B					pop	bx
020A:7A3E  73 03				jnc	loc_1265		; Jump if carry=0
020A:7A40  E9 01DB				jmp	loc_1289		; (7C1E)
020A:7A43			loc_1265:
020A:7A43  26: 8B 36 0000			mov	si,word ptr es:[0]	; (B9E8:0000=720h)
020A:7A48  26: 01 0E 0000			add	word ptr es:[0],cx	; (B9E8:0000=720h)
020A:7A4D  4E					dec	si
020A:7A4E  8B FE				mov	di,si
020A:7A50  03 F9				add	di,cx
020A:7A52  8B CE				mov	cx,si
020A:7A54  2B 0E 4509				sub	cx,word ptr ds:[4509h]	; (D233:4509=53C4h)
020A:7A58  41					inc	cx
020A:7A59  1E					push	ds
020A:7A5A  06					push	es
020A:7A5B  1F					pop	ds
020A:7A5C  FD					std				; Set direction flag
020A:7A5D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7A5F  FC					cld				; Clear direction
020A:7A60  1F					pop	ds
020A:7A61  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (B9E8:0006=720h)
020A:7A66  BB 377F				mov	bx,377Fh
020A:7A69  26: 8A 45 05				mov	al,es:[di+5]
020A:7A6D  25 000F				and	ax,0Fh
020A:7A70  D7					xlat				; al=[al+[bx]] table
020A:7A71  0A C0				or	al,al			; Zero ?
020A:7A73  75 04				jnz	loc_1266		; Jump if not zero
020A:7A75  26: 8A 45 06				mov	al,es:[di+6]
020A:7A79			loc_1266:
020A:7A79  03 F8				add	di,ax
020A:7A7B  89 3E 4511				mov	word ptr ds:[4511h],di	; (D233:4511=0C439h)
020A:7A7F  8B 36 450B				mov	si,word ptr ds:[450Bh]	; (D233:450B=3814h)
020A:7A83  B2 02				mov	dl,2
020A:7A85  06					push	es
020A:7A86  1F					pop	ds
020A:7A87			loc_1267:
020A:7A87  1E					push	ds
020A:7A88  E8 216E				call	sub_157			; (9BF9)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 260

020A:7A8B  80 3E 4508 01			cmp	byte ptr ds:[4508h],1	; (B9E8:4508=20h)
020A:7A90  1F					pop	ds
020A:7A91  77 03				ja	loc_1268		; Jump if above
020A:7A93  E9 00A4				jmp	loc_1278		; (7B3A)
020A:7A96			loc_1268:
020A:7A96  FC					cld				; Clear direction
020A:7A97  A5					movsw				; Mov [si] to es:[di]
020A:7A98  AD					lodsw				; String [si] to ax
020A:7A99  8B D8				mov	bx,ax
020A:7A9B  8A C2				mov	al,dl
020A:7A9D  FE C8				dec	al
020A:7A9F  32 E4				xor	ah,ah			; Zero register
020A:7AA1  52					push	dx
020A:7AA2  1E					push	ds
020A:7AA3  E8 2153				call	sub_157			; (9BF9)
020A:7AA6  F7 26 450D				mul	word ptr ds:[450Dh]	; (B9E8:450D=2007h) ax = data * ax
020A:7AAA  1F					pop	ds
020A:7AAB  5A					pop	dx
020A:7AAC  72 04				jc	loc_1269		; Jump if carry Set
020A:7AAE  03 C3				add	ax,bx
020A:7AB0  73 06				jnc	loc_1270		; Jump if carry=0
020A:7AB2			loc_1269:
020A:7AB2  E8 2144				call	sub_157			; (9BF9)
020A:7AB5  E9 0160				jmp	loc_1288		; (7C18)
020A:7AB8			loc_1270:
020A:7AB8  AB					stosw				; Store ax to es:[di]
020A:7AB9  A5					movsw				; Mov [si] to es:[di]
020A:7ABA  AD					lodsw				; String [si] to ax
020A:7ABB  25 FC00				and	ax,0FC00h
020A:7ABE  AB					stosw				; Store ax to es:[di]
020A:7ABF  A5					movsw				; Mov [si] to es:[di]
020A:7AC0  F6 44 FB 02				test	byte ptr [si-5],2
020A:7AC4  75 10				jnz	loc_1271		; Jump if not zero
020A:7AC6  F6 44 FB 01				test	byte ptr [si-5],1
020A:7ACA  74 4E				jz	loc_1276		; Jump if zero
020A:7ACC  83 C7 02				add	di,2
020A:7ACF  83 C6 02				add	si,2
020A:7AD2  FE CA				dec	dl
020A:7AD4  EB 44				jmp	short loc_1276		; (7B1A)
020A:7AD6			loc_1271:
020A:7AD6  B9 000F				mov	cx,0Fh
020A:7AD9  81 3C 203F				cmp	word ptr [si],203Fh
020A:7ADD  74 29				je	loc_1275		; Jump if equal
020A:7ADF  B9 000D				mov	cx,0Dh
  
020A:7AE2			locloop_1272:
020A:7AE2  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:7AE5  74 03				je	loc_1273		; Jump if equal
020A:7AE7  A4					movsb				; Mov [si] to es:[di]
020A:7AE8  E2 F8				loop	locloop_1272		; Loop if cx > 0
  
020A:7AEA			loc_1273:
020A:7AEA  8A C2				mov	al,dl
020A:7AEC  FE C8				dec	al
020A:7AEE  9A 16FA:0000		;*		call	far ptr sub_221		;*(16FA:0000)
020A:7AEE  9A 00 00 FA 16			db	 9Ah, 00h, 00h,0FAh, 16h
020A:7AF3  80 FB 30				cmp	bl,30h			; '0'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 261

020A:7AF6  75 10				jne	loc_1275		; Jump if not equal
020A:7AF8  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:7AFB  74 07				je	loc_1274		; Jump if equal
020A:7AFD  A4					movsb				; Mov [si] to es:[di]
020A:7AFE  88 3D				mov	[di],bh
020A:7B00  47					inc	di
020A:7B01  46					inc	si
020A:7B02  EB 16				jmp	short loc_1276		; (7B1A)
020A:7B04			loc_1274:
020A:7B04  8A DF				mov	bl,bh
020A:7B06  B7 20				mov	bh,20h			; ' '
020A:7B08			loc_1275:
020A:7B08  89 1D				mov	[di],bx
020A:7B0A  83 C7 02				add	di,2
020A:7B0D  83 C6 02				add	si,2
020A:7B10  E3 08				jcxz	loc_1276		; Jump if cx=0
020A:7B12  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:7B15  47					inc	di
020A:7B16  46					inc	si
020A:7B17  49					dec	cx
020A:7B18  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7B1A			loc_1276:
020A:7B1A  1E					push	ds
020A:7B1B  E8 20DB				call	sub_157			; (9BF9)
020A:7B1E  3B 36 4509				cmp	si,word ptr ds:[4509h]	; (B9E8:4509=2007h)
020A:7B22  1F					pop	ds
020A:7B23  73 03				jnc	loc_1277		; Jump if carry=0
020A:7B25  E9 FF6E				jmp	loc_1268		; (7A96)
020A:7B28			loc_1277:
020A:7B28  FE C2				inc	dl
020A:7B2A  1E					push	ds
020A:7B2B  E8 20CB				call	sub_157			; (9BF9)
020A:7B2E  8B 36 450B				mov	si,word ptr ds:[450Bh]	; (B9E8:450B=2007h)
020A:7B32  FE 0E 4508				dec	byte ptr ds:[4508h]	; (B9E8:4508=20h)
020A:7B36  1F					pop	ds
020A:7B37  E9 FF4D				jmp	loc_1267		; (7A87)
020A:7B3A			loc_1278:
020A:7B3A  E8 20BC				call	sub_157			; (9BF9)
020A:7B3D  C6 06 4507 00			mov	byte ptr ds:[4507h],0	; (B9E8:4507=7)
020A:7B42  59					pop	cx
020A:7B43  5F					pop	di
020A:7B44  9A 16FA:1198		;*		call	far ptr sub_260		;*(16FA:1198)
020A:7B44  9A 98 11 FA 16			db	 9Ah, 98h, 11h,0FAh, 16h
020A:7B49  FF 06 38AC				inc	word ptr ds:[38ACh]	; (B9E8:38AC=720h)
020A:7B4D  E9 F5DE				jmp	loc_1128		; (712E)
020A:7B50  E8 20A6				call	sub_157			; (9BF9)
020A:7B53  59					pop	cx
020A:7B54  5F					pop	di
020A:7B55  E9 00C0				jmp	loc_1288		; (7C18)
020A:7B58  BF 472B				mov	di,472Bh
020A:7B5B  A1 44FA				mov	ax,word ptr ds:[44FAh]	; (B9E8:44FA=720h)
020A:7B5E  89 05				mov	[di],ax
020A:7B60  A1 44F8				mov	ax,word ptr ds:[44F8h]	; (B9E8:44F8=720h)
020A:7B63  89 45 02				mov	[di+2],ax
020A:7B66  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:7B6A  C6 45 05 0A				mov	byte ptr [di+5],0Ah
020A:7B6E  C7 45 06 0000			mov	word ptr [di+6],0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 262

020A:7B73  57					push	di
020A:7B74  B9 0032				mov	cx,32h
020A:7B77  83 C7 09				add	di,9
020A:7B7A  B0 00				mov	al,0
  
020A:7B7C			locloop_1279:
020A:7B7C  88 05				mov	[di],al
020A:7B7E  47					inc	di
020A:7B7F  E2 FB				loop	locloop_1279		; Loop if cx > 0
  
020A:7B81  5F					pop	di
020A:7B82			loc_1280:
020A:7B82  9A 16FA:03E4		;*		call	far ptr sub_236		;*(16FA:03E4)
020A:7B82  9A E4 03 FA 16			db	 9Ah,0E4h, 03h,0FAh, 16h
020A:7B87  72 2F				jc	loc_1281		; Jump if carry Set
020A:7B89  46					inc	si
020A:7B8A  BB 44A5				mov	bx,44A5h
020A:7B8D  E8 E94C				call	sub_102			; (64DC)
020A:7B90  E9 0085				jmp	loc_1288		; (7C18)
020A:7B93  80 4D 04 80				or	byte ptr [di+4],80h
020A:7B97  EB E9				jmp	short loc_1280		; (7B82)
020A:7B99  E8 DF98				call	sub_98			; (5B34)
020A:7B9C  72 7A				jc	loc_1288		; Jump if carry Set
020A:7B9E  88 55 06				mov	[di+6],dl
020A:7BA1  C6 06 394F 01			mov	byte ptr ds:[394Fh],1	; (B9E8:394F=7)
020A:7BA6  EB DA				jmp	short loc_1280		; (7B82)
020A:7BA8  80 4D 04 08				or	byte ptr [di+4],8
020A:7BAC  C6 45 32 38				mov	byte ptr [di+32h],38h	; '8'
020A:7BB0  EB D0				jmp	short loc_1280		; (7B82)
020A:7BB2  80 65 04 BF				and	byte ptr [di+4],0BFh
020A:7BB6  EB CA				jmp	short loc_1280		; (7B82)
020A:7BB8			loc_1281:
020A:7BB8  57					push	di
020A:7BB9  83 C7 3B				add	di,3Bh
020A:7BBC  9A 16FA:0EE0		;*		call	far ptr sub_249		;*(16FA:0EE0)
020A:7BBC  9A E0 0E FA 16			db	 9Ah,0E0h, 0Eh,0FAh, 16h
020A:7BC1  5F					pop	di
020A:7BC2  73 16				jnc	loc_1283		; Jump if carry=0
020A:7BC4  C6 06 14AC 01			mov	byte ptr ds:[14ACh],1	; (B9E8:14AC=20h)
020A:7BC9  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:7BCD  80 3E 14AD 02			cmp	byte ptr ds:[14ADh],2	; (B9E8:14AD=7)
020A:7BD2  73 04				jae	loc_1282		; Jump if above or =
020A:7BD4  80 4D 05 01				or	byte ptr [di+5],1
020A:7BD8			loc_1282:
020A:7BD8  EB 08				jmp	short loc_1284		; (7BE2)
020A:7BDA			loc_1283:
020A:7BDA  B8 004A				mov	ax,4Ah
020A:7BDD  9A 16FA:0F40		;*		call	far ptr sub_250		;*(16FA:0F40)
020A:7BDD  9A 40 0F FA 16			db	 9Ah, 40h, 0Fh,0FAh, 16h
020A:7BE2			loc_1284:
020A:7BE2  E8 307B				call	sub_174			; (AC60)
020A:7BE5  9A 16FA:1198		;*		call	far ptr sub_260		;*(16FA:1198)
020A:7BE5  9A 98 11 FA 16			db	 9Ah, 98h, 11h,0FAh, 16h
020A:7BEA			loc_1285:
020A:7BEA  59					pop	cx
020A:7BEB  5F					pop	di
020A:7BEC  E9 F47F				jmp	loc_1121		; (706E)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 263

020A:7BEF			loc_1286:
020A:7BEF  80 3E 4507 02			cmp	byte ptr ds:[4507h],2	; (D233:4507=37h)
020A:7BF4  75 06				jne	loc_1287		; Jump if not equal
020A:7BF6  FE 06 4507				inc	byte ptr ds:[4507h]	; (D233:4507=37h)
020A:7BFA  EB EE				jmp	short loc_1285		; (7BEA)
020A:7BFC			loc_1287:
020A:7BFC  E8 3061				call	sub_174			; (AC60)
020A:7BFF  9A 16FA:1198		;*		call	far ptr sub_260		;*(16FA:1198)
020A:7BFF  9A 98 11 FA 16			db	 9Ah, 98h, 11h,0FAh, 16h
020A:7C04  80 3E 4507 03			cmp	byte ptr ds:[4507h],3	; (D233:4507=37h)
020A:7C09  75 DF				jne	loc_1285		; Jump if not equal
020A:7C0B  FE 06 4507				inc	byte ptr ds:[4507h]	; (D233:4507=37h)
020A:7C0F  26: A1 0006				mov	ax,word ptr es:[6]	; (D233:0006=0)
020A:7C13  A3 450B				mov	word ptr ds:[450Bh],ax	; (D233:450B=3814h)
020A:7C16  EB D2				jmp	short loc_1285		; (7BEA)
020A:7C18			loc_1288:
020A:7C18  59					pop	cx
020A:7C19  5F					pop	di
020A:7C1A  B0 01				mov	al,1
020A:7C1C  EB 07				jmp	short loc_1290		; (7C25)
020A:7C1E			loc_1289:
020A:7C1E  59					pop	cx
020A:7C1F  5F					pop	di
020A:7C20  E8 1FD6				call	sub_157			; (9BF9)
020A:7C23  EB 0F				jmp	short loc_1293		; (7C34)
020A:7C25			loc_1290:
020A:7C25  0B C0				or	ax,ax			; Zero ?
020A:7C27  74 03				jz	loc_1291		; Jump if zero
020A:7C29  E9 BFF3				jmp	loc_500			; (3C1F)
020A:7C2C			loc_1291:
020A:7C2C  80 FB 00				cmp	bl,0
020A:7C2F  74 06				je	loc_1294		; Jump if equal
020A:7C31			loc_1292:
020A:7C31  E9 C04C		;*		jmp	loc_507			;*(3C80)
020A:7C31  E9 4C C0				db	0E9h, 4Ch,0C0h
020A:7C34			loc_1293:
020A:7C34  E9 C05B		;*		jmp	loc_508			;*(3C92)
020A:7C34  E9 5B C0				db	0E9h, 5Bh,0C0h
020A:7C37			loc_1294:
020A:7C37  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (D233:37EA=6A1Eh)
020A:7C3B  E8 47A2				call	sub_180			; (C3E0)
020A:7C3E  B6 00				mov	dh,0
020A:7C40  E8 0A01				call	sub_122			; (8644)
020A:7C43  E8 0B96				call	sub_126			; (87DC)
020A:7C46  E8 1B67				call	sub_149			; (97B0)
020A:7C49  E8 0D38				call	sub_127			; (8984)
020A:7C4C  1E					push	ds
020A:7C4D  07					pop	es
020A:7C4E  B4 2B				mov	ah,2Bh			; '+'
020A:7C50  E8 0B45				call	sub_125			; (8798)
020A:7C53  E8 07DA				call	sub_116			; (8430)
020A:7C56  C6 06 2A1E 00			mov	byte ptr ds:[2A1Eh],0	; (D233:2A1E=0A2h)
020A:7C5B  80 3E 394F 01			cmp	byte ptr ds:[394Fh],1	; (D233:394F=75h)
020A:7C60  74 03				je	loc_1295		; Jump if equal
020A:7C62  E9 022F				jmp	loc_1328		; (7E94)
020A:7C65			loc_1295:
020A:7C65  B9 0040				mov	cx,40h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 264

020A:7C68  BE 37AA				mov	si,37AAh
020A:7C6B  BF 3905				mov	di,3905h
020A:7C6E  FC					cld				; Clear direction
020A:7C6F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7C71  C6 06 38B7 00			mov	byte ptr ds:[38B7h],0	; (D233:38B7=26h)
020A:7C76  BF 3905				mov	di,3905h
020A:7C79  B0 00				mov	al,0
020A:7C7B  9A 16FA:04A4		;*		call	far ptr sub_238		;*(16FA:04A4)
020A:7C7B  9A A4 04 FA 16			db	 9Ah,0A4h, 04h,0FAh, 16h
020A:7C80  83 EF 03				sub	di,3
020A:7C83  C6 05 72				mov	byte ptr [di],72h	; 'r'
020A:7C86  47					inc	di
020A:7C87  C7 05 6D65				mov	word ptr [di],6D65h
020A:7C8B  C6 06 386E 00			mov	byte ptr ds:[386Eh],0	; (D233:386E=53h)
020A:7C90  BA 3905				mov	dx,3905h
020A:7C93  80 3E 3906 3A			cmp	byte ptr ds:[3906h],3Ah	; (D233:3906=0BBh) ':'
020A:7C98  74 03				je	loc_1296		; Jump if equal
020A:7C9A  BA 3903				mov	dx,3903h
020A:7C9D			loc_1296:
020A:7C9D  B4 3D				mov	ah,3Dh			; '='
020A:7C9F  B0 00				mov	al,0
020A:7CA1  B9 0000				mov	cx,0
020A:7CA4  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:7CA6  73 03				jnc	loc_1297		; Jump if carry=0
020A:7CA8  E9 01EC				jmp	loc_1329		; (7E97)
020A:7CAB			loc_1297:
020A:7CAB  A3 37EA				mov	word ptr ds:[37EAh],ax	; (D233:37EA=6A1Eh)
020A:7CAE  C6 06 38AE FF			mov	byte ptr ds:[38AEh],0FFh	; (D233:38AE=7)
020A:7CB3  C7 06 38AC 0001			mov	word ptr ds:[38ACh],1	; (D233:38AC=18h)
020A:7CB9  C7 06 3945 0000			mov	word ptr ds:[3945h],0	; (D233:3945=5F02h)
020A:7CBF  C7 06 3947 0000			mov	word ptr ds:[3947h],0	; (D233:3947=5859h)
020A:7CC5  E8 1F40				call	sub_160			; (9C08)
020A:7CC8			loc_1298:
020A:7CC8  80 3E 386E 01			cmp	byte ptr ds:[386Eh],1	; (D233:386E=53h)
020A:7CCD  74 1F				je	loc_1300		; Jump if equal
020A:7CCF  B4 3F				mov	ah,3Fh			; '?'
020A:7CD1  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (D233:37EA=6A1Eh)
020A:7CD5  B9 0080				mov	cx,80h
020A:7CD8  BA 37EE				mov	dx,37EEh
020A:7CDB  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:7CDD  73 05				jnc	loc_1299		; Jump if carry=0
020A:7CDF  B3 0E				mov	bl,0Eh
020A:7CE1  E9 019B				jmp	loc_1325		; (7E7F)
020A:7CE4			loc_1299:
020A:7CE4  3D 0080				cmp	ax,80h
020A:7CE7  74 44				je	loc_1303		; Jump if equal
020A:7CE9  3D 0000				cmp	ax,0
020A:7CEC  75 03				jne	loc_1301		; Jump if not equal
020A:7CEE			loc_1300:
020A:7CEE  E9 018E				jmp	loc_1325		; (7E7F)
020A:7CF1			loc_1301:
020A:7CF1  C6 06 386E 01			mov	byte ptr ds:[386Eh],1	; (D233:386E=53h)
020A:7CF6  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:7CFB  06					push	es
020A:7CFC  E8 1F0F				call	sub_162			; (9C0E)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 265

020A:7CFF  BF 37EE				mov	di,37EEh
020A:7D02  03 F8				add	di,ax
020A:7D04  B9 0080				mov	cx,80h
020A:7D07  2B C8				sub	cx,ax
020A:7D09  B0 20				mov	al,20h			; ' '
020A:7D0B  FC					cld				; Clear direction
020A:7D0C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:7D0E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:7D13  5A					pop	dx
020A:7D14  8E C2				mov	es,dx
020A:7D16  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:7D1B  5A					pop	dx
020A:7D1C  75 0A				jnz	loc_1302		; Jump if not zero
020A:7D1E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:7D23  74 03				je	loc_1302		; Jump if equal
020A:7D25  E8 21BC				call	sub_168			; (9EE4)
020A:7D28			loc_1302:
020A:7D28  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:7D2D			loc_1303:
020A:7D2D  BF 37EE				mov	di,37EEh
020A:7D30  B9 0080				mov	cx,80h
020A:7D33			loc_1304:
020A:7D33  80 3E 38AE FF			cmp	byte ptr ds:[38AEh],0FFh	; (9B68:38AE=0)
020A:7D38  75 06				jne	loc_1305		; Jump if not equal
020A:7D3A  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7D3E  EB 48				jmp	short loc_1309		; (7D88)
020A:7D40			loc_1305:
020A:7D40  B0 0A				mov	al,0Ah
020A:7D42  51					push	cx
020A:7D43  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:7D48  06					push	es
020A:7D49  E8 1EC2				call	sub_162			; (9C0E)
020A:7D4C  FC					cld				; Clear direction
020A:7D4D  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:7D4F  9C					pushf				; Push flags
020A:7D50  5D					pop	bp
020A:7D51  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:7D56  5A					pop	dx
020A:7D57  8E C2				mov	es,dx
020A:7D59  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:7D5E  5A					pop	dx
020A:7D5F  75 0A				jnz	loc_1306		; Jump if not zero
020A:7D61  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:7D66  74 03				je	loc_1306		; Jump if equal
020A:7D68  E8 2179				call	sub_168			; (9EE4)
020A:7D6B			loc_1306:
020A:7D6B  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:7D70  58					pop	ax
020A:7D71  55					push	bp
020A:7D72  2B C1				sub	ax,cx
020A:7D74  01 06 3947				add	word ptr ds:[3947h],ax	; (9B68:3947=0)
020A:7D78  73 04				jnc	loc_1307		; Jump if carry=0
020A:7D7A  FF 06 3945				inc	word ptr ds:[3945h]	; (9B68:3945=0)
020A:7D7E			loc_1307:
020A:7D7E  9D					popf				; Pop flags
020A:7D7F  74 03				jz	loc_1308		; Jump if zero
020A:7D81  E9 FF44				jmp	loc_1298		; (7CC8)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 266

020A:7D84			loc_1308:
020A:7D84  FF 06 38AC				inc	word ptr ds:[38ACh]	; (9B68:38AC=152h)
020A:7D88			loc_1309:
020A:7D88  81 FF 386E				cmp	di,386Eh
020A:7D8C  72 14				jb	loc_1311		; Jump if below
020A:7D8E  9A 16FA:0230		;*		call	far ptr sub_231		;*(16FA:0230)
020A:7D8E  9A 30 02 FA 16			db	 9Ah, 30h, 02h,0FAh, 16h
020A:7D93  FF 0E 3947				dec	word ptr ds:[3947h]	; (9B68:3947=0)
020A:7D97  73 04				jnc	loc_1310		; Jump if carry=0
020A:7D99  FF 0E 3945				dec	word ptr ds:[3945h]	; (9B68:3945=0)
020A:7D9D			loc_1310:
020A:7D9D  73 03				jnc	loc_1311		; Jump if carry=0
020A:7D9F  E9 00DD				jmp	loc_1325		; (7E7F)
020A:7DA2			loc_1311:
020A:7DA2  80 3D 26				cmp	byte ptr [di],26h	; '&'
020A:7DA5  74 1B				je	loc_1313		; Jump if equal
020A:7DA7  F6 06 38AE 01			test	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7DAC  75 34				jnz	loc_1316		; Jump if not zero
020A:7DAE  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7DB1  74 0C				je	loc_1312		; Jump if equal
020A:7DB3  80 3D 09				cmp	byte ptr [di],9
020A:7DB6  74 07				je	loc_1312		; Jump if equal
020A:7DB8  80 3D 0D				cmp	byte ptr [di],0Dh
020A:7DBB  74 02				je	loc_1312		; Jump if equal
020A:7DBD  EB 06				jmp	short loc_1314		; (7DC5)
020A:7DBF			loc_1312:
020A:7DBF  E9 FF71				jmp	loc_1304		; (7D33)
020A:7DC2			loc_1313:
020A:7DC2  E9 00C0				jmp	loc_1327		; (7E85)
020A:7DC5			loc_1314:
020A:7DC5  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7DC9  BE 0000				mov	si,0
020A:7DCC  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7DD1  74 16				je	loc_1317		; Jump if equal
020A:7DD3  BE 1000				mov	si,1000h
020A:7DD6  80 3E 38AE 03			cmp	byte ptr ds:[38AEh],3	; (9B68:38AE=0)
020A:7DDB  74 03				je	loc_1315		; Jump if equal
020A:7DDD  BE 13FC				mov	si,13FCh
020A:7DE0			loc_1315:
020A:7DE0  EB 45				jmp	short loc_1321		; (7E27)
020A:7DE2			loc_1316:
020A:7DE2  80 3E 38AE 01			cmp	byte ptr ds:[38AEh],1	; (9B68:38AE=0)
020A:7DE7  75 3E				jne	loc_1321		; Jump if not equal
020A:7DE9			loc_1317:
020A:7DE9  80 3D 0D				cmp	byte ptr [di],0Dh
020A:7DEC  74 34				je	loc_1319		; Jump if equal
020A:7DEE  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7DF1  74 2F				je	loc_1319		; Jump if equal
020A:7DF3  A1 3945				mov	ax,word ptr ds:[3945h]	; (9B68:3945=0)
020A:7DF6  26: 89 04				mov	es:[si],ax
020A:7DF9  46					inc	si
020A:7DFA  46					inc	si
020A:7DFB  A1 3947				mov	ax,word ptr ds:[3947h]	; (9B68:3947=0)
020A:7DFE  26: 89 04				mov	es:[si],ax
020A:7E01  E8 DABC				call	sub_93			; (58C0)
020A:7E04  73 1F				jnc	loc_1320		; Jump if carry=0
020A:7E06  8A 05				mov	al,[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 267

020A:7E08  24 5F				and	al,5Fh			; '_'
020A:7E0A  3C 4E				cmp	al,4Eh			; 'N'
020A:7E0C  74 10				je	loc_1318		; Jump if equal
020A:7E0E  46					inc	si
020A:7E0F  46					inc	si
020A:7E10  FF 06 3949				inc	word ptr ds:[3949h]	; (9B68:3949=0)
020A:7E14  81 3E 3949 0400			cmp	word ptr ds:[3949h],400h	; (9B68:3949=0)
020A:7E1A  75 06				jne	loc_1319		; Jump if not equal
020A:7E1C  EB 64				jmp	short loc_1326		; (7E82)
020A:7E1E			loc_1318:
020A:7E1E  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7E22			loc_1319:
020A:7E22  E9 FF0E				jmp	loc_1304		; (7D33)
020A:7E25			loc_1320:
020A:7E25  EB 58				jmp	short loc_1325		; (7E7F)
020A:7E27			loc_1321:
020A:7E27  80 3D 0D				cmp	byte ptr [di],0Dh
020A:7E2A  74 50				je	loc_1324		; Jump if equal
020A:7E2C  80 3D 20				cmp	byte ptr [di],20h	; ' '
020A:7E2F  74 4B				je	loc_1324		; Jump if equal
020A:7E31  A1 3945				mov	ax,word ptr ds:[3945h]	; (9B68:3945=0)
020A:7E34  26: 89 04				mov	es:[si],ax
020A:7E37  46					inc	si
020A:7E38  46					inc	si
020A:7E39  A1 3947				mov	ax,word ptr ds:[3947h]	; (9B68:3947=0)
020A:7E3C  26: 89 04				mov	es:[si],ax
020A:7E3F  E8 DA7E				call	sub_93			; (58C0)
020A:7E42  73 3B				jnc	loc_1325		; Jump if carry=0
020A:7E44  8A 05				mov	al,[di]
020A:7E46  24 5F				and	al,5Fh			; '_'
020A:7E48  3C 4E				cmp	al,4Eh			; 'N'
020A:7E4A  74 25				je	loc_1323		; Jump if equal
020A:7E4C  46					inc	si
020A:7E4D  46					inc	si
020A:7E4E  80 3E 38AE 05			cmp	byte ptr ds:[38AEh],5	; (9B68:38AE=0)
020A:7E53  74 0E				je	loc_1322		; Jump if equal
020A:7E55  FF 06 394B				inc	word ptr ds:[394Bh]	; (9B68:394B=0)
020A:7E59  81 3E 394B 00FE			cmp	word ptr ds:[394Bh],0FEh	; (9B68:394B=0)
020A:7E5F  76 1B				jbe	loc_1324		; Jump if below or =
020A:7E61  EB 1F				jmp	short loc_1326		; (7E82)
020A:7E63			loc_1322:
020A:7E63  FF 06 394D				inc	word ptr ds:[394Dh]	; (9B68:394D=3000h)
020A:7E67  81 3E 394D 00FF			cmp	word ptr ds:[394Dh],0FFh	; (9B68:394D=3000h)
020A:7E6D  76 0D				jbe	loc_1324		; Jump if below or =
020A:7E6F  EB 11				jmp	short loc_1326		; (7E82)
020A:7E71			loc_1323:
020A:7E71  FE 06 38AE				inc	byte ptr ds:[38AEh]	; (9B68:38AE=0)
020A:7E75  80 3E 38AE 06			cmp	byte ptr ds:[38AEh],6	; (9B68:38AE=0)
020A:7E7A  74 09				je	loc_1327		; Jump if equal
020A:7E7C			loc_1324:
020A:7E7C  E9 FEB4				jmp	loc_1304		; (7D33)
020A:7E7F			loc_1325:
020A:7E7F  E9 BED3		;*		jmp	loc_529			;*(3D55)
020A:7E7F  E9 D3 BE				db	0E9h,0D3h,0BEh
020A:7E82			loc_1326:
020A:7E82  E9 BEE6		;*		jmp	loc_531			;*(3D6B)
020A:7E82  E9 E6 BE				db	0E9h,0E6h,0BEh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 268

020A:7E85			loc_1327:
020A:7E85  C6 06 38B7 01			mov	byte ptr ds:[38B7h],1	; (9B68:38B7=0)
020A:7E8A  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:7E8E  E8 454F				call	sub_180			; (C3E0)
020A:7E91  E8 1D7A				call	sub_162			; (9C0E)
020A:7E94			loc_1328:
020A:7E94  E9 D58E				jmp	loc_787			; (5425)
020A:7E97			loc_1329:
020A:7E97  E8 08A2				call	sub_123			; (873C)
020A:7E9A  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:7E9D  88 47 52				mov	[bx+52h],al
020A:7EA0  B4 1A				mov	ah,1Ah
020A:7EA2  E8 08F3				call	sub_125			; (8798)
020A:7EA5  E8 0588				call	sub_116			; (8430)
020A:7EA8  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:7EA8  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:7EAD  E8 08B4				call	sub_124			; (8764)
020A:7EB0  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:7EB4  E9 D56E				jmp	loc_787			; (5425)
020A:7EB7  0009[00]				db	9 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_112		proc	near
020A:7EC0  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (ss:263E=0ECh)
020A:7EC5  74 03				je	loc_1330		; Jump if equal
020A:7EC7  E9 0085				jmp	loc_1335		; (7F4F)
020A:7ECA			loc_1330:
020A:7ECA  53					push	bx
020A:7ECB  51					push	cx
020A:7ECC  52					push	dx
020A:7ECD  57					push	di
020A:7ECE  56					push	si
020A:7ECF  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:7ED4  06					push	es
020A:7ED5  E8 1D36				call	sub_162			; (9C0E)
020A:7ED8  FE C8				dec	al
020A:7EDA  B1 06				mov	cl,6
020A:7EDC  F6 E1				mul	cl			; ax = reg * al
020A:7EDE  BE 4950				mov	si,4950h
020A:7EE1  03 F0				add	si,ax
020A:7EE3  8B 44 04				mov	ax,[si+4]
020A:7EE6  8B 14				mov	dx,[si]
020A:7EE8			loc_1331:
020A:7EE8  50					push	ax
020A:7EE9  B9 2850				mov	cx,2850h
020A:7EEC  81 E9 27CA				sub	cx,27CAh
020A:7EF0  BF 2965				mov	di,2965h
020A:7EF3  B0 20				mov	al,20h			; ' '
020A:7EF5  FC					cld				; Clear direction
020A:7EF6  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:7EF8  8B FA				mov	di,dx
020A:7EFA  B9 2850				mov	cx,2850h
020A:7EFD  81 E9 27EA				sub	cx,27EAh
020A:7F01  8B D9				mov	bx,cx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 269

020A:7F03  B0 0A				mov	al,0Ah
020A:7F05  FC					cld				; Clear direction
020A:7F06  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:7F08  2B D9				sub	bx,cx
020A:7F0A  8B CB				mov	cx,bx
020A:7F0C  8B F2				mov	si,dx
020A:7F0E  BF 2985				mov	di,2985h
020A:7F11  49					dec	cx
020A:7F12  E3 03				jcxz	loc_1332		; Jump if cx=0
020A:7F14  FC					cld				; Clear direction
020A:7F15  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7F17			loc_1332:
020A:7F17  46					inc	si
020A:7F18  BA 2965				mov	dx,2965h
020A:7F1B  E8 003A				call	sub_113			; (7F58)
020A:7F1E  8B D6				mov	dx,si
020A:7F20  58					pop	ax
020A:7F21  48					dec	ax
020A:7F22  75 C4				jnz	loc_1331		; Jump if not zero
020A:7F24  F8					clc				; Clear carry flag
020A:7F25  EB 02				jmp	short loc_1333		; (7F29)
020A:7F27  58					pop	ax
020A:7F28  F9					stc				; Set carry flag
020A:7F29			loc_1333:
020A:7F29  72 25				jc	loc_1336		; Jump if carry Set
020A:7F2B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:7F30  5A					pop	dx
020A:7F31  8E C2				mov	es,dx
020A:7F33  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:7F38  5A					pop	dx
020A:7F39  75 0A				jnz	loc_1334		; Jump if not zero
020A:7F3B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:7F40  74 03				je	loc_1334		; Jump if equal
020A:7F42  E8 1F9F				call	sub_168			; (9EE4)
020A:7F45			loc_1334:
020A:7F45  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:7F4A  5E					pop	si
020A:7F4B  5F					pop	di
020A:7F4C  5A					pop	dx
020A:7F4D  59					pop	cx
020A:7F4E  5B					pop	bx
020A:7F4F			loc_1335:
020A:7F4F  C3					retn
020A:7F50			loc_1336:
020A:7F50  83 C4 10				add	sp,10h
020A:7F53  E9 BD60		;*		jmp	loc_514			;*(3CB6)
				sub_112		endp
  
020A:7F53  E9 60 BD				db	0E9h, 60h,0BDh
020A:7F56  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_113		proc	near
020A:7F58  F7 06 42CE 0008			test	word ptr ds:[42CEh],8	; (9B68:42CE=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 270

020A:7F5E  74 04				jz	loc_1337		; Jump if zero
020A:7F60  B3 00				mov	bl,0
020A:7F62  F8					clc				; Clear carry flag
020A:7F63  C3					retn
020A:7F64			loc_1337:
020A:7F64  E8 0181				call	sub_115			; (80E8)
020A:7F67  90					nop
				sub_113		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_114		proc	near
020A:7F68  51					push	cx
020A:7F69  57					push	di
020A:7F6A  56					push	si
020A:7F6B  E8 1CA0				call	sub_162			; (9C0E)
020A:7F6E  BF 2850				mov	di,2850h
020A:7F71  81 EF 27CA				sub	di,27CAh
020A:7F75  4F					dec	di
020A:7F76  03 FA				add	di,dx
020A:7F78  B9 2850				mov	cx,2850h
020A:7F7B  81 E9 27CA				sub	cx,27CAh
020A:7F7F  49					dec	cx
020A:7F80  B0 20				mov	al,20h			; ' '
020A:7F82  FD					std				; Set direction flag
020A:7F83  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:7F85  FC					cld				; Clear direction
020A:7F86  47					inc	di
020A:7F87  47					inc	di
020A:7F88  C7 05 0A0D				mov	word ptr [di],0A0Dh
020A:7F8C  83 C1 04				add	cx,4
020A:7F8F  F7 06 42CE 0010			test	word ptr ds:[42CEh],10h	; (9B68:42CE=0)
020A:7F95  74 15				jz	loc_1339		; Jump if zero
020A:7F97  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:7F9C  74 0B				je	loc_1338		; Jump if equal
020A:7F9E  83 F9 22				cmp	cx,22h
020A:7FA1  76 06				jbe	loc_1338		; Jump if below or =
020A:7FA3  83 E9 20				sub	cx,20h
020A:7FA6  83 C2 20				add	dx,20h
020A:7FA9			loc_1338:
020A:7FA9  E9 00AE				jmp	loc_1348		; (805A)
020A:7FAC			loc_1339:
020A:7FAC  83 F9 23				cmp	cx,23h
020A:7FAF  72 F8				jb	loc_1338		; Jump if below
020A:7FB1  51					push	cx
020A:7FB2  BF 28DC				mov	di,28DCh
020A:7FB5  8B F2				mov	si,dx
020A:7FB7  B9 0020				mov	cx,20h
020A:7FBA  9A 16FA:10C8		;*		call	far ptr sub_256		;*(16FA:10C8)
020A:7FBA  9A C8 10 FA 16			db	 9Ah,0C8h, 10h,0FAh, 16h
020A:7FBF  59					pop	cx
020A:7FC0  57					push	di
020A:7FC1  83 F9 33				cmp	cx,33h
020A:7FC4  72 74				jb	loc_1343		; Jump if below
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 271

020A:7FC6  51					push	cx
020A:7FC7  B9 0010				mov	cx,10h
020A:7FCA  9A 16FA:10C8		;*		call	far ptr sub_256		;*(16FA:10C8)
020A:7FCA  9A C8 10 FA 16			db	 9Ah,0C8h, 10h,0FAh, 16h
020A:7FCF  80 3E 2EBA 03			cmp	byte ptr ds:[2EBAh],3	; (9B68:2EBA=0EEh)
020A:7FD4  75 23				jne	loc_1341		; Jump if not equal
020A:7FD6  8B DA				mov	bx,dx
020A:7FD8  80 7F 20 3B				cmp	byte ptr [bx+20h],3Bh	; ';'
020A:7FDC  74 1B				je	loc_1341		; Jump if equal
020A:7FDE  81 7D FE 0909			cmp	word ptr [di-2],909h
020A:7FE3  74 13				je	loc_1340		; Jump if equal
020A:7FE5  81 7F 30 2020			cmp	word ptr [bx+30h],2020h
020A:7FEA  75 0D				jne	loc_1341		; Jump if not equal
020A:7FEC  80 7F 60 3B				cmp	byte ptr [bx+60h],3Bh	; ';'
020A:7FF0  75 07				jne	loc_1341		; Jump if not equal
020A:7FF2  80 7D FF 09				cmp	byte ptr [di-1],9
020A:7FF6  75 01				jne	loc_1341		; Jump if not equal
020A:7FF8			loc_1340:
020A:7FF8  4F					dec	di
020A:7FF9			loc_1341:
020A:7FF9  59					pop	cx
020A:7FFA  83 F9 3B				cmp	cx,3Bh
020A:7FFD  72 3B				jb	loc_1343		; Jump if below
020A:7FFF  51					push	cx
020A:8000  B9 0008				mov	cx,8
020A:8003  9A 16FA:10C8		;*		call	far ptr sub_256		;*(16FA:10C8)
020A:8003  9A C8 10 FA 16			db	 9Ah,0C8h, 10h,0FAh, 16h
020A:8008  59					pop	cx
020A:8009  83 F9 63				cmp	cx,63h
020A:800C  72 2C				jb	loc_1343		; Jump if below
020A:800E  51					push	cx
020A:800F  B9 0028				mov	cx,28h
020A:8012  9A 16FA:10C8		;*		call	far ptr sub_256		;*(16FA:10C8)
020A:8012  9A C8 10 FA 16			db	 9Ah,0C8h, 10h,0FAh, 16h
020A:8017  59					pop	cx
020A:8018  80 3E 2EBA 00			cmp	byte ptr ds:[2EBAh],0	; (9B68:2EBA=0EEh)
020A:801D  74 1B				je	loc_1343		; Jump if equal
020A:801F  80 3C 3B				cmp	byte ptr [si],3Bh	; ';'
020A:8022  75 16				jne	loc_1343		; Jump if not equal
020A:8024  81 7D FE 0909			cmp	word ptr [di-2],909h
020A:8029  75 0F				jne	loc_1343		; Jump if not equal
020A:802B  4F					dec	di
020A:802C  80 3E 2EBA 01			cmp	byte ptr ds:[2EBAh],1	; (9B68:2EBA=0EEh)
020A:8031  74 07				je	loc_1343		; Jump if equal
020A:8033  80 7D FE 09				cmp	byte ptr [di-2],9
020A:8037  75 01				jne	loc_1343		; Jump if not equal
020A:8039  4F					dec	di
020A:803A			loc_1343:
020A:803A  8B DE				mov	bx,si
020A:803C  2B DA				sub	bx,dx
020A:803E			loc_1344:
020A:803E  3B CB				cmp	cx,bx
020A:8040  74 05				je	loc_1345		; Jump if equal
020A:8042  FC					cld				; Clear direction
020A:8043  A4					movsb				; Mov [si] to es:[di]
020A:8044  43					inc	bx
020A:8045  EB F7				jmp	short loc_1344		; (803E)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 272

020A:8047			loc_1345:
020A:8047  8B CF				mov	cx,di
020A:8049  5F					pop	di
020A:804A  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:804F  74 04				je	loc_1346		; Jump if equal
020A:8051  8B D7				mov	dx,di
020A:8053  EB 03				jmp	short loc_1347		; (8058)
020A:8055			loc_1346:
020A:8055  BA 28DC				mov	dx,28DCh
020A:8058			loc_1347:
020A:8058  2B CA				sub	cx,dx
020A:805A			loc_1348:
020A:805A  80 3E 2EBC 01			cmp	byte ptr ds:[2EBCh],1	; (9B68:2EBC=0A0h)
020A:805F  74 38				je	loc_1350		; Jump if equal
020A:8061  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:8066  74 31				je	loc_1350		; Jump if equal
020A:8068  F7 06 42CE 0010			test	word ptr ds:[42CEh],10h	; (9B68:42CE=0)
020A:806E  74 14				jz	loc_1349		; Jump if zero
020A:8070  83 F9 08				cmp	cx,8
020A:8073  76 24				jbe	loc_1350		; Jump if below or =
020A:8075  8B FA				mov	di,dx
020A:8077  80 3D 0C				cmp	byte ptr [di],0Ch
020A:807A  74 1D				je	loc_1350		; Jump if equal
020A:807C  83 C2 05				add	dx,5
020A:807F  83 E9 05				sub	cx,5
020A:8082  EB 15				jmp	short loc_1350		; (8099)
020A:8084			loc_1349:
020A:8084  8B FA				mov	di,dx
020A:8086  80 7D 04 3A				cmp	byte ptr [di+4],3Ah	; ':'
020A:808A  75 0D				jne	loc_1350		; Jump if not equal
020A:808C  C7 05 2020				mov	word ptr [di],2020h
020A:8090  C7 45 02 2020			mov	word ptr [di+2],2020h
020A:8095  C6 45 04 20				mov	byte ptr [di+4],20h	; ' '
020A:8099			loc_1350:
020A:8099  F7 06 42CE 0080			test	word ptr ds:[42CEh],80h	; (9B68:42CE=0)
020A:809F  74 19				jz	loc_1354		; Jump if zero
020A:80A1  8B FA				mov	di,dx
020A:80A3  51					push	cx
  
020A:80A4			locloop_1351:
020A:80A4  F6 05 80				test	byte ptr [di],80h
020A:80A7  74 0D				jz	loc_1353		; Jump if zero
020A:80A9  80 3D B1				cmp	byte ptr [di],0B1h
020A:80AC  75 05				jne	loc_1352		; Jump if not equal
020A:80AE  C6 05 5F				mov	byte ptr [di],5Fh	; '_'
020A:80B1  EB 03				jmp	short loc_1353		; (80B6)
020A:80B3			loc_1352:
020A:80B3  C6 05 3D				mov	byte ptr [di],3Dh	; '='
020A:80B6			loc_1353:
020A:80B6  47					inc	di
020A:80B7  E2 EB				loop	locloop_1351		; Loop if cx > 0
  
020A:80B9  59					pop	cx
020A:80BA			loc_1354:
020A:80BA  FF 06 2DBA				inc	word ptr ds:[2DBAh]	; (9B68:2DBA=2EAAh)
020A:80BE  75 04				jnz	loc_1355		; Jump if not zero
020A:80C0  FE 06 2DBC				inc	byte ptr ds:[2DBCh]	; (9B68:2DBC=0Dh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 273

020A:80C4			loc_1355:
020A:80C4  8B 1E 2C3C				mov	bx,word ptr ds:[2C3Ch]	; (9B68:2C3C=20ACh)
020A:80C8  B4 40				mov	ah,40h			; '@'
020A:80CA  CD 21				int	21h			; DOS Services  ah=function 40h
										;  write file cx=bytes, to ds:dx
020A:80CC  73 04				jnc	loc_1356		; Jump if carry=0
020A:80CE  B3 0A				mov	bl,0Ah
020A:80D0  EB 06				jmp	short loc_1357		; (80D8)
020A:80D2			loc_1356:
020A:80D2  3B C1				cmp	ax,cx
020A:80D4  74 05				je	loc_1358		; Jump if equal
020A:80D6  B3 0B				mov	bl,0Bh
020A:80D8			loc_1357:
020A:80D8  F9					stc				; Set carry flag
020A:80D9  EB 01				jmp	short loc_1359		; (80DC)
020A:80DB			loc_1358:
020A:80DB  F8					clc				; Clear carry flag
020A:80DC			loc_1359:
020A:80DC  5E					pop	si
020A:80DD  5F					pop	di
020A:80DE  59					pop	cx
020A:80DF  72 01				jc	loc_1360		; Jump if carry Set
020A:80E1  C3					retn
020A:80E2			loc_1360:
020A:80E2  58					pop	ax
020A:80E3  E9 BBD0		;*		jmp	loc_514			;*(3CB6)
				sub_114		endp
  
020A:80E3  E9 D0 BB				db	0E9h,0D0h,0BBh
020A:80E6  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_115		proc	near
020A:80E8  F7 06 42CE 0008			test	word ptr ds:[42CEh],8	; (9B68:42CE=0)
020A:80EE  74 04				jz	loc_1361		; Jump if zero
020A:80F0  B3 00				mov	bl,0
020A:80F2  F8					clc				; Clear carry flag
020A:80F3  C3					retn
020A:80F4			loc_1361:
020A:80F4  52					push	dx
020A:80F5  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:80FA  74 73				je	loc_1370		; Jump if equal
020A:80FC  A1 2DBA				mov	ax,word ptr ds:[2DBAh]	; (9B68:2DBA=2EAAh)
020A:80FF  33 D2				xor	dx,dx			; Zero register
020A:8101  8A 1E 2EBF				mov	bl,byte ptr ds:[2EBFh]	; (9B68:2EBF=0A8h)
020A:8105  80 FB 00				cmp	bl,0
020A:8108  75 09				jne	loc_1362		; Jump if not equal
020A:810A  83 3E 2D59 00			cmp	word ptr ds:[2D59h],0	; (9B68:2D59=2020h)
020A:810F  74 0B				je	loc_1363		; Jump if equal
020A:8111  EB 5C				jmp	short loc_1370		; (816F)
020A:8113			loc_1362:
020A:8113  32 FF				xor	bh,bh			; Zero register
020A:8115  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:8117  83 FA 00				cmp	dx,0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 274

020A:811A  75 53				jne	loc_1370		; Jump if not equal
020A:811C			loc_1363:
020A:811C  51					push	cx
020A:811D  55					push	bp
020A:811E  FF 06 2D59				inc	word ptr ds:[2D59h]	; (9B68:2D59=2020h)
020A:8122  BD 2D37				mov	bp,2D37h
020A:8125  A1 2D59				mov	ax,word ptr ds:[2D59h]	; (9B68:2D59=2020h)
020A:8128  3D 0001				cmp	ax,1
020A:812B  74 05				je	loc_1364		; Jump if equal
020A:812D  C6 06 2CCA 0C			mov	byte ptr ds:[2CCAh],0Ch	; (9B68:2CCA=0A4h)
020A:8132			loc_1364:
020A:8132  B3 00				mov	bl,0
020A:8134  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:8134  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:8139  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:813F  BA 2CCA				mov	dx,2CCAh
020A:8142  E8 FE23				call	sub_114			; (7F68)
020A:8145  FF 06 2DBA				inc	word ptr ds:[2DBAh]	; (9B68:2DBA=2EAAh)
020A:8149  75 04				jnz	loc_1365		; Jump if not zero
020A:814B  FE 06 2DBC				inc	byte ptr ds:[2DBCh]	; (9B68:2DBC=0Dh)
020A:814F			loc_1365:
020A:814F  BA 38AA				mov	dx,38AAh
020A:8152  B9 0002				mov	cx,2
020A:8155  8B 1E 2C3C				mov	bx,word ptr ds:[2C3Ch]	; (9B68:2C3C=20ACh)
020A:8159  B4 40				mov	ah,40h			; '@'
020A:815B  CD 21				int	21h			; DOS Services  ah=function 40h
										;  write file cx=bytes, to ds:dx
020A:815D  73 04				jnc	loc_1366		; Jump if carry=0
020A:815F  B3 0A				mov	bl,0Ah
020A:8161  EB 06				jmp	short loc_1367		; (8169)
020A:8163			loc_1366:
020A:8163  3B C1				cmp	ax,cx
020A:8165  74 05				je	loc_1368		; Jump if equal
020A:8167  B3 0B				mov	bl,0Bh
020A:8169			loc_1367:
020A:8169  F9					stc				; Set carry flag
020A:816A  EB 01				jmp	short loc_1369		; (816D)
020A:816C			loc_1368:
020A:816C  F8					clc				; Clear carry flag
020A:816D			loc_1369:
020A:816D  5D					pop	bp
020A:816E  59					pop	cx
020A:816F			loc_1370:
020A:816F  5A					pop	dx
020A:8170  72 01				jc	loc_1371		; Jump if carry Set
020A:8172  C3					retn
020A:8173			loc_1371:
020A:8173  58					pop	ax
020A:8174  E9 BB3F		;*		jmp	loc_514			;*(3CB6)
				sub_115		endp
  
020A:8174  E9 3F BB				db	0E9h, 3Fh,0BBh
020A:8177  90					nop
020A:8178  E8 FF6D				call	sub_115			; (80E8)
020A:817B  56					push	si
020A:817C  57					push	di
020A:817D  52					push	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 275

020A:817E  E8 1A8D				call	sub_162			; (9C0E)
020A:8181  C7 06 3900 0000			mov	word ptr ds:[3900h],0	; (9B68:3900=0)
020A:8187  F6 06 38BA 10			test	byte ptr ds:[38BAh],10h	; (9B68:38BA=0)
020A:818C  74 03				jz	loc_1372		; Jump if zero
020A:818E  E9 010C				jmp	loc_1389		; (829D)
020A:8191			loc_1372:
020A:8191  80 3E 38B7 01			cmp	byte ptr ds:[38B7h],1	; (9B68:38B7=0)
020A:8196  75 32				jne	loc_1374		; Jump if not equal
020A:8198  83 3E 38B8 00			cmp	word ptr ds:[38B8h],0	; (9B68:38B8=9A00h)
020A:819D  74 2B				je	loc_1374		; Jump if equal
020A:819F  C6 06 3902 00			mov	byte ptr ds:[3902h],0	; (9B68:3902=0)
020A:81A4  A1 3949				mov	ax,word ptr ds:[3949h]	; (9B68:3949=0)
020A:81A7  BF 0000				mov	di,0
020A:81AA  80 3E 38BA 02			cmp	byte ptr ds:[38BAh],2	; (9B68:38BA=0)
020A:81AF  74 13				je	loc_1373		; Jump if equal
020A:81B1  A1 394B				mov	ax,word ptr ds:[394Bh]	; (9B68:394B=0)
020A:81B4  BF 1000				mov	di,1000h
020A:81B7  80 3E 38BA 01			cmp	byte ptr ds:[38BAh],1	; (9B68:38BA=0)
020A:81BC  74 06				je	loc_1373		; Jump if equal
020A:81BE  A1 394D				mov	ax,word ptr ds:[394Dh]	; (9B68:394D=3000h)
020A:81C1  BF 13FC				mov	di,13FCh
020A:81C4			loc_1373:
020A:81C4  3B 06 38B8				cmp	ax,word ptr ds:[38B8h]	; (9B68:38B8=9A00h)
020A:81C8  73 03				jae	loc_1375		; Jump if above or =
020A:81CA			loc_1374:
020A:81CA  E9 0235				jmp	near ptr loc_1417	; (8402)
020A:81CD			loc_1375:
020A:81CD  A1 38B8				mov	ax,word ptr ds:[38B8h]	; (9B68:38B8=9A00h)
020A:81D0  48					dec	ax
020A:81D1  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:81D3  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:81D5  03 F8				add	di,ax
020A:81D7  E8 1A2E				call	sub_160			; (9C08)
020A:81DA  26: 8B 55 02				mov	dx,es:[di+2]
020A:81DE  26: 8B 45 06				mov	ax,es:[di+6]
020A:81E2  2B C2				sub	ax,dx
020A:81E4  A3 3900				mov	word ptr ds:[3900h],ax	; (9B68:3900=0)
020A:81E7  26: 8B 0D				mov	cx,es:[di]
020A:81EA  89 0E 38FC				mov	word ptr ds:[38FCh],cx	; (9B68:38FC=0)
020A:81EE  E8 1A1D				call	sub_162			; (9C0E)
020A:81F1			loc_1376:
020A:81F1  89 16 38FE				mov	word ptr ds:[38FEh],dx	; (9B68:38FE=0)
020A:81F5  8B 0E 38FC				mov	cx,word ptr ds:[38FCh]	; (9B68:38FC=0)
020A:81F9  B4 42				mov	ah,42h			; 'B'
020A:81FB  B0 00				mov	al,0
020A:81FD  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:8201  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, cx,dx=offset
020A:8203  B4 3F				mov	ah,3Fh			; '?'
020A:8205  8B 1E 37EA				mov	bx,word ptr ds:[37EAh]	; (9B68:37EA=3002h)
020A:8209  B9 0200				mov	cx,200h
020A:820C  BA 3950				mov	dx,3950h
020A:820F  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:8211  73 05				jnc	loc_1377		; Jump if carry=0
020A:8213  B3 0E				mov	bl,0Eh
020A:8215  E9 01EA				jmp	near ptr loc_1417	; (8402)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 276

020A:8218			loc_1377:
020A:8218  3D 0000				cmp	ax,0
020A:821B  75 03				jne	loc_1378		; Jump if not equal
020A:821D  E9 01E2				jmp	near ptr loc_1417	; (8402)
020A:8220			loc_1378:
020A:8220  80 3E 38BA 02			cmp	byte ptr ds:[38BAh],2	; (9B68:38BA=0)
020A:8225  75 03				jne	loc_1379		; Jump if not equal
020A:8227  E9 010B				jmp	loc_1400		; (8335)
020A:822A			loc_1379:
020A:822A  BE 3950				mov	si,3950h
020A:822D			loc_1380:
020A:822D  9A 16FA:10B8		;*		call	far ptr sub_255		;*(16FA:10B8)
020A:822D  9A B8 10 FA 16			db	 9Ah,0B8h, 10h,0FAh, 16h
020A:8232  BF 3B70				mov	di,3B70h
020A:8235  B9 0004				mov	cx,4
  
020A:8238			locloop_1381:
020A:8238  80 3C 0D				cmp	byte ptr [si],0Dh
020A:823B  74 0F				je	loc_1382		; Jump if equal
020A:823D  46					inc	si
020A:823E  FF 0E 3900				dec	word ptr ds:[3900h]	; (9B68:3900=0)
020A:8242  74 08				jz	loc_1382		; Jump if zero
020A:8244  E2 F2				loop	locloop_1381		; Loop if cx > 0
  
020A:8246  C7 05 203B				mov	word ptr [di],203Bh
020A:824A  47					inc	di
020A:824B  47					inc	di
020A:824C			loc_1382:
020A:824C  8B 0E 3900				mov	cx,word ptr ds:[3900h]	; (9B68:3900=0)
020A:8250  FC					cld				; Clear direction
  
020A:8251			locloop_1383:
020A:8251  80 3C 0D				cmp	byte ptr [si],0Dh
020A:8254  74			data_705	db	74h
020A:8255  0D FF81				or	ax,0FF81h
020A:8258  D6					db	0D6h
020A:8259  3B 73 02				cmp	si,[bp+di+2]
020A:825C  A4					movsb				; Mov [si] to es:[di]
020A:825D  4E					dec	si
020A:825E			loc_1384:
020A:825E  46					inc	si
020A:825F  E2 F0				loop	locloop_1383		; Loop if cx > 0
  
020A:8261  EB 06				jmp	short loc_1386		; (8269)
020A:8263			loc_1385:
020A:8263  46					inc	si
020A:8264  46					inc	si
020A:8265  49					dec	cx
020A:8266  74 01				jz	loc_1386		; Jump if zero
020A:8268  49					dec	cx
020A:8269			loc_1386:
020A:8269  BA 3B50				mov	dx,3B50h
020A:826C  E8 FCE9				call	sub_113			; (7F58)
020A:826F  83 F9 00				cmp	cx,0
020A:8272  74 26				je	loc_1388		; Jump if equal
020A:8274  89 0E 3900				mov	word ptr ds:[3900h],cx	; (9B68:3900=0)
020A:8278  B8 3B50				mov	ax,3B50h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 277

020A:827B  2B C6				sub	ax,si
020A:827D  3B C8				cmp	cx,ax
020A:827F  72 AC				jb	loc_1380		; Jump if below
020A:8281  81 FE 3AF6				cmp	si,3AF6h
020A:8285  72 A6				jb	loc_1380		; Jump if below
020A:8287  8B D6				mov	dx,si
020A:8289  81 EA 3950				sub	dx,3950h
020A:828D  03 16 38FE				add	dx,word ptr ds:[38FEh]	; (9B68:38FE=0)
020A:8291  73 04				jnc	loc_1387		; Jump if carry=0
020A:8293  FF 06 38FC				inc	word ptr ds:[38FCh]	; (9B68:38FC=0)
020A:8297			loc_1387:
020A:8297  E9 FF57				jmp	loc_1376		; (81F1)
020A:829A			loc_1388:
020A:829A  E9 0165				jmp	near ptr loc_1417	; (8402)
020A:829D			loc_1389:
020A:829D  9A 16FA:10B8		;*		call	far ptr sub_255		;*(16FA:10B8)
020A:829D  9A B8 10 FA 16			db	 9Ah,0B8h, 10h,0FAh, 16h
020A:82A2  80 3E 38BA 15			cmp	byte ptr ds:[38BAh],15h	; (9B68:38BA=0)
020A:82A7  72 19				jb	loc_1390		; Jump if below
020A:82A9  8A 0E 38BB				mov	cl,byte ptr ds:[38BBh]	; (9B68:38BB=8Dh)
020A:82AD  32 ED				xor	ch,ch			; Zero register
020A:82AF  33 DB				xor	bx,bx			; Zero register
020A:82B1  BF 3B70				mov	di,3B70h
020A:82B4  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020A:82B7  83 C7 0A				add	di,0Ah
020A:82BA  BE 38BC				mov	si,38BCh
020A:82BD  E8 1939				call	sub_157			; (9BF9)
020A:82C0  EB 32				jmp	short loc_1393		; (82F4)
020A:82C2			loc_1390:
020A:82C2  5A					pop	dx
020A:82C3  52					push	dx
020A:82C4  56					push	si
020A:82C5  BF 3B50				mov	di,3B50h
020A:82C8  8B F2				mov	si,dx
020A:82CA  B9 282A				mov	cx,282Ah
020A:82CD  81 E9 27CA				sub	cx,27CAh
020A:82D1  FC					cld				; Clear direction
020A:82D2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:82D4  5E					pop	si
020A:82D5  BE 38BC				mov	si,38BCh
020A:82D8  E8 191E				call	sub_157			; (9BF9)
020A:82DB			loc_1391:
020A:82DB  8A 0E 38BB				mov	cl,byte ptr ds:[38BBh]	; (9B68:38BB=8Dh)
020A:82DF  32 ED				xor	ch,ch			; Zero register
020A:82E1  8B D9				mov	bx,cx
020A:82E3  83 F9 24				cmp	cx,24h
020A:82E6  76 03				jbe	loc_1392		; Jump if below or =
020A:82E8  B9 001C				mov	cx,1Ch
020A:82EB			loc_1392:
020A:82EB  BF 3BB0				mov	di,3BB0h
020A:82EE  C7 05 203B				mov	word ptr [di],203Bh
020A:82F2  47					inc	di
020A:82F3  47					inc	di
020A:82F4			loc_1393:
020A:82F4  FC					cld				; Clear direction
020A:82F5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:82F7  83 FB 24				cmp	bx,24h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 278

020A:82FA  77 04				ja	loc_1394		; Jump if above
020A:82FC  33 DB				xor	bx,bx			; Zero register
020A:82FE  EB 14				jmp	short loc_1397		; (8314)
020A:8300			loc_1394:
020A:8300  83 EB 1C				sub	bx,1Ch
020A:8303  B9 0008				mov	cx,8
020A:8306  8B C1				mov	ax,cx
  
020A:8308			locloop_1395:
020A:8308  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:830B  74 03				je	loc_1396		; Jump if equal
020A:830D  A4					movsb				; Mov [si] to es:[di]
020A:830E  E2 F8				loop	locloop_1395		; Loop if cx > 0
  
020A:8310			loc_1396:
020A:8310  2B C1				sub	ax,cx
020A:8312  2B D8				sub	bx,ax
020A:8314			loc_1397:
020A:8314  E8 18E2				call	sub_157			; (9BF9)
020A:8317  88 1E 38BB				mov	byte ptr ds:[38BBh],bl	; (9B68:38BB=8Dh)
020A:831B  BA 3B50				mov	dx,3B50h
020A:831E  E8 FC37				call	sub_113			; (7F58)
020A:8321  80 3E 38BB 00			cmp	byte ptr ds:[38BBh],0	; (9B68:38BB=8Dh)
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:8326			loc_1398:
020A:8326  74 07				je	loc_1399		; Jump if equal
020A:8328  9A 16FA:10B8		;*		call	far ptr sub_255		;*(16FA:10B8)
020A:8328  9A B8 10 FA 16			db	 9Ah,0B8h, 10h,0FAh, 16h
020A:832D  EB AC				jmp	short loc_1391		; (82DB)
020A:832F			loc_1399:
020A:832F  E9 00B9				jmp	loc_1415		; (83EB)
020A:8332  E9 00D9				jmp	loc_1418		; (840E)
020A:8335			loc_1400:
020A:8335  BE 3950				mov	si,3950h
020A:8338			loc_1401:
020A:8338  9A 16FA:10B8		;*		call	far ptr sub_255		;*(16FA:10B8)
020A:8338  9A B8 10 FA 16			db	 9Ah,0B8h, 10h,0FAh, 16h
020A:833D  80 3E 3902 02			cmp	byte ptr ds:[3902h],2	; (9B68:3902=0)
020A:8342  73 3C				jae	loc_1405		; Jump if above or =
020A:8344  80 7C 04 B0				cmp	byte ptr [si+4],0B0h
020A:8348  72 12				jb	loc_1403		; Jump if below
020A:834A  80 3E 3902 00			cmp	byte ptr ds:[3902h],0	; (9B68:3902=0)
020A:834F  75 09				jne	loc_1402		; Jump if not equal
020A:8351  B0 03				mov	al,3
020A:8353  E8 FB6A				call	sub_112			; (7EC0)
020A:8356  FE 06 3902				inc	byte ptr ds:[3902h]	; (9B68:3902=0)
020A:835A			loc_1402:
020A:835A  EB 24				jmp	short loc_1405		; (8380)
020A:835C			loc_1403:
020A:835C  80 3E 3902 01			cmp	byte ptr ds:[3902h],1	; (9B68:3902=0)
020A:8361  75 05				jne	loc_1404		; Jump if not equal
020A:8363  B0 03				mov	al,3
020A:8365  E8 FB58				call	sub_112			; (7EC0)
020A:8368			loc_1404:
020A:8368  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 279

020A:8369  52					push	dx
020A:836A  56					push	si
020A:836B  BF 3B50				mov	di,3B50h
020A:836E  8B F2				mov	si,dx
020A:8370  B9 282A				mov	cx,282Ah
020A:8373  81 E9 27CA				sub	cx,27CAh
020A:8377  FC					cld				; Clear direction
020A:8378  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:837A  5E					pop	si
020A:837B  C6 06 3902 02			mov	byte ptr ds:[3902h],2	; (9B68:3902=0)
020A:8380			loc_1405:
020A:8380  BF 3BB0				mov	di,3BB0h
020A:8383  B9 0004				mov	cx,4
  
020A:8386			locloop_1406:
020A:8386  80 3C 0D				cmp	byte ptr [si],0Dh
020A:8389  74 0F				je	loc_1407		; Jump if equal
020A:838B  46					inc	si
020A:838C  FF 0E 3900				dec	word ptr ds:[3900h]	; (9B68:3900=0)
020A:8390  74 08				jz	loc_1407		; Jump if zero
020A:8392  E2 F2				loop	locloop_1406		; Loop if cx > 0
  
020A:8394  C7 05 203B				mov	word ptr [di],203Bh
020A:8398  47					inc	di
020A:8399  47					inc	di
020A:839A			loc_1407:
020A:839A  8B 0E 3900				mov	cx,word ptr ds:[3900h]	; (9B68:3900=0)
020A:839E  FC					cld				; Clear direction
  
020A:839F			locloop_1408:
020A:839F  80 3C 0D				cmp	byte ptr [si],0Dh
020A:83A2  74 0D				je	loc_1410		; Jump if equal
020A:83A4  81 FF 3BD6				cmp	di,3BD6h
020A:83A8  73 02				jae	loc_1409		; Jump if above or =
020A:83AA  A4					movsb				; Mov [si] to es:[di]
020A:83AB  4E					dec	si
020A:83AC			loc_1409:
020A:83AC  46					inc	si
020A:83AD  E2 F0				loop	locloop_1408		; Loop if cx > 0
  
020A:83AF  EB 06				jmp	short loc_1411		; (83B7)
020A:83B1			loc_1410:
020A:83B1  46					inc	si
020A:83B2  46					inc	si
020A:83B3  49					dec	cx
020A:83B4  74 01				jz	loc_1411		; Jump if zero
020A:83B6  49					dec	cx
020A:83B7			loc_1411:
020A:83B7  BA 3B50				mov	dx,3B50h
020A:83BA  E8 FB9B				call	sub_113			; (7F58)
020A:83BD  83 F9 00				cmp	cx,0
020A:83C0  74 29				je	loc_1415		; Jump if equal
020A:83C2  89 0E 3900				mov	word ptr ds:[3900h],cx	; (9B68:3900=0)
020A:83C6  B8 3B50				mov	ax,3B50h
020A:83C9  2B C6				sub	ax,si
020A:83CB  3B C8				cmp	cx,ax
020A:83CD  72 06				jb	loc_1412		; Jump if below
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 280

020A:83CF  81 FE 3AF6				cmp	si,3AF6h
020A:83D3  73 03				jae	loc_1413		; Jump if above or =
020A:83D5			loc_1412:
020A:83D5  E9 FF60				jmp	loc_1401		; (8338)
020A:83D8			loc_1413:
020A:83D8  8B D6				mov	dx,si
020A:83DA  81 EA 3950				sub	dx,3950h
020A:83DE  03 16 38FE				add	dx,word ptr ds:[38FEh]	; (9B68:38FE=0)
020A:83E2  73 04				jnc	loc_1414		; Jump if carry=0
020A:83E4  FF 06 38FC				inc	word ptr ds:[38FCh]	; (9B68:38FC=0)
020A:83E8			loc_1414:
020A:83E8  E9 FE06				jmp	loc_1376		; (81F1)
020A:83EB			loc_1415:
020A:83EB  A0 38BA				mov	al,byte ptr ds:[38BAh]	; (9B68:38BA=0)
020A:83EE  24 0F				and	al,0Fh
020A:83F0  3C 05				cmp	al,5
020A:83F2  73 1A				jae	loc_1418		; Jump if above or =
020A:83F4  3C 02				cmp	al,2
020A:83F6  75 05				jne	loc_1416		; Jump if not equal
020A:83F8  80 0E 38BA 13			or	byte ptr ds:[38BAh],13h	; (9B68:38BA=0)
020A:83FD			loc_1416:
020A:83FD  E8 C894		;*		call	sub_84			;*(4C94)
020A:83FD  E8 94 C8				db	0E8h, 94h,0C8h
020A:8400  EB 0C				jmp	short loc_1418		; (840E)
  
				;ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ
				;
				;			External Entry Point
				;
				;ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ
  
020A:8402			loc_1417	proc	far
020A:8402  80 3E 38BA 05			cmp	byte ptr ds:[38BAh],5	; (020A:38BA=87h)
020A:8407  73 05				jae	loc_1418		; Jump if above or =
020A:8409  5A					pop	dx
020A:840A  E8 C887		;*		call	sub_84			;*(4C94)
020A:840A  E8 87 C8				db	0E8h, 87h,0C8h
020A:840D  52					push	dx
020A:840E			loc_1418:
020A:840E  C7 06 38B8 0000			mov	word ptr ds:[38B8h],0	; (020A:38B8=802h)
020A:8414  9C					pushf				; Push flags
020A:8415  80 26 38BA 0F			and	byte ptr ds:[38BAh],0Fh	; (020A:38BA=87h)
020A:841A  80 3E 38BA 04			cmp	byte ptr ds:[38BAh],4	; (020A:38BA=87h)
020A:841F  77 05				ja	loc_1419		; Jump if above
020A:8421  C6 06 38BA 04			mov	byte ptr ds:[38BAh],4	; (020A:38BA=87h)
020A:8426			loc_1419:
020A:8426  9D					popf				; Pop flags
020A:8427  5A					pop	dx
020A:8428  5F					pop	di
020A:8429  5E					pop	si
020A:842A  C3					retn
				loc_1417	endp
  
020A:842B  00 00				add	[bx+si],al
020A:842D  00 00				add	[bx+si],al
020A:842F  00 50 53				add	[bx+si+53h],dl
020A:8432  51					push	cx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 281

020A:8433  52					push	dx
020A:8434  56					push	si
020A:8435  57					push	di
020A:8436  06					push	es
020A:8437  80 3E 1309 01			cmp	data_230,1		; (020A:1309=0)
020A:843C  74 31				je	loc_1421		; Jump if equal
020A:843E  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:8442  8E 06 12FB				mov	es,data_223		; (020A:12FB=0)
020A:8446  BE 0076				mov	si,76h
020A:8449  BA 0A16				mov	dx,0A16h
020A:844C  8B 3E 12FD				mov	di,data_224		; (020A:12FD=0)
020A:8450  E8 009D				call	sub_118			; (84F0)
020A:8453  B9 0846				mov	cx,846h
020A:8456  81 E9 0076				sub	cx,76h
  
020A:845A			locloop_1420:
020A:845A  FC					cld				; Clear direction
020A:845B  A4					movsb				; Mov [si] to es:[di]
020A:845C  87 D6				xchg	dx,si
020A:845E  8A 04				mov	al,[si]
020A:8460  87 F2				xchg	si,dx
020A:8462  42					inc	dx
020A:8463  D7					xlat				; al=[al+[bx]] table
020A:8464  26: 88 05				mov	es:[di],al
020A:8467  47			data_706	db	47h
020A:8468  E2 F0				loop	locloop_1420		; Loop if cx > 0
  
020A:846A  E8 00A7				call	sub_119			; (8514)
020A:846D  EB 63				jmp	short loc_1429		; (84D2)
020A:846F			loc_1421:
020A:846F  80 3E 2642 01			cmp	data_305,1		; (020A:2642=0)
020A:8474  75 05				jne	loc_1422		; Jump if not equal
020A:8476  E8 07DF				call	sub_137			; (8C58)
020A:8479  EB 08				jmp	short loc_1423		; (8483)
020A:847B			loc_1422:
020A:847B  B4 03				mov	ah,3
020A:847D  32 FF				xor	bh,bh			; Zero register
020A:847F  E8 0772				call	sub_136			; (8BF4)
020A:8482  52					push	dx
020A:8483			loc_1423:
020A:8483  B4 02				mov	ah,2
020A:8485  32 FF				xor	bh,bh			; Zero register
020A:8487  33 D2				xor	dx,dx			; Zero register
020A:8489  E8 0768				call	sub_136			; (8BF4)
020A:848C  8B			data_707	db	8Bh
020A:848D  1E					push	ds
020A:848E  06					push	es
020A:848F  13 B9 0846				adc	di,word ptr ds:[846h][bx+di]	; (020A:0846=802h)
020A:8493  80 3E 2642 01			cmp	data_305,1		; (020A:2642=0)
020A:8498  75 03				jne	loc_1424		; Jump if not equal
020A:849A  B9 07F6				mov	cx,7F6h
020A:849D			loc_1424:
020A:849D  81 E9 0076				sub	cx,76h
020A:84A1  49					dec	cx
020A:84A2  BE 0076				mov	si,76h
020A:84A5  BF 0A16				mov	di,0A16h
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 282

020A:84A8			locloop_1425:
020A:84A8  8A 05				mov	al,[di]
020A:84AA  D7					xlat				; al=[al+[bx]] table
020A:84AB  3C 00				cmp	al,0
020A:84AD  75 04				jne	loc_1426		; Jump if not equal
020A:84AF  B2 20				mov	dl,20h			; ' '
020A:84B1  EB 02				jmp	short loc_1427		; (84B5)
020A:84B3			loc_1426:
020A:84B3  8A 14				mov	dl,[si]
020A:84B5			loc_1427:
020A:84B5  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:84B5  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:84BA  46					inc	si
020A:84BB  47					inc	di
020A:84BC  E2 EA				loop	locloop_1425		; Loop if cx > 0
  
020A:84BE  80 3E 2642 01			cmp	data_305,1		; (020A:2642=0)
020A:84C3  75 05				jne	loc_1428		; Jump if not equal
020A:84C5  E8 07C4				call	sub_138			; (8C8C)
020A:84C8  EB 08				jmp	short loc_1429		; (84D2)
020A:84CA			loc_1428:
020A:84CA  B4 02				mov	ah,2
020A:84CC  32 FF				xor	bh,bh			; Zero register
020A:84CE  5A					pop	dx
020A:84CF  E8 0722				call	sub_136			; (8BF4)
020A:84D2			loc_1429:
020A:84D2  07					pop	es
020A:84D3  5F					pop	di
020A:84D4  5E					pop	si
020A:84D5  5A					pop	dx
020A:84D6  59					pop	cx
020A:84D7  5B					pop	bx
020A:84D8  58					pop	ax
020A:84D9  C3					retn
020A:84DA  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_117		proc	near
020A:84DC  E8 FF51		;*		call	sub_116			;*(8430)
020A:84DC  E8 51 FF				db	0E8h, 51h,0FFh
020A:84DF  50					push	ax
020A:84E0  53					push	bx
020A:84E1  52					push	dx
020A:84E2  B4 02				mov	ah,2
020A:84E4  32 FF				xor	bh,bh			; Zero register
020A:84E6  BA 184F				mov	dx,184Fh
020A:84E9  E8 0708				call	sub_136			; (8BF4)
020A:84EC  5A					pop	dx
020A:84ED  5B					pop	bx
020A:84EE  58					pop	ax
020A:84EF  C3					retn
				sub_117		endp
  
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 283

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_118		proc	near
020A:84F0  80 3E 1308 01			cmp	byte ptr ds:[1308h],1	; (9B68:1308=0A7h)
020A:84F5  74 1C				je	loc_1431		; Jump if equal
020A:84F7  52					push	dx
020A:84F8  BA 03DA				mov	dx,3DAh
020A:84FB			loc_1430:
020A:84FB  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:84FC  A8 08				test	al,8
020A:84FE  75 FB				jnz	loc_1430		; Jump if not zero
020A:8500  BA 03D8				mov	dx,3D8h
020A:8503  1E					push	ds
020A:8504  33 C0				xor	ax,ax			; Zero register
020A:8506  8E D8				mov	ds,ax
020A:8508  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:850B  24 F7				and	al,0F7h
020A:850D  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:8510  EE					out	dx,al			; port 3D8h, CGA video control
020A:8511  1F					pop	ds
020A:8512  5A					pop	dx
020A:8513			loc_1431:
020A:8513  C3					retn
				sub_118		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_119		proc	near
020A:8514  80 3E 1308 01			cmp	byte ptr ds:[1308h],1	; (9B68:1308=0A7h)
020A:8519  74 14				je	loc_1432		; Jump if equal
020A:851B  52					push	dx
020A:851C  BA 03D8				mov	dx,3D8h
020A:851F  1E					push	ds
020A:8520  33 C0				xor	ax,ax			; Zero register
020A:8522  8E D8				mov	ds,ax
020A:8524  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:8527  0C 08				or	al,8
020A:8529  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:852C  EE					out	dx,al			; port 3D8h, CGA video control
020A:852D  1F					pop	ds
020A:852E  5A					pop	dx
020A:852F			loc_1432:
020A:852F  C3					retn
				sub_119		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_120		proc	near
020A:8530  80 3E 1308 01			cmp	byte ptr ds:[1308h],1	; (9B68:1308=0A7h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 284

020A:8535  75 04				jne	loc_1433		; Jump if not equal
020A:8537  26: 88 25				mov	es:[di],ah
020A:853A  C3					retn
020A:853B			loc_1433:
020A:853B  51					push	cx
020A:853C  52					push	dx
020A:853D  50					push	ax
020A:853E  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:8543  74 1D				je	loc_1437		; Jump if equal
020A:8545  BA 03DA				mov	dx,3DAh
020A:8548			loc_1434:
020A:8548  FB					sti				; Enable interrupts
020A:8549  B5 09				mov	ch,9
020A:854B  FA					cli				; Disable interrupts
020A:854C  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:854D  A8 08				test	al,8
020A:854F  75 09				jnz	loc_1436		; Jump if not zero
020A:8551  A8 01				test	al,1
020A:8553  75 F3				jnz	loc_1434		; Jump if not zero
020A:8555			loc_1435:
020A:8555  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:8556  84 C5				test	al,ch
020A:8558  74 FB				jz	loc_1435		; Jump if zero
020A:855A			loc_1436:
020A:855A  FC					cld				; Clear direction
020A:855B  8A C4				mov	al,ah
020A:855D  AA					stosb				; Store al to es:[di]
020A:855E  FB					sti				; Enable interrupts
020A:855F  4F					dec	di
020A:8560  EB 23				jmp	short loc_1438		; (8585)
020A:8562			loc_1437:
020A:8562  80 FC 20				cmp	ah,20h			; ' '
020A:8565  72 1E				jb	loc_1438		; Jump if below
020A:8567  53					push	bx
020A:8568  50					push	ax
020A:8569  B2 A0				mov	dl,0A0h
020A:856B  8B C7				mov	ax,di
020A:856D  F6 F2				div	dl			; al, ah rem = ax/reg
020A:856F  86 C4				xchg	al,ah
020A:8571  D0 E8				shr	al,1			; Shift w/zeros fill
020A:8573  8B D0				mov	dx,ax
020A:8575  B4 02				mov	ah,2
020A:8577  32 FF				xor	bh,bh			; Zero register
020A:8579  E8 0678				call	sub_136			; (8BF4)
020A:857C  58					pop	ax
020A:857D  8A D4				mov	dl,ah
020A:857F  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:857F  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:8584  5B					pop	bx
020A:8585			loc_1438:
020A:8585  58					pop	ax
020A:8586  5A					pop	dx
020A:8587  59					pop	cx
020A:8588  C3					retn
				sub_120		endp
  
020A:8589  87 DB				xchg	bx,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 285

020A:858B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_121		proc	near
020A:858C  52					push	dx
020A:858D  E8 167E				call	sub_162			; (9C0E)
020A:8590  BF 0699				mov	di,699h
020A:8593  B9 000A				mov	cx,0Ah
020A:8596  B0 20				mov	al,20h			; ' '
020A:8598  FC					cld				; Clear direction
020A:8599  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:859B  B4 36				mov	ah,36h			; '6'
020A:859D  32 D2				xor	dl,dl			; Zero register
020A:859F  CD 21				int	21h			; DOS Services  ah=function 36h
										;  get free space, drive dl,1=a:
020A:85A1  3D FFFF				cmp	ax,0FFFFh
020A:85A4  75 03				jne	loc_1439		; Jump if not equal
020A:85A6  E9 0096				jmp	loc_1445		; (863F)
020A:85A9			loc_1439:
020A:85A9  F7 E1				mul	cx			; dx:ax = reg * ax
020A:85AB  F7 E3				mul	bx			; dx:ax = reg * ax
020A:85AD  81 FA 05F5				cmp	dx,5F5h
020A:85B1  72 0F				jb	loc_1440		; Jump if below
020A:85B3  56					push	si
020A:85B4  BD 069E				mov	bp,69Eh
020A:85B7  BE 4913				mov	si,4913h
020A:85BA  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:85BA  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:85BF  5E					pop	si
020A:85C0  EB 7D				jmp	short loc_1445		; (863F)
020A:85C2			loc_1440:
020A:85C2  B9 2710				mov	cx,2710h
020A:85C5  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:85C7  50					push	ax
020A:85C8  BD 069E				mov	bp,69Eh
020A:85CB  B3 01				mov	bl,1
020A:85CD  8B C2				mov	ax,dx
020A:85CF  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:85CF  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:85D4  83 ED 04				sub	bp,4
020A:85D7  3E: 8A 4E 00				mov	cl,ds:[bp]
020A:85DB  58					pop	ax
020A:85DC  3D 0000				cmp	ax,0
020A:85DF  75 11				jne	loc_1441		; Jump if not equal
020A:85E1  80 F9 20				cmp	cl,20h			; ' '
020A:85E4  74 59				je	loc_1445		; Jump if equal
020A:85E6  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:85EB  4D					dec	bp
020A:85EC  3E: 88 4E 00				mov	ds:[bp],cl
020A:85F0  EB 4D				jmp	short loc_1445		; (863F)
020A:85F2			loc_1441:
020A:85F2  80 F9 20				cmp	cl,20h			; ' '
020A:85F5  75 02				jne	loc_1442		; Jump if not equal
020A:85F7  B1 30				mov	cl,30h			; '0'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 286

020A:85F9			loc_1442:
020A:85F9  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:85FE  4D					dec	bp
020A:85FF  3E: 88 4E 00				mov	ds:[bp],cl
020A:8603  83 C5 02				add	bp,2
020A:8606  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:860B  75 05				jne	loc_1443		; Jump if not equal
020A:860D  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:8612			loc_1443:
020A:8612  45					inc	bp
020A:8613  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:8618  75 05				jne	loc_1444		; Jump if not equal
020A:861A  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:861F			loc_1444:
020A:861F  BD 0699				mov	bp,699h
020A:8622  B3 01				mov	bl,1
020A:8624  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:8624  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:8629  83 ED 04				sub	bp,4
020A:862C  3E: 8B 46 00				mov	ax,ds:[bp]
020A:8630  80 FC 20				cmp	ah,20h			; ' '
020A:8633  74 0A				je	loc_1445		; Jump if equal
020A:8635  3E: C6 46 01 2C			mov	byte ptr ds:[bp+1],2Ch	; ','
020A:863A  4D					dec	bp
020A:863B  3E: 89 46 00				mov	ds:[bp],ax
020A:863F			loc_1445:
020A:863F  5A					pop	dx
020A:8640  C3					retn
				sub_121		endp
  
020A:8641  87 DB				xchg	bx,bx
020A:8643  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_122		proc	near
020A:8644  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:8649  06					push	es
020A:864A  E8 15C1				call	sub_162			; (9C0E)
020A:864D  8A E6				mov	ah,dh
020A:864F  8A 36 2A77				mov	dh,byte ptr ds:[2A77h]	; (9B68:2A77=0ABh)
020A:8653  BE 1314				mov	si,1314h
020A:8656  BF 0719				mov	di,719h
020A:8659  B9 1320				mov	cx,1320h
020A:865C  81 E9 1314				sub	cx,1314h
020A:8660  BB 1ABA				mov	bx,1ABAh
020A:8663			loc_1446:
020A:8663  2E: 3A 37				cmp	dh,cs:[bx]
020A:8666  74 0D				je	loc_1448		; Jump if equal
020A:8668  43					inc	bx
020A:8669  03 F1				add	si,cx
020A:866B  2E: 80 3F 00				cmp	byte ptr cs:[bx],0
020A:866F  74 02				je	loc_1447		; Jump if equal
020A:8671  EB F0				jmp	short loc_1446		; (8663)
020A:8673			loc_1447:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 287

020A:8673  EB 00				jmp	short loc_1448		; (8675)
020A:8675			loc_1448:
020A:8675  FC					cld				; Clear direction
020A:8676  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8678  8A 36 2A79				mov	dh,byte ptr ds:[2A79h]	; (9B68:2A79=20h)
020A:867C  BE 1380				mov	si,1380h
020A:867F  BF 070E				mov	di,70Eh
020A:8682  B9 1385				mov	cx,1385h
020A:8685  81 E9 1380				sub	cx,1380h
020A:8689  F6 C6 0F				test	dh,0Fh
020A:868C  74 30				jz	loc_1450		; Jump if zero
020A:868E  03 F1				add	si,cx
020A:8690  F6 C6 01				test	dh,1
020A:8693  75 29				jnz	loc_1450		; Jump if not zero
020A:8695  03 F1				add	si,cx
020A:8697  F6 C6 02				test	dh,2
020A:869A  75 22				jnz	loc_1450		; Jump if not zero
020A:869C  03 F1				add	si,cx
020A:869E  52					push	dx
020A:869F  8A D6				mov	dl,dh
020A:86A1  80 E2 FB				and	dl,0FBh
020A:86A4  F6 C2 14				test	dl,14h
020A:86A7  5A					pop	dx
020A:86A8  74 06				jz	loc_1449		; Jump if zero
020A:86AA  03 F1				add	si,cx
020A:86AC  03 F1				add	si,cx
020A:86AE  EB 0E				jmp	short loc_1450		; (86BE)
020A:86B0			loc_1449:
020A:86B0  52					push	dx
020A:86B1  8A D6				mov	dl,dh
020A:86B3  80 E2 FB				and	dl,0FBh
020A:86B6  F6 C2 0C				test	dl,0Ch
020A:86B9  5A					pop	dx
020A:86BA  74 02				jz	loc_1450		; Jump if zero
020A:86BC  03 F1				add	si,cx
020A:86BE			loc_1450:
020A:86BE  FC					cld				; Clear direction
020A:86BF  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:86C1  80 FC 00				cmp	ah,0
020A:86C4  74 55				je	loc_1454		; Jump if equal
020A:86C6  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (9B68:1309=0A2h)
020A:86CB  75 05				jne	loc_1451		; Jump if not equal
020A:86CD  E8 FD60		;*		call	sub_116			;*(8430)
020A:86CD  E8 60 FD				db	0E8h, 60h,0FDh
020A:86D0  EB 49				jmp	short loc_1454		; (871B)
020A:86D2			loc_1451:
020A:86D2  BE 0719				mov	si,719h
020A:86D5  BF 0719				mov	di,719h
020A:86D8  81 EF 0076				sub	di,76h
020A:86DC  D1 E7				shl	di,1			; Shift w/zeros fill
020A:86DE  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:86E2  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:86E5  8E C0				mov	es,ax
020A:86E7  B9 1320				mov	cx,1320h
020A:86EA  81 E9 1314				sub	cx,1314h
  
020A:86EE			locloop_1452:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 288

020A:86EE  8A 24				mov	ah,[si]
020A:86F0  E8 FE3D				call	sub_120			; (8530)
020A:86F3  83 C7 02				add	di,2
020A:86F6  46					inc	si
020A:86F7  E2 F5				loop	locloop_1452		; Loop if cx > 0
  
020A:86F9  BE 070E				mov	si,70Eh
020A:86FC  BF 070E				mov	di,70Eh
020A:86FF  81 EF 0076				sub	di,76h
020A:8703  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8705  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8709  B9 1385				mov	cx,1385h
020A:870C  81 E9 1380				sub	cx,1380h
  
020A:8710			locloop_1453:
020A:8710  8A 24				mov	ah,[si]
020A:8712  E8 FE1B				call	sub_120			; (8530)
020A:8715  83 C7 02				add	di,2
020A:8718  46					inc	si
020A:8719  E2 F5				loop	locloop_1453		; Loop if cx > 0
  
020A:871B			loc_1454:
020A:871B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:8720  5A					pop	dx
020A:8721  8E C2				mov	es,dx
020A:8723  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:8728  5A					pop	dx
020A:8729  75 0A				jnz	loc_1455		; Jump if not zero
020A:872B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:8730  74 03				je	loc_1455		; Jump if equal
020A:8732  E8 17AF				call	sub_168			; (9EE4)
020A:8735			loc_1455:
020A:8735  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:873A  C3					retn
				sub_122		endp
  
020A:873B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_123		proc	near
020A:873C  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:8740  B9 0011				mov	cx,11h
  
020A:8743			locloop_1456:
020A:8743  C6 47 30 07				mov	byte ptr [bx+30h],7
020A:8747  43					inc	bx
020A:8748  E2 F9				loop	locloop_1456		; Loop if cx > 0
  
020A:874A  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:874E  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:8753  74 0C				je	loc_1457		; Jump if equal
020A:8755  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:8759  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:875D  C6 47 34 00				mov	byte ptr [bx+34h],0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 289

020A:8761			loc_1457:
020A:8761  C3					retn
				sub_123		endp
  
020A:8762  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_124		proc	near
020A:8764  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:8768  B9 0011				mov	cx,11h
  
020A:876B			locloop_1458:
020A:876B  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:876F  43					inc	bx
020A:8770  E2 F9				loop	locloop_1458		; Loop if cx > 0
  
020A:8772  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:8776  80 3E 2EBD 01			cmp	byte ptr ds:[2EBDh],1	; (9B68:2EBD=0EEh)
020A:877B  74 0C				je	loc_1459		; Jump if equal
020A:877D  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:8781  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:8785  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:8789			loc_1459:
020A:8789  2E: 80 3E 4CE7 01			cmp	byte ptr cs:data_664+0Eh,1	; (020A:4CE7=4Eh)
020A:878F  75 04				jne	loc_1460		; Jump if not equal
020A:8791  C6 47 38 07				mov	byte ptr [bx+38h],7
020A:8795			loc_1460:
020A:8795  C3					retn
				sub_124		endp
  
020A:8796  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_125		proc	near
020A:8798  57					push	di
020A:8799  56					push	si
020A:879A  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:879F  06					push	es
020A:87A0  E8 146B				call	sub_162			; (9C0E)
020A:87A3  B9 15FB				mov	cx,15FBh
020A:87A6  81 E9 15B1				sub	cx,15B1h
020A:87AA  BE 15B1				mov	si,15B1h
020A:87AD  8A C1				mov	al,cl
020A:87AF  F6 E4				mul	ah			; ax = reg * al
020A:87B1  03 F0				add	si,ax
020A:87B3  BF 07A9				mov	di,7A9h
020A:87B6  FC					cld				; Clear direction
020A:87B7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:87B9  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:87BE  5A					pop	dx
020A:87BF  8E C2				mov	es,dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 290

020A:87C1  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:87C6  5A					pop	dx
020A:87C7  75 0A				jnz	loc_1462		; Jump if not zero
020A:87C9  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:87CE  74 03				je	loc_1462		; Jump if equal
020A:87D0  E8 1711				call	sub_168			; (9EE4)
020A:87D3			loc_1462:
020A:87D3  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:87D8  5E					pop	si
020A:87D9  5F					pop	di
020A:87DA  C3					retn
				sub_125		endp
  
020A:87DB  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_126		proc	near
020A:87DC  50					push	ax
020A:87DD  53					push	bx
020A:87DE  51					push	cx
020A:87DF  52					push	dx
020A:87E0  56					push	si
020A:87E1  57					push	di
020A:87E2  55					push	bp
020A:87E3  06					push	es
020A:87E4  BD 068E				mov	bp,68Eh
020A:87E7  A1 2A63				mov	ax,word ptr ds:[2A63h]	; (D233:2A63=8B9h)
020A:87EA  B3 01				mov	bl,1
020A:87EC  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:87EC  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:87F1  BD 072E				mov	bp,72Eh
020A:87F4  A1 2A67				mov	ax,word ptr ds:[2A67h]	; (D233:2A67=0A6F3h)
020A:87F7  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:87FD  75 04				jne	loc_1463		; Jump if not equal
020A:87FF  03 06 2A6F				add	ax,word ptr ds:[2A6Fh]	; (D233:2A6F=0EBF9h)
020A:8803			loc_1463:
020A:8803  B3 01				mov	bl,1
020A:8805  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:8805  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:880A  BD 06DE				mov	bp,6DEh
020A:880D  A1 2A6B				mov	ax,word ptr ds:[2A6Bh]	; (D233:2A6B=7F8h)
020A:8810  B3 01				mov	bl,1
020A:8812  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:8812  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:8817  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (D233:1306=0)
020A:881B  80 7F 4E 00				cmp	byte ptr [bx+4Eh],0
020A:881F  75 03				jne	loc_1464		; Jump if not equal
020A:8821  E9 0090				jmp	loc_1471		; (88B4)
020A:8824			loc_1464:
020A:8824  BE 068E				mov	si,68Eh
020A:8827  B9 0005				mov	cx,5
020A:882A  80 3E 1309 01			cmp	byte ptr ds:[1309h],1	; (D233:1309=0)
020A:882F  75 29				jne	loc_1467		; Jump if not equal
020A:8831  B3 03				mov	bl,3
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 291

020A:8833  BA 1328				mov	dx,1328h
020A:8836			loc_1465:
020A:8836  B4 02				mov	ah,2
020A:8838  32 FF				xor	bh,bh			; Zero register
020A:883A  E8 03B7				call	sub_136			; (8BF4)
020A:883D  FC					cld				; Clear direction
020A:883E  B9 0005				mov	cx,5
020A:8841  52					push	dx
  
020A:8842			locloop_1466:
020A:8842  AC					lodsb				; String [si] to al
020A:8843  8A D0				mov	dl,al
020A:8845  9A 16FA:0350		;*		call	far ptr sub_234		;*(16FA:0350)
020A:8845  9A 50 03 FA 16			db	 9Ah, 50h, 03h,0FAh, 16h
020A:884A  E2 F6				loop	locloop_1466		; Loop if cx > 0
  
020A:884C  5A					pop	dx
020A:884D  81 C2 0100				add	dx,100h
020A:8851  83 C6 4B				add	si,4Bh
020A:8854  FE CB				dec	bl
020A:8856  75 DE				jnz	loc_1465		; Jump if not zero
020A:8858  EB 5A				jmp	short loc_1471		; (88B4)
020A:885A			loc_1467:
020A:885A  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (D233:12FB=0)
020A:885D  8E C0				mov	es,ax
020A:885F  BF 068E				mov	di,68Eh
020A:8862  81 EF 0076				sub	di,76h
020A:8866  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8868  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (D233:12FD=0)
  
020A:886C			locloop_1468:
020A:886C  FC					cld				; Clear direction
020A:886D  AC					lodsb				; String [si] to al
020A:886E  8A E0				mov	ah,al
020A:8870  E8 FCBD				call	sub_120			; (8530)
020A:8873  83 C7 02				add	di,2
020A:8876  E2 F4				loop	locloop_1468		; Loop if cx > 0
  
020A:8878  BE 06DE				mov	si,6DEh
020A:887B  BF 06DE				mov	di,6DEh
020A:887E  81 EF 0076				sub	di,76h
020A:8882  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8884  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (D233:12FD=0)
020A:8888  B9 0005				mov	cx,5
  
020A:888B			locloop_1469:
020A:888B  AC					lodsb				; String [si] to al
020A:888C  8A E0				mov	ah,al
020A:888E  E8 FC9F				call	sub_120			; (8530)
020A:8891  83 C7 02				add	di,2
020A:8894  E2 F5				loop	locloop_1469		; Loop if cx > 0
  
020A:8896  BE 072E				mov	si,72Eh
020A:8899  BF 072E				mov	di,72Eh
020A:889C  81 EF 0076				sub	di,76h
020A:88A0  D1 E7				shl	di,1			; Shift w/zeros fill
020A:88A2  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (D233:12FD=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 292

020A:88A6  B9 0005				mov	cx,5
  
020A:88A9			locloop_1470:
020A:88A9  AC					lodsb				; String [si] to al
020A:88AA  8A E0				mov	ah,al
020A:88AC  E8 FC81				call	sub_120			; (8530)
020A:88AF  83 C7 02				add	di,2
020A:88B2  E2 F5				loop	locloop_1470		; Loop if cx > 0
  
020A:88B4			loc_1471:
020A:88B4  07					pop	es
020A:88B5  5D					pop	bp
020A:88B6  5F					pop	di
020A:88B7  5E					pop	si
020A:88B8  5A					pop	dx
020A:88B9  59					pop	cx
020A:88BA  5B					pop	bx
020A:88BB  58					pop	ax
020A:88BC  C3					retn
				sub_126		endp
  
020A:88BD  87 DB				xchg	bx,bx
020A:88BF  90					nop
020A:88C0  50					push	ax
020A:88C1  53					push	bx
020A:88C2  51					push	cx
020A:88C3  52					push	dx
020A:88C4  57					push	di
020A:88C5  55					push	bp
020A:88C6  06					push	es
020A:88C7  A1 2D82				mov	ax,data_423		; (020A:2D82=5357h)
020A:88CA  BD 07BC				mov	bp,7BCh
020A:88CD  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:88CD  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:88D2  A1 2D84				mov	ax,data_424		; (020A:2D84=735Ch)
020A:88D5  45					inc	bp
020A:88D6  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:88D6  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:88DB  A1 12FB				mov	ax,data_223		; (020A:12FB=0)
020A:88DE  8E C0				mov	es,ax
020A:88E0  BF 07A9				mov	di,7A9h
020A:88E3  83 C7 13				add	di,13h
020A:88E6  81 EF 0076				sub	di,76h
020A:88EA  D1 E7				shl	di,1			; Shift w/zeros fill
020A:88EC  03 3E 12FD				add	di,data_224		; (020A:12FD=0)
020A:88F0  BD 07BC				mov	bp,7BCh
020A:88F3  B9 0009				mov	cx,9
  
020A:88F6			locloop_1472:
020A:88F6  3E: 8A 66 00				mov	ah,ds:[bp]
020A:88FA  E8 FC33				call	sub_120			; (8530)
020A:88FD  47					inc	di
020A:88FE  47					inc	di
020A:88FF  45					inc	bp
020A:8900  E2 F4				loop	locloop_1472		; Loop if cx > 0
  
020A:8902  8B 1E 2D88				mov	bx,data_426		; (020A:2D88=6574h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 293

020A:8906  2B 1E 2D86				sub	bx,data_425		; (020A:2D86=7379h)
020A:890A  74 70				jz	loc_1476		; Jump if zero
020A:890C  84A1					dw	84A1h			; Data table (indexed access)
020A:890E  2D 062B				sub	ax,62Bh
020A:8911  86 2D				xchg	ch,[di]
020A:8913  B9 0040				mov	cx,40h
020A:8916  F7 E1				mul	cx			; dx:ax = reg * ax
020A:8918  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:891A  8B 0E 2D84				mov	cx,data_424		; (020A:2D84=735Ch)
020A:891E  3B 0E 2A3E				cmp	cx,data_374		; (020A:2A3E=0AF20h)
020A:8922  74 06				je	loc_1473		; Jump if equal
020A:8924  3B 06 2D8A				cmp	ax,data_427		; (020A:2D8A=336Dh)
020A:8928  74 52				je	loc_1476		; Jump if equal
020A:892A			loc_1473:
020A:892A  8B D0				mov	dx,ax
020A:892C  BF 07A9				mov	di,7A9h
020A:892F  83 C7 1E				add	di,1Eh
020A:8932  81 EF 0076				sub	di,76h
020A:8936  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8938  03 3E 12FD				add	di,data_224		; (020A:12FD=0)
020A:893C  A1 2D8A				mov	ax,data_427		; (020A:2D8A=336Dh)
020A:893F  24 FE				and	al,0FEh
020A:8941  03 F8				add	di,ax
020A:8943  B4 FA				mov	ah,0FAh
020A:8945  E8 FBE8				call	sub_120			; (8530)
020A:8948  47					inc	di
020A:8949  B4 0F				mov	ah,0Fh
020A:894B  E8 FBE2				call	sub_120			; (8530)
020A:894E  89 16 2D8A				mov	data_427,dx		; (020A:2D8A=336Dh)
020A:8952  BF 07A9				mov	di,7A9h
020A:8955  83 C7 1E				add	di,1Eh
020A:8958  81 EF 0076				sub	di,76h
020A:895C  D1 E7				shl	di,1			; Shift w/zeros fill
020A:895E  03 3E 12FD				add	di,data_224		; (020A:12FD=0)
020A:8962  B4 DD				mov	ah,0DDh
020A:8964  F7 C2 0001				test	dx,1
020A:8968  74 02				jz	loc_1475		; Jump if zero
020A:896A  B4 DE				mov	ah,0DEh
020A:896C			loc_1475:
020A:896C  80 E2 FE				and	dl,0FEh
020A:896F  03 FA				add	di,dx
020A:8971  E8 FBBC				call	sub_120			; (8530)
020A:8974  47					inc	di
020A:8975  8A 26 11E7				mov	ah,data_221		; (020A:11E7=0)
020A:8979  E8 FBB4				call	sub_120			; (8530)
020A:897C			loc_1476:
020A:897C  07					pop	es
020A:897D  5D					pop	bp
020A:897E  5F					pop	di
020A:897F  5A					pop	dx
020A:8980  59					pop	cx
020A:8981  5B					pop	bx
020A:8982  58					pop	ax
020A:8983  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 294

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_127		proc	near
020A:8984  52					push	dx
020A:8985  51					push	cx
020A:8986  56					push	si
020A:8987  57					push	di
020A:8988  06					push	es
020A:8989  E8 1282				call	sub_162			; (9C0E)
020A:898C  BE 1595				mov	si,1595h
020A:898F  F6 06 1594 03			test	byte ptr ds:[1594h],3	; (9B68:1594=20h)
020A:8994  75 03				jnz	loc_1477		; Jump if not zero
020A:8996  BE 15A3				mov	si,15A3h
020A:8999			loc_1477:
020A:8999  BF 06B9				mov	di,6B9h
020A:899C  B9 15A3				mov	cx,15A3h
020A:899F  81 E9 1595				sub	cx,1595h
020A:89A3  FC					cld				; Clear direction
020A:89A4  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:89A6  32 D2				xor	dl,dl			; Zero register
020A:89A8  E8 125A				call	sub_159			; (9C05)
020A:89AB  26: A1 0000				mov	ax,word ptr es:[0]	; (A0AF:0000=0)
020A:89AF  3D FFFF				cmp	ax,0FFFFh
020A:89B2  75 04				jne	loc_1478		; Jump if not equal
020A:89B4  B2 01				mov	dl,1
020A:89B6  33 C0				xor	ax,ax			; Zero register
020A:89B8			loc_1478:
020A:89B8  BD 0679				mov	bp,679h
020A:89BB  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:89BB  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:89C0  26: A1 0002				mov	ax,word ptr es:[2]	; (A0AF:0002=0)
020A:89C4  0A D2				or	dl,dl			; Zero ?
020A:89C6  74 02				jz	loc_1479		; Jump if zero
020A:89C8  33 C0				xor	ax,ax			; Zero register
020A:89CA			loc_1479:
020A:89CA  BD 067E				mov	bp,67Eh
020A:89CD  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:89CD  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:89D2  BE 0000				mov	si,0
020A:89D5  F6 06 1594 03			test	byte ptr ds:[1594h],3	; (9B68:1594=20h)
020A:89DA  75 0B				jnz	loc_1480		; Jump if not zero
020A:89DC  A0 2A2B				mov	al,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:89DF  FE C8				dec	al
020A:89E1  B3 15				mov	bl,15h
020A:89E3  F6 E3				mul	bl			; ax = reg * al
020A:89E5  03 F0				add	si,ax
020A:89E7			loc_1480:
020A:89E7  26: 8B 04				mov	ax,es:[si]
020A:89EA  0A D2				or	dl,dl			; Zero ?
020A:89EC  74 02				jz	loc_1481		; Jump if zero
020A:89EE  33 C0				xor	ax,ax			; Zero register
020A:89F0			loc_1481:
020A:89F0  BD 06C9				mov	bp,6C9h
020A:89F3  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:89F3  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:89F8  26: 8B 44 04				mov	ax,es:[si+4]
020A:89FC  BD 06CE				mov	bp,6CEh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 295

020A:89FF  0A D2				or	dl,dl			; Zero ?
020A:8A01  74 02				jz	loc_1482		; Jump if zero
020A:8A03  33 C0				xor	ax,ax			; Zero register
020A:8A05			loc_1482:
020A:8A05  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:8A05  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:8A0A  07					pop	es
020A:8A0B  5F					pop	di
020A:8A0C  5E			data_711	db	5Eh			; Data table (indexed access)
020A:8A0D  5A					pop	dx
020A:8A0E  59					pop	cx
020A:8A0F  E8 11E7				call	sub_157			; (9BF9)
020A:8A12  C3					retn
				sub_127		endp
  
020A:8A13  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_128		proc	near
020A:8A14  BF 2D5B				mov	di,2D5Bh
020A:8A17  57					push	di
020A:8A18  B9 003C				mov	cx,3Ch
020A:8A1B  B3 00				mov	bl,0
  
020A:8A1D			locloop_1483:
020A:8A1D  26: 8A 04				mov	al,es:[si]
020A:8A20  3C 20				cmp	al,20h			; ' '
020A:8A22  72 0B				jb	loc_1485		; Jump if below
020A:8A24  3C 80				cmp	al,80h
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:8A26			loc_1484:
020A:8A26  73 07				jae	loc_1485		; Jump if above or =
020A:8A28  88 05				mov	[di],al
020A:8A2A  FE C3				inc	bl
020A:8A2C  47					inc	di
020A:8A2D  EB 0E				jmp	short loc_1486		; (8A3D)
020A:8A2F			loc_1485:
020A:8A2F  80 FB 00				cmp	bl,0
020A:8A32  74 09				je	loc_1486		; Jump if equal
020A:8A34  80 FB 08				cmp	bl,8
020A:8A37  77 0C				ja	loc_1487		; Jump if above
020A:8A39  5F					pop	di
020A:8A3A  57					push	di
020A:8A3B  B3 00				mov	bl,0
020A:8A3D			loc_1486:
020A:8A3D  46					inc	si
020A:8A3E  80 FB 20				cmp	bl,20h			; ' '
020A:8A41  77 02				ja	loc_1487		; Jump if above
020A:8A43  E2 D8				loop	locloop_1483		; Loop if cx > 0
  
020A:8A45			loc_1487:
020A:8A45  5F					pop	di
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 296

020A:8A46  C3					retn
				sub_128		endp
  
020A:8A47  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_129		proc	near
020A:8A48  50					push	ax
020A:8A49  B5 20				mov	ch,20h			; ' '
020A:8A4B  B4 01				mov	ah,1
020A:8A4D  E8 01A4				call	sub_136			; (8BF4)
020A:8A50  58					pop	ax
020A:8A51  C3					retn
				sub_129		endp
  
020A:8A52  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_130		proc	near
020A:8A54  50					push	ax
020A:8A55  8B 0E 2A91				mov	cx,word ptr ds:[2A91h]	; (9B68:2A91=0AAE2h)
020A:8A59  B4 01				mov	ah,1
020A:8A5B  E8 0196				call	sub_136			; (8BF4)
020A:8A5E  58					pop	ax
020A:8A5F  C3					retn
				sub_130		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_131		proc	near
020A:8A60  06					push	es
020A:8A61  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:8A64  8E C0				mov	es,ax
020A:8A66  BF 06E7				mov	di,6E7h
020A:8A69  81 EF 0643				sub	di,643h
020A:8A6D  81 C7 0190				add	di,190h
020A:8A71  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8A73  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8A77  B9 0019				mov	cx,19h
020A:8A7A  B2 41				mov	dl,41h			; 'A'
020A:8A7C  B6 61				mov	dh,61h			; 'a'
  
020A:8A7E			locloop_1488:
020A:8A7E  8A E2				mov	ah,dl
020A:8A80  A0 11E7				mov	al,byte ptr ds:[11E7h]	; (9B68:11E7=0A8h)
020A:8A83  F7 C3 8000				test	bx,8000h
020A:8A87  75 04				jnz	loc_1489		; Jump if not zero
020A:8A89  8A E6				mov	ah,dh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 297

020A:8A8B  B0 07				mov	al,7
020A:8A8D			loc_1489:
020A:8A8D  E8 FAA0				call	sub_120			; (8530)
020A:8A90  47					inc	di
020A:8A91  8A E0				mov	ah,al
020A:8A93  E8 FA9A				call	sub_120			; (8530)
020A:8A96  81 C7 009F				add	di,9Fh
020A:8A9A  FE C2				inc	dl
020A:8A9C  FE C6				inc	dh
020A:8A9E  D1 C3				rol	bx,1			; Rotate
020A:8AA0  83 F9 0C				cmp	cx,0Ch
020A:8AA3  75 11				jne	loc_1490		; Jump if not equal
020A:8AA5  BF 070D				mov	di,70Dh
020A:8AA8  81 EF 0643				sub	di,643h
020A:8AAC  81 C7 0190				add	di,190h
020A:8AB0  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8AB2  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8AB6			loc_1490:
020A:8AB6  83 F9 0A				cmp	cx,0Ah
020A:8AB9  75 0E				jne	loc_1491		; Jump if not equal
020A:8ABB  81 C7 01E0				add	di,1E0h
020A:8ABF  8A 3E 430B				mov	bh,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:8AC3  D0 CF				ror	bh,1			; Rotate
020A:8AC5  D0 CF				ror	bh,1			; Rotate
020A:8AC7  D0 CF				ror	bh,1			; Rotate
020A:8AC9			loc_1491:
020A:8AC9  83 F9 06				cmp	cx,6
020A:8ACC  75 04				jne	loc_1492		; Jump if not equal
020A:8ACE  8A 3E 42CE				mov	bh,byte ptr ds:[42CEh]	; (9B68:42CE=0)
020A:8AD2			loc_1492:
020A:8AD2  E2 AA				loop	locloop_1488		; Loop if cx > 0
  
020A:8AD4  07					pop	es
020A:8AD5  C3					retn
				sub_131		endp
  
020A:8AD6  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_132		proc	near
020A:8AD8  51					push	cx
020A:8AD9  57					push	di
020A:8ADA  56					push	si
020A:8ADB  06					push	es
020A:8ADC  E8 112F				call	sub_162			; (9C0E)
020A:8ADF  BE 14A6				mov	si,14A6h
020A:8AE2  BF 02EF				mov	di,2EFh
020A:8AE5  B9 0003				mov	cx,3
020A:8AE8  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:8AED  75 02				jnz	loc_1493		; Jump if not zero
020A:8AEF  03 F1				add	si,cx
020A:8AF1			loc_1493:
020A:8AF1  FC					cld				; Clear direction
020A:8AF2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 298

020A:8AF4  BE 02EF				mov	si,2EFh
020A:8AF7  BF 02EF				mov	di,2EFh
020A:8AFA  81 EF 0076				sub	di,76h
020A:8AFE  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8B00  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8B04  A1 12FB				mov	ax,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:8B07  8E C0				mov	es,ax
020A:8B09  B9 0003				mov	cx,3
  
020A:8B0C			locloop_1494:
020A:8B0C  8A 24				mov	ah,[si]
020A:8B0E  E8 FA1F				call	sub_120			; (8530)
020A:8B11  83 C7 02				add	di,2
020A:8B14  46					inc	si
020A:8B15  E2 F5				loop	locloop_1494		; Loop if cx > 0
  
020A:8B17  07					pop	es
020A:8B18  5E					pop	si
020A:8B19  5F					pop	di
020A:8B1A  59					pop	cx
020A:8B1B  C3					retn
				sub_132		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_133		proc	near
020A:8B1C  E8 10EF				call	sub_162			; (9C0E)
020A:8B1F  A0 14AD				mov	al,byte ptr ds:[14ADh]	; (9B68:14AD=0E3h)
020A:8B22  B9 14C5				mov	cx,14C5h
020A:8B25  81 E9 14AE				sub	cx,14AEh
020A:8B29  F6 E1				mul	cl			; ax = reg * al
020A:8B2B  05 14AE				add	ax,14AEh
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:8B2E			loc_1495:
020A:8B2E  8B F0				mov	si,ax
020A:8B30  BF 0460				mov	di,460h
020A:8B33  B9 14B9				mov	cx,14B9h
020A:8B36  81 E9 14AE				sub	cx,14AEh
020A:8B3A  FC					cld				; Clear direction
020A:8B3B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8B3D  B9 14C5				mov	cx,14C5h
020A:8B40  81 E9 14B9				sub	cx,14B9h
020A:8B44  BF 0552				mov	di,552h
020A:8B47  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8B49  B9 151A				mov	cx,151Ah
020A:8B4C  81 E9 150A				sub	cx,150Ah
020A:8B50  BE 150A				mov	si,150Ah
020A:8B53  BF 046F				mov	di,46Fh
020A:8B56  F6 06 14AD 02			test	byte ptr ds:[14ADh],2	; (9B68:14AD=0E3h)
020A:8B5B  74 03				jz	loc_1496		; Jump if zero
020A:8B5D  BE 151A				mov	si,151Ah
020A:8B60			loc_1496:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 299

020A:8B60  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8B62  C3					retn
				sub_133		endp
  
020A:8B63  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_134		proc	near
020A:8B64  E8 10A7				call	sub_162			; (9C0E)
020A:8B67  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:8B6B  C6 47 6F 00				mov	byte ptr [bx+6Fh],0
020A:8B6F  C6 47 5C 00				mov	byte ptr [bx+5Ch],0
020A:8B73  C6 47 6E 00				mov	byte ptr [bx+6Eh],0
020A:8B77  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:8B7A  A8 01				test	al,1
020A:8B7C  74 04				jz	loc_1497		; Jump if zero
020A:8B7E  C6 47 6F 07				mov	byte ptr [bx+6Fh],7
020A:8B82			loc_1497:
020A:8B82  A8 02				test	al,2
020A:8B84  74 04				jz	loc_1498		; Jump if zero
020A:8B86  C6 47 5C 07				mov	byte ptr [bx+5Ch],7
020A:8B8A			loc_1498:
020A:8B8A  A8 04				test	al,4
020A:8B8C  74 04				jz	loc_1499		; Jump if zero
020A:8B8E  C6 47 6E 07				mov	byte ptr [bx+6Eh],7
020A:8B92			loc_1499:
020A:8B92  BB 1534				mov	bx,1534h
020A:8B95  D7					xlat				; al=[al+[bx]] table
020A:8B96  8A E0				mov	ah,al
020A:8B98  25 0FF0				and	ax,0FF0h
020A:8B9B  B1 04				mov	cl,4
020A:8B9D  D2 C8				ror	al,cl			; Rotate
020A:8B9F  8A DC				mov	bl,ah
020A:8BA1  32 E4				xor	ah,ah			; Zero register
020A:8BA3  B9 1542				mov	cx,1542h
020A:8BA6  81 E9 153C				sub	cx,153Ch
020A:8BAA  F6 E1				mul	cl			; ax = reg * al
020A:8BAC  05 153C				add	ax,153Ch
020A:8BAF  8B F0				mov	si,ax
020A:8BB1  BF 051D				mov	di,51Dh
020A:8BB4  FC					cld				; Clear direction
020A:8BB5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8BB7  B8 1564				mov	ax,1564h
020A:8BBA  2D 1554				sub	ax,1554h
020A:8BBD  8B C8				mov	cx,ax
020A:8BBF  F6 E3				mul	bl			; ax = reg * al
020A:8BC1  8B F0				mov	si,ax
020A:8BC3  81 C6 1554				add	si,1554h
020A:8BC7  BF 0563				mov	di,563h
020A:8BCA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8BCC  C3					retn
				sub_134		endp
  
020A:8BCD  87 DB				xchg	bx,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 300

020A:8BCF  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_135		proc	near
020A:8BD0  50					push	ax
020A:8BD1  53					push	bx
020A:8BD2  8A E0				mov	ah,al
020A:8BD4  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:8BD8  A0 11E8				mov	al,data_222		; (020A:11E8=0)
020A:8BDB  88 47 52				mov	[bx+52h],al
020A:8BDE  E8 FBB7				call	sub_125			; (8798)
020A:8BE1  E8 F84C		;*		call	sub_116			;*(8430)
020A:8BE1  E8 4C F8				db	0E8h, 4Ch,0F8h
020A:8BE4  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:8BE4  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:8BE9  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (020A:1306=0)
020A:8BED  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:8BF1  5B					pop	bx
020A:8BF2  58					pop	ax
020A:8BF3  C3					retn
				sub_135		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_136		proc	near
020A:8BF4  80 3E 2642 01			cmp	byte ptr ds:[2642h],1	; (9B68:2642=0A8h)
020A:8BF9  74 02				je	loc_1500		; Jump if equal
020A:8BFB  EB 58				jmp	short loc_1503		; (8C55)
020A:8BFD			loc_1500:
020A:8BFD  80 FC 02				cmp	ah,2
020A:8C00  74 02				je	loc_1501		; Jump if equal
020A:8C02  EB 53				jmp	short loc_1504		; (8C57)
020A:8C04			loc_1501:
020A:8C04  50					push	ax
020A:8C05  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:8C0A  1E					push	ds
020A:8C0B  E8 0FEB				call	sub_157			; (9BF9)
020A:8C0E  8A C6				mov	al,dh
020A:8C10  FE C0				inc	al
020A:8C12  D4 0A				aam				; Ascii adjust
020A:8C14  0D 3030				or	ax,3030h
020A:8C17  86 E0				xchg	ah,al
020A:8C19  A3 2646				mov	word ptr ds:[2646h],ax	; (9B68:2646=20AEh)
020A:8C1C  8A C2				mov	al,dl
020A:8C1E  FE C0				inc	al
020A:8C20  D4 0A				aam				; Ascii adjust
020A:8C22  0D 3030				or	ax,3030h
020A:8C25  86 E0				xchg	ah,al
020A:8C27  A3 2649				mov	word ptr ds:[2649h],ax	; (9B68:2649=0AAA5h)
020A:8C2A  52					push	dx
020A:8C2B  BA 2644				mov	dx,2644h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 301

020A:8C2E  B4 09				mov	ah,9
020A:8C30  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:8C32  5A					pop	dx
020A:8C33  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:8C38  5A					pop	dx
020A:8C39  8E DA				mov	ds,dx
020A:8C3B  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:8C40  5A					pop	dx
020A:8C41  75 0A				jnz	loc_1502		; Jump if not zero
020A:8C43  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:8C48  74 03				je	loc_1502		; Jump if equal
020A:8C4A  E8 1297				call	sub_168			; (9EE4)
020A:8C4D			loc_1502:
020A:8C4D  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:8C52  58					pop	ax
020A:8C53  EB 02				jmp	short loc_1504		; (8C57)
020A:8C55			loc_1503:
020A:8C55  CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
020A:8C57			loc_1504:
020A:8C57  C3					retn
				sub_136		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_137		proc	near
020A:8C58  52					push	dx
020A:8C59  50					push	ax
020A:8C5A  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:8C5F  1E					push	ds
020A:8C60  E8 0F96				call	sub_157			; (9BF9)
020A:8C63  BA 2651				mov	dx,2651h
020A:8C66  B4 09				mov	ah,9
020A:8C68  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:8C6A  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:8C6F  5A					pop	dx
020A:8C70  8E DA				mov	ds,dx
020A:8C72  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:8C77  5A					pop	dx
020A:8C78  75 0A				jnz	loc_1505		; Jump if not zero
020A:8C7A  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:8C7F  74 03				je	loc_1505		; Jump if equal
020A:8C81  E8 1260				call	sub_168			; (9EE4)
020A:8C84			loc_1505:
020A:8C84  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:8C89  58					pop	ax
020A:8C8A  5A					pop	dx
020A:8C8B  C3					retn
				sub_137		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 302

				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_138		proc	near
020A:8C8C  52					push	dx
020A:8C8D  50					push	ax
020A:8C8E  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:8C93  1E					push	ds
020A:8C94  E8 0F62				call	sub_157			; (9BF9)
020A:8C97  BA 264D				mov	dx,264Dh
020A:8C9A  B4 09				mov	ah,9
020A:8C9C  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:8C9E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:8CA3  5A					pop	dx
020A:8CA4  8E DA				mov	ds,dx
020A:8CA6  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:8CAB  5A					pop	dx
020A:8CAC  75 0A				jnz	loc_1506		; Jump if not zero
020A:8CAE  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:8CB3  74 03				je	loc_1506		; Jump if equal
020A:8CB5  E8 122C				call	sub_168			; (9EE4)
020A:8CB8			loc_1506:
020A:8CB8  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:8CBD  58					pop	ax
020A:8CBE  5A					pop	dx
020A:8CBF  C3					retn
				sub_138		endp
  
020A:8CC0  50					push	ax
020A:8CC1			loc_1507:
020A:8CC1  3E: 81 7E 00 2020			cmp	word ptr ds:[bp],2020h
020A:8CC7  74 05				je	loc_1508		; Jump if equal
020A:8CC9  45					inc	bp
020A:8CCA  FE C8				dec	al
020A:8CCC  75 F3				jnz	loc_1507		; Jump if not zero
020A:8CCE			loc_1508:
020A:8CCE  58					pop	ax
020A:8CCF  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_139		proc	near
020A:8CD0  E8 0F3B				call	sub_162			; (9C0E)
020A:8CD3  8B 36 2D84				mov	si,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:8CD7  BF 2791				mov	di,2791h
020A:8CDA  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:8CDD  8E D8				mov	ds,ax
020A:8CDF  B9 0010				mov	cx,10h
020A:8CE2  FC					cld				; Clear direction
020A:8CE3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8CE5  E8 0F11				call	sub_157			; (9BF9)
020A:8CE8  BE 2791				mov	si,2791h
020A:8CEB  C3					retn
				sub_139		endp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 303

  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_140		proc	near
020A:8CEC  53					push	bx
020A:8CED  51					push	cx
020A:8CEE  56					push	si
020A:8CEF  8B DF				mov	bx,di
020A:8CF1  03 D9				add	bx,cx
020A:8CF3  26: 8A 45 05				mov	al,es:[di+5]
020A:8CF7  A8 02				test	al,2
020A:8CF9  74 03				jz	loc_1509		; Jump if zero
020A:8CFB  E9 019E				jmp	loc_1536		; (8E9C)
020A:8CFE			loc_1509:
020A:8CFE  24 0C				and	al,0Ch
020A:8D00  B9 0001				mov	cx,1
020A:8D03  80 3E 14AD 02			cmp	data_234,2		; (020A:14AD=0)
020A:8D08  74 25				je	loc_1512		; Jump if equal
020A:8D0A  B9 0004				mov	cx,4
020A:8D0D  3C 04				cmp	al,4
020A:8D0F  74 1E				je	loc_1512		; Jump if equal
020A:8D11  B9 0003				mov	cx,3
020A:8D14  0A			data_715	db	0Ah
020A:8D15  C0					db	0C0h
020A:8D16  75 17				jnz	loc_1512		; Jump if not zero
020A:8D18  26: 80		data_716	db	80h
020A:8D1A  7D 06				jge	loc_1510		; Jump if > or =
020A:8D1C  FF 75 04				push	word ptr [di+4]
020A:8D1F  B0 0C				mov	al,0Ch
020A:8D21  EB 09				jmp	short loc_1511		; (8D2C)
020A:8D23  26: 80 7D 06 FE			cmp	byte ptr es:[di+6],0FEh
020A:8D28  75 05				jne	loc_1512		; Jump if not equal
020A:8D2A  B0 10				mov	al,10h
020A:8D2C			loc_1511:
020A:8D2C  B9 0007				mov	cx,7
020A:8D2F			loc_1512:
020A:8D2F  D0 E0				shl	al,1			; Shift w/zeros fill
020A:8D31  32 E4				xor	ah,ah			; Zero register
020A:8D33  BE 2FFD				mov	si,2FFDh
020A:8D36  03 F0				add	si,ax
  
020A:8D38			locloop_1513:
020A:8D38  8A 04				mov	al,[si]
020A:8D3A  3E: 88 46 00				mov	ds:[bp],al
020A:8D3E  46					inc	si
020A:8D3F  45					inc	bp
020A:8D40  E2 F6				loop	locloop_1513		; Loop if cx > 0
  
020A:8D42  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8D47  45					inc	bp
020A:8D48  80 3E 14AD 01			cmp	data_234,1		; (020A:14AD=0)
020A:8D4D  77 46				ja	loc_1519		; Jump if above
020A:8D4F  26: 8B 07				mov	ax,es:[bx]
020A:8D52  3D FFFF				cmp	ax,0FFFFh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 304

020A:8D55  75 08				jne	loc_1514		; Jump if not equal
020A:8D57  C6 06 2EB7 01			mov	data_445,1		; (020A:2EB7=49h)
020A:8D5C  B8 270F				mov	ax,270Fh
020A:8D5F			loc_1514:
020A:8D5F  32 DB				xor	bl,bl			; Zero register
020A:8D61  80 3E 14AD 00			cmp	data_234,0		; (020A:14AD=0)
020A:8D66  74 02				je	loc_1515		; Jump if equal
020A:8D68  FE C3				inc	bl
020A:8D6A			loc_1515:
020A:8D6A  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:8D6A  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:8D6F  80 3E 14AD 00			cmp	data_234,0		; (020A:14AD=0)
020A:8D74  74 1C				je	loc_1518		; Jump if equal
020A:8D76  83 ED 05				sub	bp,5
020A:8D79  B9 0004				mov	cx,4
  
020A:8D7C			locloop_1516:
020A:8D7C  3E: 8A 46 01				mov	al,ds:[bp+1]
020A:8D80  3C 20				cmp	al,20h			; ' '
020A:8D82  75 02				jne	loc_1517		; Jump if not equal
020A:8D84  B0 30				mov	al,30h			; '0'
020A:8D86			loc_1517:
020A:8D86  3E: 88 46 00				mov	ds:[bp],al
020A:8D8A  45					inc	bp
020A:8D8B  E2 EF				loop	locloop_1516		; Loop if cx > 0
  
020A:8D8D  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:8D92			loc_1518:
020A:8D92  E9 00DF				jmp	loc_1533		; (8E74)
020A:8D95			loc_1519:
020A:8D95  80 3E 2A31 00			cmp	byte ptr ds:[2A31h],0	; (020A:2A31=0A1h)
020A:8D9A  75 0C				jne	loc_1520		; Jump if not equal
020A:8D9C  26: 8B 05				mov	ax,es:[di]
020A:8D9F  3B 06 2D82				cmp	ax,data_423		; (020A:2D82=5357h)
020A:8DA3  75 03				jne	loc_1520		; Jump if not equal
020A:8DA5  E9 00A6				jmp	loc_1531		; (8E4E)
020A:8DA8			loc_1520:
020A:8DA8  80 3E 14AD 02			cmp	data_234,2		; (020A:14AD=0)
020A:8DAD  75 03				jne	loc_1521		; Jump if not equal
020A:8DAF  E9 008E				jmp	loc_1529		; (8E40)
020A:8DB2			loc_1521:
020A:8DB2  26: 8B 05				mov	ax,es:[di]
020A:8DB5  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:8DBA  06					push	es
020A:8DBB  E8 0E47				call	sub_159			; (9C05)
020A:8DBE  BB 0000				mov	bx,0
020A:8DC1			loc_1522:
020A:8DC1  26: 83 3F FF				cmp	word ptr es:[bx],0FFFFh
020A:8DC5  74 46				je	loc_1526		; Jump if equal
020A:8DC7  26: 39 07				cmp	es:[bx],ax
020A:8DCA  74 05				je	loc_1523		; Jump if equal
020A:8DCC  83 C3 15				add	bx,15h
020A:8DCF  EB F0				jmp	short loc_1522		; (8DC1)
020A:8DD1			loc_1523:
020A:8DD1  26: 8B 47 0C				mov	ax,es:[bx+0Ch]
020A:8DD5  0A 06 2EB8				or	al,data_446		; (020A:2EB8=56h)
020A:8DD9  3E: 88 46 00				mov	ds:[bp],al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 305

020A:8DDD  45					inc	bp
020A:8DDE  80 FC 20				cmp	ah,20h			; ' '
020A:8DE1  74 09				je	loc_1524		; Jump if equal
020A:8DE3  0A 26 2EB8				or	ah,data_446		; (020A:2EB8=56h)
020A:8DE7  3E: 88 66 00				mov	ds:[bp],ah
020A:8DEB  45					inc	bp
020A:8DEC			loc_1524:
020A:8DEC  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:8DF1  5A					pop	dx
020A:8DF2  8E C2				mov	es,dx
020A:8DF4  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:8DF9  5A					pop	dx
020A:8DFA  75 0A				jnz	loc_1525		; Jump if not zero
020A:8DFC  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:8E01  74 03				je	loc_1525		; Jump if equal
020A:8E03  E8 10DE				call	sub_168			; (9EE4)
020A:8E06			loc_1525:
020A:8E06  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:8E0B  EB 3B				jmp	short loc_1530		; (8E48)
020A:8E0D			loc_1526:
020A:8E0D  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:8E12  5A					pop	dx
020A:8E13  8E C2				mov	es,dx
020A:8E15  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:8E1A  5A					pop	dx
020A:8E1B  75 0A				jnz	loc_1527		; Jump if not zero
020A:8E1D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:8E22  74 03				je	loc_1527		; Jump if equal
020A:8E24  E8 10BD				call	sub_168			; (9EE4)
020A:8E27			loc_1527:
020A:8E27  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:8E2C  83 ED 03				sub	bp,3
020A:8E2F  26: 8A 45 05				mov	al,es:[di+5]
020A:8E33  24 0C				and	al,0Ch
020A:8E35  3C 04				cmp	al,4
020A:8E37  75 01				jne	loc_1528		; Jump if not equal
020A:8E39  4D					dec	bp
020A:8E3A			loc_1528:
020A:8E3A  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8E3F  45					inc	bp
020A:8E40			loc_1529:
020A:8E40  26: 8B 05				mov	ax,es:[di]
020A:8E43  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:8E43  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:8E48			loc_1530:
020A:8E48  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8E4D  45					inc	bp
020A:8E4E			loc_1531:
020A:8E4E  26: 8B 45 02				mov	ax,es:[di+2]
020A:8E52  26: 8A 4D 05				mov	cl,es:[di+5]
020A:8E56  80 E1 0C				and	cl,0Ch
020A:8E59  80 F9 04				cmp	cl,4
020A:8E5C  75 11				jne	loc_1532		; Jump if not equal
020A:8E5E  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8E63  74 0A				jz	loc_1532		; Jump if zero
020A:8E65  26: 8B 4D 06				mov	cx,es:[di+6]
020A:8E69  81 E1 03FF				and	cx,3FFh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 306

020A:8E6D  2B C1				sub	ax,cx
020A:8E6F			loc_1532:
020A:8E6F  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:8E6F  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:8E74			loc_1533:
020A:8E74  26: 8A 45 05				mov	al,es:[di+5]
020A:8E78  24 0C				and	al,0Ch
020A:8E7A  3C 04				cmp	al,4
020A:8E7C  75 1C				jne	loc_1535		; Jump if not equal
020A:8E7E  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8E83  74 15				jz	loc_1535		; Jump if zero
020A:8E85  26: F6 45 05 01			test	byte ptr es:[di+5],1
020A:8E8A  75 06				jnz	loc_1534		; Jump if not zero
020A:8E8C  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:8E91  45					inc	bp
020A:8E92			loc_1534:
020A:8E92  A0 3046				mov	al,data_480		; (020A:3046=0F9h)
020A:8E95  3E: 88 46 00				mov	ds:[bp],al
020A:8E99  45					inc	bp
020A:8E9A			loc_1535:
020A:8E9A  EB 28				jmp	short loc_1539		; (8EC4)
020A:8E9C			loc_1536:
020A:8E9C  B9 000F				mov	cx,0Fh
020A:8E9F  26: 80 3F 7F				cmp	byte ptr es:[bx],7Fh
020A:8EA3  73 06				jae	loc_1537		; Jump if above or =
020A:8EA5  26: 80 3F 20				cmp	byte ptr es:[bx],20h	; ' '
020A:8EA9  73 0A				jae	locloop_1538		; Jump if above or =
020A:8EAB			loc_1537:
020A:8EAB  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:8EB1  45					inc	bp
020A:8EB2  45					inc	bp
020A:8EB3  EB 0F				jmp	short loc_1539		; (8EC4)
  
020A:8EB5			locloop_1538:
020A:8EB5  26: 8A 07				mov	al,es:[bx]
020A:8EB8  3C 20				cmp	al,20h			; ' '
020A:8EBA  74 08				je	loc_1539		; Jump if equal
020A:8EBC  3E: 88 46 00				mov	ds:[bp],al
020A:8EC0  43					inc	bx
020A:8EC1  45					inc	bp
020A:8EC2  E2 F1				loop	locloop_1538		; Loop if cx > 0
  
020A:8EC4			loc_1539:
020A:8EC4  26: 8A 45 05				mov	al,es:[di+5]
020A:8EC8  24 0C				and	al,0Ch
020A:8ECA  3C 04				cmp	al,4
020A:8ECC  75 19				jne	loc_1540		; Jump if not equal
020A:8ECE  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8ED3  74 12				jz	loc_1540		; Jump if zero
020A:8ED5  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:8EDA  45					inc	bp
020A:8EDB  26: 8B 45 06				mov	ax,es:[di+6]
020A:8EDF  25 03FF				and	ax,3FFh
020A:8EE2  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:8EE2  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:8EE7			loc_1540:
020A:8EE7  5E					pop	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 307

020A:8EE8  59					pop	cx
020A:8EE9  5B					pop	bx
020A:8EEA  C3					retn
				sub_140		endp
  
020A:8EEB  90					nop
020A:8EEC  06					push	es
020A:8EED  F6 06 2EB1 01			test	data_441,1		; (020A:2EB1=53h)
020A:8EF2  74 3C				jz	loc_1542		; Jump if zero
020A:8EF4  BF 06E8				mov	di,6E8h
020A:8EF7  81 EF 0076				sub	di,76h
020A:8EFB  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8EFD  03 3E 12FD				add	di,data_224		; (020A:12FD=0)
020A:8F01  A1 12FB				mov	ax,data_223		; (020A:12FB=0)
020A:8F04  8E C0				mov	es,ax
020A:8F06  BE 2791				mov	si,2791h
020A:8F09  B9 0004				mov	cx,4
  
020A:8F0C			locloop_1541:
020A:8F0C  8A 04				mov	al,[si]
020A:8F0E  9A 16FA:0000		;*		call	far ptr sub_221		;*(16FA:0000)
020A:8F0E  9A 00 00 FA 16			db	 9Ah, 00h, 00h,0FAh, 16h
020A:8F13  8A E3				mov	ah,bl
020A:8F15  E8 F618				call	sub_120			; (8530)
020A:8F18  47					inc	di
020A:8F19  B4 0F				mov	ah,0Fh
020A:8F1B  E8 F612				call	sub_120			; (8530)
020A:8F1E  47					inc	di
020A:8F1F  8A E7				mov	ah,bh
020A:8F21  E8 F60C				call	sub_120			; (8530)
020A:8F24  47					inc	di
020A:8F25  B4 0F				mov	ah,0Fh
020A:8F27  E8 F606				call	sub_120			; (8530)
020A:8F2A  83 C7 03				add	di,3
020A:8F2D  46					inc	si
020A:8F2E  E2 DC				loop	locloop_1541		; Loop if cx > 0
  
020A:8F30			loc_1542:
020A:8F30  F6 06 2EB1 02			test	data_441,2		; (020A:2EB1=53h)
020A:8F35  74 15				jz	loc_1544		; Jump if zero
020A:8F37  B9 5000				mov	cx,5000h
020A:8F3A  F6 06 2A78 F0			test	data_392,0F0h		; (020A:2A78=20h)
020A:8F3F  75 03				jnz	locloop_1543		; Jump if not zero
020A:8F41  B9 1000				mov	cx,1000h
  
020A:8F44			locloop_1543:
020A:8F44  EB 00				jmp	short $+2		; delay for I/O
020A:8F46  EB 00				jmp	short $+2		; delay for I/O
020A:8F48  EB 00				jmp	short $+2		; delay for I/O
020A:8F4A  E2 F8				loop	locloop_1543		; Loop if cx > 0
  
020A:8F4C			loc_1544:
020A:8F4C  F6 06 2EB1 08			test	data_441,8		; (020A:2EB1=53h)
020A:8F51  74 2C				jz	loc_1546		; Jump if zero
020A:8F53  A0 2EB2				mov	al,data_442		; (020A:2EB2=54h)
020A:8F56  3A 06 263D				cmp	al,byte ptr ds:[263Dh]	; (020A:263D=99h)
020A:8F5A  77 06				ja	loc_1545		; Jump if above
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 308

020A:8F5C  3A 06 2638				cmp	al,byte ptr ds:[2638h]	; (020A:2638=0B4h)
020A:8F60  75 1D				jne	loc_1546		; Jump if not equal
020A:8F62			loc_1545:
020A:8F62  A1 2EB3				mov	ax,data_443		; (020A:2EB3=4D45h)
020A:8F65  3B 06 2D82				cmp	ax,data_423		; (020A:2D82=5357h)
020A:8F69  75 14				jne	loc_1546		; Jump if not equal
020A:8F6B  A1 2EB5				mov	ax,data_444		; (020A:2EB5=5244h)
020A:8F6E  3B 06 2D84				cmp	ax,data_424		; (020A:2D84=735Ch)
020A:8F72  75 0B				jne	loc_1546		; Jump if not equal
020A:8F74  9A 16FA:0628		;*		call	far ptr sub_240		;*(16FA:0628)
020A:8F74  9A 28 06 FA 16			db	 9Ah, 28h, 06h,0FAh, 16h
020A:8F79  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:8F79  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:8F7E  90					nop
020A:8F7F			loc_1546:
020A:8F7F  07					pop	es
020A:8F80  C3					retn
020A:8F81  87 DB				xchg	bx,bx
020A:8F83  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_142		proc	near
020A:8F84  57					push	di
020A:8F85  06					push	es
020A:8F86  A2 263D				mov	byte ptr ds:[263Dh],al	; (9B68:263D=0AEh)
020A:8F89  8A E0				mov	ah,al
020A:8F8B  D0 EC				shr	ah,1			; Shift w/zeros fill
020A:8F8D  80 C4 30				add	ah,30h			; '0'
020A:8F90  88 26 5806				mov	byte ptr ds:[5806h],ah	; (9B68:5806=1Ch)
020A:8F94  BD 0752				mov	bp,752h
020A:8F97  3E: 88 66 00				mov	ds:[bp],ah
020A:8F9B  8B 1E 12FB				mov	bx,word ptr ds:[12FBh]	; (9B68:12FB=0A0AFh)
020A:8F9F  8E C3				mov	es,bx
020A:8FA1  BF 0752				mov	di,752h
020A:8FA4  81 EF 0076				sub	di,76h
020A:8FA8  D1 E7				shl	di,1			; Shift w/zeros fill
020A:8FAA  03 3E 12FD				add	di,word ptr ds:[12FDh]	; (9B68:12FD=0A0E0h)
020A:8FAE  E8			data_719	db	0E8h			; Data table (indexed access)
020A:8FAF  7F F5		;*		jg	loc_1547		;*Jump if >
020A:8FAF  7F F5				db	 7Fh,0F5h
020A:8FB1  07					pop	es
020A:8FB2  80 3E 2EBD 00			cmp	byte ptr ds:[2EBDh],0	; (9B68:2EBD=0EEh)
020A:8FB7  74 1D				je	loc_1550		; Jump if equal
020A:8FB9  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (9B68:263D=0AEh)
020A:8FBE  72 0E				jb	loc_1548		; Jump if below
020A:8FC0  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:8FC5  75 0C				jnz	loc_1549		; Jump if not zero
020A:8FC7  80 0E 430B 07			or	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:8FCC  EB 05				jmp	short loc_1549		; (8FD3)
020A:8FCE			loc_1548:
020A:8FCE  80 26 430B F8			and	byte ptr ds:[430Bh],0F8h	; (9B68:430B=0)
020A:8FD3			loc_1549:
020A:8FD3  E8 FB02				call	sub_132			; (8AD8)
020A:8FD6			loc_1550:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 309

020A:8FD6  5F					pop	di
020A:8FD7  C3					retn
				sub_142		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_143		proc	near
020A:8FD8  50					push	ax
020A:8FD9  53					push	bx
020A:8FDA  56					push	si
020A:8FDB  55					push	bp
020A:8FDC  C6 06 47B3 00			mov	byte ptr ds:[47B3h],0	; (020A:47B3=0F8h)
020A:8FE1  BD 0002				mov	bp,2
020A:8FE4  8B F0				mov	si,ax
020A:8FE6  A3 37A4				mov	word ptr ds:[37A4h],ax	; (020A:37A4=1A06h)
020A:8FE9  8B CB				mov	cx,bx
020A:8FEB  89 1E 37A2				mov	word ptr ds:[37A2h],bx	; (020A:37A2=806h)
020A:8FEF  83 FA 20				cmp	dx,20h
020A:8FF2  75 0B				jne	loc_1551		; Jump if not equal
020A:8FF4  E8 0C17				call	sub_162			; (9C0E)
020A:8FF7  BA 002C				mov	dx,2Ch
020A:8FFA  BF 3C7D				mov	di,3C7Dh
020A:8FFD  EB 58				jmp	short loc_1558		; (9057)
020A:8FFF			loc_1551:
020A:8FFF  83 FA 10				cmp	dx,10h
020A:9002  75 0B				jne	loc_1552		; Jump if not equal
020A:9004  E8 0BFE				call	sub_159			; (9C05)
020A:9007  BA 0015				mov	dx,15h
020A:900A  BF 0000				mov	di,0
020A:900D  EB 48				jmp	short loc_1558		; (9057)
020A:900F			loc_1552:
020A:900F  83 FA 01				cmp	dx,1
020A:9012  74 2D				je	loc_1555		; Jump if equal
020A:9014  83 FA 02				cmp	dx,2
020A:9017  74 33				je	loc_1557		; Jump if equal
020A:9019  83 FA 04				cmp	dx,4
020A:901C  74 0B				je	loc_1553		; Jump if equal
020A:901E  83 FA 40				cmp	dx,40h
020A:9021  74 11				je	loc_1554		; Jump if equal
020A:9023  BB 0004				mov	bx,4
020A:9026  E9 AC76				jmp	loc_511			; (3C9F)
020A:9029			loc_1553:
020A:9029  E8 0FD4				call	sub_171			; (A000)
020A:902C  BB 003B				mov	bx,3Bh
020A:902F  BA 004A				mov	dx,4Ah
020A:9032  EB 52				jmp	short loc_1568		; (9086)
020A:9034			loc_1554:
020A:9034  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:903A  74 05				je	loc_1555		; Jump if equal
020A:903C  E8 0BD8				call	sub_164			; (9C17)
020A:903F  EB 03				jmp	short loc_1556		; (9044)
020A:9041			loc_1555:
020A:9041  E8 0F48				call	sub_170			; (9F8C)
020A:9044			loc_1556:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 310

020A:9044  BB 0007				mov	bx,7
020A:9047  BA 0016				mov	dx,16h
020A:904A  EB 3A				jmp	short loc_1568		; (9086)
020A:904C			loc_1557:
020A:904C  E8 0EC9				call	sub_169			; (9F18)
020A:904F  BB 000A				mov	bx,0Ah
020A:9052  BA 0019				mov	dx,19h
020A:9055  EB 2F				jmp	short loc_1568		; (9086)
020A:9057			loc_1558:
020A:9057  33 ED				xor	bp,bp			; Zero register
020A:9059  06					push	es
020A:905A  8C D8				mov	ax,ds
020A:905C  8E C0				mov	es,ax
020A:905E  1F					pop	ds
020A:905F  BB FFFF				mov	bx,0FFFFh
020A:9062			loc_1559:
020A:9062  39 75 02				cmp	[di+2],si
020A:9065  74 09				je	loc_1562		; Jump if equal
020A:9067			loc_1560:
020A:9067  39 1D				cmp	[di],bx
020A:9069  74 0B				je	loc_1563		; Jump if equal
020A:906B			loc_1561:
020A:906B  03 FA				add	di,dx
020A:906D  45					inc	bp
020A:906E  EB F2				jmp	short loc_1559		; (9062)
020A:9070			loc_1562:
020A:9070  39 0D				cmp	[di],cx
020A:9072  75 F3				jne	loc_1560		; Jump if not equal
020A:9074  EB 09				jmp	short loc_1565		; (907F)
020A:9076			loc_1563:
020A:9076  39 5D 02				cmp	[di+2],bx
020A:9079  75 02				jne	loc_1564		; Jump if not equal
020A:907B  EB 05				jmp	short loc_1566		; (9082)
020A:907D			loc_1564:
020A:907D  EB EC				jmp	short loc_1561		; (906B)
020A:907F			loc_1565:
020A:907F  F9					stc				; Set carry flag
020A:9080  EB 01				jmp	short loc_1567		; (9083)
020A:9082			loc_1566:
020A:9082  F8					clc				; Clear carry flag
020A:9083			loc_1567:
020A:9083  E9 023C				jmp	loc_1615		; (92C2)
020A:9086			loc_1568:
020A:9086  BF 0008				mov	di,8
020A:9089  26: A1 0002				mov	ax,word ptr es:[2]	; (9B68:0002=0B1E8h)
020A:908D  3B C1				cmp	ax,cx
020A:908F  77 0F				ja	loc_1570		; Jump if above
020A:9091  72 08				jc	loc_1569		; Jump if carry Set
020A:9093  26: A1 0004				mov	ax,word ptr es:[4]	; (9B68:0004=1E00h)
020A:9097  3B C6				cmp	ax,si
020A:9099  77 05				ja	loc_1570		; Jump if above
020A:909B			loc_1569:
020A:909B  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (9B68:0006=1F06h)
020A:90A0			loc_1570:
020A:90A0  06					push	es
020A:90A1  8C D8				mov	ax,ds
020A:90A3  8E C0				mov	es,ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 311

020A:90A5  1F					pop	ds
020A:90A6  B4 03				mov	ah,3
020A:90A8  26: 80 3E 14AD 01			cmp	byte ptr es:[14ADh],1	; (D233:14AD=20h)
020A:90AE  77 05				ja	loc_1571		; Jump if above
020A:90B0  03 DD				add	bx,bp
020A:90B2  E9 009E				jmp	loc_1588		; (9153)
020A:90B5			loc_1571:
020A:90B5  39 0D				cmp	[di],cx
020A:90B7  73 28				jae	loc_1576		; Jump if above or =
020A:90B9  8A 45 05				mov	al,[di+5]
020A:90BC  84 C4				test	al,ah
020A:90BE  75 04				jnz	loc_1572		; Jump if not zero
020A:90C0  03 FB				add	di,bx
020A:90C2  EB F1				jmp	short loc_1571		; (90B5)
020A:90C4			loc_1572:
020A:90C4  A8 02				test	al,2
020A:90C6  75 06				jnz	loc_1573		; Jump if not zero
020A:90C8  03 FB				add	di,bx
020A:90CA  03 FD				add	di,bp
020A:90CC  EB E7				jmp	short loc_1571		; (90B5)
020A:90CE			loc_1573:
020A:90CE  A8 01				test	al,1
020A:90D0  75 04				jnz	loc_1574		; Jump if not zero
020A:90D2  03 FA				add	di,dx
020A:90D4  EB DF				jmp	short loc_1571		; (90B5)
020A:90D6			loc_1574:
020A:90D6  8A 45 06				mov	al,[di+6]
020A:90D9  32 E4				xor	ah,ah			; Zero register
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:90DB			loc_1575:
020A:90DB  F803			data_720	dw	0F803h			; Data table (indexed access)
020A:90DD  B4 03				mov	ah,3
020A:90DF  EB D4				jmp	short loc_1571		; (90B5)
020A:90E1			loc_1576:
020A:90E1  74 0B				jz	loc_1577		; Jump if zero
020A:90E3  83 3D FF				cmp	word ptr [di],0FFFFh
020A:90E6  75 39				jne	loc_1583		; Jump if not equal
020A:90E8  83 7D 02 FF				cmp	word ptr [di+2],0FFFFh
020A:90EC  74 33				je	loc_1583		; Jump if equal
020A:90EE			loc_1577:
020A:90EE  39 0D				cmp	[di],cx
020A:90F0  75 2F				jne	loc_1583		; Jump if not equal
020A:90F2  39 75 02				cmp	[di+2],si
020A:90F5  73 28				jae	loc_1582		; Jump if above or =
020A:90F7			loc_1578:
020A:90F7  8A 45 05				mov	al,[di+5]
020A:90FA  84 C4				test	al,ah
020A:90FC  75 04				jnz	loc_1579		; Jump if not zero
020A:90FE  03 FB				add	di,bx
020A:9100  EB EC				jmp	short loc_1577		; (90EE)
020A:9102			loc_1579:
020A:9102  A8 02				test	al,2
020A:9104  75 06				jnz	loc_1580		; Jump if not zero
020A:9106  03 FB				add	di,bx
020A:9108  03 FD				add	di,bp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 312

020A:910A  EB E2				jmp	short loc_1577		; (90EE)
020A:910C			loc_1580:
020A:910C  A8 01				test	al,1
020A:910E  75 04				jnz	loc_1581		; Jump if not zero
020A:9110  03 FA				add	di,dx
020A:9112  EB DA				jmp	short loc_1577		; (90EE)
020A:9114			loc_1581:
020A:9114  8A 45 06				mov	al,[di+6]
020A:9117  32 E4				xor	ah,ah			; Zero register
020A:9119  03 F8				add	di,ax
020A:911B  B4 03				mov	ah,3
020A:911D  EB CF				jmp	short loc_1577		; (90EE)
020A:911F			loc_1582:
020A:911F  74 02				jz	loc_1584		; Jump if zero
020A:9121			loc_1583:
020A:9121  EB 2D				jmp	short loc_1587		; (9150)
020A:9123			loc_1584:
020A:9123  83 FA 16				cmp	dx,16h
020A:9126  75 25				jne	loc_1586		; Jump if not equal
020A:9128  26: 80 3E 4204 01			cmp	es:data_589,1		; (020A:4204=5Dh)
020A:912E  74 1D				je	loc_1586		; Jump if equal
020A:9130  26: 80 3E 47B3 00			cmp	byte ptr es:[47B3h],0	; (020A:47B3=0F8h)
020A:9136  75 0A				jne	loc_1585		; Jump if not equal
020A:9138  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:913C  26: C6 06 47B3 01			mov	byte ptr es:[47B3h],1	; (020A:47B3=0F8h)
020A:9142			loc_1585:
020A:9142  8A 45 04				mov	al,[di+4]
020A:9145  24 1F				and	al,1Fh
020A:9147  3C 1F				cmp	al,1Fh
020A:9149  75 02				jne	loc_1586		; Jump if not equal
020A:914B  EB AA				jmp	short loc_1578		; (90F7)
020A:914D			loc_1586:
020A:914D  E9 00A0				jmp	loc_1602		; (91F0)
020A:9150			loc_1587:
020A:9150  E9 0115				jmp	loc_1610		; (9268)
020A:9153			loc_1588:
020A:9153  39 0D				cmp	[di],cx
020A:9155  73 2A				jae	loc_1592		; Jump if above or =
020A:9157  8A 45 05				mov	al,[di+5]
020A:915A  22 C4				and	al,ah
020A:915C  3C 01				cmp	al,1
020A:915E  75 04				jne	loc_1589		; Jump if not equal
020A:9160  03 FB				add	di,bx
020A:9162  EB EF				jmp	short loc_1588		; (9153)
020A:9164			loc_1589:
020A:9164  0A C0				or	al,al			; Zero ?
020A:9166  75 06				jnz	loc_1590		; Jump if not zero
020A:9168  03 FB				add	di,bx
020A:916A  2B FD				sub	di,bp
020A:916C  EB E5				jmp	short loc_1588		; (9153)
020A:916E			loc_1590:
020A:916E  3C 02				cmp	al,2
020A:9170  75 04				jne	loc_1591		; Jump if not equal
020A:9172  03 FA				add	di,dx
020A:9174  EB DD				jmp	short loc_1588		; (9153)
020A:9176			loc_1591:
020A:9176  8A 45 06				mov	al,[di+6]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 313

020A:9179  32 E4				xor	ah,ah			; Zero register
020A:917B  03 F8				add	di,ax
020A:917D  B4 03				mov	ah,3
020A:917F  EB D2				jmp	short loc_1588		; (9153)
020A:9181			loc_1592:
020A:9181  74 0B				jz	loc_1593		; Jump if zero
020A:9183  83 3D FF				cmp	word ptr [di],0FFFFh
020A:9186  75 3B				jne	loc_1599		; Jump if not equal
020A:9188  83 7D 02 FF				cmp	word ptr [di+2],0FFFFh
020A:918C  74 35				je	loc_1599		; Jump if equal
020A:918E			loc_1593:
020A:918E  39 0D				cmp	[di],cx
020A:9190  75 31				jne	loc_1599		; Jump if not equal
020A:9192  39 75 02				cmp	[di+2],si
020A:9195  73 2A				jae	loc_1598		; Jump if above or =
020A:9197			loc_1594:
020A:9197  8A 45 05				mov	al,[di+5]
020A:919A  22 C4				and	al,ah
020A:919C  3C 01				cmp	al,1
020A:919E  75 04				jne	loc_1595		; Jump if not equal
020A:91A0  03 FB				add	di,bx
020A:91A2  EB EA				jmp	short loc_1593		; (918E)
020A:91A4			loc_1595:
020A:91A4  0A C0				or	al,al			; Zero ?
020A:91A6  75 06				jnz	loc_1596		; Jump if not zero
020A:91A8  03 FB				add	di,bx
020A:91AA  2B FD				sub	di,bp
020A:91AC  EB E0				jmp	short loc_1593		; (918E)
020A:91AE			loc_1596:
020A:91AE  3C 02				cmp	al,2
020A:91B0  75 04				jne	loc_1597		; Jump if not equal
020A:91B2  03 FA				add	di,dx
020A:91B4  EB D8				jmp	short loc_1593		; (918E)
020A:91B6			loc_1597:
020A:91B6  8A 45 06				mov	al,[di+6]
020A:91B9  32 E4				xor	ah,ah			; Zero register
020A:91BB  03 F8				add	di,ax
020A:91BD  B4 03				mov	ah,3
020A:91BF  EB CD				jmp	short loc_1593		; (918E)
020A:91C1			loc_1598:
020A:91C1  74 03				jz	loc_1600		; Jump if zero
020A:91C3			loc_1599:
020A:91C3  E9 00A2				jmp	loc_1610		; (9268)
020A:91C6			loc_1600:
020A:91C6  83 FA 16				cmp	dx,16h
020A:91C9  75 25				jne	loc_1602		; Jump if not equal
020A:91CB  26: 80 3E 4204 01			cmp	es:data_589,1		; (020A:4204=5Dh)
020A:91D1  74 1D				je	loc_1602		; Jump if equal
020A:91D3  26: 80 3E 47B3 00			cmp	byte ptr es:[47B3h],0	; (020A:47B3=0F8h)
020A:91D9  75 0A				jne	loc_1601		; Jump if not equal
020A:91DB  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:91DF  26: C6 06 47B3 01			mov	byte ptr es:[47B3h],1	; (020A:47B3=0F8h)
020A:91E5			loc_1601:
020A:91E5  8A 45 04				mov	al,[di+4]
020A:91E8  24 1F				and	al,1Fh
020A:91EA  3C 1F				cmp	al,1Fh
020A:91EC  75 02				jne	loc_1602		; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 314

020A:91EE  EB A7				jmp	short loc_1594		; (9197)
020A:91F0			loc_1602:
020A:91F0  8B 05				mov	ax,[di]
020A:91F2  A3 0002				mov	word ptr ds:[2],ax	; (9B68:0002=0B1E8h)
020A:91F5  8B 45 02				mov	ax,[di+2]
020A:91F8  A3 0004				mov	word ptr ds:[4],ax	; (9B68:0004=1E00h)
020A:91FB  26: 80 3E 47B3 00			cmp	byte ptr es:[47B3h],0	; (020A:47B3=0F8h)
020A:9201  75 04				jne	loc_1603		; Jump if not equal
020A:9203  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:9207			loc_1603:
020A:9207  26: A1 37A2				mov	ax,word ptr es:[37A2h]	; (020A:37A2=806h)
020A:920B  26: 3B 06 2D82			cmp	ax,es:data_423		; (020A:2D82=5357h)
020A:9210  75 53				jne	loc_1609		; Jump if not equal
020A:9212  26: A1 37A4				mov	ax,word ptr es:[37A4h]	; (020A:37A4=1A06h)
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:9216			loc_1604:
020A:9216  26: 3B 06 2D84			cmp	ax,es:data_424		; (020A:2D84=735Ch)
020A:921B  75 48				jne	loc_1609		; Jump if not equal
020A:921D  BB 377F				mov	bx,377Fh
020A:9220  8A 45 05				mov	al,[di+5]
020A:9223  25 000F				and	ax,0Fh
020A:9226  26: D7				xlat es:[bx]			; al=[al+[bx]] table
020A:9228  0A C0				or	al,al			; Zero ?
020A:922A  75 03				jnz	loc_1605		; Jump if not zero
020A:922C  8A 45 06				mov	al,[di+6]
020A:922F			loc_1605:
020A:922F  8B D8				mov	bx,ax
020A:9231  8B 01				mov	ax,[bx+di]
020A:9233  26: 3B 06 2D82			cmp	ax,es:data_423		; (020A:2D82=5357h)
020A:9238  8B 41 02				mov	ax,[bx+di+2]
020A:923B  74 03				jz	loc_1606		; Jump if zero
020A:923D  B8 FFFF				mov	ax,0FFFFh
020A:9240			loc_1606:
020A:9240  8A 51 05				mov	dl,[bx+di+5]
020A:9243  80 E2 0C				and	dl,0Ch
020A:9246  80 FA 00				cmp	dl,0
020A:9249  74 10				je	loc_1607		; Jump if equal
020A:924B  80 FA 04				cmp	dl,4
020A:924E  74 11				je	loc_1608		; Jump if equal
020A:9250  80 FA 08				cmp	dl,8
020A:9253  75 10				jne	loc_1609		; Jump if not equal
020A:9255  26: A3 4317				mov	es:data_631,ax		; (020A:4317=740h)
020A:9259  EB 0A				jmp	short loc_1609		; (9265)
020A:925B			loc_1607:
020A:925B  26: A3 4315				mov	es:data_630,ax		; (020A:4315=8004h)
020A:925F  EB 04				jmp	short loc_1609		; (9265)
020A:9261			loc_1608:
020A:9261  26			data_722	db	26h
020A:9262  A3 4313				mov	word ptr ds:[4313h],ax	; (9B68:4313=0)
020A:9265			loc_1609:
020A:9265  F9					stc				; Set carry flag
020A:9266  EB 5A				jmp	short loc_1615		; (92C2)
020A:9268			loc_1610:
020A:9268  8B 05				mov	ax,[di]
020A:926A  A3 0002				mov	word ptr ds:[2],ax	; (9B68:0002=0B1E8h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 315

020A:926D  8B 45 02				mov	ax,[di+2]
020A:9270  A3 0004				mov	word ptr ds:[4],ax	; (9B68:0004=1E00h)
020A:9273  89 3E 0006				mov	word ptr ds:[6],di	; (9B68:0006=1F06h)
020A:9277  26: A1 37A2				mov	ax,word ptr es:[37A2h]	; (020A:37A2=806h)
020A:927B  26: 3B 06 2D82			cmp	ax,es:data_423		; (020A:2D82=5357h)
020A:9280  75 3F				jne	loc_1614		; Jump if not equal
020A:9282  26: A1 37A4				mov	ax,word ptr es:[37A4h]	; (020A:37A4=1A06h)
020A:9286  26: 3B 06 2D84			cmp	ax,es:data_424		; (020A:2D84=735Ch)
020A:928B  75 34				jne	loc_1614		; Jump if not equal
020A:928D  B8 FFFF				mov	ax,0FFFFh
020A:9290  8B 1D				mov	bx,[di]
020A:9292  26: 3B 1E 2D82			cmp	bx,es:data_423		; (020A:2D82=5357h)
020A:9297  75 03				jne	loc_1611		; Jump if not equal
020A:9299  8B 45 02				mov	ax,[di+2]
020A:929C			loc_1611:
020A:929C  8A 55 05				mov	dl,[di+5]
020A:929F  80 E2 0C				and	dl,0Ch
020A:92A2  80 FA 00				cmp	dl,0
020A:92A5  74 10				je	loc_1612		; Jump if equal
020A:92A7  80 FA 04				cmp	dl,4
020A:92AA  74 11				je	loc_1613		; Jump if equal
020A:92AC  80 FA 08				cmp	dl,8
020A:92AF  75 10				jne	loc_1614		; Jump if not equal
020A:92B1  26: A3 4317				mov	es:data_631,ax		; (020A:4317=740h)
020A:92B5  EB 0A				jmp	short loc_1614		; (92C1)
020A:92B7			loc_1612:
020A:92B7  26: A3 4315				mov	es:data_630,ax		; (020A:4315=8004h)
020A:92BB  EB 04				jmp	short loc_1614		; (92C1)
020A:92BD			loc_1613:
020A:92BD  26: A3 4313				mov	word ptr es:[4313h],ax	; (020A:4313=6000h)
020A:92C1			loc_1614:
020A:92C1  F8					clc				; Clear carry flag
020A:92C2			loc_1615:
020A:92C2  1E					push	ds
020A:92C3  8C C0				mov	ax,es
020A:92C5  8E D8				mov	ds,ax
020A:92C7  07					pop	es
020A:92C8  8B CD				mov	cx,bp
020A:92CA  5D					pop	bp
020A:92CB  5E					pop	si
020A:92CC  5B					pop	bx
020A:92CD  58					pop	ax
020A:92CE  C3					retn
				sub_143		endp
  
020A:92CF  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_144		proc	near
  
020A:92D0			locloop_1616:
020A:92D0  8A 04				mov	al,[si]
020A:92D2  A8 40				test	al,40h			; '@'
020A:92D4  74 18				jz	loc_1618		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 316

020A:92D6  3C 40				cmp	al,40h			; '@'
020A:92D8  74 14				je	loc_1618		; Jump if equal
020A:92DA  3C 5B				cmp	al,5Bh			; '['
020A:92DC  72 08				jb	loc_1617		; Jump if below
020A:92DE  3C 7B				cmp	al,7Bh			; '{'
020A:92E0  73 0C				jae	loc_1618		; Jump if above or =
020A:92E2  3C 60				cmp	al,60h			; '`'
020A:92E4  76 08				jbe	loc_1618		; Jump if below or =
020A:92E6			loc_1617:
020A:92E6  24 DF				and	al,0DFh
020A:92E8  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (ss:2EB8=2Bh)
020A:92EC  88 04				mov	[si],al
020A:92EE			loc_1618:
020A:92EE  46					inc	si
020A:92EF  E2 DF				loop	locloop_1616		; Loop if cx > 0
  
020A:92F1  C3					retn
				sub_144		endp
  
020A:92F2  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_145		proc	near
020A:92F4  52					push	dx
020A:92F5  51					push	cx
020A:92F6  8B D7				mov	dx,di
020A:92F8  B0 43				mov	al,43h			; 'C'
020A:92FA  B4 00				mov	ah,0
020A:92FC			loc_1619:
020A:92FC  8B FA				mov	di,dx
020A:92FE  59					pop	cx
020A:92FF  51					push	cx
020A:9300			loc_1620:
020A:9300  FC					cld				; Clear direction
020A:9301  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:9303  83 F9 00				cmp	cx,0
020A:9306  75 0B				jne	loc_1622		; Jump if not equal
020A:9308  3C 63				cmp	al,63h			; 'c'
020A:930A  75 03				jne	loc_1621		; Jump if not equal
020A:930C  E9 00C6				jmp	loc_1633		; (93D5)
020A:930F			loc_1621:
020A:930F  B0 63				mov	al,63h			; 'c'
020A:9311  EB E9				jmp	short loc_1619		; (92FC)
020A:9313			loc_1622:
020A:9313  26: 80 7D FE 28			cmp	byte ptr es:[di-2],28h	; '('
020A:9318  75 1A				jne	loc_1624		; Jump if not equal
020A:931A  26: 80 3D 29				cmp	byte ptr es:[di],29h	; ')'
020A:931E  74 10				je	loc_1623		; Jump if equal
020A:9320  26: 8B 1D				mov	bx,es:[di]
020A:9323  81 E3 DFDF				and	bx,0DFDFh
020A:9327  81 FB 2943				cmp	bx,2943h
020A:932B  75 D3				jne	loc_1620		; Jump if not equal
020A:932D  B4 01				mov	ah,1
020A:932F  4F					dec	di
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 317

020A:9330			loc_1623:
020A:9330  4F					dec	di
020A:9331  4F					dec	di
020A:9332  EB 38				jmp	short loc_1627		; (936C)
020A:9334			loc_1624:
020A:9334  26: 8B 1D				mov	bx,es:[di]
020A:9337  81 E3 DFDF				and	bx,0DFDFh
020A:933B  81 FB 504F				cmp	bx,504Fh
020A:933F  75 14				jne	loc_1625		; Jump if not equal
020A:9341  26: 8B 5D 02				mov	bx,es:[di+2]
020A:9345  81 E3 DFDF				and	bx,0DFDFh
020A:9349  81 FB 5259				cmp	bx,5259h
020A:934D  74 1C				je	loc_1626		; Jump if equal
020A:934F  81 FB 2E52				cmp	bx,2E52h
020A:9353  74 16				je	loc_1626		; Jump if equal
020A:9355			loc_1625:
020A:9355  81 FB 4F43				cmp	bx,4F43h
020A:9359  75 A5				jne	loc_1620		; Jump if not equal
020A:935B  26: 8B 5D 02				mov	bx,es:[di+2]
020A:935F  81 E3 DFDF				and	bx,0DFDFh
020A:9363  81 FB 504F				cmp	bx,504Fh
020A:9367  75 97				jne	loc_1620		; Jump if not equal
020A:9369  B4 01				mov	ah,1
020A:936B			loc_1626:
020A:936B  4F					dec	di
020A:936C			loc_1627:
020A:936C  57					push	di
020A:936D  BE 512A				mov	si,512Ah
020A:9370  B9 0032				mov	cx,32h
  
020A:9373			locloop_1628:
020A:9373  26: 8A 05				mov	al,es:[di]
020A:9376  3C 20				cmp	al,20h			; ' '
020A:9378  72 1E				jb	loc_1631		; Jump if below
020A:937A  3C 80				cmp	al,80h
020A:937C  73 1A				jae	loc_1631		; Jump if above or =
020A:937E  88 04				mov	[si],al
020A:9380  80 FC 01				cmp	ah,1
020A:9383  75 08				jne	loc_1629		; Jump if not equal
020A:9385  47					inc	di
020A:9386  26: 3A 05				cmp	al,es:[di]
020A:9389  75 0D				jne	loc_1631		; Jump if not equal
020A:938B  EB 07				jmp	short loc_1630		; (9394)
020A:938D			loc_1629:
020A:938D  26: 81 3D 2020			cmp	word ptr es:[di],2020h
020A:9392  74 04				je	loc_1631		; Jump if equal
020A:9394			loc_1630:
020A:9394  47					inc	di
020A:9395  46					inc	si
020A:9396  E2 DB				loop	locloop_1628		; Loop if cx > 0
  
020A:9398			loc_1631:
020A:9398  8B CF				mov	cx,di
020A:939A  5F					pop	di
020A:939B  2B CF				sub	cx,di
020A:939D  8B C7				mov	ax,di
020A:939F  8C C3				mov	bx,es
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 318

020A:93A1  5A					pop	dx
020A:93A2  51					push	cx
020A:93A3  BA 0002				mov	dx,2
020A:93A6  E8 FC2F				call	sub_143			; (8FD8)
020A:93A9  59					pop	cx
020A:93AA  72 26				jc	loc_1632		; Jump if carry Set
020A:93AC  BF 472B				mov	di,472Bh
020A:93AF  89 1D				mov	[di],bx
020A:93B1  89 45 02				mov	[di+2],ax
020A:93B4  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020A:93B8  C6 45 05 06				mov	byte ptr [di+5],6
020A:93BC  89 4D 08				mov	[di+8],cx
020A:93BF  C7 45 06 0000			mov	word ptr [di+6],0
020A:93C4  B8 000A				mov	ax,0Ah
020A:93C7  BE 33AA				mov	si,33AAh
020A:93CA  9A 16FA:1018		;*		call	far ptr sub_253		;*(16FA:1018)
020A:93CA  9A 18 10 FA 16			db	 9Ah, 18h, 10h,0FAh, 16h
020A:93CF  E8 188E				call	sub_174			; (AC60)
020A:93D2			loc_1632:
020A:93D2  F9					stc				; Set carry flag
020A:93D3  EB 02				jmp	short loc_1634		; (93D7)
020A:93D5			loc_1633:
020A:93D5  59					pop	cx
020A:93D6  F8					clc				; Clear carry flag
020A:93D7			loc_1634:
020A:93D7  5A					pop	dx
020A:93D8  C3					retn
				sub_145		endp
  
020A:93D9  87 DB				xchg	bx,bx
020A:93DB  90					nop
020A:93DC  C6 06 2A35 00			mov	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:93E1  BA 0002				mov	dx,2
020A:93E4  BB 439C				mov	bx,439Ch
020A:93E7  E8 B4D6		;*		call	sub_76			;*(48C0)
020A:93E7  E8 D6 B4				db	0E8h,0D6h,0B4h
020A:93EA  C3					retn
020A:93EB  90					nop
020A:93EC  BF 0008				mov	di,8
020A:93EF  BE 0000				mov	si,0
020A:93F2  E8 07FB				call	sub_155			; (9BF0)
020A:93F5			loc_1635:
020A:93F5  8B 04				mov	ax,[si]
020A:93F7  8B 5C 02				mov	bx,[si+2]
020A:93FA  8B 4C 04				mov	cx,[si+4]
020A:93FD  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:9401  74 79				je	loc_1638		; Jump if equal
020A:9403  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:9408  74 75				jz	loc_1639		; Jump if zero
020A:940A  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:940F  75 6E				jnz	loc_1639		; Jump if not zero
020A:9411  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:9416  75 62				jnz	loc_1637		; Jump if not zero
020A:9418  26: 3B 05				cmp	ax,es:[di]
020A:941B  72 64				jb	loc_1640		; Jump if below
020A:941D  77 5B				ja	loc_1637		; Jump if above
020A:941F  26: 3B 5D 02				cmp	bx,es:[di+2]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 319

020A:9423  77 55				ja	loc_1637		; Jump if above
020A:9425  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:9429  72 56				jb	loc_1640		; Jump if below
020A:942B  1E					push	ds
020A:942C  E8 07CA				call	sub_157			; (9BF9)
020A:942F  F7 06 42CC 0100			test	data_601,100h		; (020A:42CC=30h)
020A:9435  1F					pop	ds
020A:9436  75 54				jnz	loc_1641		; Jump if not zero
020A:9438  8B 54 0A				mov	dx,[si+0Ah]
020A:943B  80 E2 03				and	dl,3
020A:943E  80 FA 01				cmp	dl,1
020A:9441  77 49				ja	loc_1641		; Jump if above
020A:9443  26: 8A 55 04				mov	dl,es:[di+4]
020A:9447  F6 C2 80				test	dl,80h
020A:944A  74 40				jz	loc_1641		; Jump if zero
020A:944C  F6 C2 10				test	dl,10h
020A:944F  75 3B				jnz	loc_1641		; Jump if not zero
020A:9451  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:9456  75 34				jnz	loc_1641		; Jump if not zero
020A:9458  26: 81 7D 02 0200			cmp	word ptr es:[di+2],200h
020A:945E  73 2C				jae	loc_1641		; Jump if above or =
020A:9460  1E					push	ds
020A:9461  E8 0795				call	sub_157			; (9BF9)
020A:9464  F7 06 42CC 0200			test	data_601,200h		; (020A:42CC=30h)
020A:946A  1F					pop	ds
020A:946B  75 08				jnz	loc_1636		; Jump if not zero
020A:946D  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020A:9473  73 17				jae	loc_1641		; Jump if above or =
020A:9475			loc_1636:
020A:9475  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020A:947A			loc_1637:
020A:947A  EB 3B				jmp	short loc_1643		; (94B7)
020A:947C			loc_1638:
020A:947C  E9 00E5				jmp	loc_1648		; (9564)
020A:947F			loc_1639:
020A:947F  EB 0B				jmp	short loc_1641		; (948C)
020A:9481			loc_1640:
020A:9481  83 C6 15				add	si,15h
020A:9484  83 3C FF				cmp	word ptr [si],0FFFFh
020A:9487  74 2E				je	loc_1643		; Jump if equal
020A:9489  E9 FF69				jmp	loc_1635		; (93F5)
020A:948C			loc_1641:
020A:948C  E8 0761				call	sub_155			; (9BF0)
020A:948F  BB 377F				mov	bx,377Fh
020A:9492  26: 8A 45 05				mov	al,es:[di+5]
020A:9496  25 000F				and	ax,0Fh
020A:9499  1E					push	ds
020A:949A  E8 075C				call	sub_157			; (9BF9)
020A:949D  D7					xlat				; al=[al+[bx]] table
020A:949E  1F					pop	ds
020A:949F  0A C0				or	al,al			; Zero ?
020A:94A1  75 04				jnz	loc_1642		; Jump if not zero
020A:94A3  26: 8A 45 06				mov	al,es:[di+6]
020A:94A7			loc_1642:
020A:94A7  03 F8				add	di,ax
020A:94A9  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:94AD  74 CD				je	loc_1638		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 320

020A:94AF  83 3C FF				cmp	word ptr [si],0FFFFh
020A:94B2  74 03				je	loc_1643		; Jump if equal
020A:94B4  E9 FF3E				jmp	loc_1635		; (93F5)
020A:94B7			loc_1643:
020A:94B7  E8 073F				call	sub_157			; (9BF9)
020A:94BA  26: 80 4D 07 40			or	byte ptr es:[di+7],40h	; '@'
020A:94BF  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:94C4  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:94C9  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:94CE  75 BC				jnz	loc_1641		; Jump if not zero
020A:94D0  E8 02A1				call	sub_148			; (9774)
020A:94D3  BD 27CF				mov	bp,27CFh
020A:94D6  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:94DB  45					inc	bp
020A:94DC  45					inc	bp
020A:94DD  26: 8B 45 02				mov	ax,es:[di+2]
020A:94E1  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:94E1  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:94E6  BD 27EA				mov	bp,27EAh
020A:94E9  B9 000A				mov	cx,0Ah
020A:94EC  E8 F7FD				call	sub_140			; (8CEC)
020A:94EF  B1 00				mov	cl,0
020A:94F1  C6 06 27FA 65			mov	data_357,65h		; (020A:27FA=0A0h) 'e'
020A:94F6  C7 06 27FB 7571			mov	data_358,7571h		; (020A:27FB=0AD20h)
020A:94FC  80 3E 2EB8 00			cmp	data_446,0		; (020A:2EB8=56h)
020A:9501  75 0B				jne	loc_1644		; Jump if not equal
020A:9503  C6 06 27FA 45			mov	data_357,45h		; (020A:27FA=0A0h) 'E'
020A:9508  C7 06 27FB 5551			mov	data_358,5551h		; (020A:27FB=0AD20h)
020A:950E			loc_1644:
020A:950E  BD 2802				mov	bp,2802h
020A:9511  26: 8B 45 02				mov	ax,es:[di+2]
020A:9515  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:9515  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:951A  B7 00				mov	bh,0
020A:951C  26: 8A 45 04				mov	al,es:[di+4]
020A:9520  24 3F				and	al,3Fh			; '?'
020A:9522  3C 02				cmp	al,2
020A:9524  74 0B				je	loc_1645		; Jump if equal
020A:9526  3C 00				cmp	al,0
020A:9528  75 09				jne	loc_1646		; Jump if not equal
020A:952A  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:952F  75 02				jne	loc_1646		; Jump if not equal
020A:9531			loc_1645:
020A:9531  B7 20				mov	bh,20h			; ' '
020A:9533			loc_1646:
020A:9533  E8 0032				call	sub_146			; (9568)
020A:9536  BA 27CA				mov	dx,27CAh
020A:9539  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:953E  06					push	es
020A:953F  E8 EA16				call	sub_113			; (7F58)
020A:9542  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:9547  5A					pop	dx
020A:9548  8E C2				mov	es,dx
020A:954A  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:954F  5A					pop	dx
020A:9550  75 0A				jnz	loc_1647		; Jump if not zero
020A:9552  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 321

020A:9557  74 03				je	loc_1647		; Jump if equal
020A:9559  E8 0988				call	sub_168			; (9EE4)
020A:955C			loc_1647:
020A:955C  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:9561  E9 FF28				jmp	loc_1641		; (948C)
020A:9564			loc_1648:
020A:9564  C3					retn
020A:9565  87 DB				xchg	bx,bx
020A:9567  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_146		proc	near
020A:9568  51					push	cx
020A:9569  06					push	es
020A:956A  55					push	bp
020A:956B  F6 06 152A 01			test	data_236,1		; (020A:152A=0)
020A:9570  74 0E				jz	loc_1649		; Jump if zero
020A:9572  80 3E 152B 01			cmp	data_237,1		; (020A:152B=0)
020A:9577  74 07				je	loc_1649		; Jump if equal
020A:9579  80 3E 4202 01			cmp	data_587,1		; (020A:4202=3)
020A:957E  75 03				jne	loc_1650		; Jump if not equal
020A:9580			loc_1649:
020A:9580  E9 00F6				jmp	loc_1664		; (9679)
020A:9583			loc_1650:
020A:9583  E8 00FE				call	sub_147			; (9684)
020A:9586  32 C9				xor	cl,cl			; Zero register
020A:9588  B0 28				mov	al,28h			; '('
020A:958A  80 3E 2A35 00			cmp	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:958F  74 02				je	loc_1651		; Jump if equal
020A:9591  B0 5B				mov	al,5Bh			; '['
020A:9593			loc_1651:
020A:9593  3E: 88 46 00				mov	ds:[bp],al
020A:9597  45					inc	bp
020A:9598  53					push	bx
020A:9599  8C C8				mov	ax,cs
020A:959B  26: 3B 05				cmp	ax,es:[di]
020A:959E  75 0A				jne	loc_1652		; Jump if not equal
020A:95A0  3E: C7 46 00 7373			mov	word ptr ds:[bp],7373h
020A:95A6  45					inc	bp
020A:95A7  45					inc	bp
020A:95A8  EB 4C				jmp	short loc_1657		; (95F6)
020A:95AA			loc_1652:
020A:95AA  26: 8B 05				mov	ax,es:[di]
020A:95AD  25 FFF0				and	ax,0FFF0h
020A:95B0  3D FBA0				cmp	ax,0FBA0h
020A:95B3  75 22				jne	loc_1655		; Jump if not equal
020A:95B5  FE C1				inc	cl
020A:95B7  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:95BD  45					inc	bp
020A:95BE  45					inc	bp
020A:95BF  26: 8B 05				mov	ax,es:[di]
020A:95C2  24 0F				and	al,0Fh
020A:95C4  3C 0F				cmp	al,0Fh
020A:95C6  74 0D				je	loc_1654		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 322

020A:95C8  04 30				add	al,30h			; '0'
020A:95CA  3C 39				cmp	al,39h			; '9'
020A:95CC  76 02				jbe	loc_1653		; Jump if below or =
020A:95CE  04 07				add	al,7
020A:95D0			loc_1653:
020A:95D0  3E: 88 46 00				mov	ds:[bp],al
020A:95D4  45					inc	bp
020A:95D5			loc_1654:
020A:95D5  EB 1F				jmp	short loc_1657		; (95F6)
020A:95D7			loc_1655:
020A:95D7  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:95DC  75 10				jnz	loc_1656		; Jump if not zero
020A:95DE  80 3E 14AD 02			cmp	data_234,2		; (020A:14AD=0)
020A:95E3  72 09				jb	loc_1656		; Jump if below
020A:95E5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:95EA  74 02				jz	loc_1656		; Jump if zero
020A:95EC  EB 17				jmp	short loc_1658		; (9605)
020A:95EE			loc_1656:
020A:95EE  26: 8B 05				mov	ax,es:[di]
020A:95F1  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:95F1  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:95F6			loc_1657:
020A:95F6  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:95FB  45					inc	bp
020A:95FC  26: 8B 45 02				mov	ax,es:[di+2]
020A:9600  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:9600  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:9605			loc_1658:
020A:9605  5B					pop	bx
020A:9606  0A C9				or	cl,cl			; Zero ?
020A:9608  75 5F				jnz	loc_1662		; Jump if not zero
020A:960A  F6 C7 30				test	bh,30h			; '0'
020A:960D  74 07				jz	loc_1659		; Jump if zero
020A:960F  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:9614  74 53				je	loc_1662		; Jump if equal
020A:9616			loc_1659:
020A:9616  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:961B  45					inc	bp
020A:961C  F6 C7 30				test	bh,30h			; '0'
020A:961F  74 39				jz	loc_1661		; Jump if zero
020A:9621  F6 C7 20				test	bh,20h			; ' '
020A:9624  74 23				jz	loc_1660		; Jump if zero
020A:9626  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (020A:2ECA=3Ah)
020A:962B  74 1C				jz	loc_1660		; Jump if zero
020A:962D  26: 83 7D 02 FC			cmp	word ptr es:[di+2],0FFFCh
020A:9632  77 35				ja	loc_1662		; Jump if above
020A:9634  26: 8B 5D 02				mov	bx,es:[di+2]
020A:9638  26: 8E 05				mov	es,es:[di]
020A:963B  26: 8B 47 02				mov	ax,es:[bx+2]
020A:963F  26: 8B 1F				mov	bx,es:[bx]
020A:9642  9A 16FA:01E8		;*		call	far ptr sub_229		;*(16FA:01E8)
020A:9642  9A E8 01 FA 16			db	 9Ah,0E8h, 01h,0FAh, 16h
020A:9647  EB 20				jmp	short loc_1662		; (9669)
020A:9649			loc_1660:
020A:9649  26: 8B 5D 02				mov	bx,es:[di+2]
020A:964D  26: 8E 05				mov	es,es:[di]
020A:9650  26: 8B 07				mov	ax,es:[bx]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 323

020A:9653  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:9653  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:9658  EB 0F				jmp	short loc_1662		; (9669)
020A:965A			loc_1661:
020A:965A  26: 8B 5D 02				mov	bx,es:[di+2]
020A:965E  26: 8E 05				mov	es,es:[di]
020A:9661  26: 8A 07				mov	al,es:[bx]
020A:9664  9A 16FA:0034		;*		call	far ptr sub_223		;*(16FA:0034)
020A:9664  9A 34 00 FA 16			db	 9Ah, 34h, 00h,0FAh, 16h
020A:9669			loc_1662:
020A:9669  B0 29				mov	al,29h			; ')'
020A:966B  80 3E 2A35 00			cmp	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:9670  74 02				je	loc_1663		; Jump if equal
020A:9672  B0 5D				mov	al,5Dh			; ']'
020A:9674			loc_1663:
020A:9674  3E: 88 46 00				mov	ds:[bp],al
020A:9678  45					inc	bp
020A:9679			loc_1664:
020A:9679  5D					pop	bp
020A:967A  07					pop	es
020A:967B  59					pop	cx
020A:967C  C6 06 2A35 00			mov	byte ptr ds:[2A35h],0	; (020A:2A35=0A3h)
020A:9681  C3					retn
				sub_146		endp
  
020A:9682  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_147		proc	near
020A:9684  50					push	ax
020A:9685  51					push	cx
020A:9686  57					push	di
020A:9687  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:968C  06					push	es
020A:968D  E8 057E				call	sub_162			; (9C0E)
020A:9690  32 E4				xor	ah,ah			; Zero register
020A:9692  BF 284E				mov	di,284Eh
020A:9695  B9 0026				mov	cx,26h
020A:9698  B0 3B				mov	al,3Bh			; ';'
020A:969A  FD					std				; Set direction flag
020A:969B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:969D  0B C9				or	cx,cx			; Zero ?
020A:969F  75 02				jnz	loc_1665		; Jump if not zero
020A:96A1  FE C4				inc	ah
020A:96A3			loc_1665:
020A:96A3  BF 284E				mov	di,284Eh
020A:96A6  B9 0026				mov	cx,26h
020A:96A9  B0 20				mov	al,20h			; ' '
020A:96AB  FD					std				; Set direction flag
020A:96AC  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:96AE  47					inc	di
020A:96AF  47					inc	di
020A:96B0  0A E4				or	ah,ah			; Zero ?
020A:96B2  74 04				jz	loc_1666		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 324

020A:96B4  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020A:96B7  47					inc	di
020A:96B8			loc_1666:
020A:96B8  47					inc	di
020A:96B9  FC					cld				; Clear direction
020A:96BA  8B EF				mov	bp,di
020A:96BC  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:96C1  5A					pop	dx
020A:96C2  8E C2				mov	es,dx
020A:96C4  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:96C9  5A					pop	dx
020A:96CA  75 0A				jnz	loc_1667		; Jump if not zero
020A:96CC  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:96D1  74 03				je	loc_1667		; Jump if equal
020A:96D3  E8 080E				call	sub_168			; (9EE4)
020A:96D6			loc_1667:
020A:96D6  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:96DB  5F					pop	di
020A:96DC  59					pop	cx
020A:96DD  58					pop	ax
020A:96DE  C3					retn
				sub_147		endp
  
020A:96DF  90					nop
020A:96E0  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (020A:263D=99h)
020A:96E5  73 02				jae	loc_1668		; Jump if above or =
020A:96E7  EB 19				jmp	short loc_1670		; (9702)
020A:96E9			loc_1668:
020A:96E9  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (020A:2638=0B4h)
020A:96EE  76 12				jbe	loc_1670		; Jump if below or =
020A:96F0  F6 06 2638 01			test	byte ptr ds:[2638h],1	; (020A:2638=0B4h)
020A:96F5  75 02				jnz	loc_1669		; Jump if not zero
020A:96F7  EB 09				jmp	short loc_1670		; (9702)
020A:96F9			loc_1669:
020A:96F9  BA 0007				mov	dx,7
020A:96FC  BB 46B4				mov	bx,46B4h
020A:96FF  E8 B1BE		;*		call	sub_76			;*(48C0)
020A:96FF  E8 BE B1				db	0E8h,0BEh,0B1h
020A:9702			loc_1670:
020A:9702  C3					retn
020A:9703  90					nop
020A:9704  50					push	ax
020A:9705  53					push	bx
020A:9706  51					push	cx
020A:9707  52					push	dx
020A:9708  56					push	si
020A:9709  57					push	di
020A:970A  55					push	bp
020A:970B  BF 0008				mov	di,8
020A:970E			loc_1671:
020A:970E  BD 0001				mov	bp,1
020A:9711  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:9715  75 07				jne	loc_1672		; Jump if not equal
020A:9717  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:971C  74 4E				je	loc_1676		; Jump if equal
020A:971E			loc_1672:
020A:971E  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 325

020A:9723  75 30				jnz	loc_1674		; Jump if not zero
020A:9725  26: 8A 65 05				mov	ah,es:[di+5]
020A:9729  80 E4 0C				and	ah,0Ch
020A:972C  80 FC 04				cmp	ah,4
020A:972F  75 1D				jne	loc_1673		; Jump if not equal
020A:9731  26: 8A 65 04				mov	ah,es:[di+4]
020A:9735  80 E4 3F				and	ah,3Fh			; '?'
020A:9738  80 FC 21				cmp	ah,21h			; '!'
020A:973B  74 18				je	loc_1674		; Jump if equal
020A:973D  80 FC 22				cmp	ah,22h			; '"'
020A:9740  74 13				je	loc_1674		; Jump if equal
020A:9742  80 FC 20				cmp	ah,20h			; ' '
020A:9745  75 07				jne	loc_1673		; Jump if not equal
020A:9747  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:974C  74 07				jz	loc_1674		; Jump if zero
020A:974E			loc_1673:
020A:974E  8B F7				mov	si,di
020A:9750  E8 16C9				call	sub_175			; (AE1C)
020A:9753  EB B9				jmp	short loc_1671		; (970E)
020A:9755			loc_1674:
020A:9755  BB 377F				mov	bx,377Fh
020A:9758  26: 8A 45 05				mov	al,es:[di+5]
020A:975C  25 000F				and	ax,0Fh
020A:975F  D7					xlat				; al=[al+[bx]] table
020A:9760  0A C0				or	al,al			; Zero ?
020A:9762  75 04				jnz	loc_1675		; Jump if not zero
020A:9764  26: 8A 45 06				mov	al,es:[di+6]
020A:9768			loc_1675:
020A:9768  03 F8				add	di,ax
020A:976A  EB A2				jmp	short loc_1671		; (970E)
020A:976C			loc_1676:
020A:976C  5D					pop	bp
020A:976D  5F					pop	di
020A:976E  5E					pop	si
020A:976F  5A					pop	dx
020A:9770  59					pop	cx
020A:9771  5B					pop	bx
020A:9772  58					pop	ax
020A:9773  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_148		proc	near
020A:9774  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:9779  06					push	es
020A:977A  57					push	di
020A:977B  B0 20				mov	al,20h			; ' '
020A:977D  E8 048E				call	sub_162			; (9C0E)
020A:9780  BF 27CA				mov	di,27CAh
020A:9783  B9 2850				mov	cx,2850h
020A:9786  81 E9 27CA				sub	cx,27CAh
020A:978A  FC					cld				; Clear direction
020A:978B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:978D  5F					pop	di
020A:978E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 326

020A:9793  5A					pop	dx
020A:9794  8E C2				mov	es,dx
020A:9796  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:979B  5A					pop	dx
020A:979C  75 0A				jnz	loc_1677		; Jump if not zero
020A:979E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:97A3  74 03				je	loc_1677		; Jump if equal
020A:97A5  E8 073C				call	sub_168			; (9EE4)
020A:97A8			loc_1677:
020A:97A8  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:97AD  C3					retn
				sub_148		endp
  
020A:97AE  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_149		proc	near
020A:97B0  50					push	ax
020A:97B1  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:97B6  06					push	es
020A:97B7  E8 044B				call	sub_159			; (9C05)
020A:97BA  C6 06 2C3E 01			mov	byte ptr ds:[2C3Eh],1	; (9B68:2C3E=0E1h)
020A:97BF  26: A1 0000				mov	ax,word ptr es:[0]	; (A0AF:0000=0)
020A:97C3  3D 0000				cmp	ax,0
020A:97C6  75 08				jne	loc_1678		; Jump if not equal
020A:97C8  26: 83 3E 0004 00			cmp	word ptr es:[4],0	; (A0AF:0004=0)
020A:97CE  74 18				je	loc_1679		; Jump if equal
020A:97D0			loc_1678:
020A:97D0  26: 83 3E 0002 FF			cmp	word ptr es:[2],0FFFFh	; (A0AF:0002=0)
020A:97D6  74 10				je	loc_1679		; Jump if equal
020A:97D8  26: A1 0002				mov	ax,word ptr es:[2]	; (A0AF:0002=0)
020A:97DC  26: 3B 06 0004			cmp	ax,word ptr es:[4]	; (A0AF:0004=0)
020A:97E1  73 05				jae	loc_1679		; Jump if above or =
020A:97E3  C6 06 2C3E 00			mov	byte ptr ds:[2C3Eh],0	; (9B68:2C3E=0E1h)
020A:97E8			loc_1679:
020A:97E8  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:97ED  5A					pop	dx
020A:97EE  8E C2				mov	es,dx
020A:97F0  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:97F5  5A					pop	dx
020A:97F6  75 0A				jnz	loc_1680		; Jump if not zero
020A:97F8  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:97FD  74 03				je	loc_1680		; Jump if equal
020A:97FF  E8 06E2				call	sub_168			; (9EE4)
020A:9802			loc_1680:
020A:9802  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:9807  58					pop	ax
020A:9808  C3					retn
				sub_149		endp
  
020A:9809  87 DB				xchg	bx,bx
020A:980B  90					nop
020A:980C  E8 03FC				call	sub_161			; (9C0B)
020A:980F  BF 7420				mov	di,7420h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 327

020A:9812  BE 2791				mov	si,2791h
020A:9815  8B 04				mov	ax,[si]
020A:9817  24 F8				and	al,0F8h
020A:9819  D0 E8				shr	al,1			; Shift w/zeros fill
020A:981B  D0 E8				shr	al,1			; Shift w/zeros fill
020A:981D  32 E4				xor	ah,ah			; Zero register
020A:981F  03 F8				add	di,ax
020A:9821  26: 8B 3D				mov	di,es:[di]
020A:9824  8B 04				mov	ax,[si]
020A:9826			loc_1681:
020A:9826  26: 3A 05				cmp	al,es:[di]
020A:9829  74 15				je	loc_1683		; Jump if equal
020A:982B  72 10				jc	loc_1682		; Jump if carry Set
020A:982D  50					push	ax
020A:982E  B8 7474				mov	ax,7474h
020A:9831  2D 7460				sub	ax,7460h
020A:9834  03 F8				add	di,ax
020A:9836  58					pop	ax
020A:9837  26: 83 3D 00				cmp	word ptr es:[di],0
020A:983B  75 E9				jne	loc_1681		; Jump if not equal
020A:983D			loc_1682:
020A:983D  F8					clc				; Clear carry flag
020A:983E  EB 01				jmp	short loc_1684		; (9841)
020A:9840			loc_1683:
020A:9840  F9					stc				; Set carry flag
020A:9841			loc_1684:
020A:9841  C3					retn
020A:9842  87 DB				xchg	bx,bx
020A:9844  50					push	ax
020A:9845  51					push	cx
020A:9846  56					push	si
020A:9847  B9 7474				mov	cx,7474h
020A:984A  81 E9 7460				sub	cx,7460h
020A:984E  BE 27A1				mov	si,27A1h
  
020A:9851			locloop_1685:
020A:9851  26: 8A 05				mov	al,es:[di]
020A:9854  88 04				mov	[si],al
020A:9856  47					inc	di
020A:9857  46					inc	si
020A:9858  E2 F7				loop	locloop_1685		; Loop if cx > 0
  
020A:985A  BF 27A1				mov	di,27A1h
020A:985D  E8 03AE				call	sub_162			; (9C0E)
020A:9860  5E					pop	si
020A:9861  59					pop	cx
020A:9862  58					pop	ax
020A:9863  C3					retn
020A:9864  00 87 90DB				add	byte ptr data_720[bx],al	; (020A:90DB=3)
020A:9868  06					push	es
020A:9869  57					push	di
020A:986A  2E: C4 3E 4857			les	di,dword ptr cs:[4857h]	; (020A:4857=9136h) Load 32 bit ptr
020A:986F			loc_1686:
020A:986F  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:9873  75 09				jne	loc_1687		; Jump if not equal
020A:9875  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:987A  75 02				jne	loc_1687		; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 328

020A:987C  EB 24				jmp	short loc_1690		; (98A2)
020A:987E			loc_1687:
020A:987E  26: 39 1D				cmp	es:[di],bx
020A:9881  75 1A				jne	loc_1689		; Jump if not equal
020A:9883  2E: 80 3E 4814 01			cmp	byte ptr cs:[4814h],1	; (020A:4814=2)
020A:9889  74 0C				je	loc_1688		; Jump if equal
020A:988B  26: 3B 45 04				cmp	ax,es:[di+4]
020A:988F  77 0C				ja	loc_1689		; Jump if above
020A:9891  26: 3B 45 02				cmp	ax,es:[di+2]
020A:9895  72 06				jb	loc_1689		; Jump if below
020A:9897			loc_1688:
020A:9897  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:989B  EB 07				jmp	short loc_1691		; (98A4)
020A:989D			loc_1689:
020A:989D  83 C7 15				add	di,15h
020A:98A0  EB CD				jmp	short loc_1686		; (986F)
020A:98A2			loc_1690:
020A:98A2  33 C0				xor	ax,ax			; Zero register
020A:98A4			loc_1691:
020A:98A4  5F					pop	di
020A:98A5  07					pop	es
020A:98A6  C3					retn
020A:98A7  00 00				add	[bx+si],al
020A:98A9  9F					lahf				; Load ah from flags
020A:98AA  1F					pop	ds
020A:98AB  90					nop
020A:98AC  E8 EC81				call	sub_120			; (8530)
020A:98AF  CB					retf				; Return far
020A:98B0  00 00				add	[bx+si],al
020A:98B2  00 FF				add	bh,bh
020A:98B4  FF 9F A65F				call	dword ptr data_768[bx]	;*(020A:A65F=772Ah)
020A:98B8  60					db	60h
020A:98B9  CE					into				; Int 4 on overflow
020A:98BA  23 00				and	ax,[bx+si]
020A:98BC  00 9F 4E1F				add	byte ptr data_667+108h[bx],bl	; (020A:4E1F=4Ch)
020A:98C0  22 C6				and	al,dh
020A:98C2  18 FF				sbb	bh,bh
020A:98C4  FF					db	0FFh
020A:98C5  FF					db	0FFh
020A:98C6  FF					db	0FFh
020A:98C7  FF					db	0FFh
020A:98C8  FF 87 90DB				inc	data_720[bx]		; (020A:90DB=0F803h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_150		proc	near
020A:98CC  E8 0041				call	sub_152			; (9910)
020A:98CF  2E: 8B 16 486B			mov	dx,cs:data_653		; (020A:486B=6F6h)
020A:98D4  B8 0001				mov	ax,1
020A:98D7  E8 164E				call	sub_176			; (AF28)
020A:98DA  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:98E0  75 15				jne	loc_1692		; Jump if not equal
020A:98E2  BA FFFF				mov	dx,0FFFFh
020A:98E5  B8 0002				mov	ax,2
020A:98E8  E8 163D				call	sub_176			; (AF28)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 329

020A:98EB  B8 0001				mov	ax,1
020A:98EE  E8 1637				call	sub_176			; (AF28)
020A:98F1  B8 0004				mov	ax,4
020A:98F4  E8 1631				call	sub_176			; (AF28)
020A:98F7			loc_1692:
020A:98F7  2E: C7 06 486D 1F9F			mov	cs:data_654,1F9Fh	; (020A:486D=9B68h)
020A:98FE  2E: C7 06 486F 224E			mov	cs:data_655,224Eh	; (020A:486F=7502h)
020A:9905  C3					retn
				sub_150		endp
  
020A:9906  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_151		proc	near
020A:9908  2E: C7 06 4871 18C6			mov	cs:data_656,18C6h	; (020A:4871=0B418h)
020A:990F  C3					retn
				sub_151		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_152		proc	near
020A:9910  50					push	ax
020A:9911  53					push	bx
020A:9912  51					push	cx
020A:9913  52					push	dx
020A:9914  56					push	si
020A:9915  57					push	di
020A:9916  55					push	bp
020A:9917  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:991C  1E					push	ds
020A:991D  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:9922  06					push	es
020A:9923  2E: 80 3E 4860 FF			cmp	byte ptr cs:[4860h],0FFh	; (020A:4860=93h)
020A:9929  2E: C6 06 4860 00			mov	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:992F  75 03				jnz	loc_1693		; Jump if not zero
020A:9931  E9 01A1				jmp	loc_1702		; (9AD5)
020A:9934			loc_1693:
020A:9934  B8 18C6				mov	ax,18C6h
020A:9937  8E D8				mov	ds,ax
020A:9939  B8 3D00				mov	ax,3D00h
020A:993C  BA 6C70				mov	dx,6C70h
020A:993F  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:9941  73 03				jnc	loc_1694		; Jump if carry=0
020A:9943  E9 018F				jmp	loc_1702		; (9AD5)
020A:9946			loc_1694:
020A:9946  8B D8				mov	bx,ax
020A:9948  B4 44				mov	ah,44h			; 'D'
020A:994A  B0 07				mov	al,7
020A:994C  B9 0000				mov	cx,0
020A:994F  BA 6C79				mov	dx,6C79h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 330

020A:9952  CD 21				int	21h			; DOS Services  ah=function 44h
										;  device drivr cntrl al=subfunc
020A:9954  50					push	ax
020A:9955  B4 3E				mov	ah,3Eh			; '>'
020A:9957  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:9959  73 09				jnc	loc_1696		; Jump if carry=0
020A:995B  58					pop	ax
020A:995C			loc_1695:
020A:995C  9A 16FA:07E8		;*		call	far ptr sub_245		;*(16FA:07E8)
020A:995C  9A E8 07 FA 16			db	 9Ah,0E8h, 07h,0FAh, 16h
020A:9961  E9 0171				jmp	loc_1702		; (9AD5)
020A:9964			loc_1696:
020A:9964  58			data_729	db	58h
020A:9965  0A C0				or	al,al			; Zero ?
020A:9967  74 F3				jz	loc_1695		; Jump if zero
020A:9969  B4 40				mov	ah,40h			; '@'
020A:996B  CD 67				int	67h			; EMS Memory        ah=func 40h
										;  get manager status in ah
020A:996D  80 FC 00				cmp	ah,0
020A:9970  75 EA				jne	loc_1695		; Jump if not equal
020A:9972  B4 42				mov	ah,42h			; 'B'
020A:9974  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:9976  0A E4				or	ah,ah			; Zero ?
020A:9978  75 E2				jnz	loc_1695		; Jump if not zero
020A:997A  83 FB 14				cmp	bx,14h
020A:997D  72 DD				jb	loc_1695		; Jump if below
020A:997F  B4 41				mov	ah,41h			; 'A'
020A:9981  CD 67				int	67h			; EMS Memory        ah=func 41h
										;  get page frame segment in bx
020A:9983  0A E4				or	ah,ah			; Zero ?
020A:9985  75 D5				jnz	loc_1695		; Jump if not zero
020A:9987  2E: 89 1E 4861			mov	cs:data_648,bx		; (020A:4861=0D233h)
020A:998C  C6 06 6CC1 01			mov	byte ptr ds:[6CC1h],1	; (18C6:6CC1=0)
020A:9991  B4 43				mov	ah,43h			; 'C'
020A:9993  BB 0004				mov	bx,4
020A:9996  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:9998  0A E4				or	ah,ah			; Zero ?
020A:999A  75 C0				jnz	loc_1695		; Jump if not zero
020A:999C  2E: 89 16 486B			mov	cs:data_653,dx		; (020A:486B=6F6h)
020A:99A1  89 16 6CC2				mov	word ptr ds:[6CC2h],dx	; (18C6:6CC2=0FFFFh)
020A:99A5  B4 43				mov	ah,43h			; 'C'
020A:99A7  BB 0004				mov	bx,4
020A:99AA  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:99AC  0A E4				or	ah,ah			; Zero ?
020A:99AE  75 AC				jnz	loc_1695		; Jump if not zero
020A:99B0  2E: 89 16 4869			mov	cs:data_652,dx		; (020A:4869=64Dh)
020A:99B5  89 16 6CC4				mov	word ptr ds:[6CC4h],dx	; (18C6:6CC4=0FFFFh)
020A:99B9  B4 43				mov	ah,43h			; 'C'
020A:99BB  BB 0004				mov	bx,4
020A:99BE  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:99C0  0A E4				or	ah,ah			; Zero ?
020A:99C2  75 98				jnz	loc_1695		; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 331

020A:99C4  89 16 6CC6				mov	word ptr ds:[6CC6h],dx	; (18C6:6CC6=0FFFFh)
020A:99C8  B4 43				mov	ah,43h			; 'C'
020A:99CA  BB 0004				mov	bx,4
020A:99CD  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:99CF  0A E4				or	ah,ah			; Zero ?
020A:99D1  75 89				jnz	loc_1695		; Jump if not zero
020A:99D3  89 16 6CC8				mov	word ptr ds:[6CC8h],dx	; (18C6:6CC8=0FFFFh)
020A:99D7  B4 43				mov	ah,43h			; 'C'
020A:99D9  BB 0004				mov	bx,4
020A:99DC  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:99DE  0A E4				or	ah,ah			; Zero ?
020A:99E0  75 11				jnz	loc_1697		; Jump if not zero
020A:99E2  89 16 6CCA				mov	word ptr ds:[6CCAh],dx	; (18C6:6CCA=0FFFFh)
020A:99E6  C6 06 6D8A 03			mov	byte ptr ds:[6D8Ah],3	; (18C6:6D8A=0)
020A:99EB  C6 06 6D8B 01			mov	byte ptr ds:[6D8Bh],1	; (18C6:6D8B=0)
020A:99F0  EB 09				jmp	short loc_1698		; (99FB)
020A:99F2  90					nop
020A:99F3			loc_1697:
020A:99F3  9A 16FA:07E8		;*		call	far ptr sub_245		;*(16FA:07E8)
020A:99F3  9A E8 07 FA 16			db	 9Ah,0E8h, 07h,0FAh, 16h
020A:99F8  E9 00DA				jmp	loc_1702		; (9AD5)
020A:99FB			loc_1698:
020A:99FB  BA 491E				mov	dx,491Eh
020A:99FE  B4 09				mov	ah,9
020A:9A00  21CD 04B9		data_733	dd	4B921CDh
020A:9A04  00 BD 0000				add	[di+0],bh
020A:9A08  8B 16 6CC2				mov	dx,word ptr ds:[6CC2h]	; (18C6:6CC2=0FFFFh)
020A:9A0C  BE 6CAB				mov	si,6CABh
020A:9A0F  E8 0132				call	sub_153			; (9B44)
020A:9A12  72 DF				jc	loc_1697		; Jump if carry Set
020A:9A14  BA 23CE				mov	dx,23CEh
020A:9A17  8E C2				mov	es,dx
020A:9A19  8B 16 6CC4				mov	dx,word ptr ds:[6CC4h]	; (18C6:6CC4=0FFFFh)
020A:9A1D  E8 0188				call	sub_154			; (9BA8)
020A:9A20  72 D1				jc	loc_1697		; Jump if carry Set
020A:9A22  8B 16 6CC6				mov	dx,word ptr ds:[6CC6h]	; (18C6:6CC6=0FFFFh)
020A:9A26  BE 6C7B				mov	si,6C7Bh
020A:9A29  E8 0118				call	sub_153			; (9B44)
020A:9A2C  72 C5				jc	loc_1697		; Jump if carry Set
020A:9A2E  8B 16 6CC8				mov	dx,word ptr ds:[6CC8h]	; (18C6:6CC8=0FFFFh)
020A:9A32  BE 6C9B				mov	si,6C9Bh
020A:9A35  E8 010C				call	sub_153			; (9B44)
020A:9A38  72 B9				jc	loc_1697		; Jump if carry Set
020A:9A3A  8B 16 6CCA				mov	dx,word ptr ds:[6CCAh]	; (18C6:6CCA=0FFFFh)
020A:9A3E  BE 6C8B				mov	si,6C8Bh
020A:9A41  E8 0100				call	sub_153			; (9B44)
020A:9A44  72 AD				jc	loc_1697		; Jump if carry Set
020A:9A46  2E: C6 06 4860 01			mov	byte ptr cs:[4860h],1	; (020A:4860=93h)
020A:9A4C  B8 23CE				mov	ax,23CEh
020A:9A4F  8E C0				mov	es,ax
020A:9A51  B8 5F9F				mov	ax,5F9Fh
020A:9A54  8E D8				mov	ds,ax
020A:9A56  33 FF				xor	di,di			; Zero register
020A:9A58  8B F7				mov	si,di
020A:9A5A  FC					cld				; Clear direction
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 332

020A:9A5B  B9 1064				mov	cx,1064h
020A:9A5E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9A60  2E: 8C 06 4865			mov	cs:data_650,es		; (020A:4865=75FCh)
020A:9A65  8C C0				mov	ax,es
020A:9A67  BB 1064				mov	bx,1064h
020A:9A6A  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9A6C  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9A6E  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9A70  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9A72  03 C3				add	ax,bx
020A:9A74  40					inc	ax
020A:9A75  2E: A3 4867				mov	cs:data_651,ax		; (020A:4867=0E825h)
020A:9A79  B8 18C6				mov	ax,18C6h
020A:9A7C  8E D8				mov	ds,ax
020A:9A7E  B4 42				mov	ah,42h			; 'B'
020A:9A80  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:9A82  0A E4				or	ah,ah			; Zero ?
020A:9A84  75 4B				jnz	loc_1701		; Jump if not zero
020A:9A86  83 FB 0C				cmp	bx,0Ch
020A:9A89  72 46				jb	loc_1701		; Jump if below
020A:9A8B  8B C3				mov	ax,bx
020A:9A8D  B3 0C				mov	bl,0Ch
020A:9A8F  F6 F3				div	bl			; al, ah rem = ax/reg
020A:9A91  3C 00				cmp	al,0
020A:9A93  74 3C				je	loc_1701		; Jump if equal
020A:9A95  32 E4				xor	ah,ah			; Zero register
020A:9A97  3D 001F				cmp	ax,1Fh
020A:9A9A  72 03				jb	loc_1699		; Jump if below
020A:9A9C  B8 001F				mov	ax,1Fh
020A:9A9F			loc_1699:
020A:9A9F  8B C8				mov	cx,ax
020A:9AA1  BF 000A				mov	di,0Ah
  
020A:9AA4			locloop_1700:
020A:9AA4  51					push	cx
020A:9AA5  B9 0003				mov	cx,3
020A:9AA8  B4 43				mov	ah,43h			; 'C'
020A:9AAA  BB 0004				mov	bx,4
020A:9AAD  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:9AAF  0A E4				or	ah,ah			; Zero ?
020A:9AB1  75 1E				jnz	loc_1701		; Jump if not zero
020A:9AB3  89 95 6CC2				mov	word ptr ds:[6CC2h][di],dx	; (18C6:6CC2=0FFFFh)
020A:9AB7  FE 06 6D8A				inc	byte ptr ds:[6D8Ah]	; (18C6:6D8A=0)
020A:9ABB  BE 0000				mov	si,0
020A:9ABE  E8 0083				call	sub_153			; (9B44)
020A:9AC1  72 0E				jc	loc_1701		; Jump if carry Set
020A:9AC3  47					inc	di
020A:9AC4  47			data_735	db	47h
020A:9AC5  E1E2			data_736	dw	0E1E2h
020A:9AC7  59					pop	cx
020A:9AC8  FE 06 6D8B				inc	byte ptr ds:[6D8Bh]	; (18C6:6D8B=0)
020A:9ACC  E2 D6				loop	locloop_1700		; Loop if cx > 0
  
020A:9ACE  EB 2E				jmp	short loc_1703		; (9AFE)
020A:9AD0  90					nop
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 333

020A:9AD1			loc_1701:
020A:9AD1  59					pop	cx
020A:9AD2  EB 2A				jmp	short loc_1703		; (9AFE)
020A:9AD4  90					nop
020A:9AD5			loc_1702:
020A:9AD5  2E: C7 06 4865 5F9F			mov	cs:data_650,5F9Fh	; (020A:4865=75FCh)
020A:9ADC  B8 5F9F				mov	ax,5F9Fh
020A:9ADF  BB 1064				mov	bx,1064h
020A:9AE2  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9AE4  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9AE6  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9AE8  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:9AEA  03 C3				add	ax,bx
020A:9AEC  40					inc	ax
020A:9AED  2E: A3 4867				mov	cs:data_651,ax		; (020A:4867=0E825h)
020A:9AF1  2E: C7 06 4869 23CE			mov	cs:data_652,23CEh	; (020A:4869=64Dh)
020A:9AF8  2E: C6 06 4860 00			mov	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9AFE			loc_1703:
020A:9AFE  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:9B03  5A					pop	dx
020A:9B04  8E C2				mov	es,dx
020A:9B06  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:9B0B  5A					pop	dx
020A:9B0C  75 0A				jnz	loc_1704		; Jump if not zero
020A:9B0E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:9B13  74 03				je	loc_1704		; Jump if equal
020A:9B15  E8 03CC				call	sub_168			; (9EE4)
020A:9B18			loc_1704:
020A:9B18  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:9B1D  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:9B22  5A					pop	dx
020A:9B23  8E DA				mov	ds,dx
020A:9B25  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:9B2A  5A					pop	dx
020A:9B2B  75 0A				jnz	loc_1705		; Jump if not zero
020A:9B2D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:9B32  74 03				je	loc_1705		; Jump if equal
020A:9B34  E8 03AD				call	sub_168			; (9EE4)
020A:9B37			loc_1705:
020A:9B37  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:9B3C  5D					pop	bp
020A:9B3D  5F					pop	di
020A:9B3E  5E					pop	si
020A:9B3F  5A					pop	dx
020A:9B40  59					pop	cx
020A:9B41  5B					pop	bx
020A:9B42  58					pop	ax
020A:9B43  C3					retn
				sub_152		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_153		proc	near
020A:9B44  50					push	ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 334

020A:9B45  53					push	bx
020A:9B46  51					push	cx
020A:9B47  55					push	bp
020A:9B48  33 ED				xor	bp,bp			; Zero register
020A:9B4A  B9 0004				mov	cx,4
  
020A:9B4D			locloop_1706:
020A:9B4D  44B4			data_737	dw	44B4h
020A:9B4F  8B DD				mov	bx,bp
020A:9B51  8A C3				mov	al,bl
020A:9B53  CD 67				int	67h			; EMS Memory        ah=func 09h
020A:9B55  0A E4				or	ah,ah			; Zero ?
020A:9B57  75 46				jnz	loc_1709		; Jump if not zero
020A:9B59  45					inc	bp
020A:9B5A  E2 F1				loop	locloop_1706		; Loop if cx > 0
  
020A:9B5C  06					push	es
020A:9B5D  57					push	di
020A:9B5E  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:9B63  33 FF				xor	di,di			; Zero register
020A:9B65  B8 FFFF				mov	ax,0FFFFh
020A:9B68  B9			data_739	db	0B9h
020A:9B69  00 80 F3FC				add	byte ptr ds:[0F3FCh][bx+si],al	; (18C6:F3FC=47h)
020A:9B6D  AB					stosw				; Store ax to es:[di]
020A:9B6E  B9 0010				mov	cx,10h
020A:9B71  83 FE 00				cmp	si,0
020A:9B74  74 08				je	loc_1707		; Jump if equal
020A:9B76  BF FFF0				mov	di,0FFF0h
020A:9B79  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9B7B  EB 03				jmp	short loc_1708		; (9B80)
020A:9B7D  90					nop
020A:9B7E			loc_1707:
020A:9B7E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:9B80			loc_1708:
020A:9B80  1E					push	ds
020A:9B81  2E: 8E 1E 4861			mov	ds,cs:data_648		; (020A:4861=0D233h)
020A:9B86  BD FFFC				mov	bp,0FFFCh
020A:9B89  8B C2				mov	ax,dx
020A:9B8B  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:9B8B  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:9B90  1F					pop	ds
020A:9B91  5F					pop	di
020A:9B92  07					pop	es
020A:9B93  B4 47				mov	ah,47h			; 'G'
020A:9B95  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:9B97  0A E4				or	ah,ah			; Zero ?
020A:9B99  75 04				jnz	loc_1709		; Jump if not zero
020A:9B9B  F8					clc				; Clear carry flag
020A:9B9C  EB 02				jmp	short loc_1710		; (9BA0)
020A:9B9E  90					nop
020A:9B9F			loc_1709:
020A:9B9F  F9					stc				; Set carry flag
020A:9BA0			loc_1710:
020A:9BA0  5D					pop	bp
020A:9BA1  59					pop	cx
020A:9BA2  5B					pop	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 335

020A:9BA3  58					pop	ax
020A:9BA4  C3					retn
				sub_153		endp
  
020A:9BA5  87 DB				xchg	bx,bx
020A:9BA7  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_154		proc	near
020A:9BA8  50					push	ax
020A:9BA9  53					push	bx
020A:9BAA  51					push	cx
020A:9BAB  55					push	bp
020A:9BAC  33 ED				xor	bp,bp			; Zero register
020A:9BAE  B9 0004				mov	cx,4
  
020A:9BB1			locloop_1711:
020A:9BB1  B4 44				mov	ah,44h			; 'D'
020A:9BB3  8B DD				mov	bx,bp
020A:9BB5  8A C3				mov	al,bl
020A:9BB7  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:9BB9  0A E4				or	ah,ah			; Zero ?
020A:9BBB  75 28				jnz	loc_1712		; Jump if not zero
020A:9BBD  45					inc	bp
020A:9BBE  E2 F1				loop	locloop_1711		; Loop if cx > 0
  
020A:9BC0  06					push	es
020A:9BC1  1E					push	ds
020A:9BC2  57					push	di
020A:9BC3  56					push	si
020A:9BC4  06					push	es
020A:9BC5  1F					pop	ds
020A:9BC6  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:9BCB  33 FF				xor	di,di			; Zero register
020A:9BCD  8B F7				mov	si,di
020A:9BCF  B9 8000				mov	cx,8000h
020A:9BD2  FC					cld				; Clear direction
020A:9BD3  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:9BD5  5E					pop	si
020A:9BD6  5F					pop	di
020A:9BD7  1F					pop	ds
020A:9BD8  07					pop	es
020A:9BD9  B4 47				mov	ah,47h			; 'G'
020A:9BDB  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:9BDD  0A E4				or	ah,ah			; Zero ?
020A:9BDF  75 04				jnz	loc_1712		; Jump if not zero
020A:9BE1  F8					clc				; Clear carry flag
020A:9BE2  EB 05				jmp	short loc_1713		; (9BE9)
020A:9BE4  90					nop
020A:9BE5			loc_1712:
020A:9BE5  F9					stc				; Set carry flag
020A:9BE6  EB 01				jmp	short loc_1713		; (9BE9)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 336

020A:9BE8  90					nop
020A:9BE9			loc_1713:
020A:9BE9  5D					pop	bp
020A:9BEA  59					pop	cx
020A:9BEB  5B					pop	bx
020A:9BEC  58					pop	ax
020A:9BED  C3					retn
				sub_154		endp
  
020A:9BEE  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_155		proc	near
020A:9BF0  EB 3D				jmp	short loc_1714		; (9C2F)
020A:9BF2  90					nop
020A:9BF3  EB 40				jmp	short loc_1715		; (9C35)
020A:9BF5  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_156:
020A:9BF6  EB 43				jmp	short loc_1716		; (9C3B)
020A:9BF8  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_157:
020A:9BF9  EB 5E				jmp	short loc_1718		; (9C59)
020A:9BFB  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_158:
020A:9BFC  EB 61				jmp	short loc_1719		; (9C5F)
020A:9BFE  90					nop
020A:9BFF  EB 64				jmp	short loc_1720		; (9C65)
020A:9C01  90					nop
020A:9C02  EB 67				jmp	short loc_1721		; (9C6B)
020A:9C04  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_159:
020A:9C05  E9 0083				jmp	loc_1723		; (9C8B)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_160:
020A:9C08  E9 0086				jmp	loc_1724		; (9C91)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_161:
020A:9C0B  E9 0089				jmp	loc_1725		; (9C97)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 337

  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_162:
020A:9C0E  E9 00A4				jmp	loc_1727		; (9CB5)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_163:
020A:9C11  E9 00A7				jmp	loc_1728		; (9CBB)
020A:9C14  E9 00AA				jmp	loc_1729		; (9CC1)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_164:
020A:9C17  E9 00AD				jmp	loc_1730		; (9CC7)
020A:9C1A  E9 00CA				jmp	loc_1732		; (9CE7)
020A:9C1D  E9 00CC				jmp	loc_1733		; (9CEC)
020A:9C20  E9 00CE				jmp	loc_1734		; (9CF1)
020A:9C23  E9 00E7				jmp	loc_1736		; (9D0D)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_165:
020A:9C26  E9 00E9				jmp	loc_1737		; (9D12)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_166:
020A:9C29  E9 00EB				jmp	loc_1738		; (9D17)
020A:9C2C  E9 00ED				jmp	loc_1739		; (9D1C)
020A:9C2F			loc_1714:
020A:9C2F  2E: 8E 1E 486D			mov	ds,cs:data_654		; (020A:486D=9B68h)
020A:9C34  C3					retn
020A:9C35			loc_1715:
020A:9C35  2E: 8E 1E 486F			mov	ds,cs:data_655		; (020A:486F=7502h)
020A:9C3A  C3					retn
020A:9C3B			loc_1716:
020A:9C3B  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9C41  75 06				jne	loc_1717		; Jump if not equal
020A:9C43  2E: 8E 1E 4869			mov	ds,cs:data_652		; (020A:4869=64Dh)
020A:9C48  C3					retn
020A:9C49			loc_1717:
020A:9C49  52					push	dx
020A:9C4A  2E: 8B 16 4869			mov	dx,cs:data_652		; (020A:4869=64Dh)
020A:9C4F  E8 0292				call	sub_168			; (9EE4)
020A:9C52  2E: 8E 1E 4861			mov	ds,cs:data_648		; (020A:4861=0D233h)
020A:9C57  5A					pop	dx
020A:9C58  C3					retn
020A:9C59			loc_1718:
020A:9C59  2E: 8E 1E 4871			mov	ds,cs:data_656		; (020A:4871=0B418h)
020A:9C5E  C3					retn
020A:9C5F			loc_1719:
020A:9C5F  2E: 8E 1E 4865			mov	ds,cs:data_650		; (020A:4865=75FCh)
020A:9C64  C3					retn
020A:9C65			loc_1720:
020A:9C65  2E: 8E 1E 4867			mov	ds,cs:data_651		; (020A:4867=0E825h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 338

020A:9C6A  C3					retn
020A:9C6B			loc_1721:
020A:9C6B  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9C71  75 08				jne	loc_1722		; Jump if not equal
020A:9C73  50					push	ax
020A:9C74  B8 4F9F				mov	ax,4F9Fh
020A:9C77  8E D8				mov	ds,ax
020A:9C79  58					pop	ax
020A:9C7A  C3					retn
020A:9C7B			loc_1722:
020A:9C7B  52					push	dx
020A:9C7C  2E: 8B 16 486B			mov	dx,cs:data_653		; (020A:486B=6F6h)
020A:9C81  E8 0260				call	sub_168			; (9EE4)
020A:9C84  2E: 8E 1E 4861			mov	ds,cs:data_648		; (020A:4861=0D233h)
020A:9C89  5A					pop	dx
020A:9C8A  C3					retn
020A:9C8B			loc_1723:
020A:9C8B  2E: 8E 06 486D			mov	es,cs:data_654		; (020A:486D=9B68h)
020A:9C90  C3					retn
020A:9C91			loc_1724:
020A:9C91  2E: 8E 06 486F			mov	es,cs:data_655		; (020A:486F=7502h)
020A:9C96  C3					retn
020A:9C97			loc_1725:
020A:9C97  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9C9D  75 06				jne	loc_1726		; Jump if not equal
020A:9C9F  2E: 8E 06 4869			mov	es,cs:data_652		; (020A:4869=64Dh)
020A:9CA4  C3					retn
020A:9CA5			loc_1726:
020A:9CA5  52					push	dx
020A:9CA6  2E: 8B 16 4869			mov	dx,cs:data_652		; (020A:4869=64Dh)
020A:9CAB  E8 0236				call	sub_168			; (9EE4)
020A:9CAE  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:9CB3  5A					pop	dx
020A:9CB4  C3					retn
020A:9CB5			loc_1727:
020A:9CB5  2E: 8E 06 4871			mov	es,cs:data_656		; (020A:4871=0B418h)
020A:9CBA  C3					retn
020A:9CBB			loc_1728:
020A:9CBB  2E: 8E 06 4865			mov	es,cs:data_650		; (020A:4865=75FCh)
020A:9CC0  C3					retn
020A:9CC1			loc_1729:
020A:9CC1  2E: 8E 06 4867			mov	es,cs:data_651		; (020A:4867=0E825h)
020A:9CC6  C3					retn
020A:9CC7			loc_1730:
020A:9CC7  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9CCD  75 08				jne	loc_1731		; Jump if not equal
020A:9CCF  50					push	ax
020A:9CD0  B8 4F9F				mov	ax,4F9Fh
020A:9CD3  8E			data_741	db	8Eh
020A:9CD4  C0					db	0C0h
020A:9CD5  58					pop	ax
020A:9CD6  C3					retn
020A:9CD7			loc_1731:
020A:9CD7  52					push	dx
020A:9CD8  2E: 8B 16 486B			mov	dx,cs:data_653		; (020A:486B=6F6h)
020A:9CDD  E8 0204				call	sub_168			; (9EE4)
020A:9CE0  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 339

020A:9CE5  5A					pop	dx
020A:9CE6  C3					retn
020A:9CE7			loc_1732:
020A:9CE7  2E: A1 486D				mov	ax,cs:data_654		; (020A:486D=9B68h)
020A:9CEB  C3					retn
020A:9CEC			loc_1733:
020A:9CEC  2E			data_742	db	2Eh
020A:9CED  A1 486F				mov	ax,word ptr ds:[486Fh]	; (D233:486F=53C4h)
020A:9CF0  C3					retn
020A:9CF1			loc_1734:
020A:9CF1  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9CF7  75 05				jne	loc_1735		; Jump if not equal
020A:9CF9  2E: A1 4869				mov	ax,cs:data_652		; (020A:4869=64Dh)
020A:9CFD  C3					retn
020A:9CFE			loc_1735:
020A:9CFE  52					push	dx
020A:9CFF  2E: 8B 16 4869			mov	dx,cs:data_652		; (020A:4869=64Dh)
020A:9D04  E8 01DD				call	sub_168			; (9EE4)
020A:9D07  2E: A1 4861				mov	ax,cs:data_648		; (020A:4861=0D233h)
020A:9D0B  5A					pop	dx
020A:9D0C  C3					retn
020A:9D0D			loc_1736:
020A:9D0D  2E: A1 4871				mov	ax,cs:data_656		; (020A:4871=0B418h)
020A:9D11  C3					retn
020A:9D12			loc_1737:
020A:9D12  2E: A1 4865				mov	ax,cs:data_650		; (020A:4865=75FCh)
020A:9D16  C3					retn
020A:9D17			loc_1738:
020A:9D17  2E: A1 4867				mov	ax,cs:data_651		; (020A:4867=0E825h)
020A:9D1B  C3					retn
020A:9D1C			loc_1739:
020A:9D1C  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9D22  75 04				jne	loc_1740		; Jump if not equal
020A:9D24  B8 4F9F				mov	ax,4F9Fh
020A:9D27  C3					retn
020A:9D28			loc_1740:
020A:9D28  52					push	dx
020A:9D29  2E: 8B 16 486B			mov	dx,cs:data_653		; (020A:486B=6F6h)
020A:9D2E  E8 01B3				call	sub_168			; (9EE4)
020A:9D31  2E: A1 4861				mov	ax,cs:data_648		; (020A:4861=0D233h)
020A:9D35  5A					pop	dx
020A:9D36  C3					retn
				sub_155		endp
  
020A:9D37  01 2E 3E80				add	word ptr ds:[3E80h],bp	; (020A:3E80=0EB76h)
020A:9D3B  E7 4C				out	4Ch,ax			; port 4Ch
020A:9D3D  00 74 03				add	[si+3],dh
020A:9D40  E9 019F				jmp	loc_1756		; (9EE2)
020A:9D43  2E: FE 06 4CE7			inc	byte ptr cs:data_664+0Eh	; (020A:4CE7=4Eh)
020A:9D48  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9D4E  75 03				jne	loc_1741		; Jump if not equal
020A:9D50  E9 018F				jmp	loc_1756		; (9EE2)
020A:9D53			loc_1741:
020A:9D53  50					push	ax
020A:9D54  53					push	bx
020A:9D55  51					push	cx
020A:9D56  52					push	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 340

020A:9D57  56					push	si
020A:9D58  57					push	di
020A:9D59  55					push	bp
020A:9D5A  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:9D5F  06					push	es
020A:9D60  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:9D65  1E					push	ds
020A:9D66  E8 FE9C				call	sub_159			; (9C05)
020A:9D69  E8 FE8D				call	sub_157			; (9BF9)
020A:9D6C  33 F6				xor	si,si			; Zero register
020A:9D6E  33 C9				xor	cx,cx			; Zero register
020A:9D70  26: 8B 44 04				mov	ax,es:[si+4]
020A:9D74  26: 3B 44 02				cmp	ax,es:[si+2]
020A:9D78  75 09				jne	loc_1742		; Jump if not equal
020A:9D7A  2E: C6 06 4CE7 00			mov	byte ptr cs:data_664+0Eh,0	; (020A:4CE7=4Eh)
020A:9D80  E9 011A				jmp	loc_1753		; (9E9D)
020A:9D83			loc_1742:
020A:9D83  26: 8B 04				mov	ax,es:[si]
020A:9D86  3D FFFF				cmp	ax,0FFFFh
020A:9D89  74 1C				je	loc_1743		; Jump if equal
020A:9D8B  26: 8B 54 04				mov	dx,es:[si+4]
020A:9D8F  26: 2B 54 02				sub	dx,es:[si+2]
020A:9D93  01 16 6CBB				add	data_695,dx		; (020A:6CBB=0FF2Eh)
020A:9D97  83 16 6CBD 00			adc	data_696,0		; (020A:6CBD=6336h)
020A:9D9C  83 C6 15				add	si,15h
020A:9D9F  26: 3B 04				cmp	ax,es:[si]
020A:9DA2  74 DF				je	loc_1742		; Jump if equal
020A:9DA4  41					inc	cx
020A:9DA5  EB DC				jmp	short loc_1742		; (9D83)
020A:9DA7			loc_1743:
020A:9DA7  89 0E 6CBF				mov	data_697,cx		; (020A:6CBF=648h)
020A:9DAB  3A 0E 6D8B				cmp	cl,byte ptr ds:[6D8Bh]	; (020A:6D8B=1)
020A:9DAF  77 49				ja	loc_1746		; Jump if above
020A:9DB1  33 F6				xor	si,si			; Zero register
020A:9DB3  BB 0004				mov	bx,4
020A:9DB6			loc_1744:
020A:9DB6  26: 8B 04				mov	ax,es:[si]
020A:9DB9  3D FFFF				cmp	ax,0FFFFh
020A:9DBC  74 39				je	loc_1745		; Jump if equal
020A:9DBE  50					push	ax
020A:9DBF  8B 97 6CC2				mov	dx,word ptr ds:[6CC2h][bx]	; (020A:6CC2=93Eh)
020A:9DC3  26: 89 54 11				mov	es:[si+11h],dx
020A:9DC7  B8 0002				mov	ax,2
020A:9DCA  E8 115B				call	sub_176			; (AF28)
020A:9DCD  8B 97 6CC4				mov	dx,word ptr ds:[6CC4h][bx]	; (020A:6CC4=113h)
020A:9DD1  26: 89 54 13				mov	es:[si+13h],dx
020A:9DD5  B8 0001				mov	ax,1
020A:9DD8  E8 114D				call	sub_176			; (AF28)
020A:9DDB  8B 97 6CC6				mov	dx,data_700[bx]		; (020A:6CC6=3575h)
020A:9DDF  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:9DE3  B8 0004				mov	ax,4
020A:9DE6  E8 113F				call	sub_176			; (AF28)
020A:9DE9  58					pop	ax
020A:9DEA  83 C6 15				add	si,15h
020A:9DED  26: 3B 04				cmp	ax,es:[si]
020A:9DF0  74 C4				je	loc_1744		; Jump if equal
020A:9DF2  83 C3 06				add	bx,6
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 341

020A:9DF5  EB BF				jmp	short loc_1744		; (9DB6)
020A:9DF7			loc_1745:
020A:9DF7  E9 00A3				jmp	loc_1753		; (9E9D)
020A:9DFA			loc_1746:
020A:9DFA  32 FF				xor	bh,bh			; Zero register
020A:9DFC  8A 1E 6D8B				mov	bl,byte ptr ds:[6D8Bh]	; (020A:6D8B=1)
020A:9E00  B8 FFFF				mov	ax,0FFFFh
020A:9E03  F7 E3				mul	bx			; dx:ax = reg * ax
020A:9E05  3B 16 6CBD				cmp	dx,data_696		; (020A:6CBD=6336h)
020A:9E09  77 0E				ja	loc_1748		; Jump if above
020A:9E0B  72 06				jc	loc_1747		; Jump if carry Set
020A:9E0D  3B 06 6CBB				cmp	ax,data_695		; (020A:6CBB=0FF2Eh)
020A:9E11  77 06				ja	loc_1748		; Jump if above
020A:9E13			loc_1747:
020A:9E13  B8 FFFF				mov	ax,0FFFFh
020A:9E16  EB 10				jmp	short loc_1749		; (9E28)
020A:9E18  90					nop
020A:9E19			loc_1748:
020A:9E19  32 FF				xor	bh,bh			; Zero register
020A:9E1B  8A 1E 6D8B				mov	bl,byte ptr ds:[6D8Bh]	; (020A:6D8B=1)
020A:9E1F  8B 16 6CBD				mov	dx,data_696		; (020A:6CBD=6336h)
020A:9E23  A1 6CBB				mov	ax,data_695		; (020A:6CBB=0FF2Eh)
020A:9E26  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:9E28			loc_1749:
020A:9E28  8B E8				mov	bp,ax
020A:9E2A  33 C9				xor	cx,cx			; Zero register
020A:9E2C  33 D2				xor	dx,dx			; Zero register
020A:9E2E  FE C6				inc	dh
020A:9E30  33 F6				xor	si,si			; Zero register
020A:9E32  BF 0004				mov	di,4
020A:9E35			loc_1750:
020A:9E35  26: 8B 1C				mov	bx,es:[si]
020A:9E38  83 FB FF				cmp	bx,0FFFFh
020A:9E3B  74 60				je	loc_1753		; Jump if equal
020A:9E3D  26: 8B 44 04				mov	ax,es:[si+4]
020A:9E41  26: 2B 44 02				sub	ax,es:[si+2]
020A:9E45  03 C8				add	cx,ax
020A:9E47  9C					pushf				; Push flags
020A:9E48  8B 85 6CC2				mov	ax,word ptr ds:[6CC2h][di]	; (020A:6CC2=93Eh)
020A:9E4C  26: 89 44 11				mov	es:[si+11h],ax
020A:9E50  50					push	ax
020A:9E51  52					push	dx
020A:9E52  8B D0				mov	dx,ax
020A:9E54  B8 0002				mov	ax,2
020A:9E57  E8 10CE				call	sub_176			; (AF28)
020A:9E5A  5A					pop	dx
020A:9E5B  58					pop	ax
020A:9E5C  8B 85 6CC4				mov	ax,word ptr ds:[6CC4h][di]	; (020A:6CC4=113h)
020A:9E60  26: 89 44 13				mov	es:[si+13h],ax
020A:9E64  50					push	ax
020A:9E65  52					push	dx
020A:9E66  8B D0				mov	dx,ax
020A:9E68  B8 0001				mov	ax,1
020A:9E6B  E8 10BA				call	sub_176			; (AF28)
020A:9E6E  5A					pop	dx
020A:9E6F  58					pop	ax
020A:9E70  8B 85 6CC6				mov	ax,data_700[di]		; (020A:6CC6=3575h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 342

020A:9E74  26: 89 44 0F				mov	es:[si+0Fh],ax
020A:9E78  50					push	ax
020A:9E79  52					push	dx
020A:9E7A  8B D0				mov	dx,ax
020A:9E7C  B8 0004				mov	ax,4
020A:9E7F  E8 10A6				call	sub_176			; (AF28)
020A:9E82  5A					pop	dx
020A:9E83  58					pop	ax
020A:9E84  83 C6 15				add	si,15h
020A:9E87  9D					popf				; Pop flags
020A:9E88  72 04				jc	loc_1751		; Jump if carry Set
020A:9E8A  3B CD				cmp	cx,bp
020A:9E8C  72 0D				jb	loc_1752		; Jump if below
020A:9E8E			loc_1751:
020A:9E8E  33 C9				xor	cx,cx			; Zero register
020A:9E90  3A 36 6D8B				cmp	dh,byte ptr ds:[6D8Bh]	; (020A:6D8B=1)
020A:9E94  73 05				jae	loc_1752		; Jump if above or =
020A:9E96  83 C7 06				add	di,6
020A:9E99  FE C6				inc	dh
020A:9E9B			loc_1752:
020A:9E9B  EB 98				jmp	short loc_1750		; (9E35)
020A:9E9D			loc_1753:
020A:9E9D  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:9EA2  5A					pop	dx
020A:9EA3  8E DA				mov	ds,dx
020A:9EA5  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:9EAA  5A					pop	dx
020A:9EAB  75 0A				jnz	loc_1754		; Jump if not zero
020A:9EAD  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:9EB2  74 03				je	loc_1754		; Jump if equal
020A:9EB4  E8 002D				call	sub_168			; (9EE4)
020A:9EB7			loc_1754:
020A:9EB7  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:9EBC  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:9EC1  5A					pop	dx
020A:9EC2  8E C2				mov	es,dx
020A:9EC4  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:9EC9  5A					pop	dx
020A:9ECA  75 0A				jnz	loc_1755		; Jump if not zero
020A:9ECC  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:9ED1  74 03				je	loc_1755		; Jump if equal
020A:9ED3  E8 000E				call	sub_168			; (9EE4)
020A:9ED6			loc_1755:
020A:9ED6  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:9EDB  5D					pop	bp
020A:9EDC  5F					pop	di
020A:9EDD  5E					pop	si
020A:9EDE  5A					pop	dx
020A:9EDF  59					pop	cx
020A:9EE0  5B					pop	bx
020A:9EE1  58					pop	ax
020A:9EE2			loc_1756:
020A:9EE2  C3					retn
020A:9EE3  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 343

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_168		proc	near
020A:9EE4  2E: 39 16 4863			cmp	cs:data_649,dx		; (020A:4863=0B9E8h)
020A:9EE9  74 19				je	loc_1757		; Jump if equal
020A:9EEB  2E: 89 16 4863			mov	cs:data_649,dx		; (020A:4863=0B9E8h)
020A:9EF0  50					push	ax
020A:9EF1  B4 48				mov	ah,48h			; 'H'
020A:9EF3  CD 67				int	67h			; EMS Memory        ah=func 48h
										;  restore map context,dx=handle
020A:9EF5  80 FC 00				cmp	ah,0
020A:9EF8  75 0B				jne	loc_1758		; Jump if not equal
020A:9EFA  B4 47				mov	ah,47h			; 'G'
020A:9EFC  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:9EFE  80 FC 00				cmp	ah,0
020A:9F01  75 02				jne	loc_1758		; Jump if not equal
020A:9F03  58					pop	ax
020A:9F04			loc_1757:
020A:9F04  C3					retn
020A:9F05			loc_1758:
020A:9F05  E8 FCF1				call	sub_157			; (9BF9)
020A:9F08  BD 24A6				mov	bp,24A6h
020A:9F0B  32 C0				xor	al,al			; Zero register
020A:9F0D  86 C4				xchg	al,ah
020A:9F0F  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:9F0F  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:9F14  E9 9E85		;*		jmp	loc_536			;*(3D9C)
				sub_168		endp
  
020A:9F14  E9 85 9E				db	0E9h, 85h, 9Eh
020A:9F17  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_169		proc	near
020A:9F18  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9F1E  75 0A				jne	loc_1759		; Jump if not equal
020A:9F20  50					push	ax
020A:9F21  B8 3F9F				mov	ax,3F9Fh
020A:9F24  8E C0				mov	es,ax
020A:9F26  58					pop	ax
020A:9F27  EB 60				jmp	short loc_1768		; (9F89)
020A:9F29  90					nop
020A:9F2A			loc_1759:
020A:9F2A  E8 FCE1				call	sub_162			; (9C0E)
020A:9F2D  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (3F9F:2D82=3900h)
020A:9F32  75 1C				jne	loc_1761		; Jump if not equal
020A:9F34  2E: 83 3E 4873 FF			cmp	cs:data_657,0FFFFh	; (020A:4873=0CD3Bh)
020A:9F3A  74 14				je	loc_1761		; Jump if equal
020A:9F3C  52					push	dx
020A:9F3D  2E: 8B 16 4873			mov	dx,cs:data_657		; (020A:4873=0CD3Bh)
020A:9F42  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:9F47  74 03				je	loc_1760		; Jump if equal
020A:9F49  E8 FF98				call	sub_168			; (9EE4)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 344

020A:9F4C			loc_1760:
020A:9F4C  5A					pop	dx
020A:9F4D  EB 35				jmp	short loc_1767		; (9F84)
020A:9F4F  90					nop
020A:9F50			loc_1761:
020A:9F50  E8 FCB2				call	sub_159			; (9C05)
020A:9F53  56					push	si
020A:9F54  33 F6				xor	si,si			; Zero register
020A:9F56			loc_1762:
020A:9F56  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:9F5A  75 07				jne	loc_1763		; Jump if not equal
020A:9F5C  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:9F61  74 0C				je	loc_1764		; Jump if equal
020A:9F63			loc_1763:
020A:9F63  26: 39 1C				cmp	es:[si],bx
020A:9F66  77 07				ja	loc_1764		; Jump if above
020A:9F68  74 10				jz	loc_1766		; Jump if zero
020A:9F6A  83 C6 15				add	si,15h
020A:9F6D  EB E7				jmp	short loc_1762		; (9F56)
020A:9F6F			loc_1764:
020A:9F6F  83 FE 15				cmp	si,15h
020A:9F72  73 03				jae	loc_1765		; Jump if above or =
020A:9F74  BE 0015				mov	si,15h
020A:9F77			loc_1765:
020A:9F77  83 EE 15				sub	si,15h
020A:9F7A			loc_1766:
020A:9F7A  52					push	dx
020A:9F7B  26: 8B 54 11				mov	dx,es:[si+11h]
020A:9F7F  E8 FF62				call	sub_168			; (9EE4)
020A:9F82  5A					pop	dx
020A:9F83  5E					pop	si
020A:9F84			loc_1767:
020A:9F84  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:9F89			loc_1768:
020A:9F89  C3					retn
				sub_169		endp
  
020A:9F8A  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_170		proc	near
020A:9F8C  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:9F92  75 0A				jne	loc_1769		; Jump if not equal
020A:9F94  50					push	ax
020A:9F95  B8 4F9F				mov	ax,4F9Fh
020A:9F98  8E C0				mov	es,ax
020A:9F9A  58					pop	ax
020A:9F9B  EB 60				jmp	short loc_1778		; (9FFD)
020A:9F9D  90					nop
020A:9F9E			loc_1769:
020A:9F9E  E8 FC6D				call	sub_162			; (9C0E)
020A:9FA1  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (4F9F:2D82=41h)
020A:9FA6  75 1C				jne	loc_1771		; Jump if not equal
020A:9FA8  2E: 83 3E 4875 FF			cmp	cs:data_658,0FFFFh	; (020A:4875=7321h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 345

020A:9FAE  74 14				je	loc_1771		; Jump if equal
020A:9FB0  52					push	dx
020A:9FB1  2E: 8B 16 4875			mov	dx,cs:data_658		; (020A:4875=7321h)
020A:9FB6  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:9FBB  74 03				je	loc_1770		; Jump if equal
020A:9FBD  E8 FF24				call	sub_168			; (9EE4)
020A:9FC0			loc_1770:
020A:9FC0  5A					pop	dx
020A:9FC1  EB 35				jmp	short loc_1777		; (9FF8)
020A:9FC3  90					nop
020A:9FC4			loc_1771:
020A:9FC4  E8 FC3E				call	sub_159			; (9C05)
020A:9FC7  56					push	si
020A:9FC8  33 F6				xor	si,si			; Zero register
020A:9FCA			loc_1772:
020A:9FCA  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:9FCE  75 07				jne	loc_1773		; Jump if not equal
020A:9FD0  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:9FD5  74 0C				je	loc_1774		; Jump if equal
020A:9FD7			loc_1773:
020A:9FD7  26: 39 1C				cmp	es:[si],bx
020A:9FDA  77 07				ja	loc_1774		; Jump if above
020A:9FDC  74 10				jz	loc_1776		; Jump if zero
020A:9FDE  83 C6 15				add	si,15h
020A:9FE1  EB E7				jmp	short loc_1772		; (9FCA)
020A:9FE3			loc_1774:
020A:9FE3  83 FE 15				cmp	si,15h
020A:9FE6  73 03				jae	loc_1775		; Jump if above or =
020A:9FE8  BE 0015				mov	si,15h
020A:9FEB			loc_1775:
020A:9FEB  83 EE 15				sub	si,15h
020A:9FEE			loc_1776:
020A:9FEE  52					push	dx
020A:9FEF  26: 8B 54 13				mov	dx,es:[si+13h]
020A:9FF3  E8 FEEE				call	sub_168			; (9EE4)
020A:9FF6  5A					pop	dx
020A:9FF7  5E					pop	si
020A:9FF8			loc_1777:
020A:9FF8  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:9FFD			loc_1778:
020A:9FFD  C3					retn
				sub_170		endp
  
020A:9FFE  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_171		proc	near
020A:A000  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:A006  75 0A				jne	loc_1779		; Jump if not equal
020A:A008  50					push	ax
020A:A009  B8 2F9F				mov	ax,2F9Fh
020A:A00C  8E C0				mov	es,ax
020A:A00E  58					pop	ax
020A:A00F  EB 60				jmp	short loc_1787		; (A071)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 346

020A:A011  90					nop
020A:A012			loc_1779:
020A:A012  E8 FBF9				call	sub_162			; (9C0E)
020A:A015  26: 3B 1E 2D82			cmp	bx,word ptr es:[2D82h]	; (2F9F:2D82=0FFFFh)
020A:A01A  75 1C				jne	loc_1781		; Jump if not equal
020A:A01C  2E: 83 3E 4877 FF			cmp	cs:data_659,0FFFFh	; (020A:4877=0E8DCh)
020A:A022  74 14				je	loc_1781		; Jump if equal
020A:A024  52					push	dx
020A:A025  2E: 8B 16 4877			mov	dx,cs:data_659		; (020A:4877=0E8DCh)
020A:A02A  2E: 3B		data_743	db	3Bh			; Data table (indexed access)
020A:A02C  16					push	ss
020A:A02D  63					db	63h
020A:A02E  48					dec	ax
020A:A02F  74 03				jz	loc_1780		; Jump if zero
020A:A031  E8 FEB0				call	sub_168			; (9EE4)
020A:A034			loc_1780:
020A:A034  5A					pop	dx
020A:A035  EB 35				jmp	short loc_1786		; (A06C)
020A:A037  90					nop
020A:A038			loc_1781:
020A:A038  E8 FBCA				call	sub_159			; (9C05)
020A:A03B  56					push	si
020A:A03C  33			data_744	db	33h
020A:A03D  F6 26 3C83				mul	byte ptr ds:[3C83h]	; (9B68:3C83=0) ax = data * al
020A:A041  FF 75 07				push	word ptr [di+7]
020A:A044  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:A049  74 0C				je	loc_1783		; Jump if equal
020A:A04B  26: 39 1C				cmp	es:[si],bx
020A:A04E  77 07				ja	loc_1783		; Jump if above
020A:A050  74 10				jz	loc_1785		; Jump if zero
020A:A052  83 C6 15				add	si,15h
020A:A055  EB E7		;*		jmp	short loc_1782		;*(A03E)
020A:A055  EB E7				db	0EBh,0E7h
020A:A057			loc_1783:
020A:A057  83 FE 15				cmp	si,15h
020A:A05A  73 03				jae	loc_1784		; Jump if above or =
020A:A05C  BE 0015				mov	si,15h
020A:A05F			loc_1784:
020A:A05F  83 EE 15				sub	si,15h
020A:A062			loc_1785:
020A:A062  52					push	dx
020A:A063  26: 8B 54 0F				mov	dx,es:[si+0Fh]
020A:A067  E8 FE7A				call	sub_168			; (9EE4)
020A:A06A  5A					pop	dx
020A:A06B  5E					pop	si
020A:A06C			loc_1786:
020A:A06C  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:A071			loc_1787:
020A:A071  C3					retn
				sub_171		endp
  
020A:A072  87 DB				xchg	bx,bx
020A:A074  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:A07A  75 0A				jne	loc_1788		; Jump if not equal
020A:A07C  50					push	ax
020A:A07D  B8 3F9F				mov	ax,3F9Fh
020A:A080  8E D8				mov	ds,ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 347

020A:A082  58					pop	ax
020A:A083  EB 5B				jmp	short loc_1797		; (A0E0)
020A:A085  90					nop
020A:A086			loc_1788:
020A:A086  E8 FB70				call	sub_157			; (9BF9)
020A:A089  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (3F9F:2D82=3900h)
020A:A08D  75 1C				jne	loc_1790		; Jump if not equal
020A:A08F  2E: 83 3E 4873 FF			cmp	cs:data_657,0FFFFh	; (020A:4873=0CD3Bh)
020A:A095  74 14				je	loc_1790		; Jump if equal
020A:A097  52					push	dx
020A:A098  2E: 8B 16 4873			mov	dx,cs:data_657		; (020A:4873=0CD3Bh)
020A:A09D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A0A2  74 03				je	loc_1789		; Jump if equal
020A:A0A4  E8 FE3D				call	sub_168			; (9EE4)
020A:A0A7			loc_1789:
020A:A0A7  5A					pop	dx
020A:A0A8  EB 31				jmp	short loc_1796		; (A0DB)
020A:A0AA  E890			data_745	dw	0E890h
020A:A0AC  42					inc	dx
020A:A0AD  FB					sti				; Enable interrupts
020A:A0AE  56					push	si
020A:A0AF  33 F6				xor	si,si			; Zero register
020A:A0B1			loc_1791:
020A:A0B1  83 3C FF				cmp	word ptr [si],0FFFFh
020A:A0B4  75 06				jne	loc_1792		; Jump if not equal
020A:A0B6  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:A0BA  74 0B				je	loc_1793		; Jump if equal
020A:A0BC			loc_1792:
020A:A0BC  39 1C				cmp	[si],bx
020A:A0BE  77 07				ja	loc_1793		; Jump if above
020A:A0C0  74 10				jz	loc_1795		; Jump if zero
020A:A0C2  83 C6 15				add	si,15h
020A:A0C5  EB EA				jmp	short loc_1791		; (A0B1)
020A:A0C7			loc_1793:
020A:A0C7  83 FE 15				cmp	si,15h
020A:A0CA  73 03				jae	loc_1794		; Jump if above or =
020A:A0CC  BE 0015				mov	si,15h
020A:A0CF			loc_1794:
020A:A0CF  83 EE 15				sub	si,15h
020A:A0D2			loc_1795:
020A:A0D2  52					push	dx
020A:A0D3  8B 54 11				mov	dx,[si+11h]
020A:A0D6  E8 FE0B				call	sub_168			; (9EE4)
020A:A0D9  5A					pop	dx
020A:A0DA  5E					pop	si
020A:A0DB			loc_1796:
020A:A0DB  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:A0E0			loc_1797:
020A:A0E0  87C3			data_746	dw	87C3h
020A:A0E2  DB 90 802E				esc	3,ds:[802Eh][bx+si]	; (3F9F:802E=0FFh) coprocessor escape
020A:A0E6  3E					db	3Eh
020A:A0E7  60					db	60h
020A:A0E8  48					dec	ax
020A:A0E9  00 75 0A				add	[di+0Ah],dh
020A:A0EC  50					push	ax
020A:A0ED  B8 4F9F				mov	ax,4F9Fh
020A:A0F0  8E D8				mov	ds,ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 348

020A:A0F2  58					pop	ax
020A:A0F3  EB 5B				jmp	short loc_1806		; (A150)
020A:A0F5  90					nop
020A:A0F6  E8 FB00				call	sub_157			; (9BF9)
020A:A0F9  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (4F9F:2D82=41h)
020A:A0FD  75 1C				jne	loc_1799		; Jump if not equal
020A:A0FF  2E			data_747	db	2Eh
020A:A100  83 3E 4875 FF			cmp	word ptr ds:[4875h],0FFFFh	; (4F9F:4875=0E202h)
020A:A105  74 14				je	loc_1799		; Jump if equal
020A:A107  52					push	dx
020A:A108  2E: 8B 16 4875			mov	dx,cs:data_658		; (020A:4875=7321h)
020A:A10D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A112  74 03				je	loc_1798		; Jump if equal
020A:A114  E8 FDCD				call	sub_168			; (9EE4)
020A:A117			loc_1798:
020A:A117  5A					pop	dx
020A:A118  EB 31				jmp	short loc_1805		; (A14B)
020A:A11A  90					nop
020A:A11B			loc_1799:
020A:A11B  E8 FAD2				call	sub_155			; (9BF0)
020A:A11E  56					push	si
020A:A11F  33 F6				xor	si,si			; Zero register
020A:A121			loc_1800:
020A:A121  83 3C FF				cmp	word ptr [si],0FFFFh
020A:A124  75 06				jne	loc_1801		; Jump if not equal
020A:A126  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:A12A  74 0B				je	loc_1802		; Jump if equal
020A:A12C			loc_1801:
020A:A12C  39 1C				cmp	[si],bx
020A:A12E  77 07				ja	loc_1802		; Jump if above
020A:A130  74 10				jz	loc_1804		; Jump if zero
020A:A132  83 C6 15				add	si,15h
020A:A135  EB EA				jmp	short loc_1800		; (A121)
020A:A137			loc_1802:
020A:A137  83 FE 15				cmp	si,15h
020A:A13A  73 03				jae	loc_1803		; Jump if above or =
020A:A13C  BE 0015				mov	si,15h
020A:A13F			loc_1803:
020A:A13F  83 EE 15				sub	si,15h
020A:A142			loc_1804:
020A:A142  52					push	dx
020A:A143  8B 54 13				mov	dx,[si+13h]
020A:A146  E8 FD9B				call	sub_168			; (9EE4)
020A:A149  5A					pop	dx
020A:A14A  5E					pop	si
020A:A14B			loc_1805:
020A:A14B  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:A150			loc_1806:
020A:A150  C3					retn
020A:A151  87 DB				xchg	bx,bx
020A:A153  90					nop
020A:A154  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:A15A  75 0A				jne	loc_1807		; Jump if not equal
020A:A15C  50					push	ax
020A:A15D  B8 2F9F				mov	ax,2F9Fh
020A:A160  8E D8				mov	ds,ax
020A:A162  58					pop	ax
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 349

020A:A163  EB 5B				jmp	short loc_1816		; (A1C0)
020A:A165  90					nop
020A:A166			loc_1807:
020A:A166  E8 FA90				call	sub_157			; (9BF9)
020A:A169  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (2F9F:2D82=0FFFFh)
020A:A16D  75 1C				jne	loc_1809		; Jump if not equal
020A:A16F  2E: 83 3E 4877 FF			cmp	cs:data_659,0FFFFh	; (020A:4877=0E8DCh)
020A:A175  74 14				je	loc_1809		; Jump if equal
020A:A177  52					push	dx
020A:A178  2E: 8B 16 4877			mov	dx,cs:data_659		; (020A:4877=0E8DCh)
020A:A17D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A182  74 03				je	loc_1808		; Jump if equal
020A:A184  E8 FD5D				call	sub_168			; (9EE4)
020A:A187			loc_1808:
020A:A187  5A					pop	dx
020A:A188  EB 31				jmp	short loc_1815		; (A1BB)
020A:A18A  90					nop
020A:A18B			loc_1809:
020A:A18B  E8 FA62				call	sub_155			; (9BF0)
020A:A18E  56					push	si
020A:A18F  33 F6				xor	si,si			; Zero register
020A:A191			loc_1810:
020A:A191  83 3C FF				cmp	word ptr [si],0FFFFh
020A:A194  75 06				jne	loc_1811		; Jump if not equal
020A:A196  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:A19A  74 0B				je	loc_1812		; Jump if equal
020A:A19C			loc_1811:
020A:A19C  39 1C				cmp	[si],bx
020A:A19E  77 07				ja	loc_1812		; Jump if above
020A:A1A0  74 10				jz	loc_1814		; Jump if zero
020A:A1A2  83 C6 15				add	si,15h
020A:A1A5  EB EA				jmp	short loc_1810		; (A191)
020A:A1A7			loc_1812:
020A:A1A7  83 FE 15				cmp	si,15h
020A:A1AA  73 03				jae	loc_1813		; Jump if above or =
020A:A1AC  BE 0015				mov	si,15h
020A:A1AF			loc_1813:
020A:A1AF  83 EE 15				sub	si,15h
020A:A1B2			loc_1814:
020A:A1B2  52					push	dx
020A:A1B3  8B 54 0F				mov	dx,[si+0Fh]
020A:A1B6  E8 FD2B				call	sub_168			; (9EE4)
020A:A1B9  5A					pop	dx
020A:A1BA  5E					pop	si
020A:A1BB			loc_1815:
020A:A1BB  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:A1C0			loc_1816:
020A:A1C0  C3					retn
020A:A1C1  000F[00]				db	15 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_172		proc	near
020A:A1D0  51					push	cx
020A:A1D1  52					push	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 350

020A:A1D2  57					push	di
020A:A1D3  55					push	bp
020A:A1D4  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A1D9  06					push	es
020A:A1DA  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (9B68:4202=0)
020A:A1DF  74 12				je	loc_1818		; Jump if equal
020A:A1E1  F7 06 42CC 0020			test	word ptr ds:[42CCh],20h	; (9B68:42CC=0)
020A:A1E7  75 07				jnz	loc_1817		; Jump if not zero
020A:A1E9  80 3E 4202 02			cmp	byte ptr ds:[4202h],2	; (9B68:4202=0)
020A:A1EE  75 03				jne	loc_1818		; Jump if not equal
020A:A1F0			loc_1817:
020A:A1F0  E9 0551				jmp	loc_1896		; (A744)
020A:A1F3			loc_1818:
020A:A1F3  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:A1F6  A3 41FE				mov	word ptr ds:[41FEh],ax	; (9B68:41FE=0)
020A:A1F9  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:A1FC  A2 41FD				mov	byte ptr ds:[41FDh],al	; (9B68:41FD=0)
020A:A1FF  C6 06 152A 00			mov	byte ptr ds:[152Ah],0	; (9B68:152A=20h)
020A:A204  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:A209  74 5E				je	loc_1821		; Jump if equal
020A:A20B  53					push	bx
020A:A20C  52					push	dx
020A:A20D  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A212  06					push	es
020A:A213  E8 F9F8				call	sub_162			; (9C0E)
020A:A216  C6 06 3C7C 00			mov	byte ptr ds:[3C7Ch],0	; (9B68:3C7C=0)
020A:A21B  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:A21E  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:A222  BA 0020				mov	dx,20h
020A:A225  E8 EDB0				call	sub_143			; (8FD8)
020A:A228  83 F9 1D				cmp	cx,1Dh
020A:A22B  73 1B				jae	loc_1819		; Jump if above or =
020A:A22D  41			data_751	db	41h
020A:A22E  80 E1 1F				and	cl,1Fh
020A:A231  88 0E 3C7C				mov	byte ptr ds:[3C7Ch],cl	; (9B68:3C7C=0)
020A:A235  56					push	si
020A:A236  89 1D				mov	[di],bx
020A:A238  89 45 02				mov	[di+2],ax
020A:A23B  B9 0028				mov	cx,28h
020A:A23E  83 C7 04				add	di,4
020A:A241  BE 2ED4				mov	si,2ED4h
020A:A244  FC					cld				; Clear direction
020A:A245  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A247  5E					pop	si
020A:A248			loc_1819:
020A:A248  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A24D  5A					pop	dx
020A:A24E  8E C2				mov	es,dx
020A:A250  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A255  5A					pop	dx
020A:A256  75 0A				jnz	loc_1820		; Jump if not zero
020A:A258  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A25D  74 03				je	loc_1820		; Jump if equal
020A:A25F  E8 FC82				call	sub_168			; (9EE4)
020A:A262			loc_1820:
020A:A262  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A267  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 351

020A:A268  5B					pop	bx
020A:A269			loc_1821:
020A:A269  C6 06 3C78 00			mov	byte ptr ds:[3C78h],0	; (9B68:3C78=0)
020A:A26E  C6 06 3C79 10			mov	byte ptr ds:[3C79h],10h	; (9B68:3C79=0)
020A:A273  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:A278  74 05				je	loc_1822		; Jump if equal
020A:A27A  C6 06 3C79 12			mov	byte ptr ds:[3C79h],12h	; (9B68:3C79=0)
020A:A27F			loc_1822:
020A:A27F  F6 C7 10				test	bh,10h
020A:A282  74 05				jz	loc_1823		; Jump if zero
020A:A284  80 0E 3C79 01			or	byte ptr ds:[3C79h],1	; (9B68:3C79=0)
020A:A289			loc_1823:
020A:A289  33 FF				xor	di,di			; Zero register
020A:A28B  26: 8A 44 01				mov	al,es:[si+1]
020A:A28F  24 C7				and	al,0C7h
020A:A291  3C 06				cmp	al,6
020A:A293  75 03				jne	loc_1824		; Jump if not equal
020A:A295  E9 0098				jmp	loc_1837		; (A330)
020A:A298			loc_1824:
020A:A298  24 07				and	al,7
020A:A29A  A8 04				test	al,4
020A:A29C  75 30				jnz	loc_1828		; Jump if not zero
020A:A29E  A8 02				test	al,2
020A:A2A0  75 16				jnz	loc_1826		; Jump if not zero
020A:A2A2  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (9B68:42CC=0)
020A:A2A8  75 08				jnz	loc_1825		; Jump if not zero
020A:A2AA  81 3E 2ED8 0180			cmp	word ptr ds:[2ED8h],180h	; (9B68:2ED8=8C20h)
020A:A2B0  72 20				jb	loc_1829		; Jump if below
020A:A2B2			loc_1825:
020A:A2B2  8B 3E 2ED8				mov	di,word ptr ds:[2ED8h]	; (9B68:2ED8=8C20h)
020A:A2B6  EB 1A				jmp	short loc_1829		; (A2D2)
020A:A2B8			loc_1826:
020A:A2B8  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (9B68:42CC=0)
020A:A2BE  75 08				jnz	loc_1827		; Jump if not zero
020A:A2C0  81 3E 2EEC 0180			cmp	word ptr ds:[2EECh],180h	; (9B68:2EEC=200Ah)
020A:A2C6  72 0A				jb	loc_1829		; Jump if below
020A:A2C8			loc_1827:
020A:A2C8  8B 3E 2EEC				mov	di,word ptr ds:[2EECh]	; (9B68:2EEC=200Ah)
020A:A2CC  EB 04				jmp	short loc_1829		; (A2D2)
020A:A2CE			loc_1828:
020A:A2CE  3C 06				cmp	al,6
020A:A2D0  73 30				jae	loc_1833		; Jump if above or =
020A:A2D2			loc_1829:
020A:A2D2  A8 01				test	al,1
020A:A2D4  74 16				jz	loc_1831		; Jump if zero
020A:A2D6  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (9B68:42CC=0)
020A:A2DC  75 08				jnz	loc_1830		; Jump if not zero
020A:A2DE  81 3E 2EE8 0180			cmp	word ptr ds:[2EE8h],180h	; (9B68:2EE8=0E2A0h)
020A:A2E4  72 4A				jb	loc_1837		; Jump if below
020A:A2E6			loc_1830:
020A:A2E6  03 3E 2EE8				add	di,word ptr ds:[2EE8h]	; (9B68:2EE8=0E2A0h)
020A:A2EA  EB 44				jmp	short loc_1837		; (A330)
020A:A2EC			loc_1831:
020A:A2EC  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (9B68:42CC=0)
020A:A2F2  75 08				jnz	loc_1832		; Jump if not zero
020A:A2F4  81 3E 2EE4 0180			cmp	word ptr ds:[2EE4h],180h	; (9B68:2EE4=0A7ECh)
020A:A2FA  72 34				jb	loc_1837		; Jump if below
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 352

020A:A2FC			loc_1832:
020A:A2FC  03 3E 2EE4				add	di,word ptr ds:[2EE4h]	; (9B68:2EE4=0A7ECh)
020A:A300  EB 2E				jmp	short loc_1837		; (A330)
020A:A302			loc_1833:
020A:A302  A8 01				test	al,1
020A:A304  74 16				jz	loc_1835		; Jump if zero
020A:A306  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (9B68:42CC=0)
020A:A30C  75 08				jnz	loc_1834		; Jump if not zero
020A:A30E  81 3E 2ED8 0180			cmp	word ptr ds:[2ED8h],180h	; (9B68:2ED8=8C20h)
020A:A314  72 1A				jb	loc_1837		; Jump if below
020A:A316			loc_1834:
020A:A316  03 3E 2ED8				add	di,word ptr ds:[2ED8h]	; (9B68:2ED8=8C20h)
020A:A31A  EB 14				jmp	short loc_1837		; (A330)
020A:A31C			loc_1835:
020A:A31C  F7 06 42CC 0010			test	word ptr ds:[42CCh],10h	; (9B68:42CC=0)
020A:A322  75 08				jnz	loc_1836		; Jump if not zero
020A:A324  81 3E 2EEC 0180			cmp	word ptr ds:[2EECh],180h	; (9B68:2EEC=200Ah)
020A:A32A  72 04				jb	loc_1837		; Jump if below
020A:A32C			loc_1836:
020A:A32C  03 3E 2EEC				add	di,word ptr ds:[2EECh]	; (9B68:2EEC=200Ah)
020A:A330			loc_1837:
020A:A330  80 FA 3D				cmp	dl,3Dh			; '='
020A:A333  74 02				je	loc_1838		; Jump if equal
020A:A335  EB 4C				jmp	short loc_1845		; (A383)
020A:A337			loc_1838:
020A:A337  F6 C7 10				test	bh,10h
020A:A33A  74 02				jz	loc_1839		; Jump if zero
020A:A33C  EB 59				jmp	short loc_1847		; (A397)
020A:A33E			loc_1839:
020A:A33E  83 FF 40				cmp	di,40h
020A:A341  73 02				jae	loc_1840		; Jump if above or =
020A:A343  EB 57				jmp	short loc_1848		; (A39C)
020A:A345			loc_1840:
020A:A345  83 FF FC				cmp	di,0FFFCh
020A:A348  76 02				jbe	loc_1841		; Jump if below or =
020A:A34A  EB 50				jmp	short loc_1848		; (A39C)
020A:A34C			loc_1841:
020A:A34C  06					push	es
020A:A34D  53					push	bx
020A:A34E  51					push	cx
020A:A34F  8E 06 3796				mov	es,word ptr ds:[3796h]	; (9B68:3796=92h)
020A:A353  B9 0019				mov	cx,19h
020A:A356  26: 8B 05				mov	ax,es:[di]
  
020A:A359			locloop_1842:
020A:A359  8B D8				mov	bx,ax
020A:A35B  26: 2B 5D FE				sub	bx,es:[di-2]
020A:A35F  73 02				jnc	loc_1843		; Jump if carry=0
020A:A361  F7 D3				not	bx
020A:A363			loc_1843:
020A:A363  81 FB 0200				cmp	bx,200h
020A:A367  73 15				jae	loc_1844		; Jump if above or =
020A:A369  8B DF				mov	bx,di
020A:A36B  4B					dec	bx
020A:A36C  3B 1E 2D84				cmp	bx,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:A370  74 0C				je	loc_1844		; Jump if equal
020A:A372  4B					dec	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 353

020A:A373  3B 1E 2D84				cmp	bx,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:A377  74 05				je	loc_1844		; Jump if equal
020A:A379  83 EF 02				sub	di,2
020A:A37C  E2 DB				loop	locloop_1842		; Loop if cx > 0
  
020A:A37E			loc_1844:
020A:A37E  07					pop	es
020A:A37F  5B					pop	bx
020A:A380  07					pop	es
020A:A381  EB 14				jmp	short loc_1847		; (A397)
020A:A383			loc_1845:
020A:A383  81 FF FE00				cmp	di,0FE00h
020A:A387  72 0A				jb	loc_1846		; Jump if below
020A:A389  81 3E 41FE 0080			cmp	word ptr ds:[41FEh],80h	; (9B68:41FE=0)
020A:A38F  72 02				jb	loc_1846		; Jump if below
020A:A391  33 FF				xor	di,di			; Zero register
020A:A393			loc_1846:
020A:A393  03 3E 41FE				add	di,word ptr ds:[41FEh]	; (9B68:41FE=0)
020A:A397			loc_1847:
020A:A397  83 FF FC				cmp	di,0FFFCh
020A:A39A  76 03				jbe	loc_1849		; Jump if below or =
020A:A39C			loc_1848:
020A:A39C  E9 0322				jmp	loc_1888		; (A6C1)
020A:A39F			loc_1849:
020A:A39F  A1 3796				mov	ax,word ptr ds:[3796h]	; (9B68:3796=92h)
020A:A3A2  3D 0050				cmp	ax,50h
020A:A3A5  77 03				ja	loc_1850		; Jump if above
020A:A3A7  E9 0317				jmp	loc_1888		; (A6C1)
020A:A3AA			loc_1850:
020A:A3AA  A3 3C71				mov	word ptr ds:[3C71h],ax	; (9B68:3C71=0)
020A:A3AD  A0 2F04				mov	al,byte ptr ds:[2F04h]	; (9B68:2F04=0E8h)
020A:A3B0  A2 3C73				mov	byte ptr ds:[3C73h],al	; (9B68:3C73=0)
020A:A3B3  C6 06 2F04 90			mov	byte ptr ds:[2F04h],90h	; (9B68:2F04=0E8h)
020A:A3B8  A1 2EF4				mov	ax,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:A3BB  A3 3C74				mov	word ptr ds:[3C74h],ax	; (9B68:3C74=0)
020A:A3BE  A1 2EF2				mov	ax,word ptr ds:[2EF2h]	; (9B68:2EF2=2020h)
020A:A3C1  A3 3C76				mov	word ptr ds:[3C76h],ax	; (9B68:3C76=0)
020A:A3C4  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (9B68:4202=0)
020A:A3C9  74 20				je	loc_1852		; Jump if equal
020A:A3CB  F6 C7 10				test	bh,10h
020A:A3CE  75 1B				jnz	loc_1852		; Jump if not zero
020A:A3D0  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:A3D3  3B 06 3C71				cmp	ax,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A3D7  75 12				jne	loc_1852		; Jump if not equal
020A:A3D9  8B C7				mov	ax,di
020A:A3DB  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:A3DF  73 02				jnc	loc_1851		; Jump if carry=0
020A:A3E1  F7 D0				not	ax
020A:A3E3			loc_1851:
020A:A3E3  3D 1500				cmp	ax,1500h
020A:A3E6  72 03				jb	loc_1852		; Jump if below
020A:A3E8  E9 02D6				jmp	loc_1888		; (A6C1)
020A:A3EB			loc_1852:
020A:A3EB  53					push	bx
020A:A3EC  8B 1E 3C71				mov	bx,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A3F0  E8 FB99				call	sub_170			; (9F8C)
020A:A3F3  8B C3				mov	ax,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 354

020A:A3F5  5B					pop	bx
020A:A3F6  E8 0377				call	sub_173			; (A770)
020A:A3F9  8B D0				mov	dx,ax
020A:A3FB  53					push	bx
020A:A3FC  8B 1E 3C71				mov	bx,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A400  E8 FB15				call	sub_169			; (9F18)
020A:A403  8B C3				mov	ax,bx
020A:A405  5B					pop	bx
020A:A406  E8 0367				call	sub_173			; (A770)
020A:A409  3B C2				cmp	ax,dx
020A:A40B  73 02				jae	loc_1853		; Jump if above or =
020A:A40D  8B D0				mov	dx,ax
020A:A40F			loc_1853:
020A:A40F  53					push	bx
020A:A410  8B 1E 3C71				mov	bx,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A414  E8 FBE9				call	sub_171			; (A000)
020A:A417  8B C3				mov	ax,bx
020A:A419  5B					pop	bx
020A:A41A  E8 0353				call	sub_173			; (A770)
020A:A41D  3B C2				cmp	ax,dx
020A:A41F  73 02				jae	loc_1854		; Jump if above or =
020A:A421  8B D0				mov	dx,ax
020A:A423			loc_1854:
020A:A423  2B D7				sub	dx,di
020A:A425  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A427  83 FA 00				cmp	dx,0
020A:A42A  75 03				jne	loc_1856		; Jump if not equal
020A:A42C			loc_1855:
020A:A42C  E9 0292				jmp	loc_1888		; (A6C1)
020A:A42F			loc_1856:
020A:A42F  F6 C7 10				test	bh,10h
020A:A432  74 07				jz	loc_1857		; Jump if zero
020A:A434  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A436  83 FA 00				cmp	dx,0
020A:A439  74 F1				je	loc_1855		; Jump if equal
020A:A43B			loc_1857:
020A:A43B  80 3E 4203 00			cmp	byte ptr ds:[4203h],0	; (9B68:4203=0)
020A:A440  75 08				jne	loc_1858		; Jump if not equal
020A:A442  83 FA 32				cmp	dx,32h
020A:A445  76 03				jbe	loc_1858		; Jump if below or =
020A:A447  BA 0032				mov	dx,32h
020A:A44A			loc_1858:
020A:A44A  88 16 3C7A				mov	byte ptr ds:[3C7Ah],dl	; (9B68:3C7A=0)
020A:A44E			loc_1859:
020A:A44E  80 3E 4203 00			cmp	byte ptr ds:[4203h],0	; (9B68:4203=0)
020A:A453  74 03				je	loc_1860		; Jump if equal
020A:A455  E9 00AE				jmp	loc_1869		; (A506)
020A:A458			loc_1860:
020A:A458  F6 C7 10				test	bh,10h
020A:A45B  74 03				jz	loc_1861		; Jump if zero
020A:A45D  E9 0096				jmp	loc_1868		; (A4F6)
020A:A460			loc_1861:
020A:A460  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:A463  3B 06 3C71				cmp	ax,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A467  74 30				je	loc_1863		; Jump if equal
020A:A469  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A46E  06					push	es
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 355

020A:A46F  8E C0				mov	es,ax
020A:A471  26: 83 7D 02 00			cmp	word ptr es:[di+2],0
020A:A476  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A47B  5A					pop	dx
020A:A47C  8E C2				mov	es,dx
020A:A47E  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A483  5A					pop	dx
020A:A484  75 0A				jnz	loc_1862		; Jump if not zero
020A:A486  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A48B  74 03				je	loc_1862		; Jump if equal
020A:A48D  E8			data_759	db	0E8h
020A:A48E  54					push	sp
020A:A48F  FA					cli				; Disable interrupts
020A:A490			loc_1862:
020A:A490  2E: 168B 0092	data_760	dd	92168Bh
020A:A495  74 5C				jz	loc_1867		; Jump if zero
020A:A497  EB 6D				jmp	short loc_1869		; (A506)
020A:A499			loc_1863:
020A:A499  3B 3E 2A42				cmp	di,word ptr ds:[2A42h]	; (9B68:2A42=0A5ACh)
020A:A49D  72 54				jb	loc_1867		; Jump if below
020A:A49F  3B 3E 2A44				cmp	di,word ptr ds:[2A44h]	; (9B68:2A44=0AAE2h)
020A:A4A3  72 15				jb	loc_1864		; Jump if below
020A:A4A5  FA80			data_761	dw	0FA80h			; Data table (indexed access)
020A:A4A7  39 74 49				cmp	[si+49h],si
020A:A4AA  8B 3E 41FE				mov	di,word ptr ds:[41FEh]	; (9B68:41FE=0)
020A:A4AE  3E3B			data_763	dw	3E3Bh
020A:A4B0  42					inc	dx
020A:A4B1  2A 72 3F				sub	dh,[bp+si+3Fh]
020A:A4B4  3B 3E 2A44				cmp	di,word ptr ds:[2A44h]	; (9B68:2A44=0AAE2h)
020A:A4B8  77 39				ja	loc_1867		; Jump if above
020A:A4BA			loc_1864:
020A:A4BA  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A4BF  06					push	es
020A:A4C0  8E C0				mov	es,ax
020A:A4C2  26: 8B 05				mov	ax,es:[di]
020A:A4C5  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A4CA  5A					pop	dx
020A:A4CB  8E C2				mov	es,dx
020A:A4CD  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A4D2  5A					pop	dx
020A:A4D3  75 0A				jnz	loc_1865		; Jump if not zero
020A:A4D5  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A4DA  74 03				je	loc_1865		; Jump if equal
020A:A4DC  E8 FA05				call	sub_168			; (9EE4)
020A:A4DF			loc_1865:
020A:A4DF  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A4E4  0B C0				or	ax,ax			; Zero ?
020A:A4E6  74 0B				jz	loc_1867		; Jump if zero
020A:A4E8  2B C7				sub	ax,di
020A:A4EA  73 02				jnc	loc_1866		; Jump if carry=0
020A:A4EC  F7 D0				not	ax
020A:A4EE			loc_1866:
020A:A4EE  3D 4000				cmp	ax,4000h
020A:A4F1  72 13				jb	loc_1869		; Jump if below
020A:A4F3			loc_1867:
020A:A4F3  E9 01BF				jmp	loc_1887		; (A6B5)
020A:A4F6			loc_1868:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 356

020A:A4F6  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A4F9  3D FFFF				cmp	ax,0FFFFh
020A:A4FC  74 F5				je	loc_1867		; Jump if equal
020A:A4FE  25 FFF0				and	ax,0FFF0h
020A:A501  3D FBA0				cmp	ax,0FBA0h
020A:A504  74 ED				je	loc_1867		; Jump if equal
020A:A506			loc_1869:
020A:A506  8B C7				mov	ax,di
020A:A508  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A50A  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A50C  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A50E  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A510  03 06 3C71				add	ax,word ptr ds:[3C71h]	; (9B68:3C71=0)
020A:A514  72 DD				jc	loc_1867		; Jump if carry Set
020A:A516  8B C7				mov	ax,di
020A:A518  32 DB				xor	bl,bl			; Zero register
020A:A51A  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (9B68:4202=0)
020A:A51F  74 04				je	loc_1870		; Jump if equal
020A:A521  26: 8A 5C 01				mov	bl,es:[si+1]
020A:A525			loc_1870:
020A:A525  BD 3BEB				mov	bp,3BEBh
020A:A528  FF 36 42CC				push	word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:A52C  81 0E 42CC 0080			or	word ptr ds:[42CCh],80h	; (9B68:42CC=0)
020A:A532  E8 0B2B				call	sub_177			; (B060)
020A:A535  8F 06 42CC				pop	word ptr ds:[42CCh]	; (D233:42CC=0C1FFh)
020A:A539  57					push	di
020A:A53A  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A53F  06					push	es
020A:A540  53					push	bx
020A:A541  8B 1E 3796				mov	bx,word ptr ds:[3796h]	; (D233:3796=1475h)
020A:A545  E8 F9D0				call	sub_169			; (9F18)
020A:A548  5B					pop	bx
020A:A549  8B 3E 2A8F				mov	di,word ptr ds:[2A8Fh]	; (D233:2A8F=4AE8h)
020A:A54D  26: 80 25 C0				and	byte ptr es:[di],0C0h
020A:A551  A0 3C79				mov	al,byte ptr ds:[3C79h]	; (D233:3C79=0EBh)
020A:A554  26: 08 05				or	es:[di],al
020A:A557  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A55C  5A					pop	dx
020A:A55D  8E C2				mov	es,dx
020A:A55F  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A564  5A					pop	dx
020A:A565  75 0A				jnz	loc_1871		; Jump if not zero
020A:A567  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A56C  74 03				je	loc_1871		; Jump if equal
020A:A56E  E8 F973				call	sub_168			; (9EE4)
020A:A571			loc_1871:
020A:A571  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A576  5F					pop	di
020A:A577  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A57C  06					push	es
020A:A57D  53					push	bx
020A:A57E  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=140Eh)
020A:A581  8E C0				mov	es,ax
020A:A583  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:A586  32 C9				xor	cl,cl			; Zero register
020A:A588  F6 C7 10				test	bh,10h
020A:A58B  74 06				jz	loc_1872		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 357

020A:A58D  26: 8B 45 02				mov	ax,es:[di+2]
020A:A591  B1 01				mov	cl,1
020A:A593			loc_1872:
020A:A593  8B D8				mov	bx,ax
020A:A595  83 FB FF				cmp	bx,0FFFFh
020A:A598  74 17				je	loc_1873		; Jump if equal
020A:A59A  26: 8B 05				mov	ax,es:[di]
020A:A59D  3D FFFC				cmp	ax,0FFFCh
020A:A5A0  73 0F				jae	loc_1873		; Jump if above or =
020A:A5A2  D1			data_764	db	0D1h
020A:A5A3  E8 E8D1		;*		call	sub_141			;*(8E77)
020A:A5A3  E8 D1 E8				db	0E8h,0D1h,0E8h
020A:A5A6  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A5A8  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:A5AA  03 C3				add	ax,bx
020A:A5AC  26			data_766	db	26h
020A:A5AD  8B 05				mov	ax,[di]
020A:A5AF  73 04				jnc	loc_1874		; Jump if carry=0
020A:A5B1			loc_1873:
020A:A5B1  5B					pop	bx
020A:A5B2  E9 00E1				jmp	loc_1885		; (A696)
020A:A5B5			loc_1874:
020A:A5B5  BD 3BEB				mov	bp,3BEBh
020A:A5B8  E8 1029				call	sub_178			; (B5E4)
020A:A5BB  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (D233:42B9=72h)
020A:A5C0  75 02				jne	loc_1875		; Jump if not equal
020A:A5C2  EB ED				jmp	short loc_1873		; (A5B1)
020A:A5C4			loc_1875:
020A:A5C4  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:A5C9  74 3A				je	loc_1877		; Jump if equal
020A:A5CB  57					push	di
020A:A5CC  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A5D1  06					push	es
020A:A5D2  E8 F9B7				call	sub_170			; (9F8C)
020A:A5D5  8B 3E 42BA				mov	di,word ptr ds:[42BAh]	; (D233:42BA=3C0Eh)
020A:A5D9  26: 80 65 04 E0			and	byte ptr es:[di+4],0E0h
020A:A5DE  A0 3C7C				mov	al,byte ptr ds:[3C7Ch]	; (D233:3C7C=0EBh)
020A:A5E1  26: 08 45 04				or	es:[di+4],al
020A:A5E5  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A5EA  5A					pop	dx
020A:A5EB  8E C2				mov	es,dx
020A:A5ED  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A5F2  5A					pop	dx
020A:A5F3  75 0A				jnz	loc_1876		; Jump if not zero
020A:A5F5  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A5FA  74 03				je	loc_1876		; Jump if equal
020A:A5FC  E8 F8E5				call	sub_168			; (9EE4)
020A:A5FF			loc_1876:
020A:A5FF  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A604  5F					pop	di
020A:A605			loc_1877:
020A:A605  5B					pop	bx
020A:A606  FE 06 3C78				inc	byte ptr ds:[3C78h]	; (D233:3C78=1Fh)
020A:A60A  83 FF F8				cmp	di,0FFF8h
020A:A60D  77 1A				ja	loc_1879		; Jump if above
020A:A60F  80 3E 4203 00			cmp	byte ptr ds:[4203h],0	; (D233:4203=3Ah)
020A:A614  74 15				je	loc_1880		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 358

020A:A616  FE 0E 4203				dec	byte ptr ds:[4203h]	; (D233:4203=3Ah)
020A:A61A  74 0D				jz	loc_1879		; Jump if zero
020A:A61C  83 C7 02				add	di,2
020A:A61F  F6 C7 10				test	bh,10h
020A:A622  74 03				jz	loc_1878		; Jump if zero
020A:A624  83 C7 02				add	di,2
020A:A627			loc_1878:
020A:A627  EB 39				jmp	short loc_1883		; (A662)
020A:A629			loc_1879:
020A:A629  EB 6B				jmp	short loc_1885		; (A696)
020A:A62B			loc_1880:
020A:A62B  A0 3C7A				mov	al,byte ptr ds:[3C7Ah]	; (D233:3C7A=3)
020A:A62E  38 06 3C78				cmp	byte ptr ds:[3C78h],al	; (D233:3C78=1Fh)
020A:A632  72 02				jb	loc_1881		; Jump if below
020A:A634  EB 60				jmp	short loc_1885		; (A696)
020A:A636			loc_1881:
020A:A636  F6 C7 10				test	bh,10h
020A:A639  74 0A				jz	loc_1882		; Jump if zero
020A:A63B  26: 83 7D 04 00			cmp	word ptr es:[di+4],0
020A:A640  74 54				je	loc_1885		; Jump if equal
020A:A642  83 C7 02				add	di,2
020A:A645			loc_1882:
020A:A645  83 C7 02				add	di,2
020A:A648  26: 83 3D 00				cmp	word ptr es:[di],0
020A:A64C  74 48				je	loc_1885		; Jump if equal
020A:A64E  F6 C7 10				test	bh,10h
020A:A651  75 0F				jnz	loc_1883		; Jump if not zero
020A:A653  26: 8B 05				mov	ax,es:[di]
020A:A656  3B 06 2A42				cmp	ax,word ptr ds:[2A42h]	; (D233:2A42=0DB0Bh)
020A:A65A  72 3A				jb	loc_1885		; Jump if below
020A:A65C  3B 06 2A44				cmp	ax,word ptr ds:[2A44h]	; (D233:2A44=174h)
020A:A660  77 34				ja	loc_1885		; Jump if above
020A:A662			loc_1883:
020A:A662  A1 3C74				mov	ax,word ptr ds:[3C74h]	; (D233:3C74=200h)
020A:A665  A3 2EF4				mov	word ptr ds:[2EF4h],ax	; (D233:2EF4=0B809h)
020A:A668  A1 3C76				mov	ax,word ptr ds:[3C76h]	; (D233:3C76=589Eh)
020A:A66B  A3 2EF2				mov	word ptr ds:[2EF2h],ax	; (D233:2EF2=50BAh)
020A:A66E  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=140Eh)
020A:A671  A3 3796				mov	word ptr ds:[3796h],ax	; (D233:3796=1475h)
020A:A674  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A679  5A					pop	dx
020A:A67A  8E C2				mov	es,dx
020A:A67C  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A681  5A					pop	dx
020A:A682  75 0A				jnz	loc_1884		; Jump if not zero
020A:A684  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A689  74 03				je	loc_1884		; Jump if equal
020A:A68B  E8 F856				call	sub_168			; (9EE4)
020A:A68E			loc_1884:
020A:A68E  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A693  E9 FDB8				jmp	loc_1859		; (A44E)
020A:A696			loc_1885:
020A:A696  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A69B  5A					pop	dx
020A:A69C  8E C2				mov	es,dx
020A:A69E  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A6A3  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 359

020A:A6A4  75 0A				jnz	loc_1886		; Jump if not zero
020A:A6A6  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A6AB  74 03				je	loc_1886		; Jump if equal
020A:A6AD  E8 F834				call	sub_168			; (9EE4)
020A:A6B0			loc_1886:
020A:A6B0  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A6B5			loc_1887:
020A:A6B5  A1 3C71				mov	ax,word ptr ds:[3C71h]	; (D233:3C71=140Eh)
020A:A6B8  A3 3796				mov	word ptr ds:[3796h],ax	; (D233:3796=1475h)
020A:A6BB  A0 3C73				mov	al,byte ptr ds:[3C73h]	; (D233:3C73=3)
020A:A6BE  A2 2F04				mov	byte ptr ds:[2F04h],al	; (D233:2F04=0E9h)
020A:A6C1			loc_1888:
020A:A6C1  80 3E 3C78 00			cmp	byte ptr ds:[3C78h],0	; (D233:3C78=1Fh)
020A:A6C6  74 76				je	loc_1895		; Jump if equal
020A:A6C8  BD 282A				mov	bp,282Ah
020A:A6CB  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=0A3h)
020A:A6D0  74 07				je	loc_1889		; Jump if equal
020A:A6D2  3E: 80 7E 00 3B			cmp	byte ptr ds:[bp],3Bh	; ';'
020A:A6D7  74 09				je	loc_1890		; Jump if equal
020A:A6D9			loc_1889:
020A:A6D9  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:A6DE  45					inc	bp
020A:A6DF  45					inc	bp
020A:A6E0  EB 08				jmp	short loc_1891		; (A6EA)
020A:A6E2			loc_1890:
020A:A6E2  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:A6E7  BD 283F				mov	bp,283Fh
020A:A6EA			loc_1891:
020A:A6EA  A0 3C78				mov	al,byte ptr ds:[3C78h]	; (D233:3C78=1Fh)
020A:A6ED  32 E4				xor	ah,ah			; Zero register
020A:A6EF  B3 00				mov	bl,0
020A:A6F1  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:A6F1  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:A6F6  45					inc	bp
020A:A6F7  3E: C7 46 00 6E65			mov	word ptr ds:[bp],6E65h
020A:A6FD  45					inc	bp
020A:A6FE  45					inc	bp
020A:A6FF  3E: C7 46 00 7274			mov	word ptr ds:[bp],7274h
020A:A705  45					inc	bp
020A:A706  45					inc	bp
020A:A707  80 3E 3C78 01			cmp	byte ptr ds:[3C78h],1	; (D233:3C78=1Fh)
020A:A70C  74 0F				je	loc_1892		; Jump if equal
020A:A70E  3E: C7 46 00 6569			mov	word ptr ds:[bp],6569h
020A:A714  45					inc	bp
020A:A715  45					inc	bp
020A:A716  3E: C6 46 00 73			mov	byte ptr ds:[bp],73h	; 's'
020A:A71B  EB 05				jmp	short loc_1893		; (A722)
020A:A71D			loc_1892:
020A:A71D  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:A722			loc_1893:
020A:A722  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=0A3h)
020A:A727  75 15				jne	loc_1895		; Jump if not equal
020A:A729  45					inc	bp
020A:A72A  B9 377F				mov	cx,377Fh
020A:A72D  81 E9 3778				sub	cx,3778h
020A:A731  BF 3778				mov	di,3778h
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 360

020A:A734			locloop_1894:
020A:A734  8A 05				mov	al,[di]
020A:A736  3E: 88 46 00				mov	ds:[bp],al
020A:A73A  47					inc	di
020A:A73B  45					inc	bp
020A:A73C  E2 F6				loop	locloop_1894		; Loop if cx > 0
  
020A:A73E			loc_1895:
020A:A73E  A0 41FD				mov	al,byte ptr ds:[41FDh]	; (D233:41FD=0E8h)
020A:A741  A2 152A				mov	byte ptr ds:[152Ah],al	; (D233:152A=45h)
020A:A744			loc_1896:
020A:A744  C6 06 2EB7 01			mov	byte ptr ds:[2EB7h],1	; (D233:2EB7=0B8h)
020A:A749  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A74E  5A					pop	dx
020A:A74F  8E C2				mov	es,dx
020A:A751  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A756  5A					pop	dx
020A:A757  75 0A				jnz	loc_1897		; Jump if not zero
020A:A759  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A75E  74 03				je	loc_1897		; Jump if equal
020A:A760  E8 F781				call	sub_168			; (9EE4)
020A:A763			loc_1897:
020A:A763  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A768  5D					pop	bp
020A:A769  5F					pop	di
020A:A76A  5A					pop	dx
020A:A76B  59					pop	cx
020A:A76C  C3					retn
				sub_172		endp
  
020A:A76D  87 DB				xchg	bx,bx
020A:A76F  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_173		proc	near
020A:A770  53					push	bx
020A:A771  52					push	dx
020A:A772  57					push	di
020A:A773  8B CF				mov	cx,di
020A:A775  BF 0008				mov	di,8
020A:A778			loc_1898:
020A:A778  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:A77C  75 07				jne	loc_1899		; Jump if not equal
020A:A77E  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:A783  74 27				je	loc_1901		; Jump if equal
020A:A785			loc_1899:
020A:A785  26: 8A 55 05				mov	dl,es:[di+5]
020A:A789  80 E2 0C				and	dl,0Ch
020A:A78C  80 FA 04				cmp	dl,4
020A:A78F  75 14				jne	loc_1900		; Jump if not equal
020A:A791  26: F6 45 04 10			test	byte ptr es:[di+4],10h
020A:A796  75 3D				jnz	loc_1904		; Jump if not zero
020A:A798  26: F6 45 04 02			test	byte ptr es:[di+4],2
020A:A79D  74 06				jz	loc_1900		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 361

020A:A79F  26: 39 4D 02				cmp	es:[di+2],cx
020A:A7A3  74 30				je	loc_1904		; Jump if equal
020A:A7A5			loc_1900:
020A:A7A5  26: 39 05				cmp	es:[di],ax
020A:A7A8  72 2B				jb	loc_1904		; Jump if below
020A:A7AA  74 05				jz	loc_1902		; Jump if zero
020A:A7AC			loc_1901:
020A:A7AC  B8 FFFF				mov	ax,0FFFFh
020A:A7AF  EB 3F				jmp	short loc_1906		; (A7F0)
020A:A7B1			loc_1902:
020A:A7B1  26: 39 4D 02				cmp	es:[di+2],cx
020A:A7B5  72 1E				jb	loc_1904		; Jump if below
020A:A7B7  80 FA 00				cmp	dl,0
020A:A7BA  75 13				jne	loc_1903		; Jump if not equal
020A:A7BC  26: 8A 5D 04				mov	bl,es:[di+4]
020A:A7C0  80 E3 5F				and	bl,5Fh			; '_'
020A:A7C3  80 FB 5F				cmp	bl,5Fh			; '_'
020A:A7C6  75 07				jne	loc_1903		; Jump if not equal
020A:A7C8  26: F6 45 05 03			test	byte ptr es:[di+5],3
020A:A7CD  74 06				jz	loc_1904		; Jump if zero
020A:A7CF			loc_1903:
020A:A7CF  26: 8B 45 02				mov	ax,es:[di+2]
020A:A7D3  EB 1B				jmp	short loc_1906		; (A7F0)
020A:A7D5			loc_1904:
020A:A7D5  50					push	ax
020A:A7D6  26: 8A 45 05				mov	al,es:[di+5]
020A:A7DA  25 000F				and	ax,0Fh
020A:A7DD  53					push	bx
020A:A7DE  BB 377F				mov	bx,377Fh
020A:A7E1  D7					xlat				; al=[al+[bx]] table
020A:A7E2  5B					pop	bx
020A:A7E3  0A C0				or	al,al			; Zero ?
020A:A7E5  75 04				jnz	loc_1905		; Jump if not zero
020A:A7E7  26: 8A 45 06				mov	al,es:[di+6]
020A:A7EB			loc_1905:
020A:A7EB  03 F8				add	di,ax
020A:A7ED  58					pop	ax
020A:A7EE  EB 88				jmp	short loc_1898		; (A778)
020A:A7F0			loc_1906:
020A:A7F0  5F			data_771	db	5Fh
020A:A7F1  5A					pop	dx
020A:A7F2  5B					pop	bx
020A:A7F3  C3					retn
				sub_173		endp
  
020A:A7F4  56					push	si
020A:A7F5  57					push	di
020A:A7F6  51					push	cx
020A:A7F7  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A7FC  06					push	es
020A:A7FD  26: 8A 45 04				mov	al,es:[di+4]
020A:A801  24 1F				and	al,1Fh
020A:A803  3C 1F				cmp	al,1Fh
020A:A805  74 17				je	loc_1907		; Jump if equal
020A:A807  FE C8				dec	al
020A:A809  B4 2C				mov	ah,2Ch			; ','
020A:A80B  F6 E4				mul	ah			; ax = reg * al
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 362

020A:A80D  BE 3C81				mov	si,3C81h
020A:A810  03 F0				add	si,ax
020A:A812  BF 2ED4				mov	di,2ED4h
020A:A815  B9 0028				mov	cx,28h
020A:A818  E8 F3F3				call	sub_162			; (9C0E)
020A:A81B  FC					cld				; Clear direction
020A:A81C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A81E			loc_1907:
020A:A81E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A823  5A					pop	dx
020A:A824  8E C2				mov	es,dx
020A:A826  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A82B  5A					pop	dx
020A:A82C  75 0A				jnz	loc_1908		; Jump if not zero
020A:A82E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A833  74 03				je	loc_1908		; Jump if equal
020A:A835  E8 F6AC				call	sub_168			; (9EE4)
020A:A838			loc_1908:
020A:A838  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A83D  59					pop	cx
020A:A83E  5F					pop	di
020A:A83F  5E					pop	si
020A:A840  C3					retn
020A:A841  87 DB				xchg	bx,bx
020A:A843  90					nop
020A:A844  F7 06 42CC 0040			test	data_601,40h		; (020A:42CC=30h)
020A:A84A  75 0F				jnz	loc_1909		; Jump if not zero
020A:A84C  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020A:A851  75 08				jne	loc_1909		; Jump if not equal
020A:A853  A1 2ED4				mov	ax,data_462		; (020A:2ED4=4554h)
020A:A856  80 FC 25				cmp	ah,25h			; '%'
020A:A859  74 03				je	loc_1910		; Jump if equal
020A:A85B			loc_1909:
020A:A85B  E9 0132				jmp	loc_1922		; (A990)
020A:A85E			loc_1910:
020A:A85E  53					push	bx
020A:A85F  51					push	cx
020A:A860  52					push	dx
020A:A861  57					push	di
020A:A862  56					push	si
020A:A863  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A868  06					push	es
020A:A869  A1 2EE0				mov	ax,data_464		; (020A:2EE0=574Fh)
020A:A86C  8B 1E 2EF4				mov	bx,data_469		; (020A:2EF4=574Fh)
020A:A870  3D 0000				cmp	ax,0
020A:A873  75 08				jne	loc_1911		; Jump if not equal
020A:A875  83 FB 00				cmp	bx,0
020A:A878  75 03				jne	loc_1911		; Jump if not equal
020A:A87A  E9 00EF				jmp	loc_1920		; (A96C)
020A:A87D			loc_1911:
020A:A87D  89 1E 37A6				mov	word ptr ds:[37A6h],bx	; (020A:37A6=0EB01h)
020A:A881  A3 37A8				mov	word ptr ds:[37A8h],ax	; (020A:37A8=0F606h)
020A:A884  BF 37A6				mov	di,37A6h
020A:A887  E8 F384				call	sub_162			; (9C0E)
020A:A88A  E8 245B				call	sub_192			; (CCE8)
020A:A88D  72 03				jc	loc_1912		; Jump if carry Set
020A:A88F  E9 00DA				jmp	loc_1920		; (A96C)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 363

020A:A892			loc_1912:
020A:A892  A1 2EE0				mov	ax,word ptr ds:[2EE0h]	; (9B68:2EE0=0AFE1h)
020A:A895  BA 0001				mov	dx,1
020A:A898  E8 E73D				call	sub_143			; (8FD8)
020A:A89B  72 05				jc	loc_1914		; Jump if carry Set
020A:A89D  EB 44				jmp	short loc_1915		; (A8E3)
020A:A89F			loc_1913:
020A:A89F  E9 00CA				jmp	loc_1920		; (A96C)
020A:A8A2			loc_1914:
020A:A8A2  26			data_773	db	26h
020A:A8A3  80			data_774	db	80h
020A:A8A4  4D					dec	bp
020A:A8A5  05 8030				add	ax,8030h
020A:A8A8  3E					db	3Eh
020A:A8A9  38 26 7204				cmp	byte ptr ds:[7204h],ah	; (9B68:7204=0)
020A:A8AD  F1			data_776	db	0F1h
020A:A8AE  26: 80		data_777	db	80h
020A:A8B0  4D					dec	bp
020A:A8B1  04 40				add	al,40h			; '@'
020A:A8B3  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:A8B8  75 E5				jnz	loc_1913		; Jump if not zero
020A:A8BA  57					push	di
020A:A8BB  8B F7				mov	si,di
020A:A8BD  BF 472B				mov	di,472Bh
020A:A8C0  B9 007F				mov	cx,7Fh
020A:A8C3  8C C0				mov	ax,es
020A:A8C5  1E					push	ds
020A:A8C6  07					pop	es
020A:A8C7  8E D8				mov	ds,ax
020A:A8C9  FC					cld				; Clear direction
020A:A8CA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A8CC  8C C0				mov	ax,es
020A:A8CE  1E					push	ds
020A:A8CF  07					pop	es
020A:A8D0  8E D8				mov	ds,ax
020A:A8D2  5E					pop	si
020A:A8D3  E8 0546				call	sub_175			; (AE1C)
020A:A8D6  BF 472B				mov	di,472Bh
020A:A8D9  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:A8DD  80 4D 05 02				or	byte ptr [di+5],2
020A:A8E1  EB 25				jmp	short loc_1917		; (A908)
020A:A8E3			loc_1915:
020A:A8E3  BF 472B				mov	di,472Bh
020A:A8E6  89 1D				mov	[di],bx
020A:A8E8  89 45 02				mov	[di+2],ax
020A:A8EB  B0 40				mov	al,40h			; '@'
020A:A8ED  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (9B68:263D=0AEh)
020A:A8F2  72 09				jb	loc_1916		; Jump if below
020A:A8F4  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (9B68:2638=0E0h)
020A:A8F9  73 02				jae	loc_1916		; Jump if above or =
020A:A8FB  B0 00				mov	al,0
020A:A8FD			loc_1916:
020A:A8FD  88 45 04				mov	[di+4],al
020A:A900  C6 45 05 32				mov	byte ptr [di+5],32h	; '2'
020A:A904  C6 45 06 00				mov	byte ptr [di+6],0
020A:A908			loc_1917:
020A:A908  A1 2ED4				mov	ax,word ptr ds:[2ED4h]	; (9B68:2ED4=0AEABh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 364

020A:A90B  BD 33BE				mov	bp,33BEh
020A:A90E  9A 16FA:0024		;*		call	far ptr sub_222		;*(16FA:0024)
020A:A90E  9A 24 00 FA 16			db	 9Ah, 24h, 00h,0FAh, 16h
020A:A913  BD 33BA				mov	bp,33BAh
020A:A916  83 C7 07				add	di,7
020A:A919  B9 33C9				mov	cx,33C9h
020A:A91C  81 E9 33BA				sub	cx,33BAh
020A:A920  9A 16FA:1238		;*		call	far ptr sub_261		;*(16FA:1238)
020A:A920  9A 38 12 FA 16			db	 9Ah, 38h, 12h,0FAh, 16h
020A:A925  3C 00				cmp	al,0
020A:A927  74 1B				je	locloop_1918		; Jump if equal
020A:A929  55					push	bp
020A:A92A  53					push	bx
020A:A92B  BD 33C5				mov	bp,33C5h
020A:A92E  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:A933  45					inc	bp
020A:A934  32 E4				xor	ah,ah			; Zero register
020A:A936  33 DB				xor	bx,bx			; Zero register
020A:A938  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:A938  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:A93D  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:A942  5B					pop	bx
020A:A943  5D					pop	bp
  
020A:A944			locloop_1918:
020A:A944  3E: 8A 46 00				mov	al,ds:[bp]
020A:A948  88 05				mov	[di],al
020A:A94A  45					inc	bp
020A:A94B  47					inc	di
020A:A94C  E2 F6				loop	locloop_1918		; Loop if cx > 0
  
020A:A94E  E8 030F				call	sub_174			; (AC60)
020A:A951  BD 33C5				mov	bp,33C5h
020A:A954  3E: C6 46 00 72			mov	byte ptr ds:[bp],72h	; 'r'
020A:A959  45					inc	bp
020A:A95A  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:A95F  45					inc	bp
020A:A960			loc_1919:
020A:A960  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:A965  45					inc	bp
020A:A966  81 FD 33C9				cmp	bp,33C9h
020A:A96A  72 F4				jb	loc_1919		; Jump if below
020A:A96C			loc_1920:
020A:A96C  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:A971  5A					pop	dx
020A:A972  8E C2				mov	es,dx
020A:A974  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:A979  5A					pop	dx
020A:A97A  75 0A				jnz	loc_1921		; Jump if not zero
020A:A97C  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:A981  74 03				je	loc_1921		; Jump if equal
020A:A983  E8 F55E				call	sub_168			; (9EE4)
020A:A986			loc_1921:
020A:A986  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:A98B  5E					pop	si
020A:A98C  5F					pop	di
020A:A98D  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 365

020A:A98E  59					pop	cx
020A:A98F  5B					pop	bx
020A:A990			loc_1922:
020A:A990  C3					retn
020A:A991  87 DB				xchg	bx,bx
020A:A993  90					nop
020A:A994  8B F7				mov	si,di
020A:A996  E8 0483				call	sub_175			; (AE1C)
020A:A999  8B 1E 2D82				mov	bx,data_423		; (020A:2D82=5357h)
020A:A99D  BA 0001				mov	dx,1
020A:A9A0  A8			data_780	db	0A8h			; Data table (indexed access)
020A:A9A1  02 75 03				add	dh,[di+3]
020A:A9A4  BA 0004				mov	dx,4
020A:A9A7  06					push	es
020A:A9A8  8E 06 2D82				mov	es,data_423		; (020A:2D82=5357h)
020A:A9AC  8B 3E 2D84				mov	di,data_424		; (020A:2D84=735Ch)
020A:A9B0  A8 01				test	al,1
020A:A9B2  74 04				jz	loc_1923		; Jump if zero
020A:A9B4  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A9B8			loc_1923:
020A:A9B8  26: 8B 05				mov	ax,es:[di]
020A:A9BB  07					pop	es
020A:A9BC  E8 E619				call	sub_143			; (8FD8)
020A:A9BF  73 0F				jnc	loc_1924		; Jump if carry=0
020A:A9C1  8B F7				mov	si,di
020A:A9C3  E8 0456				call	sub_175			; (AE1C)
020A:A9C6  A1 2D84				mov	ax,data_424		; (020A:2D84=735Ch)
020A:A9C9  40					inc	ax
020A:A9CA  A3 4315				mov	data_630,ax		; (020A:4315=8004h)
020A:A9CD  A3 4317				mov	data_631,ax		; (020A:4317=740h)
020A:A9D0			loc_1924:
020A:A9D0  C3					retn
020A:A9D1  87 DB				xchg	bx,bx
020A:A9D3  90					nop
020A:A9D4  50					push	ax
020A:A9D5  53					push	bx
020A:A9D6  57					push	di
020A:A9D7  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:A9DC  06					push	es
020A:A9DD  26: 8A 45 05				mov	al,es:[di+5]
020A:A9E1  24 0F				and	al,0Fh
020A:A9E3  75 03				jnz	loc_1925		; Jump if not zero
020A:A9E5  E9 024A				jmp	loc_1953		; (AC32)
020A:A9E8			loc_1925:
020A:A9E8  26: 8A 45 09				mov	al,es:[di+9]
020A:A9EC  3C 00				cmp	al,0
020A:A9EE  75 0D				jne	loc_1926		; Jump if not equal
020A:A9F0  C6 06 2D8D 00			mov	data_429,0		; (020A:2D8D=3Bh)
020A:A9F5  C6 06 2D8F 01			mov	data_430,1		; (020A:2D8F=3Ah)
020A:A9FA  E9 0230				jmp	loc_1952		; (AC2D)
020A:A9FD			loc_1926:
020A:A9FD  3C 01				cmp	al,1
020A:A9FF  75 08				jne	loc_1927		; Jump if not equal
020A:AA01  C6 06 2D8D 05			mov	data_429,5		; (020A:2D8D=3Bh)
020A:AA06  E9 0224				jmp	loc_1952		; (AC2D)
020A:AA09			loc_1927:
020A:AA09  3C 02				cmp	al,2
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 366

020A:AA0B  75 12				jne	loc_1929		; Jump if not equal
020A:AA0D  F6 06 2E7E 05			test	byte ptr data_440,5	; (020A:2E7E=49h)
020A:AA12  74 08				jz	loc_1928		; Jump if zero
020A:AA14  C6 06 4205 01			mov	data_590,1		; (020A:4205=0EBh)
020A:AA19  E9 0211				jmp	loc_1952		; (AC2D)
020A:AA1C			loc_1928:
020A:AA1C  E9 0213				jmp	loc_1953		; (AC32)
020A:AA1F			loc_1929:
020A:AA1F  3C 03				cmp	al,3
020A:AA21  75 0B				jne	loc_1930		; Jump if not equal
020A:AA23  E8 1B01				call	sub_182			; (C527)
020A:AA26  B0 03				mov	al,3
020A:AA28  E8 D495				call	sub_112			; (7EC0)
020A:AA2B  E9 0204				jmp	loc_1953		; (AC32)
020A:AA2E			loc_1930:
020A:AA2E  3C 04				cmp	al,4
020A:AA30  75 28				jne	loc_1932		; Jump if not equal
020A:AA32  C6 06 2D8D 00			mov	byte ptr ds:[2D8Dh],0	; (9B68:2D8D=0A0h)
020A:AA37  C6 06 2D8F 01			mov	byte ptr ds:[2D8Fh],1	; (9B68:2D8F=20h)
020A:AA3C  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:AA41  74 14				jz	loc_1931		; Jump if zero
020A:AA43  80 26 2ECA CF			and	byte ptr ds:[2ECAh],0CFh	; (9B68:2ECA=20h)
020A:AA48  80 26 2ECA FC			and	byte ptr ds:[2ECAh],0FCh	; (9B68:2ECA=20h)
020A:AA4D  80 26 2ECA FB			and	byte ptr ds:[2ECAh],0FBh	; (9B68:2ECA=20h)
020A:AA52  B0 42				mov	al,42h			; 'B'
020A:AA54  E8 D469				call	sub_112			; (7EC0)
020A:AA57			loc_1931:
020A:AA57  E9 01D3				jmp	loc_1952		; (AC2D)
020A:AA5A			loc_1932:
020A:AA5A  3C 05				cmp	al,5
020A:AA5C  75 23				jne	loc_1934		; Jump if not equal
020A:AA5E  C6 06 2D8D 00			mov	byte ptr ds:[2D8Dh],0	; (9B68:2D8D=0A0h)
020A:AA63  C6 06 2D8F 01			mov	byte ptr ds:[2D8Fh],1	; (9B68:2D8F=20h)
020A:AA68  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:AA6D  75 0F				jnz	loc_1933		; Jump if not zero
020A:AA6F  80 0E 2ECA 04			or	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:AA74  80 0E 2ECA 03			or	byte ptr ds:[2ECAh],3	; (9B68:2ECA=20h)
020A:AA79  B0 41				mov	al,41h			; 'A'
020A:AA7B  E8 D442				call	sub_112			; (7EC0)
020A:AA7E			loc_1933:
020A:AA7E  E9 01AC				jmp	loc_1952		; (AC2D)
020A:AA81			loc_1934:
020A:AA81  3C 06				cmp	al,6
020A:AA83  75 38				jne	loc_1936		; Jump if not equal
020A:AA85  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:AA89  09 06 42CC				or	word ptr ds:[42CCh],ax	; (9B68:42CC=0)
020A:AA8D  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:AA91  32 E4				xor	ah,ah			; Zero register
020A:AA93  09 06 42CE				or	word ptr ds:[42CEh],ax	; (9B68:42CE=0)
020A:AA97  26: 8B 45 0D				mov	ax,es:[di+0Dh]
020A:AA9B  21 06 42CC				and	word ptr ds:[42CCh],ax	; (9B68:42CC=0)
020A:AA9F  26: 8A 45 0F				mov	al,es:[di+0Fh]
020A:AAA3  B4 FF				mov	ah,0FFh
020A:AAA5  21			data_782	db	21h			; Data table (indexed access)
020A:AAA6  06					push	es
020A:AAA7  CE					into				; Int 4 on overflow
020A:AAA8  42					inc	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 367

020A:AAA9  B0 00				mov	al,0
020A:AAAB  F7 06 42CC 0002			test	word ptr ds:[42CCh],2	; (9B68:42CC=0)
020A:AAB1  74 02				jz	loc_1935		; Jump if zero
020A:AAB3  B0 01				mov	al,1
020A:AAB5			loc_1935:
020A:AAB5  9A 16FA:12D0		;*		call	far ptr sub_263		;*(16FA:12D0)
020A:AAB5  9A D0 12 FA 16			db	 9Ah,0D0h, 12h,0FAh, 16h
020A:AABA  E9 0170				jmp	loc_1952		; (AC2D)
020A:AABD			loc_1936:
020A:AABD  3C 07				cmp	al,7
020A:AABF  75 2D				jne	loc_1937		; Jump if not equal
020A:AAC1  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:AAC5  A3 2EF4				mov	word ptr ds:[2EF4h],ax	; (9B68:2EF4=2020h)
020A:AAC8  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:AACC  A3 2EF2				mov	word ptr ds:[2EF2h],ax	; (9B68:2EF2=2020h)
020A:AACF  26: 8B 45 0E				mov	ax,es:[di+0Eh]
020A:AAD3  A3 2ED4				mov	word ptr ds:[2ED4h],ax	; (9B68:2ED4=0AEABh)
020A:AAD6  26: 8B 45 10				mov	ax,es:[di+10h]
020A:AADA  A3 2ED8				mov	word ptr ds:[2ED8h],ax	; (9B68:2ED8=8C20h)
020A:AADD  26: 8B 45 12				mov	ax,es:[di+12h]
020A:AAE1  A3 2EE4				mov	word ptr ds:[2EE4h],ax	; (9B68:2EE4=0A7ECh)
020A:AAE4  26: 8B 45 14				mov	ax,es:[di+14h]
020A:AAE8  A3 2EE8				mov	word ptr ds:[2EE8h],ax	; (9B68:2EE8=0E2A0h)
020A:AAEB  E9 0144				jmp	loc_1953		; (AC32)
020A:AAEE			loc_1937:
020A:AAEE  3C 17				cmp	al,17h
020A:AAF0  75 02				jne	loc_1938		; Jump if not equal
020A:AAF2  EB 62				jmp	short loc_1945		; (AB56)
020A:AAF4			loc_1938:
020A:AAF4  3C 90				cmp	al,90h
020A:AAF6  72 06				jb	loc_1939		; Jump if below
020A:AAF8  3C 96				cmp	al,96h
020A:AAFA  77 02				ja	loc_1939		; Jump if above
020A:AAFC  EB 6E				jmp	short loc_1946		; (AB6C)
020A:AAFE			loc_1939:
020A:AAFE  3C 0A				cmp	al,0Ah
020A:AB00  77 15				ja	loc_1941		; Jump if above
020A:AB02  3C 08				cmp	al,8
020A:AB04  72 0E				jb	loc_1940		; Jump if below
020A:AB06  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:AB0A  89 1E 42B1				mov	word ptr ds:[42B1h],bx	; (9B68:42B1=0)
020A:AB0E  A2 42B3				mov	byte ptr ds:[42B3h],al	; (9B68:42B3=0)
020A:AB11  E9 0119				jmp	loc_1952		; (AC2D)
020A:AB14			loc_1940:
020A:AB14  E9 011B				jmp	loc_1953		; (AC32)
020A:AB17			loc_1941:
020A:AB17  A8 10				test	al,10h
020A:AB19  75 6E				jnz	loc_1947		; Jump if not zero
020A:AB1B  A8 40				test	al,40h			; '@'
020A:AB1D  74 0E				jz	loc_1942		; Jump if zero
020A:AB1F  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:AB23  89 1E 2D91				mov	word ptr ds:[2D91h],bx	; (9B68:2D91=0E193h)
020A:AB27  A2 2D90				mov	byte ptr ds:[2D90h],al	; (9B68:2D90=20h)
020A:AB2A  E9 0100				jmp	loc_1952		; (AC2D)
020A:AB2D			loc_1942:
020A:AB2D  3C 80				cmp	al,80h
020A:AB2F  72 E3				jb	loc_1940		; Jump if below
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 368

020A:AB31  3C 8C				cmp	al,8Ch
020A:AB33  77 DF				ja	loc_1940		; Jump if above
020A:AB35  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:AB39  BE 2ED4				mov	si,2ED4h
020A:AB3C  24 0F				and	al,0Fh
020A:AB3E  3C 07				cmp	al,7
020A:AB40  72 07				jb	loc_1943		; Jump if below
020A:AB42  BE 2EF0				mov	si,2EF0h
020A:AB45  2C 07				sub	al,7
020A:AB47  EB 02				jmp	short loc_1944		; (AB4B)
020A:AB49			loc_1943:
020A:AB49  D0 E0				shl	al,1			; Shift w/zeros fill
020A:AB4B			loc_1944:
020A:AB4B  D0 E0				shl	al,1			; Shift w/zeros fill
020A:AB4D  32 E4				xor	ah,ah			; Zero register
020A:AB4F  03 F0				add	si,ax
020A:AB51  89 1C				mov	[si],bx
020A:AB53  E9 00D7				jmp	loc_1952		; (AC2D)
020A:AB56			loc_1945:
020A:AB56  C6 06 38BA 13			mov	byte ptr ds:[38BAh],13h	; (9B68:38BA=0)
020A:AB5B  26: 8A 45 06				mov	al,es:[di+6]
020A:AB5F  2C 16				sub	al,16h
020A:AB61  BE 0016				mov	si,16h
020A:AB64  9A 16FA:1154		;*		call	far ptr sub_258		;*(16FA:1154)
020A:AB64  9A 54 11 FA 16			db	 9Ah, 54h, 11h,0FAh, 16h
020A:AB69  E9 00C6				jmp	loc_1953		; (AC32)
020A:AB6C			loc_1946:
020A:AB6C  2C 90				sub	al,90h
020A:AB6E  32 E4				xor	ah,ah			; Zero register
020A:AB70  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AB72  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AB74  BE 2ED4				mov	si,2ED4h
020A:AB77  03 F0				add	si,ax
020A:AB79  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:AB7D  89 1C				mov	[si],bx
020A:AB7F  26: 8B 5D 0C				mov	bx,es:[di+0Ch]
020A:AB83  89 5C 02				mov	[si+2],bx
020A:AB86  E9 00A4				jmp	loc_1952		; (AC2D)
020A:AB89			loc_1947:
020A:AB89  FF 36 37A4				push	word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:AB8D  FF 36 3796				push	word ptr ds:[3796h]	; (9B68:3796=92h)
020A:AB91  FF 36 2A8F				push	word ptr ds:[2A8Fh]	; (9B68:2A8F=0A58Ch)
020A:AB95  C6 06 4202 01			mov	byte ptr ds:[4202h],1	; (9B68:4202=0)
020A:AB9A  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:AB9E  A3 37A4				mov	word ptr ds:[37A4h],ax	; (9B68:37A4=0)
020A:ABA1  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:ABA5  A3 3796				mov	word ptr ds:[3796h],ax	; (9B68:3796=92h)
020A:ABA8  26			data_783	db	26h
020A:ABA9  8A			data_784	db	8Ah
020A:ABAA  45					inc	bp
020A:ABAB  0E					push	cs
020A:ABAC  A2 4203				mov	byte ptr ds:[4203h],al	; (9B68:4203=0)
020A:ABAF  26: 8A 45 09				mov	al,es:[di+9]
020A:ABB3  B7 20				mov	bh,20h			; ' '
020A:ABB5  A8 01				test	al,1
020A:ABB7  74 03				jz	loc_1948		; Jump if zero
020A:ABB9  80 CF 10				or	bh,10h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 369

020A:ABBC			loc_1948:
020A:ABBC  C6 06 2A75 00			mov	byte ptr ds:[2A75h],0	; (9B68:2A75=0A0h)
020A:ABC1  3C 11				cmp	al,11h
020A:ABC3  77 05				ja	loc_1949		; Jump if above
020A:ABC5  C6 06 2A75 4F			mov	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:ABCA			loc_1949:
020A:ABCA  B2 00				mov	dl,0
020A:ABCC  E8 F03F				call	sub_162			; (9C0E)
020A:ABCF  BE 41FF				mov	si,41FFh
020A:ABD2  E8 F5FB				call	sub_172			; (A1D0)
020A:ABD5  C6 06 4202 02			mov	byte ptr ds:[4202h],2	; (D233:4202=0A3h)
020A:ABDA  C6 06 4203 00			mov	byte ptr ds:[4203h],0	; (D233:4203=3Ah)
020A:ABDF  C6 06 2A75 00			mov	byte ptr ds:[2A75h],0	; (D233:2A75=0)
020A:ABE4  8F 06 2A8F				pop	word ptr ds:[2A8Fh]	; (D233:2A8F=4AE8h)
020A:ABE8  8F 06 3796				pop	word ptr ds:[3796h]	; (D233:3796=1475h)
020A:ABEC  8F 06 37A4				pop	word ptr ds:[37A4h]	; (D233:37A4=3)
020A:ABF0  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:ABF5  5A					pop	dx
020A:ABF6  8E C2				mov	es,dx
020A:ABF8  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:ABFD  5A					pop	dx
020A:ABFE  75 0A				jnz	loc_1950		; Jump if not zero
020A:AC00  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:AC05  74 03				je	loc_1950		; Jump if equal
020A:AC07  E8 F2DA				call	sub_168			; (9EE4)
020A:AC0A			loc_1950:
020A:AC0A  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:AC0F  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:AC14  06					push	es
020A:AC15  BA 0001				mov	dx,1
020A:AC18  26: 8A 45 09				mov	al,es:[di+9]
020A:AC1C  3C 11				cmp	al,11h
020A:AC1E  77 03				ja	loc_1951		; Jump if above
020A:AC20  BA 0004				mov	dx,4
020A:AC23			loc_1951:
020A:AC23  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (D233:2D84=0AC09h)
020A:AC26  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:AC2A  E8 E3AB				call	sub_143			; (8FD8)
020A:AC2D			loc_1952:
020A:AC2D  C6 06 27D4 2E			mov	byte ptr ds:[27D4h],2Eh	; (D233:27D4=0A0h) '.'
020A:AC32			loc_1953:
020A:AC32  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:AC37  5A					pop	dx
020A:AC38  8E C2				mov	es,dx
020A:AC3A  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:AC3F  5A					pop	dx
020A:AC40  75 0A				jnz	loc_1954		; Jump if not zero
020A:AC42  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:AC47  74 03				je	loc_1954		; Jump if equal
020A:AC49  E8 F298				call	sub_168			; (9EE4)
020A:AC4C			loc_1954:
020A:AC4C  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:AC51  5F					pop	di
020A:AC52  5B					pop	bx
020A:AC53  58					pop	ax
020A:AC54  F8					clc				; Clear carry flag
020A:AC55  C3					retn
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 370

020A:AC56  000A[00]				db	10 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_174		proc	near
020A:AC60  50					push	ax
020A:AC61  53					push	bx
020A:AC62  51					push	cx
020A:AC63  52					push	dx
020A:AC64  56					push	si
020A:AC65  57					push	di
020A:AC66  55					push	bp
020A:AC67  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:AC6C  1E					push	ds
020A:AC6D  E8 EF89				call	sub_157			; (9BF9)
020A:AC70  BD 377F				mov	bp,377Fh
020A:AC73  BE 472B				mov	si,472Bh
020A:AC76  8B 1C				mov	bx,[si]
020A:AC78  8A 44 05				mov	al,[si+5]
020A:AC7B  24 0C				and	al,0Ch
020A:AC7D  3C 08				cmp	al,8
020A:AC7F  74 47				je	loc_1958		; Jump if equal
020A:AC81  3C 04				cmp	al,4
020A:AC83  74 0A				je	loc_1955		; Jump if equal
020A:AC85  3C 00				cmp	al,0
020A:AC87  74 15				je	loc_1956		; Jump if equal
020A:AC89  BB 0001				mov	bx,1
020A:AC8C  E9 9010				jmp	loc_511			; (3C9F)
020A:AC8F			loc_1955:
020A:AC8F  E8 F286				call	sub_169			; (9F18)
020A:AC92  83 06 2A63 01			add	word ptr ds:[2A63h],1	; (9B68:2A63=0A5E3h)
020A:AC97  83 16 2A65 00			adc	word ptr ds:[2A65h],0	; (9B68:2A65=0A0ACh)
020A:AC9C  EB 39				jmp	short loc_1959		; (ACD7)
020A:AC9E			loc_1956:
020A:AC9E  80 7C 04 5F				cmp	byte ptr [si+4],5Fh	; '_'
020A:ACA2  75 15				jne	loc_1957		; Jump if not equal
020A:ACA4  80 7C 05 00				cmp	byte ptr [si+5],0
020A:ACA8  75 0F				jne	loc_1957		; Jump if not equal
020A:ACAA  E8 EF6A				call	sub_164			; (9C17)
020A:ACAD  83 06 2A6F 01			add	word ptr ds:[2A6Fh],1	; (9B68:2A6F=0ADE2h)
020A:ACB2  83 16 2A71 00			adc	word ptr ds:[2A71h],0	; (9B68:2A71=0ACAEh)
020A:ACB7  EB 1E				jmp	short loc_1959		; (ACD7)
020A:ACB9			loc_1957:
020A:ACB9  E8 F2D0				call	sub_170			; (9F8C)
020A:ACBC  83 06 2A67 01			add	word ptr ds:[2A67h],1	; (9B68:2A67=20EFh)
020A:ACC1  83 16 2A69 00			adc	word ptr ds:[2A69h],0	; (9B68:2A69=20A2h)
020A:ACC6  EB 0F				jmp	short loc_1959		; (ACD7)
020A:ACC8			loc_1958:
020A:ACC8  E8 F335				call	sub_171			; (A000)
020A:ACCB  83 06 2A6B 01			add	word ptr ds:[2A6Bh],1	; (9B68:2A6B=0A0AFh)
020A:ACD0  83 16 2A6D 00			adc	word ptr ds:[2A6Dh],0	; (9B68:2A6D=0A5AAh)
020A:ACD5  EB 00				jmp	short loc_1959		; (ACD7)
020A:ACD7			loc_1959:
020A:ACD7  E8 C106				call	sub_106			; (6DE0)
020A:ACDA  BF 0008				mov	di,8
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 371

020A:ACDD  8B 1C				mov	bx,[si]
020A:ACDF  8B 44 02				mov	ax,[si+2]
020A:ACE2  26: 8B		data_787	db	8Bh			; Data table (indexed access)
020A:ACE4  0E					push	cs
020A:ACE5  02 00				add	al,[bx+si]
020A:ACE7  3B CB				cmp	cx,bx
020A:ACE9  77 10				ja	loc_1961		; Jump if above
020A:ACEB  72 09				jc	loc_1960		; Jump if carry Set
020A:ACED  26: 8B 0E 0004			mov	cx,word ptr es:[4]	; (D233:0004=0)
020A:ACF2  3B C8				cmp	cx,ax
020A:ACF4  77 05				ja	loc_1961		; Jump if above
020A:ACF6			loc_1960:
020A:ACF6  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (D233:0006=0)
020A:ACFB			loc_1961:
020A:ACFB  8B 1C				mov	bx,[si]
020A:ACFD  8B 44 02				mov	ax,[si+2]
020A:AD00  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (D233:0000=0)
020A:AD05  72 02				jb	loc_1962		; Jump if below
020A:AD07  EB 43				jmp	short loc_1968		; (AD4C)
020A:AD09			loc_1962:
020A:AD09  26: 39 1D				cmp	es:[di],bx
020A:AD0C  73 19				jae	loc_1964		; Jump if above or =
020A:AD0E  BB 377F				mov	bx,377Fh
020A:AD11  26: 8A 45 05				mov	al,es:[di+5]
020A:AD15  25 000F				and	ax,0Fh
020A:AD18  D7					xlat				; al=[al+[bx]] table
020A:AD19  0A C0				or	al,al			; Zero ?
020A:AD1B  75 04				jnz	loc_1963		; Jump if not zero
020A:AD1D  26: 8A 45 06				mov	al,es:[di+6]
020A:AD21			loc_1963:
020A:AD21  8B C8				mov	cx,ax
020A:AD23  03 F9				add	di,cx
020A:AD25  EB D4				jmp	short loc_1961		; (ACFB)
020A:AD27			loc_1964:
020A:AD27  74 02				jz	loc_1965		; Jump if zero
020A:AD29  EB 21				jmp	short loc_1968		; (AD4C)
020A:AD2B			loc_1965:
020A:AD2B  26: 39 45 02				cmp	es:[di+2],ax
020A:AD2F  72 02				jb	loc_1966		; Jump if below
020A:AD31  EB 19				jmp	short loc_1968		; (AD4C)
020A:AD33			loc_1966:
020A:AD33  BB 377F				mov	bx,377Fh
020A:AD36  26: 8A 45 05				mov	al,es:[di+5]
020A:AD3A  25 000F				and	ax,0Fh
020A:AD3D  D7					xlat				; al=[al+[bx]] table
020A:AD3E  0A C0				or	al,al			; Zero ?
020A:AD40  75 04				jnz	loc_1967		; Jump if not zero
020A:AD42  26: 8A 45 06				mov	al,es:[di+6]
020A:AD46			loc_1967:
020A:AD46  8B C8				mov	cx,ax
020A:AD48  03 F9				add	di,cx
020A:AD4A  EB AF				jmp	short loc_1961		; (ACFB)
020A:AD4C			loc_1968:
020A:AD4C  BB 377F				mov	bx,377Fh
020A:AD4F  8A 44 05				mov	al,[si+5]
020A:AD52  25 000F				and	ax,0Fh
020A:AD55  D7					xlat				; al=[al+[bx]] table
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 372

020A:AD56  0A C0				or	al,al			; Zero ?
020A:AD58  75 03				jnz	loc_1969		; Jump if not zero
020A:AD5A  8A 44 06				mov	al,[si+6]
020A:AD5D			loc_1969:
020A:AD5D  8B C8				mov	cx,ax
020A:AD5F  26: A1 0000				mov	ax,word ptr es:[0]	; (D233:0000=0)
020A:AD63  03 C1				add	ax,cx
020A:AD65  73 03				jnc	loc_1970		; Jump if carry=0
020A:AD67  E9 8E9F		;*		jmp	loc_498			;*(3C09)
020A:AD67  E9 9F 8E				db	0E9h, 9Fh, 8Eh
020A:AD6A			loc_1970:
020A:AD6A  BE 472B				mov	si,472Bh
020A:AD6D  8B 04				mov	ax,[si]
020A:AD6F  3B 06 2D82				cmp	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:AD73  75 41				jne	loc_1974		; Jump if not equal
020A:AD75  8B 44 02				mov	ax,[si+2]
020A:AD78  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:AD7C  76 38				jbe	loc_1974		; Jump if below or =
020A:AD7E  8A 5C 05				mov	bl,[si+5]
020A:AD81  80 E3 0C				and	bl,0Ch
020A:AD84  80 FB 08				cmp	bl,8
020A:AD87  74 0C				je	loc_1971		; Jump if equal
020A:AD89  80 FB 04				cmp	bl,4
020A:AD8C  74 12				je	loc_1972		; Jump if equal
020A:AD8E  80 FB 00				cmp	bl,0
020A:AD91  74 18				je	loc_1973		; Jump if equal
020A:AD93  EB 21				jmp	short loc_1974		; (ADB6)
020A:AD95			loc_1971:
020A:AD95  3B 06 4317				cmp	ax,word ptr ds:[4317h]	; (9B68:4317=0)
020A:AD99  73 1B				jae	loc_1974		; Jump if above or =
020A:AD9B  A3 4317				mov	word ptr ds:[4317h],ax	; (9B68:4317=0)
020A:AD9E  EB 16				jmp	short loc_1974		; (ADB6)
020A:ADA0			loc_1972:
020A:ADA0  3B			data_790	db	3Bh			; Data table (indexed access)
020A:ADA1  06					push	es
020A:ADA2  13 43 73				adc	ax,[bp+di+73h]
020A:ADA5  10 A3 4313				adc	[bp+di+4313h],ah
020A:ADA9  EB 0B				jmp	short loc_1974		; (ADB6)
020A:ADAB			loc_1973:
020A:ADAB  3B 06 4315				cmp	ax,word ptr ds:[4315h]	; (9B68:4315=0)
020A:ADAF  73 05				jae	loc_1974		; Jump if above or =
020A:ADB1  A3 4315				mov	word ptr ds:[4315h],ax	; (9B68:4315=0)
020A:ADB4  EB 00				jmp	short loc_1974		; (ADB6)
020A:ADB6			loc_1974:
020A:ADB6  57					push	di
020A:ADB7  51					push	cx
020A:ADB8  1E					push	ds
020A:ADB9  06					push	es
020A:ADBA  1F					pop	ds
020A:ADBB  26: 8B 36 0000			mov	si,word ptr es:[0]	; (D233:0000=0)
020A:ADC0  4E					dec	si
020A:ADC1  8B C6				mov	ax,si
020A:ADC3  2B C7				sub	ax,di
020A:ADC5  40					inc	ax
020A:ADC6  26: 01 0E 0000			add	word ptr es:[0],cx	; (D233:0000=0)
020A:ADCB  73 03				jnc	loc_1975		; Jump if carry=0
020A:ADCD  E9 8E39		;*		jmp	loc_498			;*(3C09)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 373

020A:ADCD  E9 39 8E				db	0E9h, 39h, 8Eh
020A:ADD0			loc_1975:
020A:ADD0  8B FE				mov	di,si
020A:ADD2  03 F9				add	di,cx
020A:ADD4  8B C8				mov	cx,ax
020A:ADD6  FD					std				; Set direction flag
020A:ADD7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:ADD9  1F					pop	ds
020A:ADDA  59					pop	cx
020A:ADDB  5F					pop	di
020A:ADDC  BE 472B				mov	si,472Bh
020A:ADDF  8B 04				mov	ax,[si]
020A:ADE1  26: A3 0002				mov	word ptr es:[2],ax	; (D233:0002=0)
020A:ADE5  8B 44 02				mov	ax,[si+2]
020A:ADE8  26: A3 0004				mov	word ptr es:[4],ax	; (D233:0004=0)
020A:ADEC  26: 89 3E 0006			mov	word ptr es:[6],di	; (D233:0006=0)
020A:ADF1  FC					cld				; Clear direction
020A:ADF2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:ADF4  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:ADF9  5A					pop	dx
020A:ADFA  8E DA				mov	ds,dx
020A:ADFC  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:AE01  5A					pop	dx
020A:AE02  75 0A				jnz	loc_1976		; Jump if not zero
020A:AE04  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:AE09  74 03				je	loc_1976		; Jump if equal
020A:AE0B  E8 F0D6				call	sub_168			; (9EE4)
020A:AE0E			loc_1976:
020A:AE0E  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:AE13  5D					pop	bp
020A:AE14  5F					pop	di
020A:AE15  5E					pop	si
020A:AE16  5A					pop	dx
020A:AE17  59					pop	cx
020A:AE18  5B					pop	bx
020A:AE19  58					pop	ax
020A:AE1A  C3					retn
				sub_174		endp
  
020A:AE1B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_175		proc	near
020A:AE1C  E8 BFC1				call	sub_106			; (6DE0)
020A:AE1F  50					push	ax
020A:AE20  53			data_791	db	53h
020A:AE21  51					push	cx
020A:AE22  52					push	dx
020A:AE23  56					push	si
020A:AE24  57					push	di
020A:AE25  55					push	bp
020A:AE26  26: 8A 44 05				mov	al,es:[si+5]
020A:AE2A  24 0C				and	al,0Ch
020A:AE2C  3C 08				cmp	al,8
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 374

020A:AE2E  74 26				je	loc_1979		; Jump if equal
020A:AE30  3C 04				cmp	al,4
020A:AE32  74 0A				je	loc_1977		; Jump if equal
020A:AE34  3C 00				cmp	al,0
020A:AE36  74 12				je	loc_1978		; Jump if equal
020A:AE38  BB 0002				mov	bx,2
020A:AE3B  E9 8E61				jmp	loc_511			; (3C9F)
020A:AE3E			loc_1977:
020A:AE3E  83 2E 2A63 01			sub	data_383,1		; (020A:2A63=0AEA1h)
020A:AE43  83 1E 2A65 00			sbb	data_384,0		; (020A:2A65=20A9h)
020A:AE48  EB 18				jmp	short loc_1980		; (AE62)
020A:AE4A			loc_1978:
020A:AE4A  83 2E 2A67 01			sub	data_385,1		; (020A:2A67=0A8E1h)
020A:AE4F  83 1E 2A69 00			sbb	data_386,0		; (020A:2A69=0E2E1h)
020A:AE54  EB 0C				jmp	short loc_1980		; (AE62)
020A:AE56			loc_1979:
020A:AE56  83 2E 2A6B 01			sub	data_387,1		; (020A:2A6B=0ACA5h)
020A:AE5B  83 1E 2A6D 00			sbb	data_388,0		; (020A:2A6D=24EBh)
020A:AE60  EB 00				jmp	short loc_1980		; (AE62)
020A:AE62			loc_1980:
020A:AE62  BB 377F				mov	bx,377Fh
020A:AE65  26: 8A 44 05				mov	al,es:[si+5]
020A:AE69  25 000F				and	ax,0Fh
020A:AE6C  D7					xlat				; al=[al+[bx]] table
020A:AE6D  0A C0				or	al,al			; Zero ?
020A:AE6F  75 04				jnz	loc_1981		; Jump if not zero
020A:AE71  26: 8A 44 06				mov	al,es:[si+6]
020A:AE75			loc_1981:
020A:AE75  8B C8				mov	cx,ax
020A:AE77  26: 8B 04				mov	ax,es:[si]
020A:AE7A  3B 06 2D82				cmp	ax,data_423		; (020A:2D82=5357h)
020A:AE7E  75 71				jne	loc_1987		; Jump if not equal
020A:AE80  26: 8B 44 02				mov	ax,es:[si+2]
020A:AE84  26: 8A 5C 05				mov	bl,es:[si+5]
020A:AE88  80 E3 0C				and	bl,0Ch
020A:AE8B  80 FB 08				cmp	bl,8
020A:AE8E  74 0C				je	loc_1982		; Jump if equal
020A:AE90  80 FB 04				cmp	bl,4
020A:AE93  74 24				je	loc_1983		; Jump if equal
020A:AE95  80 FB 00				cmp	bl,0
020A:AE98  74 3C				je	loc_1985		; Jump if equal
020A:AE9A  EB 55				jmp	short loc_1987		; (AEF1)
020A:AE9C			loc_1982:
020A:AE9C  3B 06 4317				cmp	ax,data_631		; (020A:4317=740h)
020A:AEA0  75 4F				jne	loc_1987		; Jump if not equal
020A:AEA2  8B D9				mov	bx,cx
020A:AEA4  26: 8B 00				mov	ax,es:[bx+si]
020A:AEA7  3B 06 2D82				cmp	ax,data_423		; (020A:2D82=5357h)
020A:AEAB  8B26			data_793	dw	8B26h			; Data table (indexed access)
020A:AEAD  40			data_794	db	40h
020A:AEAE  02 75 03				add	dh,[di+3]
020A:AEB1  B8 FFFF				mov	ax,0FFFFh
020A:AEB4  A3 4317				mov	data_631,ax		; (020A:4317=740h)
020A:AEB7  EB 38				jmp	short loc_1987		; (AEF1)
020A:AEB9			loc_1983:
020A:AEB9  3B 06 4313				cmp	ax,word ptr ds:[4313h]	; (020A:4313=6000h)
020A:AEBD  75 32				jne	loc_1987		; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 375

020A:AEBF  8B D9				mov	bx,cx
020A:AEC1  26: 8B 00				mov	ax,es:[bx+si]
020A:AEC4  3B 06 2D82				cmp	ax,data_423		; (020A:2D82=5357h)
020A:AEC8  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:AECC  75 03				jnz	loc_1984		; Jump if not zero
020A:AECE  B8 FFFF				mov	ax,0FFFFh
020A:AED1			loc_1984:
020A:AED1  A3 4313				mov	word ptr ds:[4313h],ax	; (020A:4313=6000h)
020A:AED4  EB 1B				jmp	short loc_1987		; (AEF1)
020A:AED6			loc_1985:
020A:AED6  3B 06 4315				cmp	ax,data_630		; (020A:4315=8004h)
020A:AEDA  75 15				jne	loc_1987		; Jump if not equal
020A:AEDC  8B D9				mov	bx,cx
020A:AEDE  26: 8B 00				mov	ax,es:[bx+si]
020A:AEE1  3B 06 2D82				cmp	ax,data_423		; (020A:2D82=5357h)
020A:AEE5  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:AEE9  75 03				jnz	loc_1986		; Jump if not zero
020A:AEEB  B8 FFFF				mov	ax,0FFFFh
020A:AEEE			loc_1986:
020A:AEEE  A3 4315				mov	data_630,ax		; (020A:4315=8004h)
020A:AEF1			loc_1987:
020A:AEF1  8B FE				mov	di,si
020A:AEF3  03 F1				add	si,cx
020A:AEF5  26: 8B 04				mov	ax,es:[si]
020A:AEF8  26: A3 0002				mov	es:data_67,ax		; (020A:0002=10h)
020A:AEFC  26: 8B 44 02				mov	ax,es:[si+2]
020A:AF00  26: A3 0004				mov	es:data_68,ax		; (020A:0004=808h)
020A:AF04  26: 89 3E 0006			mov	es:data_69,di		; (020A:0006=3)
020A:AF09  8B C1				mov	ax,cx
020A:AF0B  26: 8B 0E 0000			mov	cx,es:data_66		; (020A:0000=1828h)
020A:AF10  2B CE				sub	cx,si
020A:AF12  1E					push	ds
020A:AF13  06					push	es
020A:AF14  1F					pop	ds
020A:AF15  FC					cld				; Clear direction
020A:AF16  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AF18  1F					pop	ds
020A:AF19  26: 29 06 0000			sub	es:data_66,ax		; (020A:0000=1828h)
020A:AF1E  5D					pop	bp
020A:AF1F  5F					pop	di
020A:AF20  5E			data_796	db	5Eh
020A:AF21  5A					pop	dx
020A:AF22  59					pop	cx
020A:AF23  5B					pop	bx
020A:AF24  58					pop	ax
020A:AF25  C3					retn
				sub_175		endp
  
020A:AF26  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_176		proc	near
020A:AF28  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:AF2D  06					push	es
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 376

020A:AF2E  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:AF33  1E					push	ds
020A:AF34  56					push	si
020A:AF35  57					push	di
020A:AF36  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:AF3C  75 24				jne	loc_1991		; Jump if not equal
020A:AF3E  E8 ECB8				call	sub_157			; (9BF9)
020A:AF41  A9 0002				test	ax,2
020A:AF44  74 05				jz	loc_1988		; Jump if zero
020A:AF46  E8 EFCF				call	sub_169			; (9F18)
020A:AF49  EB 1F				jmp	short loc_1992		; (AF6A)
020A:AF4B			loc_1988:
020A:AF4B  A9 0001				test	ax,1
020A:AF4E  74 05				jz	loc_1989		; Jump if zero
020A:AF50  E8 F039				call	sub_170			; (9F8C)
020A:AF53  EB 15				jmp	short loc_1992		; (AF6A)
020A:AF55			loc_1989:
020A:AF55  A9 0004				test	ax,4
020A:AF58  74 05				jz	loc_1990		; Jump if zero
020A:AF5A  E8 F0A3				call	sub_171			; (A000)
020A:AF5D  EB 0B				jmp	short loc_1992		; (AF6A)
020A:AF5F			loc_1990:
020A:AF5F  E9 00A0				jmp	loc_1998		; (B002)
020A:AF62			loc_1991:
020A:AF62  E8 EF7F				call	sub_168			; (9EE4)
020A:AF65  2E: 8E 06 4861			mov	es,cs:data_648		; (020A:4861=0D233h)
020A:AF6A			loc_1992:
020A:AF6A  BF 0008				mov	di,8
020A:AF6D  26: C7 05 FFFF			mov	word ptr es:[di],0FFFFh
020A:AF72  26: C7 45 02 FFFF			mov	word ptr es:[di+2],0FFFFh
020A:AF78  26: C6 45 04 00			mov	byte ptr es:[di+4],0
020A:AF7D  26: C6 45 06 00			mov	byte ptr es:[di+6],0
020A:AF82  A9 0002				test	ax,2
020A:AF85  75 0C				jnz	loc_1993		; Jump if not zero
020A:AF87  A9 0001				test	ax,1
020A:AF8A  75 29				jnz	loc_1995		; Jump if not zero
020A:AF8C  A9 0004				test	ax,4
020A:AF8F  75 46				jnz	loc_1997		; Jump if not zero
020A:AF91  EB 6F				jmp	short loc_1998		; (B002)
020A:AF93			loc_1993:
020A:AF93  26: C6 45 05 04			mov	byte ptr es:[di+5],4
020A:AF98  26: C7 06 0000 0012			mov	word ptr es:[0],12h	; (D233:0000=0)
020A:AF9F  BE 6C7B				mov	si,6C7Bh
020A:AFA2  57					push	di
020A:AFA3  BF FFF0				mov	di,0FFF0h
020A:AFA6  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:AFAA  75 06				jne	loc_1994		; Jump if not equal
020A:AFAC  B9 000C				mov	cx,0Ch
020A:AFAF  FC					cld				; Clear direction
020A:AFB0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AFB2			loc_1994:
020A:AFB2  5F					pop	di
020A:AFB3  EB 4D				jmp	short loc_1998		; (B002)
020A:AFB5			loc_1995:
020A:AFB5  26: C6 45 05 00			mov	byte ptr es:[di+5],0
020A:AFBA  26: C7 06 0000 000F			mov	word ptr es:[0],0Fh	; (D233:0000=0)
020A:AFC1  BE 6C9B				mov	si,6C9Bh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 377

020A:AFC4  57					push	di
020A:AFC5  BF FFF0				mov	di,0FFF0h
020A:AFC8  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:AFCC  75 06				jne	loc_1996		; Jump if not equal
020A:AFCE  B9 000C				mov	cx,0Ch
020A:AFD1  FC					cld				; Clear direction
020A:AFD2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AFD4			loc_1996:
020A:AFD4  5F					pop	di
020A:AFD5  EB 2B				jmp	short loc_1998		; (B002)
020A:AFD7			loc_1997:
020A:AFD7  26: C6 45 05 08			mov	byte ptr es:[di+5],8
020A:AFDC  51					push	cx
020A:AFDD  B9 0029				mov	cx,29h
020A:AFE0  33 C0				xor	ax,ax			; Zero register
020A:AFE2  BF 0011				mov	di,11h
020A:AFE5  FC					cld				; Clear direction
020A:AFE6  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:AFE8  59					pop	cx
020A:AFE9  26: C7 06 0000 0043			mov	word ptr es:[0],43h	; (D233:0000=0)
020A:AFF0  BE 6C8B				mov	si,6C8Bh
020A:AFF3  BF FFF0				mov	di,0FFF0h
020A:AFF6  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:AFFA  75 06				jne	loc_1998		; Jump if not equal
020A:AFFC  B9 000C				mov	cx,0Ch
020A:AFFF  FC					cld				; Clear direction
020A:B000  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B002			loc_1998:
020A:B002  26: C7 06 0002 FFFF			mov	word ptr es:[2],0FFFFh	; (D233:0002=0)
020A:B009  26: C7 06 0004 FFFF			mov	word ptr es:[4],0FFFFh	; (D233:0004=0)
020A:B010  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (D233:0006=0)
020A:B017  5F					pop	di
020A:B018  5E					pop	si
020A:B019  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:B01E  5A					pop	dx
020A:B01F  8E DA				mov	ds,dx
020A:B021  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:B026  5A					pop	dx
020A:B027  75 0A				jnz	loc_1999		; Jump if not zero
020A:B029  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:B02E  74 03				je	loc_1999		; Jump if equal
020A:B030  E8 EEB1				call	sub_168			; (9EE4)
020A:B033			loc_1999:
020A:B033  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:B038  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:B03D  5A					pop	dx
020A:B03E  8E C2				mov	es,dx
020A:B040  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:B045  5A					pop	dx
020A:B046  75 0A				jnz	loc_2000		; Jump if not zero
020A:B048  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:B04D  74 03				je	loc_2000		; Jump if equal
020A:B04F  E8 EE92				call	sub_168			; (9EE4)
020A:B052			loc_2000:
020A:B052  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:B057  C3					retn
				sub_176		endp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 378

  
020A:B058  0008[00]				db	8 dup (0)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_177		proc	near
020A:B060  53					push	bx
020A:B061  52					push	dx
020A:B062  56					push	si
020A:B063  57					push	di
020A:B064  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:B069  06					push	es
020A:B06A  C6 06 42B9 00			mov	byte ptr ds:[42B9h],0	; (9B68:42B9=0)
020A:B06F  F7 C3 FF20				test	bx,0FF20h
020A:B073  74 27				jz	loc_2002		; Jump if zero
020A:B075  3D FFFD				cmp	ax,0FFFDh
020A:B078  72 07				jb	loc_2001		; Jump if below
020A:B07A  C6 06 2F06 00			mov	byte ptr ds:[2F06h],0	; (9B68:2F06=0A1h)
020A:B07F  EB 1B				jmp	short loc_2002		; (B09C)
020A:B081			loc_2001:
020A:B081  F7 06 42CC 0008			test	word ptr ds:[42CCh],8	; (9B68:42CC=0)
020A:B087  75 13				jnz	loc_2002		; Jump if not zero
020A:B089  80 3E 42C5 01			cmp	byte ptr ds:[42C5h],1	; (9B68:42C5=0)
020A:B08E  75 0C				jne	loc_2002		; Jump if not equal
020A:B090  80 3E 2F06 0F			cmp	byte ptr ds:[2F06h],0Fh	; (9B68:2F06=0A1h)
020A:B095  77 05				ja	loc_2002		; Jump if above
020A:B097  80 0E 42C5 80			or	byte ptr ds:[42C5h],80h	; (9B68:42C5=0)
020A:B09C			loc_2002:
020A:B09C  8A 0E 2F04				mov	cl,byte ptr ds:[2F04h]	; (9B68:2F04=0E8h)
020A:B0A0  C6 06 2F0B 00			mov	byte ptr ds:[2F0Bh],0	; (9B68:2F0B=2Eh)
020A:B0A5  9A 16FA:0FA8		;*		call	far ptr sub_251		;*(16FA:0FA8)
020A:B0A5  9A A8 0F FA 16			db	 9Ah,0A8h, 0Fh,0FAh, 16h
020A:B0AA  73 14				jnc	loc_2003		; Jump if carry=0
020A:B0AC  8B 16 2EFA				mov	dx,word ptr ds:[2EFAh]	; (9B68:2EFA=2020h)
020A:B0B0  89 16 3796				mov	word ptr ds:[3796h],dx	; (9B68:3796=92h)
020A:B0B4  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:B0B9  75 05				jnz	loc_2003		; Jump if not zero
020A:B0BB  C6 06 2F0B 01			mov	byte ptr ds:[2F0Bh],1	; (9B68:2F0B=2Eh)
020A:B0C0			loc_2003:
020A:B0C0  80 F9 90				cmp	cl,90h
020A:B0C3  75 19				jne	loc_2004		; Jump if not equal
020A:B0C5  8B 16 3796				mov	dx,word ptr ds:[3796h]	; (9B68:3796=92h)
020A:B0C9  3B 16 2EF4				cmp	dx,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:B0CD  75 77				jne	loc_2011		; Jump if not equal
020A:B0CF  9A 16FA:0E90		;*		call	far ptr sub_248		;*(16FA:0E90)
020A:B0CF  9A 90 0E FA 16			db	 9Ah, 90h, 0Eh,0FAh, 16h
020A:B0D4  89 16 2EF4				mov	word ptr ds:[2EF4h],dx	; (9B68:2EF4=2020h)
020A:B0D8  89 16 3796				mov	word ptr ds:[3796h],dx	; (9B68:3796=92h)
020A:B0DC  EB 68				jmp	short loc_2011		; (B146)
020A:B0DE			loc_2004:
020A:B0DE  80 F9 26				cmp	cl,26h			; '&'
020A:B0E1  75 0F				jne	loc_2005		; Jump if not equal
020A:B0E3  8B 16 2EF2				mov	dx,word ptr ds:[2EF2h]	; (9B68:2EF2=2020h)
020A:B0E7  9A 16FA:0E90		;*		call	far ptr sub_248		;*(16FA:0E90)
020A:B0E7  9A 90 0E FA 16			db	 9Ah, 90h, 0Eh,0FAh, 16h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 379

020A:B0EC  89 16 2EF2				mov	word ptr ds:[2EF2h],dx	; (9B68:2EF2=2020h)
020A:B0F0  EB 50				jmp	short loc_2010		; (B142)
020A:B0F2			loc_2005:
020A:B0F2  80 F9 2E				cmp	cl,2Eh			; '.'
020A:B0F5  75 06				jne	loc_2006		; Jump if not equal
020A:B0F7  8B 16 2A3C				mov	dx,word ptr ds:[2A3Ch]	; (9B68:2A3C=0D0Ah)
020A:B0FB  EB 45				jmp	short loc_2010		; (B142)
020A:B0FD			loc_2006:
020A:B0FD  80 F9 36				cmp	cl,36h			; '6'
020A:B100  75 06				jne	loc_2007		; Jump if not equal
020A:B102  8B 16 2EFA				mov	dx,word ptr ds:[2EFAh]	; (9B68:2EFA=2020h)
020A:B106  EB 3A				jmp	short loc_2010		; (B142)
020A:B108			loc_2007:
020A:B108  80 F9 64				cmp	cl,64h			; 'd'
020A:B10B  75 0F				jne	loc_2008		; Jump if not equal
020A:B10D  8B 16 2EF6				mov	dx,word ptr ds:[2EF6h]	; (9B68:2EF6=2020h)
020A:B111  9A 16FA:0E90		;*		call	far ptr sub_248		;*(16FA:0E90)
020A:B111  9A 90 0E FA 16			db	 9Ah, 90h, 0Eh,0FAh, 16h
020A:B116  89 16 2EF6				mov	word ptr ds:[2EF6h],dx	; (9B68:2EF6=2020h)
020A:B11A  EB 26				jmp	short loc_2010		; (B142)
020A:B11C			loc_2008:
020A:B11C  80 F9 65				cmp	cl,65h			; 'e'
020A:B11F  75 0F				jne	loc_2009		; Jump if not equal
020A:B121  8B 16 2EF8				mov	dx,word ptr ds:[2EF8h]	; (9B68:2EF8=2020h)
020A:B125  9A 16FA:0E90		;*		call	far ptr sub_248		;*(16FA:0E90)
020A:B125  9A 90 0E FA 16			db	 9Ah, 90h, 0Eh,0FAh, 16h
020A:B12A  89 16 2EF8				mov	word ptr ds:[2EF8h],dx	; (9B68:2EF8=2020h)
020A:B12E  EB 12				jmp	short loc_2010		; (B142)
020A:B130			loc_2009:
020A:B130  80 F9 3E				cmp	cl,3Eh			; '>'
020A:B133  75 11				jne	loc_2011		; Jump if not equal
020A:B135  8B 16 2EF4				mov	dx,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:B139  9A 16FA:0E90		;*		call	far ptr sub_248		;*(16FA:0E90)
020A:B139  9A 90 0E FA 16			db	 9Ah, 90h, 0Eh,0FAh, 16h
020A:B13E  89 16 2EF4				mov	word ptr ds:[2EF4h],dx	; (9B68:2EF4=2020h)
020A:B142			loc_2010:
020A:B142  89 16 3796				mov	word ptr ds:[3796h],dx	; (9B68:3796=92h)
020A:B146			loc_2011:
020A:B146  A3 37A4				mov	word ptr ds:[37A4h],ax	; (9B68:37A4=0)
020A:B149  0B C0				or	ax,ax			; Zero ?
020A:B14B  75 3B				jnz	loc_2014		; Jump if not zero
020A:B14D  8A D3				mov	dl,bl
020A:B14F  80 E2 C7				and	dl,0C7h
020A:B152  80 FA 46				cmp	dl,46h			; 'F'
020A:B155  75 31				jne	loc_2014		; Jump if not equal
020A:B157  C6 06 2A53 02			mov	byte ptr ds:[2A53h],2	; (9B68:2A53=20h)
020A:B15C  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (9B68:2D8C=0AAh)
020A:B161  75 0A				jnz	loc_2012		; Jump if not zero
020A:B163  F6 C7 C0				test	bh,0C0h
020A:B166  74 05				jz	loc_2012		; Jump if zero
020A:B168  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:B168  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:B16D			loc_2012:
020A:B16D  80 3E 2A29 01			cmp	byte ptr ds:[2A29h],1	; (9B68:2A29=0A9h)
020A:B172  75 0C				jne	loc_2013		; Jump if not equal
020A:B174  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:B179  74 05				jz	loc_2013		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 380

020A:B17B  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:B17B  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:B180			loc_2013:
020A:B180  80 26 42BF FB			and	byte ptr ds:[42BFh],0FBh	; (9B68:42BF=0)
020A:B185  E9 0435				jmp	loc_2069		; (B5BD)
020A:B188			loc_2014:
020A:B188  C6 06 42B6 00			mov	byte ptr ds:[42B6h],0	; (9B68:42B6=0)
020A:B18D  F6 C3 38				test	bl,38h			; '8'
020A:B190  74 33				jz	loc_2017		; Jump if zero
020A:B192  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:B197  75 2C				jnz	loc_2017		; Jump if not zero
020A:B199  8A D3				mov	dl,bl
020A:B19B  80 E2 C7				and	dl,0C7h
020A:B19E  80 FA 06				cmp	dl,6
020A:B1A1  74 22				je	loc_2017		; Jump if equal
020A:B1A3  80 3E 2F0B 01			cmp	byte ptr ds:[2F0Bh],1	; (9B68:2F0B=2Eh)
020A:B1A8  74 16				je	loc_2016		; Jump if equal
020A:B1AA  F7 06 42CC 0080			test	word ptr ds:[42CCh],80h	; (9B68:42CC=0)
020A:B1B0  75 13				jnz	loc_2017		; Jump if not zero
020A:B1B2  39 06 2EC0				cmp	word ptr ds:[2EC0h],ax	; (9B68:2EC0=20A9h)
020A:B1B6  76 02				jbe	loc_2015		; Jump if below or =
020A:B1B8  EB 06				jmp	short loc_2016		; (B1C0)
020A:B1BA			loc_2015:
020A:B1BA  39 06 2EC2				cmp	word ptr ds:[2EC2h],ax	; (9B68:2EC2=0A4AEh)
020A:B1BE  73 05				jae	loc_2017		; Jump if above or =
020A:B1C0			loc_2016:
020A:B1C0  C6 06 42B6 01			mov	byte ptr ds:[42B6h],1	; (9B68:42B6=0)
020A:B1C5			loc_2017:
020A:B1C5  53					push	bx
020A:B1C6  8B 1E 3796				mov	bx,word ptr ds:[3796h]	; (9B68:3796=92h)
020A:B1CA  F7 06 42CC 0008			test	word ptr ds:[42CCh],8	; (9B68:42CC=0)
020A:B1D0  75 3C				jnz	loc_2021		; Jump if not zero
020A:B1D2  50					push	ax
020A:B1D3  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:B1D6  3D 0000				cmp	ax,0
020A:B1D9  75 03				jne	loc_2018		; Jump if not equal
020A:B1DB  E8 EA4B				call	sub_166			; (9C29)
020A:B1DE			loc_2018:
020A:B1DE  3B D8				cmp	bx,ax
020A:B1E0  72 26				jb	loc_2020		; Jump if below
020A:B1E2  8C C8				mov	ax,cs
020A:B1E4  03 06 263F				add	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:B1E8  3B D8				cmp	bx,ax
020A:B1EA  77 1C				ja	loc_2020		; Jump if above
020A:B1EC  F6 06 42C5 80			test	byte ptr ds:[42C5h],80h	; (9B68:42C5=0)
020A:B1F1  74 15				jz	loc_2020		; Jump if zero
020A:B1F3  5E					pop	si
020A:B1F4  56					push	si
020A:B1F5  8E C3				mov	es,bx
020A:B1F7  26: 83 3C 00				cmp	word ptr es:[si],0
020A:B1FB  74 06				je	loc_2019		; Jump if equal
020A:B1FD  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:B201  75 05				jne	loc_2020		; Jump if not equal
020A:B203			loc_2019:
020A:B203  C6 06 2F06 01			mov	byte ptr ds:[2F06h],1	; (9B68:2F06=0A1h)
020A:B208			loc_2020:
020A:B208  C6 06 42C5 00			mov	byte ptr ds:[42C5h],0	; (9B68:42C5=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 381

020A:B20D  58					pop	ax
020A:B20E			loc_2021:
020A:B20E  BA 0002				mov	dx,2
020A:B211  E8 DDC4				call	sub_143			; (8FD8)
020A:B214  9C					pushf				; Push flags
020A:B215  80 3E 42B6 00			cmp	byte ptr ds:[42B6h],0	; (9B68:42B6=0)
020A:B21A  74 3B				je	loc_2025		; Jump if equal
020A:B21C  9D					popf				; Pop flags
020A:B21D  9C					pushf				; Push flags
020A:B21E  73 0E				jnc	loc_2022		; Jump if carry=0
020A:B220  26: F6 45 07 20			test	byte ptr es:[di+7],20h	; ' '
020A:B225  74 07				jz	loc_2022		; Jump if zero
020A:B227  C6 06 42B6 00			mov	byte ptr ds:[42B6h],0	; (9B68:42B6=0)
020A:B22C  EB 29				jmp	short loc_2025		; (B257)
020A:B22E			loc_2022:
020A:B22E  9D					popf				; Pop flags
020A:B22F  5B					pop	bx
020A:B230  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (9B68:2D8C=0AAh)
020A:B235  75 05				jnz	loc_2023		; Jump if not zero
020A:B237  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:B237  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:B23C			loc_2023:
020A:B23C  80 3E 2A29 01			cmp	byte ptr ds:[2A29h],1	; (9B68:2A29=0A9h)
020A:B241  75 0C				jne	loc_2024		; Jump if not equal
020A:B243  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:B248  74 05				jz	loc_2024		; Jump if zero
020A:B24A  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:B24A  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:B24F			loc_2024:
020A:B24F  80 26 42BF FB			and	byte ptr ds:[42BFh],0FBh	; (9B68:42BF=0)
020A:B254  E9 0366				jmp	loc_2069		; (B5BD)
020A:B257			loc_2025:
020A:B257  80 3E 2639 02			cmp	byte ptr ds:[2639h],2	; (9B68:2639=0A0h)
020A:B25C  75 0D				jne	loc_2026		; Jump if not equal
020A:B25E  F6 06 430B 04			test	byte ptr ds:[430Bh],4	; (9B68:430B=0)
020A:B263  74 06				jz	loc_2026		; Jump if zero
020A:B265  BA 0002				mov	dx,2
020A:B268  E8 1509				call	sub_184			; (C774)
020A:B26B			loc_2026:
020A:B26B  9D					popf				; Pop flags
020A:B26C  5B					pop	bx
020A:B26D  72 03				jc	loc_2027		; Jump if carry Set
020A:B26F  E9 0102				jmp	loc_2042		; (B374)
020A:B272			loc_2027:
020A:B272  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:B277  75 22				jnz	loc_2029		; Jump if not zero
020A:B279  80 3E 2D93 02			cmp	byte ptr ds:[2D93h],2	; (0092:2D93=0)
020A:B27E  72 25				jb	loc_2031		; Jump if below
020A:B280  77 0F				ja	loc_2028		; Jump if above
020A:B282  BE 30B1				mov	si,30B1h
020A:B285  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:B285  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:B28A  C6 06 42C0 00			mov	byte ptr ds:[42C0h],0	; (0092:42C0=1Bh)
020A:B28F  EB 14				jmp	short loc_2031		; (B2A5)
020A:B291			loc_2028:
020A:B291  BE 30B9				mov	si,30B9h
020A:B294  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 382

020A:B294  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:B299  EB 05				jmp	short loc_2030		; (B2A0)
020A:B29B			loc_2029:
020A:B29B  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (0092:42B9=20h)
020A:B2A0			loc_2030:
020A:B2A0  C6 06 2A53 02			mov	byte ptr ds:[2A53h],2	; (0092:2A53=0)
020A:B2A5			loc_2031:
020A:B2A5  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (0092:263E=0C0h)
020A:B2AA  75 26				jne	loc_2033		; Jump if not equal
020A:B2AC  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:B2B1  75 1F				jnz	loc_2033		; Jump if not zero
020A:B2B3  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:B2B8  74 15				jz	loc_2032		; Jump if zero
020A:B2BA  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:B2BF  75 11				jnz	loc_2033		; Jump if not zero
020A:B2C1  80 3E 263D 04			cmp	byte ptr ds:[263Dh],4	; (0092:263D=8Eh)
020A:B2C6  76 0A				jbe	loc_2033		; Jump if below or =
020A:B2C8  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:B2CD  75 03				jnz	loc_2033		; Jump if not zero
020A:B2CF			loc_2032:
020A:B2CF  E9 0106				jmp	loc_2046		; (B3D8)
020A:B2D2			loc_2033:
020A:B2D2  26: F6 45 07 10			test	byte ptr es:[di+7],10h
020A:B2D7  74 6A				jz	loc_2040		; Jump if zero
020A:B2D9  26: 8A 65 04				mov	ah,es:[di+4]
020A:B2DD  80 E4 3F				and	ah,3Fh			; '?'
020A:B2E0  8A C7				mov	al,bh
020A:B2E2  24 F0				and	al,0F0h
020A:B2E4  A8 20				test	al,20h			; ' '
020A:B2E6  74 49				jz	loc_2038		; Jump if zero
020A:B2E8  26: 8B 4D 08				mov	cx,es:[di+8]
020A:B2EC  83 F9 0A				cmp	cx,0Ah
020A:B2EF  73 4F				jae	loc_2039		; Jump if above or =
020A:B2F1  3C F0				cmp	al,0F0h
020A:B2F3  75 08				jne	loc_2034		; Jump if not equal
020A:B2F5  26: C7 45 08 0008			mov	word ptr es:[di+8],8
020A:B2FB  EB 28				jmp	short loc_2037		; (B325)
020A:B2FD			loc_2034:
020A:B2FD  83 F9 08				cmp	cx,8
020A:B300  73 3E				jae	loc_2039		; Jump if above or =
020A:B302  3C E0				cmp	al,0E0h
020A:B304  75 08				jne	loc_2035		; Jump if not equal
020A:B306  26: C7 45 08 0006			mov	word ptr es:[di+8],6
020A:B30C  EB 17				jmp	short loc_2037		; (B325)
020A:B30E			loc_2035:
020A:B30E  83 F9 04				cmp	cx,4
020A:B311  73 2D				jae	loc_2039		; Jump if above or =
020A:B313  3C B0				cmp	al,0B0h
020A:B315  75 08				jne	loc_2036		; Jump if not equal
020A:B317  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:B31D  EB 06				jmp	short loc_2037		; (B325)
020A:B31F			loc_2036:
020A:B31F  26: C7 45 08 0002			mov	word ptr es:[di+8],2
020A:B325			loc_2037:
020A:B325  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:B32A  26: 80 4D 04 02			or	byte ptr es:[di+4],2
020A:B32F  EB 0F				jmp	short loc_2039		; (B340)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 383

020A:B331			loc_2038:
020A:B331  80 FC 01				cmp	ah,1
020A:B334  75 0A				jne	loc_2039		; Jump if not equal
020A:B336  3C 50				cmp	al,50h			; 'P'
020A:B338  75 06				jne	loc_2039		; Jump if not equal
020A:B33A  26: C7 45 08 000A			mov	word ptr es:[di+8],0Ah
020A:B340			loc_2039:
020A:B340  E9 00FC				jmp	loc_2050		; (B43F)
020A:B343			loc_2040:
020A:B343  F6 C7 20				test	bh,20h			; ' '
020A:B346  75 F8				jnz	loc_2039		; Jump if not zero
020A:B348  26: 8A 4D 04				mov	cl,es:[di+4]
020A:B34C  80 E1 3F				and	cl,3Fh			; '?'
020A:B34F  80 F9 21				cmp	cl,21h			; '!'
020A:B352  75 1D				jne	loc_2041		; Jump if not equal
020A:B354  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:B359  75 16				jnz	loc_2041		; Jump if not zero
020A:B35B  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:B360  72 0F				jb	loc_2041		; Jump if below
020A:B362  26: 83 65 08 FE			and	word ptr es:[di+8],0FFFEh
020A:B367  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:B36C  26: 80 4D 04 22			or	byte ptr es:[di+4],22h	; '"'
020A:B371			loc_2041:
020A:B371  E9 00CB				jmp	loc_2050		; (B43F)
020A:B374			loc_2042:
020A:B374  BF 472B				mov	di,472Bh
020A:B377  A1 3796				mov	ax,word ptr ds:[3796h]	; (0092:3796=9101h)
020A:B37A  89 05				mov	[di],ax
020A:B37C  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (0092:37A4=3046h)
020A:B37F  89 45 02				mov	[di+2],ax
020A:B382  C6 45 04 01				mov	byte ptr [di+4],1
020A:B386  C6 45 05 04				mov	byte ptr [di+5],4
020A:B38A  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (0092:14AD=0)
020A:B38F  77 04				ja	loc_2043		; Jump if above
020A:B391  80 4D 05 01				or	byte ptr [di+5],1
020A:B395			loc_2043:
020A:B395  C7 45 08 0001			mov	word ptr [di+8],1
020A:B39A  C7 45 06 0000			mov	word ptr [di+6],0
020A:B39F  80 4D 07 10				or	byte ptr [di+7],10h
020A:B3A3  F6 C7 20				test	bh,20h			; ' '
020A:B3A6  74 1E				jz	loc_2045		; Jump if zero
020A:B3A8  C7 45 08 0002			mov	word ptr [di+8],2
020A:B3AD  C6 45 04 02				mov	byte ptr [di+4],2
020A:B3B1  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (0092:2ECA=0)
020A:B3B6  75 05				jnz	loc_2044		; Jump if not zero
020A:B3B8  F6 C7 10				test	bh,10h
020A:B3BB  74 09				jz	loc_2045		; Jump if zero
020A:B3BD			loc_2044:
020A:B3BD  C7 45 08 0004			mov	word ptr [di+8],4
020A:B3C2  C6 45 04 04				mov	byte ptr [di+4],4
020A:B3C6			loc_2045:
020A:B3C6  E8 F897				call	sub_174			; (AC60)
020A:B3C9  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (D233:0006=0)
020A:B3CE  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B3D3  74 03				je	loc_2046		; Jump if equal
020A:B3D5  E9 019E				jmp	loc_2067		; (B576)
020A:B3D8			loc_2046:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 384

020A:B3D8  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (D233:42B9=72h)
020A:B3DD  C6 06 2A53 02			mov	byte ptr ds:[2A53h],2	; (D233:2A53=8Eh)
020A:B3E2  80 0E 42BF 10			or	byte ptr ds:[42BFh],10h	; (D233:42BF=8Ah)
020A:B3E7  80 26 42BF BF			and	byte ptr ds:[42BFh],0BFh	; (D233:42BF=8Ah)
020A:B3EC  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:B3F1  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:B3F1  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:B3F6  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=0BAh)
020A:B3FB  74 07				jz	loc_2047		; Jump if zero
020A:B3FD  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:B3FD  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:B402  EB 21				jmp	short loc_2049		; (B425)
020A:B404			loc_2047:
020A:B404  B0 53				mov	al,53h			; 'S'
020A:B406  9A 16FA:0FA8		;*		call	far ptr sub_251		;*(16FA:0FA8)
020A:B406  9A A8 0F FA 16			db	 9Ah,0A8h, 0Fh,0FAh, 16h
020A:B40B  72 02				jc	loc_2048		; Jump if carry Set
020A:B40D  B0 44				mov	al,44h			; 'D'
020A:B40F			loc_2048:
020A:B40F  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=28h)
020A:B413  3E: 88 46 00				mov	ds:[bp],al
020A:B417  45					inc	bp
020A:B418  B8 3A53				mov	ax,3A53h
020A:B41B  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=28h)
020A:B41F  3E: 89 46 00				mov	ds:[bp],ax
020A:B423  45					inc	bp
020A:B424  45					inc	bp
020A:B425			loc_2049:
020A:B425  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:B42A  45					inc	bp
020A:B42B  26: 8B 45 02				mov	ax,es:[di+2]
020A:B42F  53					push	bx
020A:B430  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:B430  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:B435  5B					pop	bx
020A:B436  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:B43B  45					inc	bp
020A:B43C  E9 0134				jmp	loc_2066		; (B573)
020A:B43F			loc_2050:
020A:B43F  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B444  75 32				jne	loc_2053		; Jump if not equal
020A:B446  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:B44B  75 2B				jnz	loc_2053		; Jump if not zero
020A:B44D  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:B452  75 24				jnz	loc_2053		; Jump if not zero
020A:B454  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:B459  75 1D				jnz	loc_2053		; Jump if not zero
020A:B45B  26: 8B 05				mov	ax,es:[di]
020A:B45E  3B 06 2D82				cmp	ax,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:B462  72 11				jb	loc_2052		; Jump if below
020A:B464  77 0A				ja	loc_2051		; Jump if above
020A:B466  26: 8B 45 02				mov	ax,es:[di+2]
020A:B46A  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (D233:2D84=0AC09h)
020A:B46E  72 05				jb	loc_2052		; Jump if below
020A:B470			loc_2051:
020A:B470  E8 1875				call	sub_192			; (CCE8)
020A:B473  72 03				jc	loc_2053		; Jump if carry Set
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 385

020A:B475			loc_2052:
020A:B475  E9 FF60				jmp	loc_2046		; (B3D8)
020A:B478			loc_2053:
020A:B478  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:B47D  75 5E				jnz	loc_2060		; Jump if not zero
020A:B47F  F6 06 2D8C 40			test	byte ptr ds:[2D8Ch],40h	; (D233:2D8C=0FFh) '@'
020A:B484  74 07				jz	loc_2054		; Jump if zero
020A:B486  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:B48B  74 50				jz	loc_2060		; Jump if zero
020A:B48D			loc_2054:
020A:B48D  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:B492  74 0B				jz	loc_2056		; Jump if zero
020A:B494  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (D233:2D8C=0FFh)
020A:B499  75 02				jnz	loc_2055		; Jump if not zero
020A:B49B  EB 40				jmp	short loc_2060		; (B4DD)
020A:B49D			loc_2055:
020A:B49D  EB 43				jmp	short loc_2061		; (B4E2)
020A:B49F			loc_2056:
020A:B49F  F6 C7 C0				test	bh,0C0h
020A:B4A2  74 3E				jz	loc_2061		; Jump if zero
020A:B4A4  26: 8A 45 04				mov	al,es:[di+4]
020A:B4A8  24 3F				and	al,3Fh			; '?'
020A:B4AA  8A E7				mov	ah,bh
020A:B4AC  80 E4 F0				and	ah,0F0h
020A:B4AF  80 FC 40				cmp	ah,40h			; '@'
020A:B4B2  75 0A				jne	loc_2057		; Jump if not equal
020A:B4B4  3C 01				cmp	al,1
020A:B4B6  74 2A				je	loc_2061		; Jump if equal
020A:B4B8  3C 21				cmp	al,21h			; '!'
020A:B4BA  74 26				je	loc_2061		; Jump if equal
020A:B4BC  EB 1F				jmp	short loc_2060		; (B4DD)
020A:B4BE			loc_2057:
020A:B4BE  80 FC A0				cmp	ah,0A0h
020A:B4C1  75 11				jne	loc_2058		; Jump if not equal
020A:B4C3  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (D233:2ECA=81h)
020A:B4C8  75 0F				jnz	loc_2059		; Jump if not zero
020A:B4CA  3C 02				cmp	al,2
020A:B4CC  74 14				je	loc_2061		; Jump if equal
020A:B4CE  3C 22				cmp	al,22h			; '"'
020A:B4D0  74 10				je	loc_2061		; Jump if equal
020A:B4D2  EB 09				jmp	short loc_2060		; (B4DD)
020A:B4D4			loc_2058:
020A:B4D4  80 FC B0				cmp	ah,0B0h
020A:B4D7  75 04				jne	loc_2060		; Jump if not equal
020A:B4D9			loc_2059:
020A:B4D9  3C 04				cmp	al,4
020A:B4DB  74 05				je	loc_2061		; Jump if equal
020A:B4DD			loc_2060:
020A:B4DD  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:B4DD  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:B4E2			loc_2061:
020A:B4E2  80 3E 2A29 01			cmp	byte ptr ds:[2A29h],1	; (D233:2A29=46h)
020A:B4E7  75 3B				jne	loc_2063		; Jump if not equal
020A:B4E9  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=0BAh)
020A:B4EE  74 07				jz	loc_2062		; Jump if zero
020A:B4F0  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:B4F0  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 386

020A:B4F5  EB 2D				jmp	short loc_2063		; (B524)
020A:B4F7			loc_2062:
020A:B4F7  80 3E 2A26 01			cmp	byte ptr ds:[2A26h],1	; (D233:2A26=0FCh)
020A:B4FC  74 26				je	loc_2063		; Jump if equal
020A:B4FE  80 3E 2D93 00			cmp	byte ptr ds:[2D93h],0	; (D233:2D93=0E8h)
020A:B503  75 5C				jne	loc_2065		; Jump if not equal
020A:B505  9A 16FA:0FA8		;*		call	far ptr sub_251		;*(16FA:0FA8)
020A:B505  9A A8 0F FA 16			db	 9Ah,0A8h, 0Fh,0FAh, 16h
020A:B50A  73 18				jnc	loc_2063		; Jump if carry=0
020A:B50C  B0 53				mov	al,53h			; 'S'
020A:B50E  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=28h)
020A:B512  3E: 88 46 00				mov	ds:[bp],al
020A:B516  45					inc	bp
020A:B517  3E: 88 46 00				mov	ds:[bp],al
020A:B51B  45					inc	bp
020A:B51C  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:B521  45					inc	bp
020A:B522  EB 3D				jmp	short loc_2065		; (B561)
020A:B524			loc_2063:
020A:B524  80 3E 2D93 00			cmp	byte ptr ds:[2D93h],0	; (D233:2D93=0E8h)
020A:B529  75 36				jne	loc_2065		; Jump if not equal
020A:B52B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:B530  74 2F				jz	loc_2065		; Jump if zero
020A:B532  80 3E 2F04 90			cmp	byte ptr ds:[2F04h],90h	; (D233:2F04=0E9h)
020A:B537  75 28				jne	loc_2065		; Jump if not equal
020A:B539  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B53E  75 21				jne	loc_2065		; Jump if not equal
020A:B540  B0 53				mov	al,53h			; 'S'
020A:B542  9A 16FA:0FA8		;*		call	far ptr sub_251		;*(16FA:0FA8)
020A:B542  9A A8 0F FA 16			db	 9Ah,0A8h, 0Fh,0FAh, 16h
020A:B547  72 02				jc	loc_2064		; Jump if carry Set
020A:B549  B0 44				mov	al,44h			; 'D'
020A:B54B			loc_2064:
020A:B54B  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=28h)
020A:B54F  3E: 88 46 00				mov	ds:[bp],al
020A:B553  45					inc	bp
020A:B554  B8 3A53				mov	ax,3A53h
020A:B557  0A 06 2EB8				or	al,byte ptr ds:[2EB8h]	; (D233:2EB8=28h)
020A:B55B  3E: 89 46 00				mov	ds:[bp],ax
020A:B55F  45					inc	bp
020A:B560  45					inc	bp
020A:B561			loc_2065:
020A:B561  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B566  75 0E				jne	loc_2067		; Jump if not equal
020A:B568  B9 000A				mov	cx,0Ah
020A:B56B  E8 D77E				call	sub_140			; (8CEC)
020A:B56E  80 26 42BF BF			and	byte ptr ds:[42BFh],0BFh	; (D233:42BF=8Ah)
020A:B573			loc_2066:
020A:B573  E8 DFF2				call	sub_146			; (9568)
020A:B576			loc_2067:
020A:B576  89 3E 2A8F				mov	word ptr ds:[2A8Fh],di	; (D233:2A8F=4AE8h)
020A:B57A  83 06 2A8F 04			add	word ptr ds:[2A8Fh],4	; (D233:2A8F=4AE8h)
020A:B57F  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (D233:263D=0E4h)
020A:B584  72 07				jb	loc_2068		; Jump if below
020A:B586  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (D233:2638=0ADh)
020A:B58B  72 30				jb	loc_2069		; Jump if below
020A:B58D			loc_2068:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 387

020A:B58D  A1 2DA8				mov	ax,word ptr ds:[2DA8h]	; (D233:2DA8=41E8h)
020A:B590  A3 2DAC				mov	word ptr ds:[2DACh],ax	; (D233:2DAC=3975h)
020A:B593  A1 2DAA				mov	ax,word ptr ds:[2DAAh]	; (D233:2DAA=700h)
020A:B596  A3 2DAE				mov	word ptr ds:[2DAEh],ax	; (D233:2DAE=0DB8Ch)
020A:B599  A1 2DA4				mov	ax,word ptr ds:[2DA4h]	; (D233:2DA4=1530h)
020A:B59C  A3 2DA8				mov	word ptr ds:[2DA8h],ax	; (D233:2DA8=41E8h)
020A:B59F  A1 2DA6				mov	ax,word ptr ds:[2DA6h]	; (D233:2DA6=70Eh)
020A:B5A2  A3 2DAA				mov	word ptr ds:[2DAAh],ax	; (D233:2DAA=700h)
020A:B5A5  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (D233:37A2=140Eh)
020A:B5A8  A3 2DA4				mov	word ptr ds:[2DA4h],ax	; (D233:2DA4=1530h)
020A:B5AB  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=3)
020A:B5AE  A3 2DA6				mov	word ptr ds:[2DA6h],ax	; (D233:2DA6=70Eh)
020A:B5B1  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B5B6  74 05				je	loc_2069		; Jump if equal
020A:B5B8  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:B5BD			loc_2069:
020A:B5BD  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:B5C2  5A					pop	dx
020A:B5C3  8E C2				mov	es,dx
020A:B5C5  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:B5CA  5A					pop	dx
020A:B5CB  75 0A				jnz	loc_2070		; Jump if not zero
020A:B5CD  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:B5D2  74 03				je	loc_2070		; Jump if equal
020A:B5D4  E8 E90D				call	sub_168			; (9EE4)
020A:B5D7			loc_2070:
020A:B5D7  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:B5DC  5F					pop	di
020A:B5DD  5E					pop	si
020A:B5DE  5A					pop	dx
020A:B5DF  5B					pop	bx
020A:B5E0  C3					retn
				sub_177		endp
  
020A:B5E1  87 DB				xchg	bx,bx
020A:B5E3  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_178		proc	near
020A:B5E4  50					push	ax
020A:B5E5  52					push	dx
020A:B5E6  56					push	si
020A:B5E7  57					push	di
020A:B5E8  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:B5ED  06					push	es
020A:B5EE  51					push	cx
020A:B5EF  C6 06 42B9 00			mov	byte ptr ds:[42B9h],0	; (D233:42B9=72h)
020A:B5F4  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:B5F9  74 05				je	loc_2071		; Jump if equal
020A:B5FB  BA 0001				mov	dx,1
020A:B5FE  EB 03				jmp	short loc_2072		; (B603)
020A:B600			loc_2071:
020A:B600  BA 0004				mov	dx,4
020A:B603			loc_2072:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 388

020A:B603  BF 0000				mov	di,0
020A:B606  80 3E 2639 02			cmp	byte ptr ds:[2639h],2	; (D233:2639=20h)
020A:B60B  75 37				jne	loc_2076		; Jump if not equal
020A:B60D  83 FA 04				cmp	dx,4
020A:B610  74 28				je	loc_2074		; Jump if equal
020A:B612  F6 06 430B 02			test	byte ptr ds:[430Bh],2	; (D233:430B=0FCh)
020A:B617  74 2B				jz	loc_2076		; Jump if zero
020A:B619  F6 06 430B 80			test	byte ptr ds:[430Bh],80h	; (D233:430B=0FCh)
020A:B61E  74 21				jz	loc_2075		; Jump if zero
020A:B620  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:B624  75 1B				jne	loc_2075		; Jump if not equal
020A:B626  52					push	dx
020A:B627  8B 16 2D84				mov	dx,word ptr ds:[2D84h]	; (D233:2D84=0AC09h)
020A:B62B  2B D0				sub	dx,ax
020A:B62D  73 02				jnc	loc_2073		; Jump if carry=0
020A:B62F  F7 D2				not	dx
020A:B631			loc_2073:
020A:B631  81 FA 0080				cmp	dx,80h
020A:B635  5A					pop	dx
020A:B636  72 0C				jc	loc_2076		; Jump if carry Set
020A:B638  EB 07				jmp	short loc_2075		; (B641)
020A:B63A			loc_2074:
020A:B63A  F6 06 430B 01			test	byte ptr ds:[430Bh],1	; (D233:430B=0FCh)
020A:B63F  74 03				jz	loc_2076		; Jump if zero
020A:B641			loc_2075:
020A:B641  E8 1130				call	sub_184			; (C774)
020A:B644			loc_2076:
020A:B644  E8 D991				call	sub_143			; (8FD8)
020A:B647  73 03				jnc	loc_2077		; Jump if carry=0
020A:B649  E9 011B				jmp	loc_2093		; (B767)
020A:B64C			loc_2077:
020A:B64C  83 3E 2A84 00			cmp	word ptr ds:[2A84h],0	; (0092:2A84=0)
020A:B651  75 35				jne	loc_2080		; Jump if not equal
020A:B653  06					push	es
020A:B654  57					push	di
020A:B655  50					push	ax
020A:B656  8E 06 2D82				mov	es,word ptr ds:[2D82h]	; (0092:2D82=0)
020A:B65A  8B 3E 2D84				mov	di,word ptr ds:[2D84h]	; (0092:2D84=0)
020A:B65E  26: 80 3D EB				cmp	byte ptr es:[di],0EBh
020A:B662  75 21				jne	loc_2079		; Jump if not equal
020A:B664  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (0092:2D84=0)
020A:B668  3D 0003				cmp	ax,3
020A:B66B  77 18				ja	loc_2079		; Jump if above
020A:B66D  3D 0002				cmp	ax,2
020A:B670  74 09				je	loc_2078		; Jump if equal
020A:B672  26: 80 7D 02 90			cmp	byte ptr es:[di+2],90h
020A:B677  74 02				je	loc_2078		; Jump if equal
020A:B679  EB 0A				jmp	short loc_2079		; (B685)
020A:B67B			loc_2078:
020A:B67B  58					pop	ax
020A:B67C  5F					pop	di
020A:B67D  07					pop	es
020A:B67E  C6 06 2A75 F5			mov	byte ptr ds:[2A75h],0F5h	; (0092:2A75=0)
020A:B683  EB 47				jmp	short loc_2083		; (B6CC)
020A:B685			loc_2079:
020A:B685  58					pop	ax
020A:B686  5F					pop	di
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 389

020A:B687  07					pop	es
020A:B688			loc_2080:
020A:B688  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (0092:263E=0C0h)
020A:B68D  74 3D				je	loc_2083		; Jump if equal
020A:B68F  BF 472B				mov	di,472Bh
020A:B692  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (0092:37A2=38Fh)
020A:B695  89 05				mov	[di],ax
020A:B697  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (0092:37A4=3046h)
020A:B69A  89 45 02				mov	[di+2],ax
020A:B69D  32 C9				xor	cl,cl			; Zero register
020A:B69F  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (0092:2A75=0) 'O'
020A:B6A4  74 03				je	loc_2081		; Jump if equal
020A:B6A6  E9 0095				jmp	loc_2090		; (B73E)
020A:B6A9			loc_2081:
020A:B6A9  C6 45 04 00				mov	byte ptr [di+4],0
020A:B6AD  C6 45 05 08				mov	byte ptr [di+5],8
020A:B6B1  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (0092:14AD=0)
020A:B6B6  77 04				ja	loc_2082		; Jump if above
020A:B6B8  C6 45 05 09				mov	byte ptr [di+5],9
020A:B6BC			loc_2082:
020A:B6BC  C6 45 06 00				mov	byte ptr [di+6],0
020A:B6C0  C6 45 32 00				mov	byte ptr [di+32h],0
020A:B6C4  C7 45 07 0000			mov	word ptr [di+7],0
020A:B6C9  E9 0089				jmp	loc_2092		; (B755)
020A:B6CC			loc_2083:
020A:B6CC  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (0092:37A4=3046h)
020A:B6CF  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (0092:2D84=0)
020A:B6D3  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (0092:2ED0=0)
020A:B6D6  C7 06 2ED2 0000			mov	word ptr ds:[2ED2h],0	; (0092:2ED2=0)
020A:B6DC  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:B6E1  45					inc	bp
020A:B6E2  E8 1BC3				call	sub_196			; (D2A8)
020A:B6E5  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (020A:42B9=0)
020A:B6EA  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (020A:37A4=1A06h)
020A:B6ED  2B 06 2A40				sub	ax,data_375		; (020A:2A40=0A8E0h)
020A:B6F1  3D 000F				cmp	ax,0Fh
020A:B6F4  77 02				ja	loc_2084		; Jump if above
020A:B6F6  EB 04				jmp	short loc_2085		; (B6FC)
020A:B6F8			loc_2084:
020A:B6F8  59					pop	cx
020A:B6F9  E9 027F				jmp	loc_2120		; (B97B)
020A:B6FC			loc_2085:
020A:B6FC  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (020A:2A75=0ADh) 'O'
020A:B701  74 37				je	loc_2089		; Jump if equal
020A:B703  A1 2D82				mov	ax,data_423		; (020A:2D82=5357h)
020A:B706  3B 06 37A2				cmp	ax,word ptr ds:[37A2h]	; (020A:37A2=806h)
020A:B70A  75 2E				jne	loc_2089		; Jump if not equal
020A:B70C  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (020A:37A4=1A06h)
020A:B70F  3D 0010				cmp	ax,10h
020A:B712  76 03				jbe	loc_2087		; Jump if below or =
020A:B714  2D 0010				sub	ax,10h
020A:B717			loc_2087:
020A:B717  3B 06 2A40				cmp	ax,data_375		; (020A:2A40=0A8E0h)
020A:B71B  73 1D				jae	loc_2089		; Jump if above or =
020A:B71D  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (020A:37A4=1A06h)
020A:B720  3B 06 2E7F				cmp	ax,word ptr ds:[2E7Fh]	; (020A:2E7F=454Ch)
020A:B724  76 14				jbe	loc_2089		; Jump if below or =
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 390

020A:B726  3D 0280				cmp	ax,280h
020A:B729  76 0C				jbe	loc_2088		; Jump if below or =
020A:B72B  2D 0280				sub	ax,280h
020A:B72E  3B 06 2D84				cmp	ax,data_424		; (020A:2D84=735Ch)
020A:B732  77 06				ja	loc_2089		; Jump if above
020A:B734  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (020A:37A4=1A06h)
020A:B737			loc_2088:
020A:B737  A3 2E7F				mov	word ptr ds:[2E7Fh],ax	; (020A:2E7F=454Ch)
020A:B73A			loc_2089:
020A:B73A  59					pop	cx
020A:B73B  E9 023D				jmp	loc_2120		; (B97B)
020A:B73E			loc_2090:
020A:B73E  C6 45 04 00				mov	byte ptr [di+4],0
020A:B742  C6 45 05 00				mov	byte ptr [di+5],0
020A:B746  80 3E 14AD 01			cmp	data_234,1		; (020A:14AD=0)
020A:B74B  77 04				ja	loc_2091		; Jump if above
020A:B74D  C6 45 05 01				mov	byte ptr [di+5],1
020A:B751			loc_2091:
020A:B751  C6 45 06 00				mov	byte ptr [di+6],0
020A:B755			loc_2092:
020A:B755  E8 F508				call	sub_174			; (AC60)
020A:B758  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (D233:0006=0)
020A:B75D  89 3E 42BC				mov	word ptr ds:[42BCh],di	; (D233:42BC=7705h)
020A:B761  E8 D078				call	sub_126			; (87DC)
020A:B764  E9 00B0				jmp	loc_2102		; (B817)
020A:B767			loc_2093:
020A:B767  89 3E 42BC				mov	word ptr ds:[42BCh],di	; (D233:42BC=7705h)
020A:B76B  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:B770  74 0A				jz	loc_2094		; Jump if zero
020A:B772  C6 06 2EB7 01			mov	byte ptr ds:[2EB7h],1	; (D233:2EB7=0B8h)
020A:B777  C6 06 42B7 01			mov	byte ptr ds:[42B7h],1	; (D233:42B7=3Ch)
020A:B77C			loc_2094:
020A:B77C  B9 003B				mov	cx,3Bh
020A:B77F  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:B784  74 3A				je	loc_2097		; Jump if equal
020A:B786  B9 0007				mov	cx,7
020A:B789  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:B78C  3B 06 37A2				cmp	ax,word ptr ds:[37A2h]	; (D233:37A2=140Eh)
020A:B790  75 2E				jne	loc_2097		; Jump if not equal
020A:B792  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=3)
020A:B795  3D 0010				cmp	ax,10h
020A:B798  76 03				jbe	loc_2095		; Jump if below or =
020A:B79A  2D 0010				sub	ax,10h
020A:B79D			loc_2095:
020A:B79D  3B 06 2A40				cmp	ax,word ptr ds:[2A40h]	; (D233:2A40=572h)
020A:B7A1  73 1D				jae	loc_2097		; Jump if above or =
020A:B7A3  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=3)
020A:B7A6  3B 06 2E7F				cmp	ax,word ptr ds:[2E7Fh]	; (D233:2E7F=0A2C3h)
020A:B7AA  76 14				jbe	loc_2097		; Jump if below or =
020A:B7AC  3D 0280				cmp	ax,280h
020A:B7AF  76 0C				jbe	loc_2096		; Jump if below or =
020A:B7B1  2D 0280				sub	ax,280h
020A:B7B4  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (D233:2D84=0AC09h)
020A:B7B8  77 06				ja	loc_2097		; Jump if above
020A:B7BA  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (D233:37A4=3)
020A:B7BD			loc_2096:
020A:B7BD  A3 2E7F				mov	word ptr ds:[2E7Fh],ax	; (D233:2E7F=0A2C3h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 391

020A:B7C0			loc_2097:
020A:B7C0  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B7C5  75 50				jne	loc_2102		; Jump if not equal
020A:B7C7  80 3E 3BEA 01			cmp	byte ptr ds:[3BEAh],1	; (D233:3BEA=58h)
020A:B7CC  75 22				jne	loc_2100		; Jump if not equal
020A:B7CE  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:B7D3  74 0C				je	loc_2098		; Jump if equal
020A:B7D5  26: 8A 45 05				mov	al,es:[di+5]
020A:B7D9  24 30				and	al,30h			; '0'
020A:B7DB  3C 30				cmp	al,30h			; '0'
020A:B7DD  75 11				jne	loc_2100		; Jump if not equal
020A:B7DF  EB 07				jmp	short loc_2099		; (B7E8)
020A:B7E1			loc_2098:
020A:B7E1  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020A:B7E6  74 08				jz	loc_2100		; Jump if zero
020A:B7E8			loc_2099:
020A:B7E8  BE 3091				mov	si,3091h
020A:B7EB  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:B7EB  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:B7F0			loc_2100:
020A:B7F0  E8 D4F9				call	sub_140			; (8CEC)
020A:B7F3  81 FD 27CA				cmp	bp,27CAh
020A:B7F7  72 1E				jb	loc_2102		; Jump if below
020A:B7F9  81 FD 2853				cmp	bp,2853h
020A:B7FD  73 18				jae	loc_2102		; Jump if above or =
020A:B7FF  80 3E 282C 28			cmp	byte ptr ds:[282Ch],28h	; (D233:282C=0Dh) '('
020A:B804  74 11				je	loc_2102		; Jump if equal
020A:B806  F6 06 14AD 02			test	byte ptr ds:[14ADh],2	; (D233:14AD=20h)
020A:B80B  74 07				jz	loc_2101		; Jump if zero
020A:B80D  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:B812  74 03				jz	loc_2102		; Jump if zero
020A:B814			loc_2101:
020A:B814  E8 0BD1				call	sub_181			; (C3E8)
020A:B817			loc_2102:
020A:B817  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:B81C  74 03				je	loc_2103		; Jump if equal
020A:B81E  E9 00E7				jmp	loc_2114		; (B908)
020A:B821			loc_2103:
020A:B821  59					pop	cx
020A:B822  51					push	cx
020A:B823  F6 C1 02				test	cl,2
020A:B826  74 0E				jz	loc_2105		; Jump if zero
020A:B828  26: 8A 45 04				mov	al,es:[di+4]
020A:B82C  24 07				and	al,7
020A:B82E  74 03				jz	loc_2104		; Jump if zero
020A:B830  E9 00D5				jmp	loc_2114		; (B908)
020A:B833			loc_2104:
020A:B833  E9 0096				jmp	loc_2110		; (B8CC)
020A:B836			loc_2105:
020A:B836  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:B83B  75 12				jnz	loc_2107		; Jump if not zero
020A:B83D  F7 06 42CC 0400			test	word ptr ds:[42CCh],400h	; (D233:42CC=0C1FFh)
020A:B843  74 03				jz	loc_2106		; Jump if zero
020A:B845  E9 0084				jmp	loc_2110		; (B8CC)
020A:B848			loc_2106:
020A:B848  80 3E 2C40 01			cmp	byte ptr ds:[2C40h],1	; (D233:2C40=8Bh)
020A:B84D  74 7D				je	loc_2110		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 392

020A:B84F			loc_2107:
020A:B84F  26: 8B 05				mov	ax,es:[di]
020A:B852  A3 2D94				mov	word ptr ds:[2D94h],ax	; (D233:2D94=8E4h)
020A:B855  26: 8B 45 02				mov	ax,es:[di+2]
020A:B859  A3 2D96				mov	word ptr ds:[2D96h],ax	; (D233:2D96=0FABAh)
020A:B85C  80 0E 2D8D 02			or	byte ptr ds:[2D8Dh],2	; (D233:2D8D=5Ch)
020A:B861  C7 06 2DB2 FFFF			mov	word ptr ds:[2DB2h],0FFFFh	; (D233:2DB2=48Ah)
020A:B867  26: 8A 45 32				mov	al,es:[di+32h]
020A:B86B  24 38				and	al,38h			; '8'
020A:B86D  3C 38				cmp	al,38h			; '8'
020A:B86F  75 5B				jne	loc_2110		; Jump if not equal
020A:B871  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:B876  74 05				jz	loc_2108		; Jump if zero
020A:B878  C6 06 47B4 01			mov	byte ptr ds:[47B4h],1	; (D233:47B4=0C0h)
020A:B87D			loc_2108:
020A:B87D  C6 06 2D8D 05			mov	byte ptr ds:[2D8Dh],5	; (D233:2D8D=5Ch)
020A:B882  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:B887  75 43				jne	loc_2110		; Jump if not equal
020A:B889  51					push	cx
020A:B88A  57					push	di
020A:B88B  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:B890  06					push	es
020A:B891  E8 E37A				call	sub_162			; (9C0E)
020A:B894  55					push	bp
020A:B895  E8 DDEC				call	sub_147			; (9684)
020A:B898  8B FD				mov	di,bp
020A:B89A  5D					pop	bp
020A:B89B  BE 3760				mov	si,3760h
020A:B89E  B9 3778				mov	cx,3778h
020A:B8A1  81 E9 375E				sub	cx,375Eh
020A:B8A5  83 E9 02				sub	cx,2
020A:B8A8  FC					cld				; Clear direction
020A:B8A9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B8AB  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:B8B0  5A					pop	dx
020A:B8B1  8E C2				mov	es,dx
020A:B8B3  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:B8B8  5A					pop	dx
020A:B8B9  75 0A				jnz	loc_2109		; Jump if not zero
020A:B8BB  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:B8C0  74 03				je	loc_2109		; Jump if equal
020A:B8C2  E8 E61F				call	sub_168			; (9EE4)
020A:B8C5			loc_2109:
020A:B8C5  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:B8CA  5F					pop	di
020A:B8CB  59					pop	cx
020A:B8CC			loc_2110:
020A:B8CC  26: 8A 45 04				mov	al,es:[di+4]
020A:B8D0  A8 01				test	al,1
020A:B8D2  74 04				jz	loc_2111		; Jump if zero
020A:B8D4  A8 02				test	al,2
020A:B8D6  75 14				jnz	loc_2112		; Jump if not zero
020A:B8D8			loc_2111:
020A:B8D8  0C 03				or	al,3
020A:B8DA  26: 88 45 04				mov	es:[di+4],al
020A:B8DE  57					push	di
020A:B8DF  83 C7 09				add	di,9
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 393

020A:B8E2  BE 2ED4				mov	si,2ED4h
020A:B8E5  B9 0029				mov	cx,29h
020A:B8E8  FC					cld				; Clear direction
020A:B8E9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B8EB  5F					pop	di
020A:B8EC			loc_2112:
020A:B8EC  26: 8A 45 32				mov	al,es:[di+32h]
020A:B8F0  A8 80				test	al,80h
020A:B8F2  74 08				jz	loc_2113		; Jump if zero
020A:B8F4  26: 8B 4D 33				mov	cx,es:[di+33h]
020A:B8F8  89 0E 2EF4				mov	word ptr ds:[2EF4h],cx	; (9B68:2EF4=2020h)
020A:B8FC			loc_2113:
020A:B8FC  A8 40				test	al,40h			; '@'
020A:B8FE  74 08				jz	loc_2114		; Jump if zero
020A:B900  26: 8B 4D 35				mov	cx,es:[di+35h]
020A:B904  89 0E 2EF2				mov	word ptr ds:[2EF2h],cx	; (9B68:2EF2=2020h)
020A:B908			loc_2114:
020A:B908  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (9B68:263D=0AEh)
020A:B90D  72 07				jb	loc_2115		; Jump if below
020A:B90F  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (9B68:2638=0E0h)
020A:B914  72 13				jb	loc_2117		; Jump if below
020A:B916			loc_2115:
020A:B916  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:B91B  74 07				je	loc_2116		; Jump if equal
020A:B91D  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:B922  75 05				jnz	loc_2117		; Jump if not zero
020A:B924			loc_2116:
020A:B924  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:B929			loc_2117:
020A:B929  59					pop	cx
020A:B92A  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:B92F  75 0C				jne	loc_2118		; Jump if not equal
020A:B931  F6 C1 01				test	cl,1
020A:B934  74 45				jz	loc_2120		; Jump if zero
020A:B936  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:B93B  EB 3E				jmp	short loc_2120		; (B97B)
020A:B93D			loc_2118:
020A:B93D  F6 C1 04				test	cl,4
020A:B940  75 18				jnz	loc_2119		; Jump if not zero
020A:B942  A1 2D9C				mov	ax,word ptr ds:[2D9Ch]	; (9B68:2D9C=0ADA8h)
020A:B945  A3 2DA0				mov	word ptr ds:[2DA0h],ax	; (9B68:2DA0=0AF20h)
020A:B948  A1 2D9E				mov	ax,word ptr ds:[2D9Eh]	; (9B68:2D9E=0AEADh)
020A:B94B  A3 2DA2				mov	word ptr ds:[2DA2h],ax	; (9B68:2DA2=0A8E0h)
020A:B94E  A1 2D98				mov	ax,word ptr ds:[2D98h]	; (9B68:2D98=0A820h)
020A:B951  A3 2D9C				mov	word ptr ds:[2D9Ch],ax	; (9B68:2D9C=0ADA8h)
020A:B954  A1 2D9A				mov	ax,word ptr ds:[2D9Ah]	; (9B68:2D9A=0E2E1h)
020A:B957  A3 2D9E				mov	word ptr ds:[2D9Eh],ax	; (9B68:2D9E=0AEADh)
020A:B95A			loc_2119:
020A:B95A  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (9B68:37A2=92E5h)
020A:B95D  A3 2D98				mov	word ptr ds:[2D98h],ax	; (9B68:2D98=0A820h)
020A:B960  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:B963  A3 2D9A				mov	word ptr ds:[2D9Ah],ax	; (9B68:2D9A=0E2E1h)
020A:B966  89 3E 42BA				mov	word ptr ds:[42BAh],di	; (9B68:42BA=0)
020A:B96A  F6 C1 08				test	cl,8
020A:B96D  74 0C				jz	loc_2120		; Jump if zero
020A:B96F  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:B974  75 05				jnz	loc_2120		; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 394

020A:B976  26: C6 45 06 FF			mov	byte ptr es:[di+6],0FFh
020A:B97B			loc_2120:
020A:B97B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:B980  5A					pop	dx
020A:B981  8E C2				mov	es,dx
020A:B983  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:B988  5A					pop	dx
020A:B989  75 0A				jnz	loc_2121		; Jump if not zero
020A:B98B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:B990  74 03				je	loc_2121		; Jump if equal
020A:B992  E8 E54F				call	sub_168			; (9EE4)
020A:B995			loc_2121:
020A:B995  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:B99A  5F					pop	di
020A:B99B  5E					pop	si
020A:B99C  5A					pop	dx
020A:B99D  58					pop	ax
020A:B99E  C3					retn
				sub_178		endp
  
020A:B99F  00 00				add	[bx+si],al
020A:B9A1  00 00				add	[bx+si],al
020A:B9A3  00 B4 E804				add	data_830[si],dh		; (020A:E804=93h)
020A:B9A7  EF					out	dx,ax			; port 0, DMA-1 bas&add ch 0
020A:B9A8  CD E8				int	0E8h
020A:B9AA  84 CA				test	cl,dl
020A:B9AC  E8 E25F				call	sub_162			; (9C0E)
020A:B9AF  E8 E277				call	sub_166			; (9C29)
020A:B9B2  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:B9B7  74 03				je	loc_2122		; Jump if equal
020A:B9B9  A1 2A22				mov	ax,word ptr ds:[2A22h]	; (9B68:2A22=0AEADh)
020A:B9BC			loc_2122:
020A:B9BC  A3 2A24				mov	word ptr ds:[2A24h],ax	; (9B68:2A24=0AEA3h)
020A:B9BF  E8 138A				call	sub_193			; (CD4C)
020A:B9C2  A1 278F				mov	ax,word ptr ds:[278Fh]	; (9B68:278F=0A0Dh)
020A:B9C5  3D 0000				cmp	ax,0
020A:B9C8  75 0D				jne	loc_2123		; Jump if not equal
020A:B9CA  83 3E 278D 00			cmp	word ptr ds:[278Dh],0	; (9B68:278D=0A0Dh)
020A:B9CF  75 06				jne	loc_2123		; Jump if not equal
020A:B9D1  B8 0002				mov	ax,2
020A:B9D4  E9 08D5				jmp	loc_2201		; (C2AC)
020A:B9D7			loc_2123:
020A:B9D7  8B D8				mov	bx,ax
020A:B9D9  83 E3 F0				and	bx,0FFF0h
020A:B9DC  C6 06 1C42 41			mov	byte ptr ds:[1C42h],41h	; (9B68:1C42=0A5h) 'A'
020A:B9E1  74 02				jz	loc_2124		; Jump if zero
020A:B9E3  EB 77				jmp	short loc_2127		; (BA5C)
020A:B9E5			loc_2124:
020A:B9E5  B1 0C				mov	cl,0Ch
020A:B9E7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:B9E9  8B 1E 278D				mov	bx,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:B9ED  B1 04				mov	cl,4
020A:B9EF  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:B9F1  03 D8				add	bx,ax
020A:B9F3  43					inc	bx
020A:B9F4  43					inc	bx
020A:B9F5  83 FB 01				cmp	bx,1
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 395

020A:B9F8  C6 06 1C42 42			mov	byte ptr ds:[1C42h],42h	; (9B68:1C42=0A5h) 'B'
020A:B9FD  76 5D				jbe	loc_2127		; Jump if below or =
020A:B9FF  8B D3				mov	dx,bx
020A:BA01  E8 E225				call	sub_166			; (9C29)
020A:BA04  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:BA09  74 03				je	loc_2125		; Jump if equal
020A:BA0B  A1 2A22				mov	ax,word ptr ds:[2A22h]	; (9B68:2A22=0AEADh)
020A:BA0E			loc_2125:
020A:BA0E  8C C9				mov	cx,cs
020A:BA10  2B C1				sub	ax,cx
020A:BA12  8B 0E 263F				mov	cx,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:BA16  2B C8				sub	cx,ax
020A:BA18  72 42				jc	loc_2127		; Jump if carry Set
020A:BA1A  83 E9 20				sub	cx,20h
020A:BA1D  72 3D				jc	loc_2127		; Jump if carry Set
020A:BA1F  3B CA				cmp	cx,dx
020A:BA21  76 39				jbe	loc_2127		; Jump if below or =
020A:BA23  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:BA28  75 38				jne	loc_2128		; Jump if not equal
020A:BA2A  B8 FFFF				mov	ax,0FFFFh
020A:BA2D  2D 1064				sub	ax,1064h
020A:BA30  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:BA32  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:BA34  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:BA36  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:BA38  2B CA				sub	cx,dx
020A:BA3A  3B C8				cmp	cx,ax
020A:BA3C  73 02				jae	loc_2126		; Jump if above or =
020A:BA3E  8B C1				mov	ax,cx
020A:BA40			loc_2126:
020A:BA40  01 06 2A24				add	word ptr ds:[2A24h],ax	; (9B68:2A24=0AEA3h)
020A:BA44  E8 E1DF				call	sub_165			; (9C26)
020A:BA47  8B D8				mov	bx,ax
020A:BA49  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:BA4C  2B C3				sub	ax,bx
020A:BA4E  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:BA50  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:BA52  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:BA54  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:BA56  48					dec	ax
020A:BA57  A3 430E				mov	word ptr ds:[430Eh],ax	; (9B68:430E=0)
020A:BA5A  EB 06				jmp	short loc_2128		; (BA62)
020A:BA5C			loc_2127:
020A:BA5C  B8 0008				mov	ax,8
020A:BA5F  E9 084A				jmp	loc_2201		; (C2AC)
020A:BA62			loc_2128:
020A:BA62  8B 1E 263F				mov	bx,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:BA66  8E 06 48E1				mov	es,word ptr ds:[48E1h]	; (9B68:48E1=99h)
020A:BA6A  B4 4A				mov	ah,4Ah			; 'J'
020A:BA6C  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
020A:BA6E  73 07				jnc	loc_2129		; Jump if carry=0
020A:BA70  C6 06 1C42 44			mov	byte ptr ds:[1C42h],44h	; (9B68:1C42=0A5h) 'D'
020A:BA75  EB E5				jmp	short loc_2127		; (BA5C)
020A:BA77			loc_2129:
020A:BA77  8C C8				mov	ax,cs
020A:BA79  03 06 263F				add	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 396

020A:BA7D  2D 0010				sub	ax,10h
020A:BA80  8B D0				mov	dx,ax
020A:BA82  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:BA85  8E C0				mov	es,ax
020A:BA87  2B D0				sub	dx,ax
020A:BA89			loc_2130:
020A:BA89  8B C2				mov	ax,dx
020A:BA8B  25 F000				and	ax,0F000h
020A:BA8E  74 17				jz	loc_2131		; Jump if zero
020A:BA90  81 EA 1000				sub	dx,1000h
020A:BA94  B9 8000				mov	cx,8000h
020A:BA97  33 FF				xor	di,di			; Zero register
020A:BA99  33 C0				xor	ax,ax			; Zero register
020A:BA9B  FC					cld				; Clear direction
020A:BA9C  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:BA9E  8C C0				mov	ax,es
020A:BAA0  05 1000				add	ax,1000h
020A:BAA3  8E C0				mov	es,ax
020A:BAA5  EB E2				jmp	short loc_2130		; (BA89)
020A:BAA7			loc_2131:
020A:BAA7  B1 03				mov	cl,3
020A:BAA9  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:BAAB  8B CA				mov	cx,dx
020A:BAAD  33 FF				xor	di,di			; Zero register
020A:BAAF  33 C0				xor	ax,ax			; Zero register
020A:BAB1  FC					cld				; Clear direction
020A:BAB2  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:BAB4  C7 06 263B 0040			mov	word ptr ds:[263Bh],40h	; (9B68:263B=0E120h)
020A:BABA  9A 16FA:0704		;*		call	far ptr sub_244		;*(16FA:0704)
020A:BABA  9A 04 07 FA 16			db	 9Ah, 04h, 07h,0FAh, 16h
020A:BABF  E8 E14C				call	sub_162			; (9C0E)
020A:BAC2  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:BAC5  05 0010				add	ax,10h
020A:BAC8  A3 26D6				mov	word ptr ds:[26D6h],ax	; (9B68:26D6=0A2AEh)
020A:BACB  C7 06 26D8 0000			mov	word ptr ds:[26D8h],0	; (9B68:26D8=0AD20h)
020A:BAD1  80 3E 2C3F 03			cmp	byte ptr ds:[2C3Fh],3	; (9B68:2C3F=0ABh)
020A:BAD6  75 03				jne	loc_2132		; Jump if not equal
020A:BAD8  A3 26D8				mov	word ptr ds:[26D8h],ax	; (9B68:26D8=0AD20h)
020A:BADB			loc_2132:
020A:BADB  FA					cli				; Disable interrupts
020A:BADC  2E: 8C 16 6952			mov	cs:data_691,ss		; (020A:6952=2A79h)
020A:BAE1  2E: 89 26 6950			mov	cs:data_690,sp		; (020A:6950=368Ah)
020A:BAE6  BC 0258				mov	sp,258h
020A:BAE9  FB					sti				; Enable interrupts
020A:BAEA  BA 2BB2				mov	dx,2BB2h
020A:BAED  BB 26D6				mov	bx,26D6h
020A:BAF0  B0 03				mov	al,3
020A:BAF2  B4 4B				mov	ah,4Bh			; 'K'
020A:BAF4  CD 21				int	21h			; DOS Services  ah=function 4Bh
										;  run progm @ds:dx, parm @es:bx
020A:BAF6  FA					cli				; Disable interrupts
020A:BAF7  2E: 8E 16 6952			mov	ss,cs:data_691		; (020A:6952=2A79h)
020A:BAFC  2E: 8B 26 6950			mov	sp,cs:data_690		; (020A:6950=368Ah)
020A:BB01  FB					sti				; Enable interrupts
020A:BB02  9C					pushf				; Push flags
020A:BB03  E8 E108				call	sub_162			; (9C0E)
020A:BB06  E8 E0F0				call	sub_157			; (9BF9)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 397

020A:BB09  9D					popf				; Pop flags
020A:BB0A  73 08				jnc	loc_2133		; Jump if carry=0
020A:BB0C  C6 06 1C42 45			mov	byte ptr ds:[1C42h],45h	; (9B68:1C42=0A5h) 'E'
020A:BB11  E9 0798				jmp	loc_2201		; (C2AC)
020A:BB14			loc_2133:
020A:BB14  C7 06 263B 0041			mov	word ptr ds:[263Bh],41h	; (9B68:263B=0E120h)
020A:BB1A  9A 16FA:0704		;*		call	far ptr sub_244		;*(16FA:0704)
020A:BB1A  9A 04 07 FA 16			db	 9Ah, 04h, 07h,0FAh, 16h
020A:BB1F  C6 06 48DD 01			mov	byte ptr ds:[48DDh],1	; (9B68:48DD=95h)
020A:BB24  A1 2A24				mov	ax,word ptr ds:[2A24h]	; (9B68:2A24=0AEA3h)
020A:BB27  05 0010				add	ax,10h
020A:BB2A  A3 2A20				mov	word ptr ds:[2A20h],ax	; (9B68:2A20=0E2A5h)
020A:BB2D  80 3E 2A1E 03			cmp	byte ptr ds:[2A1Eh],3	; (9B68:2A1E=0A0h)
020A:BB32  74 21				je	loc_2134		; Jump if equal
020A:BB34  80 3E 2A2B 00			cmp	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:BB39  74 1D				je	loc_2135		; Jump if equal
020A:BB3B  E8 E0C7				call	sub_159			; (9C05)
020A:BB3E  C6 06 2A2B 00			mov	byte ptr ds:[2A2Bh],0	; (9B68:2A2B=0A0h)
020A:BB43  C6 06 2A26 00			mov	byte ptr ds:[2A26h],0	; (9B68:2A26=20h)
020A:BB48  BF 0000				mov	di,0
020A:BB4B  B9 1482				mov	cx,1482h
020A:BB4E  B0 FF				mov	al,0FFh
020A:BB50  FC					cld				; Clear direction
020A:BB51  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:BB53  EB 03				jmp	short loc_2135		; (BB58)
020A:BB55			loc_2134:
020A:BB55  E9 0656				jmp	loc_2192		; (C1AE)
020A:BB58			loc_2135:
020A:BB58  BB 0000				mov	bx,0
020A:BB5B  80 3E 2C3F 03			cmp	byte ptr ds:[2C3Fh],3	; (9B68:2C3F=0ABh)
020A:BB60  75 03				jne	loc_2136		; Jump if not equal
020A:BB62  E9 00DE				jmp	loc_2144		; (BC43)
020A:BB65			loc_2136:
020A:BB65  E8 E0A9				call	sub_163			; (9C11)
020A:BB68  26: 80 3E 0BE3 E9			cmp	byte ptr es:[0BE3h],0E9h	; (BEA3:0BE3=7)
020A:BB6E  75 3B				jne	loc_2137		; Jump if not equal
020A:BB70  BE 3BDA				mov	si,3BDAh
020A:BB73  BF 0BE6				mov	di,0BE6h
020A:BB76  B9 3BE9				mov	cx,3BE9h
020A:BB79  81 E9 3BDA				sub	cx,3BDAh
020A:BB7D  FC					cld				; Clear direction
020A:BB7E  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:BB80  83 F9 00				cmp	cx,0
020A:BB83  75 26				jne	loc_2137		; Jump if not equal
020A:BB85  53					push	bx
020A:BB86  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:BB8A  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:BB8D  88 47 52				mov	[bx+52h],al
020A:BB90  B4 2D				mov	ah,2Dh			; '-'
020A:BB92  E8 CC03				call	sub_125			; (8798)
020A:BB95  E8 C898		;*		call	sub_116			;*(8430)
020A:BB95  E8 98 C8				db	0E8h, 98h,0C8h
020A:BB98  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:BB98  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:BB9D  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:BBA1  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:BBA5  5B					pop	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 398

020A:BBA6  C6 06 3BE9 01			mov	byte ptr ds:[3BE9h],1	; (9B68:3BE9=0)
020A:BBAB			loc_2137:
020A:BBAB  C7 06 2A1A 0002			mov	word ptr ds:[2A1Ah],2	; (9B68:2A1A=0E3AAh)
020A:BBB1  80 3E 2C40 02			cmp	byte ptr ds:[2C40h],2	; (9B68:2C40=0E3h)
020A:BBB6  74 0E				je	loc_2138		; Jump if equal
020A:BBB8  80 3E 2C40 04			cmp	byte ptr ds:[2C40h],4	; (9B68:2C40=0E3h)
020A:BBBD  74 07				je	loc_2138		; Jump if equal
020A:BBBF  80 3E 2C40 05			cmp	byte ptr ds:[2C40h],5	; (9B68:2C40=0E3h)
020A:BBC4  75 17				jne	loc_2139		; Jump if not equal
020A:BBC6			loc_2138:
020A:BBC6  9A 16FA:1294		;*		call	far ptr sub_262		;*(16FA:1294)
020A:BBC6  9A 94 12 FA 16			db	 9Ah, 94h, 12h,0FAh, 16h
020A:BBCB  73 10				jnc	loc_2139		; Jump if carry=0
020A:BBCD  C6 06 2C40 05			mov	byte ptr ds:[2C40h],5	; (9B68:2C40=0E3h)
020A:BBD2  9A 16FA:066C		;*		call	far ptr sub_242		;*(16FA:066C)
020A:BBD2  9A 6C 06 FA 16			db	 9Ah, 6Ch, 06h,0FAh, 16h
020A:BBD7  C7 06 2A1A 000A			mov	word ptr ds:[2A1Ah],0Ah	; (9B68:2A1A=0E3AAh)
020A:BBDD			loc_2139:
020A:BBDD  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BBE0  80 3E 2C40 02			cmp	byte ptr ds:[2C40h],2	; (9B68:2C40=0E3h)
020A:BBE5  75 06				jne	loc_2140		; Jump if not equal
020A:BBE7  2D 0010				sub	ax,10h
020A:BBEA  A3 2A20				mov	word ptr ds:[2A20h],ax	; (9B68:2A20=0E2A5h)
020A:BBED			loc_2140:
020A:BBED  E8 E015				call	sub_159			; (9C05)
020A:BBF0  26: 89 07				mov	es:[bx],ax
020A:BBF3  26: 89 47 06				mov	es:[bx+6],ax
020A:BBF7  26: 89 47 08				mov	es:[bx+8],ax
020A:BBFB  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:BC00  A3 2A4C				mov	word ptr ds:[2A4Ch],ax	; (9B68:2A4C=0E1AAh)
020A:BC03  33 C0				xor	ax,ax			; Zero register
020A:BC05  80 3E 2C40 02			cmp	byte ptr ds:[2C40h],2	; (9B68:2C40=0E3h)
020A:BC0A  75 09				jne	loc_2141		; Jump if not equal
020A:BC0C  B8 0100				mov	ax,100h
020A:BC0F  C7 06 2A1A 0102			mov	word ptr ds:[2A1Ah],102h	; (9B68:2A1A=0E3AAh)
020A:BC15			loc_2141:
020A:BC15  26: 89 47 02				mov	es:[bx+2],ax
020A:BC19  83 3E 278F 00			cmp	word ptr ds:[278Fh],0	; (9B68:278F=0A0Dh)
020A:BC1E  75 12				jne	loc_2143		; Jump if not equal
020A:BC20  03 06 278D				add	ax,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:BC24  83 3E 278D 00			cmp	word ptr ds:[278Dh],0	; (9B68:278D=0A0Dh)
020A:BC29  75 06				jne	loc_2142		; Jump if not equal
020A:BC2B  B8 0002				mov	ax,2
020A:BC2E  E9 067B				jmp	loc_2201		; (C2AC)
020A:BC31			loc_2142:
020A:BC31  48					dec	ax
020A:BC32			loc_2143:
020A:BC32  26: 89 47 04				mov	es:[bx+4],ax
020A:BC36  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:BC3C  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BC40  E9 056B				jmp	loc_2192		; (C1AE)
020A:BC43			loc_2144:
020A:BC43  C7 06 263B 0042			mov	word ptr ds:[263Bh],42h	; (9B68:263B=0E120h)
020A:BC49  9A 16FA:0704		;*		call	far ptr sub_244		;*(16FA:0704)
020A:BC49  9A 04 07 FA 16			db	 9Ah, 04h, 07h,0FAh, 16h
020A:BC4E  8B FB				mov	di,bx
020A:BC50  C7 06 2A1A 0002			mov	word ptr ds:[2A1Ah],2	; (9B68:2A1A=0E3AAh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 399

020A:BC56  9A 16FA:1294		;*		call	far ptr sub_262		;*(16FA:1294)
020A:BC56  9A 94 12 FA 16			db	 9Ah, 94h, 12h,0FAh, 16h
020A:BC5B  73 0F				jnc	loc_2145		; Jump if carry=0
020A:BC5D  C6 06 2C40 05			mov	byte ptr ds:[2C40h],5	; (9B68:2C40=0E3h)
020A:BC62  C6 06 1422 01			mov	byte ptr ds:[1422h],1	; (9B68:1422=0A0h)
020A:BC67  9A 16FA:066C		;*		call	far ptr sub_242		;*(16FA:066C)
020A:BC67  9A 6C 06 FA 16			db	 9Ah, 6Ch, 06h,0FAh, 16h
020A:BC6C			loc_2145:
020A:BC6C  E8 DFA2				call	sub_163			; (9C11)
020A:BC6F  26: 81 3E 0BE3 5A4D			cmp	word ptr es:[0BE3h],5A4Dh	; (BEA3:0BE3=2007h)
020A:BC76  74 06				je	loc_2146		; Jump if equal
020A:BC78  B8 0014				mov	ax,14h
020A:BC7B  E9 062E				jmp	loc_2201		; (C2AC)
020A:BC7E			loc_2146:
020A:BC7E  33 C0				xor	ax,ax			; Zero register
020A:BC80  26: 39 06 0BE9			cmp	word ptr es:[0BE9h],ax	; (BEA3:0BE9=2007h)
020A:BC85  75 76				jne	loc_2150		; Jump if not equal
020A:BC87  26: 39 06 0BED			cmp	word ptr es:[0BEDh],ax	; (BEA3:0BED=2007h)
020A:BC8C  74 6F				je	loc_2150		; Jump if equal
020A:BC8E  26: 81 3E 0BF7 0100			cmp	word ptr es:[0BF7h],100h	; (BEA3:0BF7=2007h)
020A:BC95  77 07				ja	loc_2147		; Jump if above
020A:BC97  26: 39 06 0BF9			cmp	word ptr es:[0BF9h],ax	; (BEA3:0BF9=2007h)
020A:BC9C  74 5F				je	loc_2150		; Jump if equal
020A:BC9E			loc_2147:
020A:BC9E  26: 8B 1E 0BF7			mov	bx,word ptr es:[0BF7h]	; (BEA3:0BF7=2007h)
020A:BCA3  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BCA6  26: 03 06 0BF9			add	ax,word ptr es:[0BF9h]	; (BEA3:0BF9=2007h)
020A:BCAB  06					push	es
020A:BCAC  8E C0				mov	es,ax
020A:BCAE  26: 81 7F FE 4252			cmp	word ptr es:[bx-2],4252h
020A:BCB4  07					pop	es
020A:BCB5  74 1F				jz	loc_2148		; Jump if zero
020A:BCB7  83 FB 10				cmp	bx,10h
020A:BCBA  75 41				jne	loc_2150		; Jump if not equal
020A:BCBC  06					push	es
020A:BCBD  8E C0				mov	es,ax
020A:BCBF  26: 81 BF 00B8 2EFB			cmp	word ptr es:[0B8h][bx],2EFBh	; (02AC:00B8=268Ah)
020A:BCC6  07					pop	es
020A:BCC7  75 34				jnz	loc_2150		; Jump if not zero
020A:BCC9  06					push	es
020A:BCCA  8E C0				mov	es,ax
020A:BCCC  26: 81 BF 00BA 2FFF			cmp	word ptr es:[0BAh][bx],2FFFh	; (02AC:00BA=96h)
020A:BCD3  07					pop	es
020A:BCD4  75 27				jnz	loc_2150		; Jump if not zero
020A:BCD6			loc_2148:
020A:BCD6  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:BCDA  A0 11E8				mov	al,byte ptr ds:[11E8h]	; (9B68:11E8=0A5h)
020A:BCDD  88 47 52				mov	[bx+52h],al
020A:BCE0  B4 21				mov	ah,21h			; '!'
020A:BCE2  E8 CAB3				call	sub_125			; (8798)
020A:BCE5  E8 C748		;*		call	sub_116			;*(8430)
020A:BCE5  E8 48 C7				db	0E8h, 48h,0C7h
020A:BCE8  F7 06 2EC4 0004			test	word ptr ds:[2EC4h],4	; (9B68:2EC4=0ADA8h)
020A:BCEE  75 05				jnz	loc_2149		; Jump if not zero
020A:BCF0  9A 16FA:0340		;*		call	far ptr sub_233		;*(16FA:0340)
020A:BCF0  9A 40 03 FA 16			db	 9Ah, 40h, 03h,0FAh, 16h
020A:BCF5			loc_2149:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 400

020A:BCF5  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:BCF9  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:BCFD			loc_2150:
020A:BCFD  C7 06 263B 0043			mov	word ptr ds:[263Bh],43h	; (9B68:263B=0E120h)
020A:BD03  9A 16FA:0704		;*		call	far ptr sub_244		;*(16FA:0704)
020A:BD03  9A 04 07 FA 16			db	 9Ah, 04h, 07h,0FAh, 16h
020A:BD08  26: A1 0BE9				mov	ax,word ptr es:[0BE9h]	; (BEA3:0BE9=2007h)
020A:BD0C  A3 38AF				mov	word ptr ds:[38AFh],ax	; (9B68:38AF=4554h)
020A:BD0F  3D 2243				cmp	ax,2243h
020A:BD12  76 03				jbe	loc_2151		; Jump if below or =
020A:BD14  B8 2243				mov	ax,2243h
020A:BD17			loc_2151:
020A:BD17  A3 38B1				mov	word ptr ds:[38B1h],ax	; (9B68:38B1=504Dh)
020A:BD1A  26: A1 0BF1				mov	ax,word ptr es:[0BF1h]	; (BEA3:0BF1=2007h)
020A:BD1E  26: 8B 1E 0BF3			mov	bx,word ptr es:[0BF3h]	; (BEA3:0BF3=2007h)
020A:BD23  E8 DEDF				call	sub_159			; (9C05)
020A:BD26  0B C0				or	ax,ax			; Zero ?
020A:BD28  75 04				jnz	loc_2152		; Jump if not zero
020A:BD2A  0B DB				or	bx,bx			; Zero ?
020A:BD2C  74 30				jz	loc_2153		; Jump if zero
020A:BD2E			loc_2152:
020A:BD2E  C6 06 2A26 01			mov	byte ptr ds:[2A26h],1	; (9B68:2A26=20h)
020A:BD33  03 06 2A20				add	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BD37  26: 89 05				mov	es:[di],ax
020A:BD3A  A3 2A27				mov	word ptr ds:[2A27h],ax	; (9B68:2A27=0A0E4h)
020A:BD3D  A3 2A4C				mov	word ptr ds:[2A4Ch],ax	; (9B68:2A4C=0E1AAh)
020A:BD40  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:BD46  4B					dec	bx
020A:BD47  26: 89 5D 04				mov	es:[di+4],bx
020A:BD4B  89 1E 2A4A				mov	word ptr ds:[2A4Ah],bx	; (9B68:2A4A=0A592h)
020A:BD4F  26: C7 45 0A 0003			mov	word ptr es:[di+0Ah],3
020A:BD55  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BD5A  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BD5E			loc_2153:
020A:BD5E  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BD61  80 3E 2A26 01			cmp	byte ptr ds:[2A26h],1	; (9B68:2A26=20h)
020A:BD66  75 08				jne	loc_2154		; Jump if not equal
020A:BD68  26: 3B 05				cmp	ax,es:[di]
020A:BD6B  74 43				je	loc_2157		; Jump if equal
020A:BD6D  83 C7 15				add	di,15h
020A:BD70			loc_2154:
020A:BD70  8B D8				mov	bx,ax
020A:BD72  83 EB 10				sub	bx,10h
020A:BD75  3B 1E 2A27				cmp	bx,word ptr ds:[2A27h]	; (9B68:2A27=0A0E4h)
020A:BD79  74 15				je	loc_2155		; Jump if equal
020A:BD7B  26: 89 5D 06				mov	es:[di+6],bx
020A:BD7F  26: 89 5D 08				mov	es:[di+8],bx
020A:BD83  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BD88  F7 06 42CC 1000			test	word ptr ds:[42CCh],1000h	; (9B68:42CC=0)
020A:BD8E  74 08				jz	loc_2156		; Jump if zero
020A:BD90			loc_2155:
020A:BD90  26: 89 45 06				mov	es:[di+6],ax
020A:BD94  26: 89 45 08				mov	es:[di+8],ax
020A:BD98			loc_2156:
020A:BD98  26: 89 05				mov	es:[di],ax
020A:BD9B  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:BDA1  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 401

020A:BDA7  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BDAC  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BDB0			loc_2157:
020A:BDB0  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BDB3  8B D8				mov	bx,ax
020A:BDB5  33 C0				xor	ax,ax			; Zero register
020A:BDB7  E8 DE57				call	sub_163			; (9C11)
020A:BDBA  26: 03 1E 0BF9			add	bx,word ptr es:[0BF9h]	; (BEA3:0BF9=2007h)
020A:BDBF  BA 0010				mov	dx,10h
020A:BDC2  E8 D213				call	sub_143			; (8FD8)
020A:BDC5  72 38				jc	loc_2158		; Jump if carry Set
020A:BDC7  26: 89 1D				mov	es:[di],bx
020A:BDCA  33 C0				xor	ax,ax			; Zero register
020A:BDCC  26: 89 45 02				mov	es:[di+2],ax
020A:BDD0  26: 89 45 04				mov	es:[di+4],ax
020A:BDD4  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:BDD8  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BDDD  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BDE0  2D 0010				sub	ax,10h
020A:BDE3  26: 89 45 06				mov	es:[di+6],ax
020A:BDE7  26: 89 45 08				mov	es:[di+8],ax
020A:BDEB  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BDEF  F7 06 42CC 1000			test	word ptr ds:[42CCh],1000h	; (9B68:42CC=0)
020A:BDF5  74 08				jz	loc_2158		; Jump if zero
020A:BDF7  26: 89 5D 06				mov	es:[di+6],bx
020A:BDFB  26: 89 5D 06				mov	es:[di+6],bx
020A:BDFF			loc_2158:
020A:BDFF  C7 06 263B 0044			mov	word ptr ds:[263Bh],44h	; (9B68:263B=0E120h)
020A:BE05  9A 16FA:0704		;*		call	far ptr sub_244		;*(16FA:0704)
020A:BE05  9A 04 07 FA 16			db	 9Ah, 04h, 07h,0FAh, 16h
020A:BE0A  E8 DE04				call	sub_163			; (9C11)
020A:BE0D  26: 8B 2E 0BFB			mov	bp,word ptr es:[0BFBh]	; (9B68:0BFB=0A0ABh)
020A:BE12  81 C5 0BE3				add	bp,0BE3h
020A:BE16  26: 8B 36 0BE7			mov	si,word ptr es:[0BE7h]	; (9B68:0BE7=0A58Dh)
020A:BE1B  B1 05				mov	cl,5
020A:BE1D  D3 E6				shl	si,cl			; Shift w/zeros fill
020A:BE1F  26: A1 0BE5				mov	ax,word ptr es:[0BE5h]	; (9B68:0BE5=2B0Ah)
020A:BE23  B1 04				mov	cl,4
020A:BE25  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:BE27  03 F0				add	si,ax
020A:BE29  83 EE 1F				sub	si,1Fh
020A:BE2C  26: 2B 36 0BEB			sub	si,word ptr es:[0BEBh]	; (9B68:0BEB=0A2A0h)
020A:BE31  03 36 2A20				add	si,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BE35			loc_2159:
020A:BE35  83 3E 38AF 00			cmp	word ptr ds:[38AFh],0	; (9B68:38AF=4554h)
020A:BE3A  75 03				jne	loc_2160		; Jump if not equal
020A:BE3C  E9 0095				jmp	loc_2166		; (BED4)
020A:BE3F			loc_2160:
020A:BE3F  E8 DDCF				call	sub_163			; (9C11)
020A:BE42  26: 8B 5E 00				mov	bx,es:[bp]
020A:BE46  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BE49  26: 03 46 02				add	ax,es:[bp+2]
020A:BE4D  8E C0				mov	es,ax
020A:BE4F  26: 8B 1F				mov	bx,es:[bx]
020A:BE52  3B DE				cmp	bx,si
020A:BE54  72 02				jb	loc_2161		; Jump if below
020A:BE56  EB 31				jmp	short loc_2162		; (BE89)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 402

020A:BE58			loc_2161:
020A:BE58  33 C0				xor	ax,ax			; Zero register
020A:BE5A  BA 0010				mov	dx,10h
020A:BE5D  E8 D178				call	sub_143			; (8FD8)
020A:BE60  72 27				jc	loc_2162		; Jump if carry Set
020A:BE62  26: 89 1D				mov	es:[di],bx
020A:BE65  26: 89 45 02				mov	es:[di+2],ax
020A:BE69  26: 89 45 04				mov	es:[di+4],ax
020A:BE6D  26: 89 5D 06				mov	es:[di+6],bx
020A:BE71  26: 89 5D 08				mov	es:[di+8],bx
020A:BE75  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:BE79  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:BE7E  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BE82  80 3E 2A2B FA			cmp	byte ptr ds:[2A2Bh],0FAh	; (9B68:2A2B=0A0h)
020A:BE87  73 4B				jae	loc_2166		; Jump if above or =
020A:BE89			loc_2162:
020A:BE89  83 C5 04				add	bp,4
020A:BE8C  81 FD 1060				cmp	bp,1060h
020A:BE90  72 3B				jb	loc_2165		; Jump if below
020A:BE92  BB 1063				mov	bx,1063h
020A:BE95  2B DD				sub	bx,bp
020A:BE97  0B DB				or	bx,bx			; Zero ?
020A:BE99  74 10				jz	loc_2163		; Jump if zero
020A:BE9B  B9 FFFF				mov	cx,0FFFFh
020A:BE9E  33 D2				xor	dx,dx			; Zero register
020A:BEA0  2B D3				sub	dx,bx
020A:BEA2  B8 4201				mov	ax,4201h
020A:BEA5  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:BEA9  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, cx,dx=offset
020A:BEAB			loc_2163:
020A:BEAB  B9 1063				mov	cx,1063h
020A:BEAE  81 E9 0C63				sub	cx,0C63h
020A:BEB2  BA 0C63				mov	dx,0C63h
020A:BEB5  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:BEB9  E8 DD40				call	sub_158			; (9BFC)
020A:BEBC  B4 3F				mov	ah,3Fh			; '?'
020A:BEBE  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:BEC0  E8 DD36				call	sub_157			; (9BF9)
020A:BEC3  73 05				jnc	loc_2164		; Jump if carry=0
020A:BEC5  B3 0E				mov	bl,0Eh
020A:BEC7  E9 03E2				jmp	loc_2201		; (C2AC)
020A:BECA			loc_2164:
020A:BECA  BD 0C63				mov	bp,0C63h
020A:BECD			loc_2165:
020A:BECD  FF 0E 38AF				dec	word ptr ds:[38AFh]	; (9B68:38AF=4554h)
020A:BED1  E9 FF61				jmp	loc_2159		; (BE35)
020A:BED4			loc_2166:
020A:BED4  C7 06 263B 0045			mov	word ptr ds:[263Bh],45h	; (9B68:263B=0E120h)
020A:BEDA  9A 16FA:0704		;*		call	far ptr sub_244		;*(16FA:0704)
020A:BEDA  9A 04 07 FA 16			db	 9Ah, 04h, 07h,0FAh, 16h
020A:BEDF  E8 88AE		;*		call	sub_72			;*(4790)
020A:BEDF  E8 AE 88				db	0E8h,0AEh, 88h
020A:BEE2  BA 0015				mov	dx,15h
020A:BEE5  8B C2				mov	ax,dx
020A:BEE7  8A 1E 2A2B				mov	bl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 403

020A:BEEB  FE CB				dec	bl
020A:BEED  F6 E3				mul	bl			; ax = reg * al
020A:BEEF  05 0000				add	ax,0
020A:BEF2  8B D8				mov	bx,ax
020A:BEF4  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:BEF8  24 03				and	al,3
020A:BEFA  3C 03				cmp	al,3
020A:BEFC  75 45				jne	loc_2168		; Jump if not equal
020A:BEFE  80 3E 2A2B 01			cmp	byte ptr ds:[2A2Bh],1	; (9B68:2A2B=0A0h)
020A:BF03  74 03				je	loc_2167		; Jump if equal
020A:BF05  E9 009E				jmp	loc_2171		; (BFA6)
020A:BF08			loc_2167:
020A:BF08  50					push	ax
020A:BF09  55					push	bp
020A:BF0A  C6 06 26D5 01			mov	byte ptr ds:[26D5h],1	; (9B68:26D5=0ABh)
020A:BF0F  26: 8B 47 04				mov	ax,es:[bx+4]
020A:BF13  40					inc	ax
020A:BF14  53					push	bx
020A:BF15  BD 5A2D				mov	bp,5A2Dh
020A:BF18  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:BF18  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:BF1D  5B					pop	bx
020A:BF1E  5D					pop	bp
020A:BF1F  58					pop	ax
020A:BF20  26: C6 47 0A 00			mov	byte ptr es:[bx+0Ah],0
020A:BF25  26: 8B 3F				mov	di,es:[bx]
020A:BF28  26: 89 7F 06				mov	es:[bx+6],di
020A:BF2C  26: 89 7F 08				mov	es:[bx+8],di
020A:BF30  F7 06 42CC 1000			test	word ptr ds:[42CCh],1000h	; (9B68:42CC=0)
020A:BF36  75 0B				jnz	loc_2168		; Jump if not zero
020A:BF38  83 EF 10				sub	di,10h
020A:BF3B  26: 89 7F 06				mov	es:[bx+6],di
020A:BF3F  26: 89 7F 08				mov	es:[bx+8],di
020A:BF43			loc_2168:
020A:BF43  F6 C4 80				test	ah,80h
020A:BF46  75 5E				jnz	loc_2171		; Jump if not zero
020A:BF48  53					push	bx
020A:BF49  E8 DCC5				call	sub_163			; (9C11)
020A:BF4C  26: A1 0BE7				mov	ax,word ptr es:[0BE7h]	; (9B68:0BE7=0A58Dh)
020A:BF50  B1 05				mov	cl,5
020A:BF52  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:BF54  26: 2B 06 0BEB			sub	ax,word ptr es:[0BEBh]	; (9B68:0BEB=0A2A0h)
020A:BF59  E8 DCA9				call	sub_159			; (9C05)
020A:BF5C  26: 2B 07				sub	ax,es:[bx]
020A:BF5F  03 06 2A20				add	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:BF63  2D 0020				sub	ax,20h
020A:BF66  E8 DCA8				call	sub_163			; (9C11)
020A:BF69  26: 8B 1E 0BE5			mov	bx,word ptr es:[0BE5h]	; (9B68:0BE5=2B0Ah)
020A:BF6E  B1 04				mov	cl,4
020A:BF70  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:BF72  03 C3				add	ax,bx
020A:BF74  A9 F000				test	ax,0F000h
020A:BF77  74 05				jz	loc_2169		; Jump if zero
020A:BF79  B8 FFFF				mov	ax,0FFFFh
020A:BF7C  EB 20				jmp	short loc_2170		; (BF9E)
020A:BF7E			loc_2169:
020A:BF7E  B1 04				mov	cl,4
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 404

020A:BF80  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:BF82  26: 8B 1E 0BE5			mov	bx,word ptr es:[0BE5h]	; (9B68:0BE5=2B0Ah)
020A:BF87  83 E3 0F				and	bx,0Fh
020A:BF8A  03 C3				add	ax,bx
020A:BF8C  48					dec	ax
020A:BF8D  3D FFFF				cmp	ax,0FFFFh
020A:BF90  75 0C				jne	loc_2170		; Jump if not equal
020A:BF92  40					inc	ax
020A:BF93  5B					pop	bx
020A:BF94  53					push	bx
020A:BF95  E8 DC6D				call	sub_159			; (9C05)
020A:BF98  26: 81 4F 0A 4000			or	word ptr es:[bx+0Ah],4000h
020A:BF9E			loc_2170:
020A:BF9E  5B					pop	bx
020A:BF9F  E8 DC63				call	sub_159			; (9C05)
020A:BFA2  26: 89 47 04				mov	es:[bx+4],ax
020A:BFA6			loc_2171:
020A:BFA6  26: 8B 07				mov	ax,es:[bx]
020A:BFA9  81 FB 0000				cmp	bx,0
020A:BFAD  74 2B				je	loc_2174		; Jump if equal
020A:BFAF  2B DA				sub	bx,dx
020A:BFB1  26: 8B 4F 0A				mov	cx,es:[bx+0Ah]
020A:BFB5  80 E1 03				and	cl,3
020A:BFB8  80 F9 03				cmp	cl,3
020A:BFBB  74 E9				je	loc_2171		; Jump if equal
020A:BFBD  F6 C5 80				test	ch,80h
020A:BFC0  75 E4				jnz	loc_2171		; Jump if not zero
020A:BFC2  26: 2B 07				sub	ax,es:[bx]
020A:BFC5  F6 C4 F0				test	ah,0F0h
020A:BFC8  75 07				jnz	loc_2172		; Jump if not zero
020A:BFCA  B1 04				mov	cl,4
020A:BFCC  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:BFCE  48					dec	ax
020A:BFCF  EB 03				jmp	short loc_2173		; (BFD4)
020A:BFD1			loc_2172:
020A:BFD1  B8 FFFF				mov	ax,0FFFFh
020A:BFD4			loc_2173:
020A:BFD4  26: 89 47 04				mov	es:[bx+4],ax
020A:BFD8  EB CC				jmp	short loc_2171		; (BFA6)
020A:BFDA			loc_2174:
020A:BFDA  80 3E 2A2B 01			cmp	byte ptr ds:[2A2Bh],1	; (9B68:2A2B=0A0h)
020A:BFDF  74 07				je	loc_2175		; Jump if equal
020A:BFE1  80 3E 2A2B FA			cmp	byte ptr ds:[2A2Bh],0FAh	; (9B68:2A2B=0A0h)
020A:BFE6  72 02				jb	loc_2176		; Jump if below
020A:BFE8			loc_2175:
020A:BFE8  EB 7E				jmp	short loc_2180		; (C068)
020A:BFEA			loc_2176:
020A:BFEA  BF 0000				mov	di,0
020A:BFED  BB 0015				mov	bx,15h
020A:BFF0  8A 16 2A2B				mov	dl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:BFF4			loc_2177:
020A:BFF4  FE CA				dec	dl
020A:BFF6  80 FA 01				cmp	dl,1
020A:BFF9  72 6D				jb	loc_2180		; Jump if below
020A:BFFB  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:BFFF  24 03				and	al,3
020A:C001  3C 03				cmp	al,3
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 405

020A:C003  75 5F				jne	loc_2179		; Jump if not equal
020A:C005  26: 8B 45 04				mov	ax,es:[di+4]
020A:C009  B1 04				mov	cl,4
020A:C00B  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:C00D  26: F7 45 04 000F			test	word ptr es:[di+4],0Fh
020A:C013  74 01				jz	loc_2178		; Jump if zero
020A:C015  40					inc	ax
020A:C016			loc_2178:
020A:C016  26: 03 05				add	ax,es:[di]
020A:C019  26: 3B 01				cmp	ax,es:[bx+di]
020A:C01C  73 4A				jae	loc_2180		; Jump if above or =
020A:C01E  50					push	ax
020A:C01F  26: 8B 11				mov	dx,es:[bx+di]
020A:C022  2B D0				sub	dx,ax
020A:C024  B1 04				mov	cl,4
020A:C026  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:C028  4A					dec	dx
020A:C029  8B C3				mov	ax,bx
020A:C02B  8A 0E 2A2B				mov	cl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:C02F  FE C9				dec	cl
020A:C031  F6 E1				mul	cl			; ax = reg * al
020A:C033  05 0000				add	ax,0
020A:C036  8B F8				mov	di,ax
020A:C038  03 FB				add	di,bx
020A:C03A  58					pop	ax
020A:C03B  26: 89 05				mov	es:[di],ax
020A:C03E  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:C044  26: 89 55 04				mov	es:[di+4],dx
020A:C048  26: 89 45 06				mov	es:[di+6],ax
020A:C04C  26: 89 45 08				mov	es:[di+8],ax
020A:C050  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:C056  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:C05B  FE 06 2A2B				inc	byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:C05F  E8 872E		;*		call	sub_72			;*(4790)
020A:C05F  E8 2E 87				db	0E8h, 2Eh, 87h
020A:C062  EB 04				jmp	short loc_2180		; (C068)
020A:C064			loc_2179:
020A:C064  03 FB				add	di,bx
020A:C066  EB 8C				jmp	short loc_2177		; (BFF4)
020A:C068			loc_2180:
020A:C068  E8 DBA6				call	sub_163			; (9C11)
020A:C06B  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:C06E  8B D8				mov	bx,ax
020A:C070  26: 03 1E 0BF9			add	bx,word ptr es:[0BF9h]	; (9B68:0BF9=0A9A0h)
020A:C075  26: A1 0BF7				mov	ax,word ptr es:[0BF7h]	; (9B68:0BF7=0E420h)
020A:C079  89 1E 2A37				mov	word ptr ds:[2A37h],bx	; (9B68:2A37=0E2A5h)
020A:C07D  A3 2A39				mov	word ptr ds:[2A39h],ax	; (9B68:2A39=0A0AAh)
020A:C080  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C085  06					push	es
020A:C086  E8 DB7C				call	sub_159			; (9C05)
020A:C089  33 C0				xor	ax,ax			; Zero register
020A:C08B  BA 0010				mov	dx,10h
020A:C08E  E8 CF47				call	sub_143			; (8FD8)
020A:C091  73 14				jnc	loc_2181		; Jump if carry=0
020A:C093  26: 8B 45 04				mov	ax,es:[di+4]
020A:C097  3B 06 2A39				cmp	ax,word ptr ds:[2A39h]	; (9B68:2A39=0A0AAh)
020A:C09B  77 0A				ja	loc_2181		; Jump if above
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 406

020A:C09D  A1 2A39				mov	ax,word ptr ds:[2A39h]	; (9B68:2A39=0A0AAh)
020A:C0A0  05 0002				add	ax,2
020A:C0A3  26: 89 45 04				mov	es:[di+4],ax
020A:C0A7			loc_2181:
020A:C0A7  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C0AC  5A					pop	dx
020A:C0AD  8E C2				mov	es,dx
020A:C0AF  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C0B4  5A					pop	dx
020A:C0B5  75 0A				jnz	loc_2182		; Jump if not zero
020A:C0B7  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C0BC  74 03				je	loc_2182		; Jump if equal
020A:C0BE  E8 DE23				call	sub_168			; (9EE4)
020A:C0C1			loc_2182:
020A:C0C1  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C0C6  F7 06 2EC4 0001			test	word ptr ds:[2EC4h],1	; (9B68:2EC4=0ADA8h)
020A:C0CC  74 03				jz	loc_2183		; Jump if zero
020A:C0CE  E9 00DD				jmp	loc_2192		; (C1AE)
020A:C0D1			loc_2183:
020A:C0D1  E8 DB3D				call	sub_163			; (9C11)
020A:C0D4  33 C9				xor	cx,cx			; Zero register
020A:C0D6  26: 8B 16 0BFB			mov	dx,word ptr es:[0BFBh]	; (9B68:0BFB=0A0ABh)
020A:C0DB  B8 4200				mov	ax,4200h
020A:C0DE  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:C0E2  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, cx,dx=offset
020A:C0E4			loc_2184:
020A:C0E4  BD 0C63				mov	bp,0C63h
020A:C0E7  B9 1063				mov	cx,1063h
020A:C0EA  81 E9 0C63				sub	cx,0C63h
020A:C0EE  BA 0C63				mov	dx,0C63h
020A:C0F1  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:C0F5  E8 DB04				call	sub_158			; (9BFC)
020A:C0F8  B4 3F				mov	ah,3Fh			; '?'
020A:C0FA  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:C0FC  E8 DAFA				call	sub_157			; (9BF9)
020A:C0FF  73 05				jnc	loc_2185		; Jump if carry=0
020A:C101  B3 0E				mov	bl,0Eh
020A:C103  E9 01A6				jmp	loc_2201		; (C2AC)
020A:C106			loc_2185:
020A:C106  83 3E 38B1 00			cmp	word ptr ds:[38B1h],0	; (9B68:38B1=504Dh)
020A:C10B  75 03				jne	loc_2186		; Jump if not equal
020A:C10D  E9 009E				jmp	loc_2192		; (C1AE)
020A:C110			loc_2186:
020A:C110  E8 DAFE				call	sub_163			; (9C11)
020A:C113  26: 8B 5E 00				mov	bx,es:[bp]
020A:C117  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:C11A  26: 03 46 02				add	ax,es:[bp+2]
020A:C11E  9A 16FA:1694		;*		call	far ptr sub_274		;*(16FA:1694)
020A:C11E  9A 94 16 FA 16			db	 9Ah, 94h, 16h,0FAh, 16h
020A:C123  A3 38B3				mov	word ptr ds:[38B3h],ax	; (9B68:38B3=3Dh)
020A:C126  89 1E 38B5				mov	word ptr ds:[38B5h],bx	; (9B68:38B5=1)
020A:C12A  E8 DAD8				call	sub_159			; (9C05)
020A:C12D  B9 0015				mov	cx,15h
020A:C130  BF 0000				mov	di,0
020A:C133			loc_2187:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 407

020A:C133  26: 8B 05				mov	ax,es:[di]
020A:C136  3D FFFF				cmp	ax,0FFFFh
020A:C139  74 60				je	loc_2190		; Jump if equal
020A:C13B  26: 8B 5D 02				mov	bx,es:[di+2]
020A:C13F  9A 16FA:1694		;*		call	far ptr sub_274		;*(16FA:1694)
020A:C13F  9A 94 16 FA 16			db	 9Ah, 94h, 16h,0FAh, 16h
020A:C144  39 06 38B3				cmp	word ptr ds:[38B3h],ax	; (9B68:38B3=3Dh)
020A:C148  72 51				jb	loc_2190		; Jump if below
020A:C14A  77 06				ja	loc_2188		; Jump if above
020A:C14C  39 1E 38B5				cmp	word ptr ds:[38B5h],bx	; (9B68:38B5=1)
020A:C150  72 49				jb	loc_2190		; Jump if below
020A:C152			loc_2188:
020A:C152  26: 8B 05				mov	ax,es:[di]
020A:C155  26: 8B 5D 04				mov	bx,es:[di+4]
020A:C159  9A 16FA:1694		;*		call	far ptr sub_274		;*(16FA:1694)
020A:C159  9A 94 16 FA 16			db	 9Ah, 94h, 16h,0FAh, 16h
020A:C15E  2B 1E 38B5				sub	bx,word ptr ds:[38B5h]	; (9B68:38B5=1)
020A:C162  1B 06 38B3				sbb	ax,word ptr ds:[38B3h]	; (9B68:38B3=3Dh)
020A:C166  73 05				jnc	loc_2189		; Jump if carry=0
020A:C168  83 C7 15				add	di,15h
020A:C16B  EB C6				jmp	short loc_2187		; (C133)
020A:C16D			loc_2189:
020A:C16D  26: 8B 05				mov	ax,es:[di]
020A:C170  26: 8B 5D 02				mov	bx,es:[di+2]
020A:C174  9A 16FA:1694		;*		call	far ptr sub_274		;*(16FA:1694)
020A:C174  9A 94 16 FA 16			db	 9Ah, 94h, 16h,0FAh, 16h
020A:C179  8B C3				mov	ax,bx
020A:C17B  8B 1E 38B5				mov	bx,word ptr ds:[38B5h]	; (9B68:38B5=1)
020A:C17F  2B D8				sub	bx,ax
020A:C181  26: 8B 0D				mov	cx,es:[di]
020A:C184  BE 472B				mov	si,472Bh
020A:C187  89 0C				mov	[si],cx
020A:C189  89 5C 02				mov	[si+2],bx
020A:C18C  C6 44 04 5F				mov	byte ptr [si+4],5Fh	; '_'
020A:C190  C6 44 05 00				mov	byte ptr [si+5],0
020A:C194  C6 44 06 00				mov	byte ptr [si+6],0
020A:C198  E8 EAC5				call	sub_174			; (AC60)
020A:C19B			loc_2190:
020A:C19B  FF 0E 38B1				dec	word ptr ds:[38B1h]	; (D233:38B1=6C7h)
020A:C19F  83 C5 04				add	bp,4
020A:C1A2  81 FD 1063				cmp	bp,1063h
020A:C1A6  72 03				jb	loc_2191		; Jump if below
020A:C1A8  E9 FF39				jmp	loc_2184		; (C0E4)
020A:C1AB			loc_2191:
020A:C1AB  E9 FF58				jmp	loc_2185		; (C106)
020A:C1AE			loc_2192:
020A:C1AE  BB 0000				mov	bx,0
020A:C1B1  32 ED				xor	ch,ch			; Zero register
020A:C1B3  8A 0E 2A2B				mov	cl,byte ptr ds:[2A2Bh]	; (D233:2A2B=67h)
020A:C1B7  B8 0015				mov	ax,15h
020A:C1BA  E8 DA48				call	sub_159			; (9C05)
  
020A:C1BD			locloop_2193:
020A:C1BD  26: 80 67 0B 7F			and	byte ptr es:[bx+0Bh],7Fh
020A:C1C2  26: 80 4F 0B 1E			or	byte ptr es:[bx+0Bh],1Eh
020A:C1C7  03 D8				add	bx,ax
020A:C1C9  E2 F2				loop	locloop_2193		; Loop if cx > 0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 408

  
020A:C1CB  80 3E 2A1E 03			cmp	byte ptr ds:[2A1Eh],3	; (D233:2A1E=0A2h)
020A:C1D0  75 02				jne	loc_2194		; Jump if not equal
020A:C1D2  EB 68				jmp	short loc_2196		; (C23C)
020A:C1D4			loc_2194:
020A:C1D4  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (D233:2A20=272h)
020A:C1D7  8E C0				mov	es,ax
020A:C1D9  8B 36 2A1A				mov	si,word ptr ds:[2A1Ah]	; (D233:2A1A=101h)
020A:C1DD  E8 C834				call	sub_128			; (8A14)
020A:C1E0  E8 DA2B				call	sub_162			; (9C0E)
020A:C1E3  80 FB 08				cmp	bl,8
020A:C1E6  76 54				jbe	loc_2196		; Jump if below or =
020A:C1E8  8B F7				mov	si,di
020A:C1EA  BF 0358				mov	di,358h
020A:C1ED  32 ED				xor	ch,ch			; Zero register
020A:C1EF  8A CB				mov	cl,bl
020A:C1F1  FC					cld				; Clear direction
020A:C1F2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:C1F4  B1 22				mov	cl,22h			; '"'
020A:C1F6  2A CB				sub	cl,bl
020A:C1F8  B0 20				mov	al,20h			; ' '
020A:C1FA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:C1FC  A1 2A20				mov	ax,word ptr ds:[2A20h]	; (9B68:2A20=0E2A5h)
020A:C1FF  8E C0				mov	es,ax
020A:C201  8B 3E 2A1A				mov	di,word ptr ds:[2A1Ah]	; (9B68:2A1A=0E3AAh)
020A:C205  B0 2E				mov	al,2Eh			; '.'
020A:C207  B9 003C				mov	cx,3Ch
020A:C20A  FC					cld				; Clear direction
020A:C20B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:C20D  E3 2A				jcxz	loc_2195		; Jump if cx=0
020A:C20F  26: 8B 05				mov	ax,es:[di]
020A:C212  2C 30				sub	al,30h			; '0'
020A:C214  3C 09				cmp	al,9
020A:C216  77 21				ja	loc_2195		; Jump if above
020A:C218  80 EC 30				sub	ah,30h			; '0'
020A:C21B  80 FC 09				cmp	ah,9
020A:C21E  77 19				ja	loc_2195		; Jump if above
020A:C220  83 EF 02				sub	di,2
020A:C223  26: 8A 05				mov	al,es:[di]
020A:C226  2C 30				sub	al,30h			; '0'
020A:C228  3C 09				cmp	al,9
020A:C22A  77 0D				ja	loc_2195		; Jump if above
020A:C22C  26: 8B 05				mov	ax,es:[di]
020A:C22F  A3 50E9				mov	word ptr ds:[50E9h],ax	; (9B68:50E9=1818h)
020A:C232  26: 8B 45 02				mov	ax,es:[di+2]
020A:C236  A3 50EB				mov	word ptr ds:[50EBh],ax	; (9B68:50EB=30h)
020A:C239			loc_2195:
020A:C239  E8 D9D2				call	sub_162			; (9C0E)
020A:C23C			loc_2196:
020A:C23C  B4 3D				mov	ah,3Dh			; '='
020A:C23E  B0 00				mov	al,0
020A:C240  BA 2BB2				mov	dx,2BB2h
020A:C243  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:C245  72 31				jc	loc_2197		; Jump if carry Set
020A:C247  8B D8				mov	bx,ax
020A:C249  A3 37EC				mov	word ptr ds:[37ECh],ax	; (9B68:37EC=3F93h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 409

020A:C24C  B4 57				mov	ah,57h			; 'W'
020A:C24E  32 C0				xor	al,al			; Zero register
020A:C250  CD 21				int	21h			; DOS Services  ah=function 57h
										;  get/set file date & time
020A:C252  72 24				jc	loc_2197		; Jump if carry Set
020A:C254  89 16 2D7B				mov	word ptr ds:[2D7Bh],dx	; (9B68:2D7B=410Ah)
020A:C258  83 26 2D7B 1F			and	word ptr ds:[2D7Bh],1Fh	; (9B68:2D7B=410Ah)
020A:C25D  B1 05				mov	cl,5
020A:C25F  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:C261  89 16 2D7D				mov	word ptr ds:[2D7Dh],dx	; (9B68:2D7D=2020h)
020A:C265  83 26 2D7D 0F			and	word ptr ds:[2D7Dh],0Fh	; (9B68:2D7D=2020h)
020A:C26A  B1 04				mov	cl,4
020A:C26C  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:C26E  83 E2 3F				and	dx,3Fh
020A:C271  83 C2 50				add	dx,50h
020A:C274  89 16 2D7F				mov	word ptr ds:[2D7Fh],dx	; (9B68:2D7F=0E2E1h)
020A:C278			loc_2197:
020A:C278  80 3E 38AE 00			cmp	byte ptr ds:[38AEh],0	; (9B68:38AE=0)
020A:C27D  74 15				je	loc_2200		; Jump if equal
020A:C27F  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:C282  3C 04				cmp	al,4
020A:C284  77 0B				ja	loc_2199		; Jump if above
020A:C286  B0 04				mov	al,4
020A:C288  80 3E 2C40 01			cmp	byte ptr ds:[2C40h],1	; (9B68:2C40=0E3h)
020A:C28D  76 02				jbe	loc_2199		; Jump if below or =
020A:C28F  B0 0A				mov	al,0Ah
020A:C291			loc_2199:
020A:C291  E8 CCF0				call	sub_142			; (8F84)
020A:C294			loc_2200:
020A:C294  C6 06 1C42 20			mov	byte ptr ds:[1C42h],20h	; (9B68:1C42=0A5h) ' '
020A:C299  E8 D514				call	sub_149			; (97B0)
020A:C29C  E8 C6E5				call	sub_127			; (8984)
020A:C29F  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:C2A3  E8 013A				call	sub_180			; (C3E0)
020A:C2A6  E8 13BB				call	sub_202			; (D664)
020A:C2A9  F8					clc				; Clear carry flag
020A:C2AA  EB 08				jmp	short loc_2202		; (C2B4)
020A:C2AC			loc_2201:
020A:C2AC  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:C2B0  E8 012D				call	sub_180			; (C3E0)
020A:C2B3  F9					stc				; Set carry flag
020A:C2B4			loc_2202:
020A:C2B4  C3					retn
020A:C2B5  87 DB				xchg	bx,bx
020A:C2B7  90					nop
020A:C2B8  51					push	cx
020A:C2B9  57					push	di
020A:C2BA  8B FE				mov	di,si
020A:C2BC  B9 0032				mov	cx,32h
020A:C2BF  03 F1				add	si,cx
020A:C2C1  B0 00				mov	al,0
020A:C2C3  FC					cld				; Clear direction
020A:C2C4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:C2C6  A0 2A1D				mov	al,byte ptr ds:[2A1Dh]	; (020A:2A1D=0A9h)
020A:C2C9  26: 88 44 FB				mov	es:[si-5],al
020A:C2CD  C6 06 2A1D 00			mov	byte ptr ds:[2A1Dh],0	; (020A:2A1D=0A9h)
020A:C2D2  5F					pop	di
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 410

020A:C2D3  59					pop	cx
020A:C2D4  C3					retn
020A:C2D5  87 DB				xchg	bx,bx
020A:C2D7  90					nop
020A:C2D8  51					push	cx
020A:C2D9  57					push	di
020A:C2DA  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C2DF  06					push	es
020A:C2E0  E8 D92B				call	sub_162			; (9C0E)
020A:C2E3  BF 3B50				mov	di,3B50h
020A:C2E6  B9 3BD9				mov	cx,3BD9h
020A:C2E9  81 E9 3B50				sub	cx,3B50h
020A:C2ED  B0 20				mov	al,20h			; ' '
020A:C2EF  FC					cld				; Clear direction
020A:C2F0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:C2F2  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C2F7  5A					pop	dx
020A:C2F8  8E C2				mov	es,dx
020A:C2FA  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C2FF  5A					pop	dx
020A:C300  75 0A				jnz	loc_2203		; Jump if not zero
020A:C302  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C307  74 03				je	loc_2203		; Jump if equal
020A:C309  E8 DBD8				call	sub_168			; (9EE4)
020A:C30C			loc_2203:
020A:C30C  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C311  5F					pop	di
020A:C312  59					pop	cx
020A:C313  C3					retn
020A:C314  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C319  06					push	es
020A:C31A  E8 D8F1				call	sub_162			; (9C0E)
020A:C31D  BF 5407				mov	di,5407h
020A:C320  B9 5439				mov	cx,5439h
020A:C323  81 E9 5407				sub	cx,5407h
020A:C327  49					dec	cx
020A:C328  B0 20				mov	al,20h			; ' '
020A:C32A  FC					cld				; Clear direction
020A:C32B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:C32D  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C332  5A					pop	dx
020A:C333  8E C2				mov	es,dx
020A:C335  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C33A  5A					pop	dx
020A:C33B  75 0A				jnz	loc_2204		; Jump if not zero
020A:C33D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C342  74 03				je	loc_2204		; Jump if equal
020A:C344  E8 DB9D				call	sub_168			; (9EE4)
020A:C347			loc_2204:
020A:C347  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C34C  C3					retn
020A:C34D  87 DB				xchg	bx,bx
020A:C34F  90					nop
020A:C350  51					push	cx
020A:C351  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C356  06					push	es
020A:C357  E8 D8B4				call	sub_162			; (9C0E)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 411

020A:C35A  BF 5452				mov	di,5452h
020A:C35D  B9 5484				mov	cx,5484h
020A:C360  81 E9 5452				sub	cx,5452h
020A:C364  49					dec	cx
020A:C365  B0 20				mov	al,20h			; ' '
020A:C367  FC					cld				; Clear direction
020A:C368  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:C36A  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C36F  5A					pop	dx
020A:C370  8E C2				mov	es,dx
020A:C372  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C377  5A					pop	dx
020A:C378  75 0A				jnz	loc_2205		; Jump if not zero
020A:C37A  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C37F  74 03				je	loc_2205		; Jump if equal
020A:C381  E8 DB60				call	sub_168			; (9EE4)
020A:C384			loc_2205:
020A:C384  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C389  59					pop	cx
020A:C38A  C3					retn
020A:C38B  90					nop
020A:C38C  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:C391  75 49				jne	loc_2207		; Jump if not equal
020A:C393  52					push	dx
020A:C394  56					push	si
020A:C395  57					push	di
020A:C396  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C39B  06					push	es
020A:C39C  BA 2DF6				mov	dx,2DF6h
020A:C39F  E8 BBB6				call	sub_113			; (7F58)
020A:C3A2  E8 D869				call	sub_162			; (9C0E)
020A:C3A5  BF 2DF6				mov	di,2DF6h
020A:C3A8  B0 20				mov	al,20h			; ' '
020A:C3AA  B9 2E7E				mov	cx,2E7Eh
020A:C3AD  81 E9 2DF6				sub	cx,2DF6h
020A:C3B1  FC					cld				; Clear direction
020A:C3B2  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:C3B4  B8 0003				mov	ax,3
020A:C3B7  E8 BB06				call	sub_112			; (7EC0)
020A:C3BA  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C3BF  5A					pop	dx
020A:C3C0  8E C2				mov	es,dx
020A:C3C2  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C3C7  5A					pop	dx
020A:C3C8  75 0A				jnz	loc_2206		; Jump if not zero
020A:C3CA  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C3CF  74 03				je	loc_2206		; Jump if equal
020A:C3D1  E8 DB10				call	sub_168			; (9EE4)
020A:C3D4			loc_2206:
020A:C3D4  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C3D9  5F					pop	di
020A:C3DA  5E					pop	si
020A:C3DB  5A					pop	dx
020A:C3DC			loc_2207:
020A:C3DC  F8					clc				; Clear carry flag
020A:C3DD  C3					retn
020A:C3DE  87 DB				xchg	bx,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 412

  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_180		proc	near
020A:C3E0  50					push	ax
020A:C3E1  B4 3E				mov	ah,3Eh			; '>'
020A:C3E3  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:C3E5  58					pop	ax
020A:C3E6  C3					retn
				sub_180		endp
  
020A:C3E7  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_181		proc	near
020A:C3E8  06					push	es
020A:C3E9  55					push	bp
020A:C3EA  F7 06 42CE 0040			test	word ptr ds:[42CEh],40h	; (D233:42CE=2E3h)
020A:C3F0  75 46				jnz	loc_2210		; Jump if not zero
020A:C3F2  80 3E 4202 01			cmp	byte ptr ds:[4202h],1	; (D233:4202=0A3h)
020A:C3F7  74 3F				je	loc_2210		; Jump if equal
020A:C3F9  80 3E 2A75 78			cmp	byte ptr ds:[2A75h],78h	; (D233:2A75=0) 'x'
020A:C3FE  74 0E				je	loc_2208		; Jump if equal
020A:C400  80 3E 2A75 F5			cmp	byte ptr ds:[2A75h],0F5h	; (D233:2A75=0)
020A:C405  74 07				je	loc_2208		; Jump if equal
020A:C407  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:C40C  75 2A				jne	loc_2210		; Jump if not equal
020A:C40E			loc_2208:
020A:C40E  E8 D273				call	sub_147			; (9684)
020A:C411  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020A:C416  45					inc	bp
020A:C417  A1 37A2				mov	ax,word ptr ds:[37A2h]	; (9B68:37A2=92E5h)
020A:C41A  3B 06 2D82				cmp	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:C41E  74 0B				je	loc_2209		; Jump if equal
020A:C420  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C420  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C425  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:C42A  45					inc	bp
020A:C42B			loc_2209:
020A:C42B  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:C42E  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C42E  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C433  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:C438			loc_2210:
020A:C438  5D					pop	bp
020A:C439  07					pop	es
020A:C43A  C3					retn
				sub_181		endp
  
020A:C43B  90					nop
020A:C43C  53					push	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 413

020A:C43D  80 3E 2C40 01			cmp	byte ptr data_417,1	; (020A:2C40=41h)
020A:C442  74 2A				je	loc_2211		; Jump if equal
020A:C444  F6 06 2D8D 01			test	data_429,1		; (020A:2D8D=3Bh)
020A:C449  75 23				jnz	loc_2211		; Jump if not zero
020A:C44B  80 3E 263D 06			cmp	byte ptr ds:[263Dh],6	; (020A:263D=99h)
020A:C450  72 1C				jb	loc_2211		; Jump if below
020A:C452  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:C457  74 15				je	loc_2211		; Jump if equal
020A:C459  A1 2D84				mov	ax,data_424		; (020A:2D84=735Ch)
020A:C45C  2B 06 2DB0				sub	ax,data_435		; (020A:2DB0=6Dh)
020A:C460  3D 0064				cmp	ax,64h
020A:C463  77 09				ja	loc_2211		; Jump if above
020A:C465  BB FFFF				mov	bx,0FFFFh
020A:C468  39 1E 2DB2				cmp	data_436,bx		; (020A:2DB2=4150h)
020A:C46C  75 03				jne	loc_2212		; Jump if not equal
020A:C46E			loc_2211:
020A:C46E  E9 00AD				jmp	loc_2220		; (C51E)
020A:C471			loc_2212:
020A:C471  51					push	cx
020A:C472  56					push	si
020A:C473  57					push	di
020A:C474  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C479  06					push	es
020A:C47A  BA 0001				mov	dx,1
020A:C47D  8B 1E 2D82				mov	bx,data_423		; (020A:2D82=5357h)
020A:C481  A1 2DB0				mov	ax,data_435		; (020A:2DB0=6Dh)
020A:C484  3D FFFF				cmp	ax,0FFFFh
020A:C487  74 73				je	loc_2218		; Jump if equal
020A:C489  E8 CB4C				call	sub_143			; (8FD8)
020A:C48C  73 6E				jnc	loc_2218		; Jump if carry=0
020A:C48E  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:C493  75 67				jnz	loc_2218		; Jump if not zero
020A:C495  56					push	si
020A:C496  8B F7				mov	si,di
020A:C498  E8 E981				call	sub_175			; (AE1C)
020A:C49B  5E					pop	si
020A:C49C  BE 2D98				mov	si,2D98h
020A:C49F  B9 0003				mov	cx,3
  
020A:C4A2			locloop_2213:
020A:C4A2  8B 7C 02				mov	di,[si+2]
020A:C4A5  83 FF FF				cmp	di,0FFFFh
020A:C4A8  74 20				je	loc_2215		; Jump if equal
020A:C4AA  BA 0001				mov	dx,1
020A:C4AD  8B 1C				mov	bx,[si]
020A:C4AF  8B 44 02				mov	ax,[si+2]
020A:C4B2  E8 CB23				call	sub_143			; (8FD8)
020A:C4B5  73 13				jnc	loc_2215		; Jump if carry=0
020A:C4B7  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:C4BC  75 07				jnz	loc_2214		; Jump if not zero
020A:C4BE  56					push	si
020A:C4BF  8B F7				mov	si,di
020A:C4C1  E8 E958				call	sub_175			; (AE1C)
020A:C4C4  5E					pop	si
020A:C4C5			loc_2214:
020A:C4C5  83 C6 04				add	si,4
020A:C4C8  E2 D8				loop	locloop_2213		; Loop if cx > 0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 414

  
020A:C4CA			loc_2215:
020A:C4CA  89 1E 2DB2				mov	data_436,bx		; (020A:2DB2=4150h)
020A:C4CE  BE 2DA4				mov	si,2DA4h
020A:C4D1  B9 0003				mov	cx,3
  
020A:C4D4			locloop_2216:
020A:C4D4  8B 7C 02				mov	di,[si+2]
020A:C4D7  83 FF FF				cmp	di,0FFFFh
020A:C4DA  74 20				je	loc_2218		; Jump if equal
020A:C4DC  8B 1C				mov	bx,[si]
020A:C4DE  8B 44 02				mov	ax,[si+2]
020A:C4E1  BA 0002				mov	dx,2
020A:C4E4  E8 CAF1				call	sub_143			; (8FD8)
020A:C4E7  73 13				jnc	loc_2218		; Jump if carry=0
020A:C4E9  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:C4EE  75 07				jnz	loc_2217		; Jump if not zero
020A:C4F0  56					push	si
020A:C4F1  8B F7				mov	si,di
020A:C4F3  E8 E926				call	sub_175			; (AE1C)
020A:C4F6  5E					pop	si
020A:C4F7			loc_2217:
020A:C4F7  83 C6 04				add	si,4
020A:C4FA  E2 D8				loop	locloop_2216		; Loop if cx > 0
  
020A:C4FC			loc_2218:
020A:C4FC  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C501  5A					pop	dx
020A:C502  8E C2				mov	es,dx
020A:C504  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C509  5A					pop	dx
020A:C50A  75 0A				jnz	loc_2219		; Jump if not zero
020A:C50C  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C511  74 03				je	loc_2219		; Jump if equal
020A:C513  E8 D9CE				call	sub_168			; (9EE4)
020A:C516			loc_2219:
020A:C516  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C51B  5F					pop	di
020A:C51C  5E					pop	si
020A:C51D  59					pop	cx
020A:C51E			loc_2220:
020A:C51E  5B					pop	bx
020A:C51F  C3					retn
020A:C520  F6 06 2EB1 10			test	data_441,10h		; (020A:2EB1=53h)
020A:C525  74 09				jz	loc_2221		; Jump if zero
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_182		proc	near
020A:C527  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:C52C  75 02				jne	loc_2221		; Jump if not equal
020A:C52E  EB 03				jmp	short loc_2222		; (C533)
020A:C530			loc_2221:
020A:C530  E9 009F				jmp	loc_2230		; (C5D2)
020A:C533			loc_2222:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 415

020A:C533  A0 2EBA				mov	al,data_447		; (020A:2EBA=3Dh)
020A:C536  A2 2EBB				mov	data_448,al		; (020A:2EBB=43h)
020A:C539  C6 06 2EBA 02			mov	data_447,2		; (020A:2EBA=3Dh)
020A:C53E  50					push	ax
020A:C53F  53					push	bx
020A:C540  51					push	cx
020A:C541  56					push	si
020A:C542  55					push	bp
020A:C543  F6 06 2A78 E0			test	data_392,0E0h		; (020A:2A78=20h)
020A:C548  74 09				jz	loc_2223		; Jump if zero
020A:C54A  F6 06 2A77 E0			test	data_391,0E0h		; (020A:2A77=0A5h)
020A:C54F  74 02				jz	loc_2223		; Jump if zero
020A:C551  EB 02				jmp	short loc_2224		; (C555)
020A:C553			loc_2223:
020A:C553  EB 32				jmp	short loc_2227		; (C587)
020A:C555			loc_2224:
020A:C555  B9 0007				mov	cx,7
020A:C558  BE 2ED4				mov	si,2ED4h
020A:C55B  BD 5FFF				mov	bp,5FFFh
  
020A:C55E			locloop_2225:
020A:C55E  8B 1C				mov	bx,[si]
020A:C560  8B 44 02				mov	ax,[si+2]
020A:C563  9A 16FA:0218		;*		call	far ptr sub_230		;*(16FA:0218)
020A:C563  9A 18 02 FA 16			db	 9Ah, 18h, 02h,0FAh, 16h
020A:C568  83 C6 04				add	si,4
020A:C56B  45					inc	bp
020A:C56C  E2 F0				loop	locloop_2225		; Loop if cx > 0
  
020A:C56E  B9 0006				mov	cx,6
020A:C571  BE 2EF0				mov	si,2EF0h
020A:C574  BD 6072				mov	bp,6072h
  
020A:C577			locloop_2226:
020A:C577  8B 04				mov	ax,[si]
020A:C579  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C579  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C57E  46					inc	si
020A:C57F  46					inc	si
020A:C580  45					inc	bp
020A:C581  E2 F4				loop	locloop_2226		; Loop if cx > 0
  
020A:C583  B0 40				mov	al,40h			; '@'
020A:C585  EB 3B				jmp	short loc_2229		; (C5C2)
020A:C587			loc_2227:
020A:C587  B9 0007				mov	cx,7
020A:C58A  BE 2ED4				mov	si,2ED4h
020A:C58D  BD 5695				mov	bp,5695h
  
020A:C590			locloop_2228:
020A:C590  8B 04				mov	ax,[si]
020A:C592  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C592  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C597  83 C6 04				add	si,4
020A:C59A  45					inc	bp
020A:C59B  E2 F3				loop	locloop_2228		; Loop if cx > 0
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 416

020A:C59D  A1 2EF0				mov	ax,data_467		; (020A:2EF0=4957h)
020A:C5A0  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C5A0  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C5A5  45					inc	bp
020A:C5A6  A1 2EF2				mov	ax,data_468		; (020A:2EF2=444Eh)
020A:C5A9  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C5A9  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C5AE  45					inc	bp
020A:C5AF  A1 2EF4				mov	ax,data_469		; (020A:2EF4=574Fh)
020A:C5B2  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C5B2  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C5B7  45					inc	bp
020A:C5B8  A1 2EFA				mov	ax,data_472		; (020A:2EFA=504Dh)
020A:C5BB  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C5BB  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C5C0  B0 28				mov	al,28h			; '('
020A:C5C2			loc_2229:
020A:C5C2  E8 B8FB				call	sub_112			; (7EC0)
020A:C5C5  F8					clc				; Clear carry flag
020A:C5C6  A0 2EBB				mov	al,byte ptr ds:[2EBBh]	; (9B68:2EBB=0E7h)
020A:C5C9  A2 2EBA				mov	byte ptr ds:[2EBAh],al	; (9B68:2EBA=0EEh)
020A:C5CC  5D					pop	bp
020A:C5CD  5E					pop	si
020A:C5CE  59					pop	cx
020A:C5CF  5B					pop	bx
020A:C5D0  58					pop	ax
020A:C5D1  C3					retn
020A:C5D2			loc_2230:
020A:C5D2  F8					clc				; Clear carry flag
020A:C5D3  C3					retn
				sub_182		endp
  
020A:C5D4  F6 06 2EB1 10			test	data_441,10h		; (020A:2EB1=53h)
020A:C5D9  74 61				jz	loc_2233		; Jump if zero
020A:C5DB  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:C5E0  75 5A				jne	loc_2233		; Jump if not equal
020A:C5E2  50					push	ax
020A:C5E3  53					push	bx
020A:C5E4  55					push	bp
020A:C5E5  BD 575E				mov	bp,575Eh
020A:C5E8  A1 3794				mov	ax,data_544		; (020A:3794=3A01h)
020A:C5EB  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C5EB  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C5F0  BD 5750				mov	bp,5750h
020A:C5F3  A1 3791				mov	ax,data_542		; (020A:3791=0A085h)
020A:C5F6  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C5F6  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C5FB  46					inc	si
020A:C5FC  46					inc	si
020A:C5FD  45					inc	bp
020A:C5FE  A1 378F				mov	ax,data_541		; (020A:378F=0EBF9h)
020A:C601  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:C601  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:C606  BD 5746				mov	bp,5746h
020A:C609  A0 3793				mov	al,data_543		; (020A:3793=26h)
020A:C60C  9A 16FA:0024		;*		call	far ptr sub_222		;*(16FA:0024)
020A:C60C  9A 24 00 FA 16			db	 9Ah, 24h, 00h,0FAh, 16h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 417

020A:C611  BD 5750				mov	bp,5750h
020A:C614  A8 40				test	al,40h			; '@'
020A:C616  75 0C				jnz	loc_2231		; Jump if not zero
020A:C618  3E: C7 46 00 2D2D			mov	word ptr ds:[bp],2D2Dh
020A:C61E  3E: C7 46 02 2D2D			mov	word ptr ds:[bp+2],2D2Dh
020A:C624			loc_2231:
020A:C624  A8 80				test	al,80h
020A:C626  75 0C				jnz	loc_2232		; Jump if not zero
020A:C628  3E: C7 46 05 2D2D			mov	word ptr ds:[bp+5],2D2Dh
020A:C62E  3E: C7 46 07 2D2D			mov	word ptr ds:[bp+7],2D2Dh
020A:C634			loc_2232:
020A:C634  B0 2A				mov	al,2Ah			; '*'
020A:C636  E8 B887				call	sub_112			; (7EC0)
020A:C639  5D					pop	bp
020A:C63A  5B					pop	bx
020A:C63B  58					pop	ax
020A:C63C			loc_2233:
020A:C63C  F8					clc				; Clear carry flag
020A:C63D  C3					retn
020A:C63E  00 00				add	[bx+si],al
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_183		proc	near
020A:C640  53					push	bx
020A:C641  52					push	dx
020A:C642  1E					push	ds
020A:C643  E8 D5B6				call	sub_158			; (9BFC)
020A:C646  33 F6				xor	si,si			; Zero register
020A:C648  B3 FF				mov	bl,0FFh
020A:C64A  B7 01				mov	bh,1
020A:C64C  BD 0005				mov	bp,5
020A:C64F			loc_2234:
020A:C64F  38 1C				cmp	[si],bl
020A:C651  74 33				je	loc_2238		; Jump if equal
020A:C653  39 44 03				cmp	[si+3],ax
020A:C656  73 1A				jae	loc_2237		; Jump if above or =
020A:C658			loc_2235:
020A:C658  33 D2				xor	dx,dx			; Zero register
020A:C65A  02 54 02				add	dl,[si+2]
020A:C65D  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:C65F  84 7C 01				test	bh,[si+1]
020A:C662  75 06				jnz	loc_2236		; Jump if not zero
020A:C664  03 D5				add	dx,bp
020A:C666  03 F2				add	si,dx
020A:C668  EB E5				jmp	short loc_2234		; (C64F)
020A:C66A			loc_2236:
020A:C66A  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:C66C  03 D5				add	dx,bp
020A:C66E  03 F2				add	si,dx
020A:C670  EB DD				jmp	short loc_2234		; (C64F)
020A:C672			loc_2237:
020A:C672  77 12				ja	loc_2238		; Jump if above
020A:C674  80 3C FE				cmp	byte ptr [si],0FEh
020A:C677  74 DF				je	loc_2235		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 418

020A:C679  38 0C				cmp	[si],cl
020A:C67B  77 09				ja	loc_2238		; Jump if above
020A:C67D  75 D9				jnz	loc_2235		; Jump if not zero
020A:C67F  38 6C 01				cmp	[si+1],ch
020A:C682  74 05				je	loc_2239		; Jump if equal
020A:C684  EB D2				jmp	short loc_2235		; (C658)
020A:C686			loc_2238:
020A:C686  F8					clc				; Clear carry flag
020A:C687  EB 01				jmp	short loc_2240		; (C68A)
020A:C689			loc_2239:
020A:C689  F9					stc				; Set carry flag
020A:C68A			loc_2240:
020A:C68A  8C DB				mov	bx,ds
020A:C68C  8E C3				mov	es,bx
020A:C68E  1F					pop	ds
020A:C68F  5A					pop	dx
020A:C690  5B					pop	bx
020A:C691  C3					retn
				sub_183		endp
  
020A:C692  87 DB				xchg	bx,bx
020A:C694  F7 06 42CC 0040			test	data_601,40h		; (020A:42CC=30h)
020A:C69A  75 16				jnz	loc_2241		; Jump if not zero
020A:C69C  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020A:C6A1  75 0F				jne	loc_2241		; Jump if not equal
020A:C6A3  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:C6A8  74 08				je	loc_2241		; Jump if equal
020A:C6AA  A1 2ED4				mov	ax,data_462		; (020A:2ED4=4554h)
020A:C6AD  80 FC 09				cmp	ah,9
020A:C6B0  74 03				je	loc_2242		; Jump if equal
020A:C6B2			loc_2241:
020A:C6B2  E9 00BB				jmp	loc_2248		; (C770)
020A:C6B5			loc_2242:
020A:C6B5  53					push	bx
020A:C6B6  51					push	cx
020A:C6B7  52					push	dx
020A:C6B8  57					push	di
020A:C6B9  55					push	bp
020A:C6BA  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C6BF  06					push	es
020A:C6C0  A1 2EF4				mov	ax,data_469		; (020A:2EF4=574Fh)
020A:C6C3  A3 3BEB				mov	data_577,ax		; (020A:3BEB=0B4E9h)
020A:C6C6  A1 2EE0				mov	ax,data_464		; (020A:2EE0=574Fh)
020A:C6C9  A3 3BED				mov	data_578,ax		; (020A:3BED=0E901h)
020A:C6CC  BF 3BEB				mov	di,3BEBh
020A:C6CF  E8 0616				call	sub_192			; (CCE8)
020A:C6D2  72 02				jc	loc_2243		; Jump if carry Set
020A:C6D4  EB 76				jmp	short loc_2246		; (C74C)
020A:C6D6			loc_2243:
020A:C6D6  FF 36 3796				push	data_545		; (020A:3796=2506h)
020A:C6DA  A1 2EF4				mov	ax,data_469		; (020A:2EF4=574Fh)
020A:C6DD  A3 3796				mov	data_545,ax		; (020A:3796=2506h)
020A:C6E0  A1 2EE0				mov	ax,data_464		; (020A:2EE0=574Fh)
020A:C6E3  33 DB				xor	bx,bx			; Zero register
020A:C6E5  BD 3BEB				mov	bp,3BEBh
020A:C6E8  E8 E975				call	sub_177			; (B060)
020A:C6EB  8F 06 3796				pop	word ptr ds:[3796h]	; (D233:3796=1475h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 419

020A:C6EF  8B 3E 2EE0				mov	di,word ptr ds:[2EE0h]	; (D233:2EE0=21CDh)
020A:C6F3  A1 2EF4				mov	ax,word ptr ds:[2EF4h]	; (D233:2EF4=0B809h)
020A:C6F6  8E C0				mov	es,ax
020A:C6F8  B9 01F4				mov	cx,1F4h
020A:C6FB  8B D9				mov	bx,cx
020A:C6FD  B0 24				mov	al,24h			; '$'
020A:C6FF  FC					cld				; Clear direction
020A:C700  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:C702  83 F9 00				cmp	cx,0
020A:C705  75 02				jne	loc_2244		; Jump if not equal
020A:C707  EB 43				jmp	short loc_2246		; (C74C)
020A:C709			loc_2244:
020A:C709  2B D9				sub	bx,cx
020A:C70B  8B 3E 2EE0				mov	di,word ptr ds:[2EE0h]	; (D233:2EE0=21CDh)
020A:C70F  8B CB				mov	cx,bx
020A:C711  B0 00				mov	al,0
020A:C713  FC					cld				; Clear direction
020A:C714  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:C716  2B D9				sub	bx,cx
020A:C718  53					push	bx
020A:C719  8C C3				mov	bx,es
020A:C71B  E8 D7FA				call	sub_169			; (9F18)
020A:C71E  5B					pop	bx
020A:C71F  8B 3E 2A8F				mov	di,word ptr ds:[2A8Fh]	; (D233:2A8F=4AE8h)
020A:C723  83 EF 04				sub	di,4
020A:C726  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:C72B  75 1F				jnz	loc_2246		; Jump if not zero
020A:C72D  26: 80 65 05 FC			and	byte ptr es:[di+5],0FCh
020A:C732  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (D233:14AD=20h)
020A:C737  77 05				ja	loc_2245		; Jump if above
020A:C739  26: 80 4D 05 01			or	byte ptr es:[di+5],1
020A:C73E			loc_2245:
020A:C73E  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:C743  26: 80 4D 04 20			or	byte ptr es:[di+4],20h	; ' '
020A:C748  26: 89 5D 08				mov	es:[di+8],bx
020A:C74C			loc_2246:
020A:C74C  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C751  5A					pop	dx
020A:C752  8E C2				mov	es,dx
020A:C754  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C759  5A					pop	dx
020A:C75A  75 0A				jnz	loc_2247		; Jump if not zero
020A:C75C  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C761  74 03				je	loc_2247		; Jump if equal
020A:C763  E8 D77E				call	sub_168			; (9EE4)
020A:C766			loc_2247:
020A:C766  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C76B  5D					pop	bp
020A:C76C  5F					pop	di
020A:C76D  5A					pop	dx
020A:C76E  59					pop	cx
020A:C76F  5B					pop	bx
020A:C770			loc_2248:
020A:C770  C3					retn
020A:C771  87 DB				xchg	bx,bx
020A:C773  90					nop
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 420

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_184		proc	near
020A:C774  E8 A841				call	sub_107			; (6FB8)
020A:C777  50					push	ax
020A:C778  53					push	bx
020A:C779  51					push	cx
020A:C77A  52					push	dx
020A:C77B  57					push	di
020A:C77C  56					push	si
020A:C77D  55					push	bp
020A:C77E  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:C783  06					push	es
020A:C784  8B 0E 430E				mov	cx,word ptr ds:[430Eh]	; (9B68:430E=0)
020A:C788  83 E9 0B				sub	cx,0Bh
020A:C78B  3B 0E 430C				cmp	cx,word ptr ds:[430Ch]	; (9B68:430C=0)
020A:C78F  77 03				ja	loc_2249		; Jump if above
020A:C791  E9 0123				jmp	loc_2267		; (C8B7)
020A:C794			loc_2249:
020A:C794  9A 16FA:1324		;*		call	far ptr sub_266		;*(16FA:1324)
020A:C794  9A 24 13 FA 16			db	 9Ah, 24h, 13h,0FAh, 16h
020A:C799  83 FB 00				cmp	bx,0
020A:C79C  75 10				jne	loc_2250		; Jump if not equal
020A:C79E  3D 0400				cmp	ax,400h
020A:C7A1  72 0B				jb	loc_2250		; Jump if below
020A:C7A3  3D 0500				cmp	ax,500h
020A:C7A6  77 15				ja	loc_2251		; Jump if above
020A:C7A8  BB 0040				mov	bx,40h
020A:C7AB  2D 0400				sub	ax,400h
020A:C7AE			loc_2250:
020A:C7AE  83 FB 40				cmp	bx,40h
020A:C7B1  75 0A				jne	loc_2251		; Jump if not equal
020A:C7B3  3D 0100				cmp	ax,100h
020A:C7B6  75 05				jne	loc_2251		; Jump if not equal
020A:C7B8  33 C0				xor	ax,ax			; Zero register
020A:C7BA  BB 0050				mov	bx,50h
020A:C7BD			loc_2251:
020A:C7BD  BE 0000				mov	si,0
020A:C7C0  E8 D442				call	sub_159			; (9C05)
020A:C7C3  B5 01				mov	ch,1
020A:C7C5			loc_2252:
020A:C7C5  26: 39 1C				cmp	es:[si],bx
020A:C7C8  75 0C				jne	loc_2253		; Jump if not equal
020A:C7CA  26: 3B 44 02				cmp	ax,es:[si+2]
020A:C7CE  72 06				jb	loc_2253		; Jump if below
020A:C7D0  26: 3B 44 04				cmp	ax,es:[si+4]
020A:C7D4  76 0E				jbe	loc_2254		; Jump if below or =
020A:C7D6			loc_2253:
020A:C7D6  FE C5				inc	ch
020A:C7D8  83 C6 15				add	si,15h
020A:C7DB  3A 2E 2A2B				cmp	ch,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:C7DF  76 E4				jbe	loc_2252		; Jump if below or =
020A:C7E1  E9 00D3				jmp	loc_2267		; (C8B7)
020A:C7E4			loc_2254:
020A:C7E4  FE CD				dec	ch
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 421

020A:C7E6  8A CD				mov	cl,ch
020A:C7E8  32 ED				xor	ch,ch			; Zero register
020A:C7EA  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:C7EE  74 03				je	loc_2255		; Jump if equal
020A:C7F0  80 CD 01				or	ch,1
020A:C7F3			loc_2255:
020A:C7F3  83 FA 04				cmp	dx,4
020A:C7F6  74 0D				je	loc_2257		; Jump if equal
020A:C7F8  83 FA 02				cmp	dx,2
020A:C7FB  74 05				je	loc_2256		; Jump if equal
020A:C7FD  80 CD 02				or	ch,2
020A:C800  EB 03				jmp	short loc_2257		; (C805)
020A:C802			loc_2256:
020A:C802  80 CD 04				or	ch,4
020A:C805			loc_2257:
020A:C805  E8 FE38				call	sub_183			; (C640)
020A:C808  72 04				jc	loc_2258		; Jump if carry Set
020A:C80A  B7 01				mov	bh,1
020A:C80C  EB 48				jmp	short loc_2263		; (C856)
020A:C80E			loc_2258:
020A:C80E  32 FF				xor	bh,bh			; Zero register
020A:C810  26: 8A 54 02				mov	dl,es:[si+2]
020A:C814  80 FA FF				cmp	dl,0FFh
020A:C817  74 25				je	loc_2260		; Jump if equal
020A:C819  8B FE				mov	di,si
020A:C81B  83 C6 05				add	si,5
020A:C81E  32 F6				xor	dh,dh			; Zero register
020A:C820  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:C822  F6 C5 01				test	ch,1
020A:C825  74 02				jz	loc_2259		; Jump if zero
020A:C827  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:C829			loc_2259:
020A:C829  03 F2				add	si,dx
020A:C82B  8B 16 2D84				mov	dx,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:C82F  2B 16 48DF				sub	dx,word ptr ds:[48DFh]	; (9B68:48DF=0E792h)
020A:C833  F6 C5 01				test	ch,1
020A:C836  75 08				jnz	loc_2261		; Jump if not zero
020A:C838  26: 3B 54 FE				cmp	dx,es:[si-2]
020A:C83C  75 14				jne	loc_2262		; Jump if not equal
020A:C83E			loc_2260:
020A:C83E  EB 77				jmp	short loc_2267		; (C8B7)
020A:C840			loc_2261:
020A:C840  26: 3B 54 FC				cmp	dx,es:[si-4]
020A:C844  75 0C				jne	loc_2262		; Jump if not equal
020A:C846  8B 16 2D82				mov	dx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:C84A  26: 3B 54 FE				cmp	dx,es:[si-2]
020A:C84E  75 02				jne	loc_2262		; Jump if not equal
020A:C850  EB 65				jmp	short loc_2267		; (C8B7)
020A:C852			loc_2262:
020A:C852  26: FE 45 02				inc	byte ptr es:[di+2]
020A:C856			loc_2263:
020A:C856  8B D6				mov	dx,si
020A:C858  8A DD				mov	bl,ch
020A:C85A  51					push	cx
020A:C85B  8B 3E 430C				mov	di,word ptr ds:[430Ch]	; (9B68:430C=0)
020A:C85F  8B F7				mov	si,di
020A:C861  8B CF				mov	cx,di
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 422

020A:C863  2B CA				sub	cx,dx
020A:C865  83 C7 02				add	di,2
020A:C868  83 C1 02				add	cx,2
020A:C86B  0A FF				or	bh,bh			; Zero ?
020A:C86D  74 03				jz	loc_2264		; Jump if zero
020A:C86F  83 C7 05				add	di,5
020A:C872			loc_2264:
020A:C872  F6 C3 01				test	bl,1
020A:C875  74 03				jz	loc_2265		; Jump if zero
020A:C877  83 C7 02				add	di,2
020A:C87A			loc_2265:
020A:C87A  89 3E 430C				mov	word ptr ds:[430Ch],di	; (9B68:430C=0)
020A:C87E  26: C6 45 01 FF			mov	byte ptr es:[di+1],0FFh
020A:C883  06					push	es
020A:C884  1F					pop	ds
020A:C885  FD					std				; Set direction flag
020A:C886  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:C888  E8 D36E				call	sub_157			; (9BF9)
020A:C88B  59					pop	cx
020A:C88C  8B F2				mov	si,dx
020A:C88E  0A FF				or	bh,bh			; Zero ?
020A:C890  74 0F				jz	loc_2266		; Jump if zero
020A:C892  26: 89 0C				mov	es:[si],cx
020A:C895  26: C6 44 02 01			mov	byte ptr es:[si+2],1
020A:C89A  26: 89 44 03				mov	es:[si+3],ax
020A:C89E  83 C6 05				add	si,5
020A:C8A1			loc_2266:
020A:C8A1  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:C8A4  2B 06 48DF				sub	ax,word ptr ds:[48DFh]	; (9B68:48DF=0E792h)
020A:C8A8  26: 89 04				mov	es:[si],ax
020A:C8AB  F6 C3 01				test	bl,1
020A:C8AE  74 07				jz	loc_2267		; Jump if zero
020A:C8B0  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:C8B3  26: 89 44 02				mov	es:[si+2],ax
020A:C8B7			loc_2267:
020A:C8B7  FC					cld				; Clear direction
020A:C8B8  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:C8BD  5A					pop	dx
020A:C8BE  8E C2				mov	es,dx
020A:C8C0  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:C8C5  5A					pop	dx
020A:C8C6  75 0A				jnz	loc_2268		; Jump if not zero
020A:C8C8  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:C8CD  74 03				je	loc_2268		; Jump if equal
020A:C8CF  E8 D612				call	sub_168			; (9EE4)
020A:C8D2			loc_2268:
020A:C8D2  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:C8D7  5D					pop	bp
020A:C8D8  5E					pop	si
020A:C8D9  5F					pop	di
020A:C8DA  5A					pop	dx
020A:C8DB  59					pop	cx
020A:C8DC  5B					pop	bx
020A:C8DD  58					pop	ax
020A:C8DE  C3					retn
				sub_184		endp
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 423

020A:C8DF  90					nop
020A:C8E0  50					push	ax
020A:C8E1  53					push	bx
020A:C8E2  51					push	cx
020A:C8E3  52					push	dx
020A:C8E4  56					push	si
020A:C8E5  57					push	di
020A:C8E6  55					push	bp
020A:C8E7  BF 0008				mov	di,8
020A:C8EA  BE 0000				mov	si,0
020A:C8ED  E8 D300				call	sub_155			; (9BF0)
020A:C8F0			loc_2269:
020A:C8F0  8B 04				mov	ax,[si]
020A:C8F2  8B 5C 02				mov	bx,[si+2]
020A:C8F5  8B 4C 04				mov	cx,[si+4]
020A:C8F8  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:C8FC  74 66				je	loc_2271		; Jump if equal
020A:C8FE  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:C903  74 77				jz	loc_2273		; Jump if zero
020A:C905  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:C90A  75 70				jnz	loc_2273		; Jump if not zero
020A:C90C  26: 3B 05				cmp	ax,es:[di]
020A:C90F  72 55				jb	loc_2272		; Jump if below
020A:C911  77 4F				ja	loc_2270		; Jump if above
020A:C913  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:C917  77 49				ja	loc_2270		; Jump if above
020A:C919  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:C91D  72 47				jb	loc_2272		; Jump if below
020A:C91F  1E					push	ds
020A:C920  E8 D2D6				call	sub_157			; (9BF9)
020A:C923  F7 06 42CC 0100			test	word ptr ds:[42CCh],100h	; (9B68:42CC=0)
020A:C929  1F					pop	ds
020A:C92A  74 50				jz	loc_2273		; Jump if zero
020A:C92C  8B 54 0A				mov	dx,[si+0Ah]
020A:C92F  80 E2 03				and	dl,3
020A:C932  80 FA 01				cmp	dl,1
020A:C935  77 45				ja	loc_2273		; Jump if above
020A:C937  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020A:C93C  74 3E				jz	loc_2273		; Jump if zero
020A:C93E  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:C943  75 37				jnz	loc_2273		; Jump if not zero
020A:C945  26: 81 7D 02 0200			cmp	word ptr es:[di+2],200h
020A:C94B  73 2F				jae	loc_2273		; Jump if above or =
020A:C94D  1E					push	ds
020A:C94E  E8 D2A8				call	sub_157			; (9BF9)
020A:C951  F7 06 42CC 0200			test	word ptr ds:[42CCh],200h	; (9B68:42CC=0)
020A:C957  1F					pop	ds
020A:C958  75 08				jnz	loc_2270		; Jump if not zero
020A:C95A  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020A:C960  73 1A				jae	loc_2273		; Jump if above or =
020A:C962			loc_2270:
020A:C962  EB 40				jmp	short loc_2275		; (C9A4)
020A:C964			loc_2271:
020A:C964  EB 45				jmp	short loc_2276		; (C9AB)
020A:C966			loc_2272:
020A:C966  83 C6 15				add	si,15h
020A:C969  83 3C FF				cmp	word ptr [si],0FFFFh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 424

020A:C96C  74 36				je	loc_2275		; Jump if equal
020A:C96E  8B 54 0A				mov	dx,[si+0Ah]
020A:C971  80 E2 03				and	dl,3
020A:C974  80 FA 03				cmp	dl,3
020A:C977  74 ED				je	loc_2272		; Jump if equal
020A:C979  E9 FF74				jmp	loc_2269		; (C8F0)
020A:C97C			loc_2273:
020A:C97C  BB 377F				mov	bx,377Fh
020A:C97F  26: 8A 45 05				mov	al,es:[di+5]
020A:C983  25 000F				and	ax,0Fh
020A:C986  1E					push	ds
020A:C987  E8 D26F				call	sub_157			; (9BF9)
020A:C98A  D7					xlat				; al=[al+[bx]] table
020A:C98B  1F					pop	ds
020A:C98C  0A C0				or	al,al			; Zero ?
020A:C98E  75 04				jnz	loc_2274		; Jump if not zero
020A:C990  26: 8A 45 06				mov	al,es:[di+6]
020A:C994			loc_2274:
020A:C994  03 F8				add	di,ax
020A:C996  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:C99A  74 0F				je	loc_2276		; Jump if equal
020A:C99C  83 3C FF				cmp	word ptr [si],0FFFFh
020A:C99F  74 03				je	loc_2275		; Jump if equal
020A:C9A1  E9 FF4C				jmp	loc_2269		; (C8F0)
020A:C9A4			loc_2275:
020A:C9A4  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020A:C9A9  EB D1				jmp	short loc_2273		; (C97C)
020A:C9AB			loc_2276:
020A:C9AB  E8 D24B				call	sub_157			; (9BF9)
020A:C9AE  5D					pop	bp
020A:C9AF  5F					pop	di
020A:C9B0  5E					pop	si
020A:C9B1  5A					pop	dx
020A:C9B2  59					pop	cx
020A:C9B3  5B					pop	bx
020A:C9B4  58					pop	ax
020A:C9B5  C3					retn
020A:C9B6  87 DB				xchg	bx,bx
020A:C9B8  50					push	ax
020A:C9B9  53					push	bx
020A:C9BA  51					push	cx
020A:C9BB  52					push	dx
020A:C9BC  56					push	si
020A:C9BD  57					push	di
020A:C9BE  55					push	bp
020A:C9BF  BF 0008				mov	di,8
020A:C9C2  8B F7				mov	si,di
020A:C9C4  BB 377F				mov	bx,377Fh
020A:C9C7  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:C9CB  75 0A				jne	loc_2277		; Jump if not equal
020A:C9CD  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:C9D2  75 03				jne	loc_2277		; Jump if not equal
020A:C9D4  E9 02C0				jmp	loc_2318		; (CC97)
020A:C9D7			loc_2277:
020A:C9D7  26: 8A 45 05				mov	al,es:[di+5]
020A:C9DB  25 000F				and	ax,0Fh
020A:C9DE  D7					xlat				; al=[al+[bx]] table
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 425

020A:C9DF  0A C0				or	al,al			; Zero ?
020A:C9E1  75 04				jnz	loc_2278		; Jump if not zero
020A:C9E3  26: 8A 45 06				mov	al,es:[di+6]
020A:C9E7			loc_2278:
020A:C9E7  8B F7				mov	si,di
020A:C9E9  03 F0				add	si,ax
020A:C9EB  B8 FFFF				mov	ax,0FFFFh
020A:C9EE  26: 39 04				cmp	es:[si],ax
020A:C9F1  75 09				jne	loc_2279		; Jump if not equal
020A:C9F3  26: 39 44 02				cmp	es:[si+2],ax
020A:C9F7  75 03				jne	loc_2279		; Jump if not equal
020A:C9F9  E9 029B				jmp	loc_2318		; (CC97)
020A:C9FC			loc_2279:
020A:C9FC  26: 8B 05				mov	ax,es:[di]
020A:C9FF  26: 3B 04				cmp	ax,es:[si]
020A:CA02  74 03				je	loc_2280		; Jump if equal
020A:CA04  E9 0272				jmp	loc_2315		; (CC79)
020A:CA07			loc_2280:
020A:CA07  26: 8B 45 02				mov	ax,es:[di+2]
020A:CA0B  26: 3B 44 02				cmp	ax,es:[si+2]
020A:CA0F  75 03				jne	loc_2281		; Jump if not equal
020A:CA11  E9 012E				jmp	loc_2298		; (CB42)
020A:CA14			loc_2281:
020A:CA14  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:CA19  74 03				jz	loc_2282		; Jump if zero
020A:CA1B  E9 025B				jmp	loc_2315		; (CC79)
020A:CA1E			loc_2282:
020A:CA1E  26: 8B 45 08				mov	ax,es:[di+8]
020A:CA22  26: 03 45 02				add	ax,es:[di+2]
020A:CA26  73 07				jnc	loc_2283		; Jump if carry=0
020A:CA28  40					inc	ax
020A:CA29  26: 29 45 08				sub	es:[di+8],ax
020A:CA2D  EB E5				jmp	short loc_2281		; (CA14)
020A:CA2F			loc_2283:
020A:CA2F  26: 3B 44 02				cmp	ax,es:[si+2]
020A:CA33  77 03				ja	loc_2284		; Jump if above
020A:CA35  E9 0241				jmp	loc_2315		; (CC79)
020A:CA38			loc_2284:
020A:CA38  83 3E 2BA9 00			cmp	data_406,0		; (020A:2BA9=0Ch)
020A:CA3D  75 19				jne	loc_2285		; Jump if not equal
020A:CA3F  26: 8A 45 04				mov	al,es:[di+4]
020A:CA43  24 3F				and	al,3Fh			; '?'
020A:CA45  3C 20				cmp	al,20h			; ' '
020A:CA47  75 0F				jne	loc_2285		; Jump if not equal
020A:CA49  26: 8B 45 02				mov	ax,es:[di+2]
020A:CA4D  26: 03 45 08				add	ax,es:[di+8]
020A:CA51  A3 2BA9				mov	data_406,ax		; (020A:2BA9=0Ch)
020A:CA54  89 3E 2BAB				mov	data_407,di		; (020A:2BAB=0FF00h)
020A:CA58			loc_2285:
020A:CA58  26: 8A 45 04				mov	al,es:[di+4]
020A:CA5C  24 3F				and	al,3Fh			; '?'
020A:CA5E  3C 21				cmp	al,21h			; '!'
020A:CA60  74 74				je	loc_2293		; Jump if equal
020A:CA62  3C 22				cmp	al,22h			; '"'
020A:CA64  74 70				je	loc_2293		; Jump if equal
020A:CA66  26: 8A 44 04				mov	al,es:[si+4]
020A:CA6A  24 3F				and	al,3Fh			; '?'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 426

020A:CA6C  3C 21				cmp	al,21h			; '!'
020A:CA6E  75 03				jne	loc_2287		; Jump if not equal
020A:CA70			loc_2286:
020A:CA70  E9 0083				jmp	loc_2295		; (CAF6)
020A:CA73			loc_2287:
020A:CA73  3C 22				cmp	al,22h			; '"'
020A:CA75  74 F9				je	loc_2286		; Jump if equal
020A:CA77  26: F6 44 05 02			test	byte ptr es:[si+5],2
020A:CA7C  75 58				jnz	loc_2293		; Jump if not zero
020A:CA7E  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:CA83  75 40				jnz	loc_2291		; Jump if not zero
020A:CA85  26: 8B 44 02				mov	ax,es:[si+2]
020A:CA89  26: 2B 45 02				sub	ax,es:[di+2]
020A:CA8D  BA 0004				mov	dx,4
020A:CA90  26: 8A 4D 04				mov	cl,es:[di+4]
020A:CA94  80 E1 3F				and	cl,3Fh			; '?'
020A:CA97  80 F9 20				cmp	cl,20h			; ' '
020A:CA9A  75 03				jne	loc_2288		; Jump if not equal
020A:CA9C  BA 03F0				mov	dx,3F0h
020A:CA9F			loc_2288:
020A:CA9F  3B C2				cmp	ax,dx
020A:CAA1  73 33				jae	loc_2293		; Jump if above or =
020A:CAA3  81 FA 03F0				cmp	dx,3F0h
020A:CAA7  74 03				je	loc_2289		; Jump if equal
020A:CAA9  E9 009C				jmp	loc_2299		; (CB48)
020A:CAAC			loc_2289:
020A:CAAC  26: 8A 44 04				mov	al,es:[si+4]
020A:CAB0  24 3F				and	al,3Fh			; '?'
020A:CAB2  3C 02				cmp	al,2
020A:CAB4  74 20				je	loc_2293		; Jump if equal
020A:CAB6  3C 04				cmp	al,4
020A:CAB8  74 1C				je	loc_2293		; Jump if equal
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:CABA			loc_2290:
020A:CABA  26: 8B 44 02				mov	ax,es:[si+2]
020A:CABE  26: 2B 45 02				sub	ax,es:[di+2]
020A:CAC2  E9 0083				jmp	loc_2299		; (CB48)
020A:CAC5			loc_2291:
020A:CAC5  26: 8B 44 02				mov	ax,es:[si+2]
020A:CAC9  26: 2B 45 02				sub	ax,es:[di+2]
020A:CACD  3D 03F0				cmp	ax,3F0h
020A:CAD0  73 02				jae	loc_2292		; Jump if above or =
020A:CAD2  EB 74				jmp	short loc_2299		; (CB48)
020A:CAD4			loc_2292:
020A:CAD4  EB 6C				jmp	short loc_2298		; (CB42)
020A:CAD6			loc_2293:
020A:CAD6  26: 8B 44 02				mov	ax,es:[si+2]
020A:CADA  26: 2B 45 02				sub	ax,es:[di+2]
020A:CADE  8B C8				mov	cx,ax
020A:CAE0  26: 87 45 08				xchg	ax,es:[di+8]
020A:CAE4  2B C1				sub	ax,cx
020A:CAE6  26: 3B 44 08				cmp	ax,es:[si+8]
020A:CAEA  77 03				ja	loc_2294		; Jump if above
020A:CAEC  E9 018A				jmp	loc_2315		; (CC79)
020A:CAEF			loc_2294:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 427

020A:CAEF  26: 2B 44 02				sub	ax,es:[si+2]
020A:CAF3  E9 0183				jmp	loc_2315		; (CC79)
020A:CAF6			loc_2295:
020A:CAF6  26: 8B 45 02				mov	ax,es:[di+2]
020A:CAFA  26: 03 45 08				add	ax,es:[di+8]
020A:CAFE  26: 8B 4C 02				mov	cx,es:[si+2]
020A:CB02  26: 03 4C 08				add	cx,es:[si+8]
020A:CB06  3B C8				cmp	cx,ax
020A:CB08  76 38				jbe	loc_2298		; Jump if below or =
020A:CB0A  2B C8				sub	cx,ax
020A:CB0C  26: 89 44 02				mov	es:[si+2],ax
020A:CB10  26: 89 4C 08				mov	es:[si+8],cx
020A:CB14  57					push	di
020A:CB15  26: 8A 44 05				mov	al,es:[si+5]
020A:CB19  25 000F				and	ax,0Fh
020A:CB1C  D7					xlat				; al=[al+[bx]] table
020A:CB1D  0A C0				or	al,al			; Zero ?
020A:CB1F  75 04				jnz	loc_2296		; Jump if not zero
020A:CB21  26: 8A 44 06				mov	al,es:[si+6]
020A:CB25			loc_2296:
020A:CB25  8B FE				mov	di,si
020A:CB27  03 F8				add	di,ax
020A:CB29  26: 8B 05				mov	ax,es:[di]
020A:CB2C  26: 3B 04				cmp	ax,es:[si]
020A:CB2F  75 0D				jne	loc_2297		; Jump if not equal
020A:CB31  26: 8B 45 02				mov	ax,es:[di+2]
020A:CB35  26: 3B 44 02				cmp	ax,es:[si+2]
020A:CB39  77 03				ja	loc_2297		; Jump if above
020A:CB3B  5F					pop	di
020A:CB3C  EB 04				jmp	short loc_2298		; (CB42)
020A:CB3E			loc_2297:
020A:CB3E  5F					pop	di
020A:CB3F  E9 00EE				jmp	loc_2309		; (CC30)
020A:CB42			loc_2298:
020A:CB42  E8 E2D7				call	sub_175			; (AE1C)
020A:CB45  E9 0149				jmp	loc_2317		; (CC91)
020A:CB48			loc_2299:
020A:CB48  26: 80 4C 05 80			or	byte ptr es:[si+5],80h
020A:CB4D  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:CB52  74 19				jz	loc_2301		; Jump if zero
020A:CB54  26: 8B 4D 06				mov	cx,es:[di+6]
020A:CB58  81 E1 03FF				and	cx,3FFh
020A:CB5C  03 C1				add	ax,cx
020A:CB5E  72 05				jc	loc_2300		; Jump if carry Set
020A:CB60  3D 03F0				cmp	ax,3F0h
020A:CB63  76 08				jbe	loc_2301		; Jump if below or =
020A:CB65			loc_2300:
020A:CB65  C7 06 2BA9 0000			mov	word ptr ds:[2BA9h],0	; (9B68:2BA9=0A0AAh)
020A:CB6B  EB D5				jmp	short loc_2298		; (CB42)
020A:CB6D			loc_2301:
020A:CB6D  26: 81 64 06 FC00			and	word ptr es:[si+6],0FC00h
020A:CB73  26: 09 44 06				or	es:[si+6],ax
020A:CB77  26: 8A 45 05				mov	al,es:[di+5]
020A:CB7B  24 03				and	al,3
020A:CB7D  26: 8A 64 05				mov	ah,es:[si+5]
020A:CB81  80 E4 03				and	ah,3
020A:CB84  D0 C4				rol	ah,1			; Rotate
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 428

020A:CB86  D0 C4				rol	ah,1			; Rotate
020A:CB88  0A C4				or	al,ah
020A:CB8A  53					push	bx
020A:CB8B  BB 4303				mov	bx,4303h
020A:CB8E  D7					xlat				; al=[al+[bx]] table
020A:CB8F  5B					pop	bx
020A:CB90  8A D0				mov	dl,al
020A:CB92  24 7F				and	al,7Fh
020A:CB94  32 E4				xor	ah,ah			; Zero register
020A:CB96  8B C8				mov	cx,ax
020A:CB98  E3 4B				jcxz	loc_2305		; Jump if cx=0
020A:CB9A  26: 8A 44 05				mov	al,es:[si+5]
020A:CB9E  25 000F				and	ax,0Fh
020A:CBA1  D7			data_802	db	0D7h			; Data table (indexed access)
020A:CBA2  57					push	di
020A:CBA3  56					push	si
020A:CBA4  06					push	es
020A:CBA5  1F					pop	ds
020A:CBA6  03 F0				add	si,ax
020A:CBA8  F6 C2 80				test	dl,80h
020A:CBAB  74 16				jz	loc_2302		; Jump if zero
020A:CBAD  8B FE				mov	di,si
020A:CBAF  2B F9				sub	di,cx
020A:CBB1  26: A1 0000				mov	ax,es:data_66		; (020A:0000=1828h)
020A:CBB5  26: 29 0E 0000			sub	es:data_66,cx		; (020A:0000=1828h)
020A:CBBA  8B C8				mov	cx,ax
020A:CBBC  2B CE				sub	cx,si
020A:CBBE  FC					cld				; Clear direction
020A:CBBF  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:CBC1  EB 20				jmp	short loc_2304		; (CBE3)
020A:CBC3			loc_2302:
020A:CBC3  26: A1 0000				mov	ax,es:data_66		; (020A:0000=1828h)
020A:CBC7  2B C6				sub	ax,si
020A:CBC9  26: 8B 36 0000			mov	si,es:data_66		; (020A:0000=1828h)
020A:CBCE  4E					dec	si
020A:CBCF  8B FE				mov	di,si
020A:CBD1  03 F9				add	di,cx
020A:CBD3  26: 01 0E 0000			add	es:data_66,cx		; (020A:0000=1828h)
020A:CBD8  8B C8				mov	cx,ax
020A:CBDA  73 03				jnc	loc_2303		; Jump if carry=0
020A:CBDC  E9 702A		;*		jmp	loc_498			;*(3C09)
020A:CBDC  E9 2A 70				db	0E9h, 2Ah, 70h
020A:CBDF			loc_2303:
020A:CBDF  FD					std				; Set direction flag
020A:CBE0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:CBE2  FC					cld				; Clear direction
020A:CBE3			loc_2304:
020A:CBE3  5E					pop	si
020A:CBE4  5F					pop	di
020A:CBE5			loc_2305:
020A:CBE5  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:CBEA  26: 8A 45 04				mov	al,es:[di+4]
020A:CBEE  24 3F				and	al,3Fh			; '?'
020A:CBF0  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 429

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_190		proc	near
020A:CBF5  26: 08 44 04				or	es:[si+4],al
020A:CBF9  26: 8A 45 05				mov	al,es:[di+5]
020A:CBFD  24 03				and	al,3
020A:CBFF  3C 03				cmp	al,3
020A:CC01  75 02				jne	loc_2306		; Jump if not equal
020A:CC03  FE C8				dec	al
020A:CC05			loc_2306:
020A:CC05  26: 80 64 05 FC			and	byte ptr es:[si+5],0FCh
020A:CC0A  26: 08 44 05				or	es:[si+5],al
020A:CC0E  3C 00				cmp	al,0
020A:CC10  74 1B				je	loc_2308		; Jump if equal
020A:CC12  57					push	di
020A:CC13  56					push	si
020A:CC14  B9 0002				mov	cx,2
020A:CC17  3C 01				cmp	al,1
020A:CC19  74 03				je	loc_2307		; Jump if equal
020A:CC1B  B9 000F				mov	cx,0Fh
020A:CC1E			loc_2307:
020A:CC1E  83 C7 0A				add	di,0Ah
020A:CC21  83 C6 0A				add	si,0Ah
020A:CC24  87 F7				xchg	si,di
020A:CC26  06					push	es
020A:CC27  1F					pop	ds
020A:CC28  FC					cld				; Clear direction
020A:CC29  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:CC2B  5E					pop	si
020A:CC2C  5F					pop	di
020A:CC2D			loc_2308:
020A:CC2D  E8 CFC9				call	sub_157			; (9BF9)
020A:CC30			loc_2309:
020A:CC30  E8 006D				call	sub_191			; (CCA0)
020A:CC33  26: 8A 44 05				mov	al,es:[si+5]
020A:CC37  25 000F				and	ax,0Fh
020A:CC3A  D7					xlat				; al=[al+[bx]] table
020A:CC3B  0A C0				or	al,al			; Zero ?
020A:CC3D  75 04				jnz	loc_2310		; Jump if not zero
020A:CC3F  26: 8A 44 06				mov	al,es:[si+6]
020A:CC43			loc_2310:
020A:CC43  03 F0				add	si,ax
020A:CC45  B8 FFFF				mov	ax,0FFFFh
020A:CC48  26: 39 04				cmp	es:[si],ax
020A:CC4B  75 06				jne	loc_2311		; Jump if not equal
020A:CC4D  26: 39 44 02				cmp	es:[si+2],ax
020A:CC51  74 03				je	loc_2312		; Jump if equal
020A:CC53			loc_2311:
020A:CC53  E9 FDA6				jmp	loc_2279		; (C9FC)
020A:CC56			loc_2312:
020A:CC56  26: 8A 45 05				mov	al,es:[di+5]
020A:CC5A  25 000F				and	ax,0Fh
020A:CC5D  D7					xlat				; al=[al+[bx]] table
020A:CC5E  0A C0				or	al,al			; Zero ?
020A:CC60  75 04				jnz	loc_2313		; Jump if not zero
020A:CC62  26: 8A 45 06				mov	al,es:[di+6]
020A:CC66			loc_2313:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 430

020A:CC66  03 F8				add	di,ax
020A:CC68  B8 FFFF				mov	ax,0FFFFh
020A:CC6B  26: 39 05				cmp	es:[di],ax
020A:CC6E  75 06				jne	loc_2314		; Jump if not equal
020A:CC70  26: 39 45 02				cmp	es:[di+2],ax
020A:CC74  74 21				je	loc_2318		; Jump if equal
020A:CC76			loc_2314:
020A:CC76  E9 FD5E				jmp	loc_2277		; (C9D7)
020A:CC79			loc_2315:
020A:CC79  E8 0024				call	sub_191			; (CCA0)
020A:CC7C  26: 8A 45 05				mov	al,es:[di+5]
020A:CC80  25 000F				and	ax,0Fh
020A:CC83  D7					xlat				; al=[al+[bx]] table
020A:CC84  0A C0				or	al,al			; Zero ?
020A:CC86  75 04				jnz	loc_2316		; Jump if not zero
020A:CC88  26: 8A 45 06				mov	al,es:[di+6]
020A:CC8C			loc_2316:
020A:CC8C  03 F8				add	di,ax
020A:CC8E  E9 FD46				jmp	loc_2277		; (C9D7)
020A:CC91			loc_2317:
020A:CC91  E8 000C				call	sub_191			; (CCA0)
020A:CC94  E9 FD40				jmp	loc_2277		; (C9D7)
020A:CC97			loc_2318:
020A:CC97  5D					pop	bp
020A:CC98  5F					pop	di
020A:CC99  5E					pop	si
020A:CC9A  5A					pop	dx
020A:CC9B  59					pop	cx
020A:CC9C  5B					pop	bx
020A:CC9D  58					pop	ax
020A:CC9E  C3					retn
				sub_190		endp
  
020A:CC9F  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_191		proc	near
020A:CCA0  26: 8A 45 04				mov	al,es:[di+4]
020A:CCA4  24 3F				and	al,3Fh			; '?'
020A:CCA6  8A E0				mov	ah,al
020A:CCA8  26: 8B 4D 08				mov	cx,es:[di+8]
020A:CCAC  3C 21				cmp	al,21h			; '!'
020A:CCAE  75 09				jne	loc_2319		; Jump if not equal
020A:CCB0  83 F9 06				cmp	cx,6
020A:CCB3  77 32				ja	loc_2323		; Jump if above
020A:CCB5  B4 01				mov	ah,1
020A:CCB7  EB 25				jmp	short loc_2322		; (CCDE)
020A:CCB9			loc_2319:
020A:CCB9  3C 22				cmp	al,22h			; '"'
020A:CCBB  75 09				jne	loc_2320		; Jump if not equal
020A:CCBD  83 F9 06				cmp	cx,6
020A:CCC0  77 25				ja	loc_2323		; Jump if above
020A:CCC2  B4 02				mov	ah,2
020A:CCC4  EB 18				jmp	short loc_2322		; (CCDE)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 431

020A:CCC6			loc_2320:
020A:CCC6  3C 04				cmp	al,4
020A:CCC8  75 09				jne	loc_2321		; Jump if not equal
020A:CCCA  83 F9 04				cmp	cx,4
020A:CCCD  73 18				jae	loc_2323		; Jump if above or =
020A:CCCF  B4 02				mov	ah,2
020A:CCD1  B0 02				mov	al,2
020A:CCD3			loc_2321:
020A:CCD3  3C 02				cmp	al,2
020A:CCD5  75 07				jne	loc_2322		; Jump if not equal
020A:CCD7  83 F9 02				cmp	cx,2
020A:CCDA  73 02				jae	loc_2322		; Jump if above or =
020A:CCDC  B4 01				mov	ah,1
020A:CCDE			loc_2322:
020A:CCDE  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:CCE3  26: 08 65 04				or	es:[di+4],ah
020A:CCE7			loc_2323:
020A:CCE7  C3					retn
				sub_191		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_192		proc	near
020A:CCE8  53					push	bx
020A:CCE9  57					push	di
020A:CCEA  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:CCEF  06					push	es
020A:CCF0  26: 8B 05				mov	ax,es:[di]
020A:CCF3  26: 8B 5D 02				mov	bx,es:[di+2]
020A:CCF7  E8 CF0B				call	sub_159			; (9C05)
020A:CCFA  BF 0000				mov	di,0
020A:CCFD			loc_2324:
020A:CCFD  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:CD01  75 07				jne	loc_2325		; Jump if not equal
020A:CD03  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:CD08  74 1A				je	loc_2328		; Jump if equal
020A:CD0A			loc_2325:
020A:CD0A  26: 3B 05				cmp	ax,es:[di]
020A:CD0D  75 0C				jne	loc_2326		; Jump if not equal
020A:CD0F  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:CD13  72 06				jb	loc_2326		; Jump if below
020A:CD15  26: 3B 5D 04				cmp	bx,es:[di+4]
020A:CD19  76 05				jbe	loc_2327		; Jump if below or =
020A:CD1B			loc_2326:
020A:CD1B  83 C7 15				add	di,15h
020A:CD1E  EB DD				jmp	short loc_2324		; (CCFD)
020A:CD20			loc_2327:
020A:CD20  F9					stc				; Set carry flag
020A:CD21  9F					lahf				; Load ah from flags
020A:CD22  EB 02				jmp	short loc_2329		; (CD26)
020A:CD24			loc_2328:
020A:CD24  F8					clc				; Clear carry flag
020A:CD25  9F					lahf				; Load ah from flags
020A:CD26			loc_2329:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 432

020A:CD26  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:CD2B  5A					pop	dx
020A:CD2C  8E C2				mov	es,dx
020A:CD2E  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:CD33  5A					pop	dx
020A:CD34  75 0A				jnz	loc_2330		; Jump if not zero
020A:CD36  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:CD3B  74 03				je	loc_2330		; Jump if equal
020A:CD3D  E8 D1A4				call	sub_168			; (9EE4)
020A:CD40			loc_2330:
020A:CD40  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:CD45  5F					pop	di
020A:CD46  5B					pop	bx
020A:CD47  9E					sahf				; Store ah into flags
020A:CD48  C3					retn
				sub_192		endp
  
020A:CD49  87 DB				xchg	bx,bx
020A:CD4B  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_193		proc	near
020A:CD4C  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:CD51  06					push	es
020A:CD52  C7 06 278D 0000			mov	word ptr ds:[278Dh],0	; (9B68:278D=0A0Dh)
020A:CD58  C7 06 278F 0000			mov	word ptr ds:[278Fh],0	; (9B68:278F=0A0Dh)
020A:CD5E  80 3E 26E8 00			cmp	byte ptr ds:[26E8h],0	; (9B68:26E8=49h)
020A:CD63  74 3A				je	loc_2332		; Jump if equal
020A:CD65  B4 19				mov	ah,19h
020A:CD67  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:CD69  8A D0				mov	dl,al
020A:CD6B  04 61				add	al,61h			; 'a'
020A:CD6D  A2 2728				mov	byte ptr ds:[2728h],al	; (9B68:2728=0E2h)
020A:CD70  C7 06 2729 5C3A			mov	word ptr ds:[2729h],5C3Ah	; (9B68:2729=0AAA5h)
020A:CD76  B4 47				mov	ah,47h			; 'G'
020A:CD78  FE C2				inc	dl
020A:CD7A  BE 272B				mov	si,272Bh
020A:CD7D  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
020A:CD7F  80 3E 26E9 3A			cmp	byte ptr ds:[26E9h],3Ah	; (9B68:26E9=46h) ':'
020A:CD84  75 0E				jne	loc_2331		; Jump if not equal
020A:CD86  8A 16 26E8				mov	dl,byte ptr ds:[26E8h]	; (9B68:26E8=49h)
020A:CD8A  80 CA 60				or	dl,60h			; '`'
020A:CD8D  80 EA 61				sub	dl,61h			; 'a'
020A:CD90  B4 0E				mov	ah,0Eh
020A:CD92  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:CD94			loc_2331:
020A:CD94  B4 3B				mov	ah,3Bh			; ';'
020A:CD96  BA 26E8				mov	dx,26E8h
020A:CD99  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:CD9B  73 02				jnc	loc_2332		; Jump if carry=0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 433

020A:CD9D  EB 21				jmp	short loc_2335		; (CDC0)
020A:CD9F			loc_2332:
020A:CD9F  B4 29				mov	ah,29h			; ')'
020A:CDA1  B0 01				mov	al,1
020A:CDA3  BE 26DA				mov	si,26DAh
020A:CDA6  E8 CE65				call	sub_162			; (9C0E)
020A:CDA9  BF 2768				mov	di,2768h
020A:CDAC  CD 21				int	21h			; DOS Services  ah=function 29h
										;  parse filenam @ds:si FCBes:di
020A:CDAE  3C 00				cmp	al,0
020A:CDB0  74 02				je	loc_2334		; Jump if equal
020A:CDB2  EB 0C				jmp	short loc_2335		; (CDC0)
020A:CDB4			loc_2334:
020A:CDB4  B4 23				mov	ah,23h			; '#'
020A:CDB6  8B D7				mov	dx,di
020A:CDB8  C7 06 2776 0001			mov	word ptr ds:[2776h],1	; (9B68:2776=2CA0h)
020A:CDBE  CD 21				int	21h			; DOS Services  ah=function 23h
										;  get file size, FCB @ ds:dx
020A:CDC0			loc_2335:
020A:CDC0  80 3E 26E8 00			cmp	byte ptr ds:[26E8h],0	; (9B68:26E8=49h)
020A:CDC5  74 07				je	loc_2336		; Jump if equal
020A:CDC7  B4 3B				mov	ah,3Bh			; ';'
020A:CDC9  BA 2728				mov	dx,2728h
020A:CDCC  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:CDCE			loc_2336:
020A:CDCE  A1 278B				mov	ax,word ptr ds:[278Bh]	; (9B68:278B=2EE2h)
020A:CDD1  A3 278F				mov	word ptr ds:[278Fh],ax	; (9B68:278F=0A0Dh)
020A:CDD4  A1 2789				mov	ax,word ptr ds:[2789h]	; (9B68:2789=0EEE3h)
020A:CDD7  A3 278D				mov	word ptr ds:[278Dh],ax	; (9B68:278D=0A0Dh)
020A:CDDA  B4 3D				mov	ah,3Dh			; '='
020A:CDDC  B0 00				mov	al,0
020A:CDDE  BA 2BB2				mov	dx,2BB2h
020A:CDE1  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:CDE3  73 05				jnc	loc_2337		; Jump if carry=0
020A:CDE5  B3 01				mov	bl,1
020A:CDE7  E9 00C5				jmp	loc_2349		; (CEAF)
020A:CDEA			loc_2337:
020A:CDEA  A3 37EC				mov	word ptr ds:[37ECh],ax	; (9B68:37EC=3F93h)
020A:CDED  E8 CE1E				call	sub_162			; (9C0E)
020A:CDF0  B9 1063				mov	cx,1063h
020A:CDF3  81 E9 0BE3				sub	cx,0BE3h
020A:CDF7  BA 0BE3				mov	dx,0BE3h
020A:CDFA  8B 1E 37EC				mov	bx,word ptr ds:[37ECh]	; (9B68:37EC=3F93h)
020A:CDFE  E8 CDFB				call	sub_158			; (9BFC)
020A:CE01  B4 3F				mov	ah,3Fh			; '?'
020A:CE03  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, cx=bytes, to ds:dx
020A:CE05  E8 CDF1				call	sub_157			; (9BF9)
020A:CE08  73 03				jnc	loc_2338		; Jump if carry=0
020A:CE0A  E9 00A0				jmp	loc_2348		; (CEAD)
020A:CE0D			loc_2338:
020A:CE0D  E8 CE01				call	sub_163			; (9C11)
020A:CE10  BE 0BE3				mov	si,0BE3h
020A:CE13  26: 81 3C 5A4D			cmp	word ptr es:[si],5A4Dh
020A:CE18  74 03				je	loc_2339		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 434

020A:CE1A  E9 008E				jmp	loc_2347		; (CEAB)
020A:CE1D			loc_2339:
020A:CE1D  26: 8B 44 04				mov	ax,es:[si+4]
020A:CE21  33 D2				xor	dx,dx			; Zero register
020A:CE23  B9 0009				mov	cx,9
  
020A:CE26			locloop_2340:
020A:CE26  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:CE28  D1 D2				rcl	dx,1			; Rotate thru carry
020A:CE2A  E2 FA				loop	locloop_2340		; Loop if cx > 0
  
020A:CE2C  26: 8B 4C 02				mov	cx,es:[si+2]
020A:CE30  83 F9 00				cmp	cx,0
020A:CE33  74 0C				je	loc_2341		; Jump if equal
020A:CE35  B9 0200				mov	cx,200h
020A:CE38  26: 2B 4C 02				sub	cx,es:[si+2]
020A:CE3C  2B C1				sub	ax,cx
020A:CE3E  83 DA 00				sbb	dx,0
020A:CE41			loc_2341:
020A:CE41  50					push	ax
020A:CE42  52					push	dx
020A:CE43  26: 8B 44 08				mov	ax,es:[si+8]
020A:CE47  B9 0004				mov	cx,4
020A:CE4A  33 D2				xor	dx,dx			; Zero register
  
020A:CE4C			locloop_2342:
020A:CE4C  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:CE4E  D1 D2				rcl	dx,1			; Rotate thru carry
020A:CE50  E2 FA				loop	locloop_2342		; Loop if cx > 0
  
020A:CE52  29 06 278D				sub	word ptr ds:[278Dh],ax	; (9B68:278D=0A0Dh)
020A:CE56  19 16 278F				sbb	word ptr ds:[278Fh],dx	; (9B68:278F=0A0Dh)
020A:CE5A  5A					pop	dx
020A:CE5B  58					pop	ax
020A:CE5C  3B 16 278F				cmp	dx,word ptr ds:[278Fh]	; (9B68:278F=0A0Dh)
020A:CE60  74 0B				je	loc_2343		; Jump if equal
020A:CE62  77 16				ja	loc_2344		; Jump if above
020A:CE64  A3 278D				mov	word ptr ds:[278Dh],ax	; (9B68:278D=0A0Dh)
020A:CE67  89 16 278F				mov	word ptr ds:[278Fh],dx	; (9B68:278F=0A0Dh)
020A:CE6B  EB 0D				jmp	short loc_2344		; (CE7A)
020A:CE6D			loc_2343:
020A:CE6D  3B 06 278D				cmp	ax,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:CE71  73 07				jae	loc_2344		; Jump if above or =
020A:CE73  A3 278D				mov	word ptr ds:[278Dh],ax	; (9B68:278D=0A0Dh)
020A:CE76  89 16 278F				mov	word ptr ds:[278Fh],dx	; (9B68:278F=0A0Dh)
020A:CE7A			loc_2344:
020A:CE7A  26: 8B 44 0E				mov	ax,es:[si+0Eh]
020A:CE7E  26: 8B 5C 10				mov	bx,es:[si+10h]
020A:CE82  9A 16FA:1694		;*		call	far ptr sub_274		;*(16FA:1694)
020A:CE82  9A 94 16 FA 16			db	 9Ah, 94h, 16h,0FAh, 16h
020A:CE87  3B 06 278F				cmp	ax,word ptr ds:[278Fh]	; (9B68:278F=0A0Dh)
020A:CE8B  72 0F				jb	loc_2346		; Jump if below
020A:CE8D  77 06				ja	loc_2345		; Jump if above
020A:CE8F  3B 1E 278D				cmp	bx,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:CE93  76 07				jbe	loc_2346		; Jump if below or =
020A:CE95			loc_2345:
020A:CE95  A3 278F				mov	word ptr ds:[278Fh],ax	; (9B68:278F=0A0Dh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 435

020A:CE98  89 1E 278D				mov	word ptr ds:[278Dh],bx	; (9B68:278D=0A0Dh)
020A:CE9C			loc_2346:
020A:CE9C  C6 06 2C3F 03			mov	byte ptr ds:[2C3Fh],3	; (9B68:2C3F=0ABh)
020A:CEA1  C6 06 2C40 03			mov	byte ptr ds:[2C40h],3	; (9B68:2C40=0E3h)
020A:CEA6  9A 16FA:066C		;*		call	far ptr sub_242		;*(16FA:066C)
020A:CEA6  9A 6C 06 FA 16			db	 9Ah, 6Ch, 06h,0FAh, 16h
020A:CEAB			loc_2347:
020A:CEAB  EB 02				jmp	short loc_2349		; (CEAF)
020A:CEAD			loc_2348:
020A:CEAD  B3 0E				mov	bl,0Eh
020A:CEAF			loc_2349:
020A:CEAF  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:CEB4  5A					pop	dx
020A:CEB5  8E C2				mov	es,dx
020A:CEB7  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:CEBC  5A					pop	dx
020A:CEBD  75 0A				jnz	loc_2350		; Jump if not zero
020A:CEBF  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:CEC4  74 03				je	loc_2350		; Jump if equal
020A:CEC6  E8 D01B				call	sub_168			; (9EE4)
020A:CEC9			loc_2350:
020A:CEC9  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:CECE  C3					retn
				sub_193		endp
  
020A:CECF  90					nop
020A:CED0  50					push	ax
020A:CED1  53					push	bx
020A:CED2  57					push	di
020A:CED3  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:CED8  06					push	es
020A:CED9  1E					push	ds
020A:CEDA  BF 0008				mov	di,8
020A:CEDD  8B 1E 2D82				mov	bx,data_423		; (020A:2D82=5357h)
020A:CEE1  E8 D11C				call	sub_171			; (A000)
020A:CEE4  E8 CD12				call	sub_157			; (9BF9)
020A:CEE7			loc_2351:
020A:CEE7  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:CEEB  75 09				jne	loc_2352		; Jump if not equal
020A:CEED  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:CEF2  75 02				jne	loc_2352		; Jump if not equal
020A:CEF4  EB 1E				jmp	short loc_2354		; (CF14)
020A:CEF6			loc_2352:
020A:CEF6  26: 80 65 04 FE			and	byte ptr es:[di+4],0FEh
020A:CEFB  EB 00				jmp	short $+2		; delay for I/O
020A:CEFD  BB 377F				mov	bx,377Fh
020A:CF00  26: 8A 45 05				mov	al,es:[di+5]
020A:CF04  25 000F				and	ax,0Fh
020A:CF07  D7					xlat				; al=[al+[bx]] table
020A:CF08  0A C0				or	al,al			; Zero ?
020A:CF0A  75 04				jnz	loc_2353		; Jump if not zero
020A:CF0C  26: 8A 45 06				mov	al,es:[di+6]
020A:CF10			loc_2353:
020A:CF10  03 F8				add	di,ax
020A:CF12  EB D3				jmp	short loc_2351		; (CEE7)
020A:CF14			loc_2354:
020A:CF14  1F					pop	ds
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 436

020A:CF15  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:CF1A  5A					pop	dx
020A:CF1B  8E C2				mov	es,dx
020A:CF1D  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:CF22  5A					pop	dx
020A:CF23  75 0A				jnz	loc_2355		; Jump if not zero
020A:CF25  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:CF2A  74 03				je	loc_2355		; Jump if equal
020A:CF2C  E8 CFB5				call	sub_168			; (9EE4)
020A:CF2F			loc_2355:
020A:CF2F  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:CF34  5F					pop	di
020A:CF35  5B					pop	bx
020A:CF36  58					pop	ax
020A:CF37  C3					retn
020A:CF38  26: 8A 45 12				mov	al,es:[di+12h]
020A:CF3C  F6 06 2A77 E0			test	data_391,0E0h		; (020A:2A77=0A5h)
020A:CF41  75 02				jnz	loc_2356		; Jump if not zero
020A:CF43  0C 01				or	al,1
020A:CF45			loc_2356:
020A:CF45  F6 D0				not	al
020A:CF47  22 06 2ECC				and	al,data_455		; (020A:2ECC=57h)
020A:CF4B  75 03				jnz	loc_2357		; Jump if not zero
020A:CF4D  E9 0099				jmp	loc_2364		; (CFE9)
020A:CF50			loc_2357:
020A:CF50  3C 40				cmp	al,40h			; '@'
020A:CF52  75 57				jne	loc_2362		; Jump if not equal
020A:CF54  F6 06 2A79 07			test	data_393,7		; (020A:2A79=0E0h)
020A:CF59  74 50				jz	loc_2362		; Jump if zero
020A:CF5B  80 26 2ECC BF			and	data_455,0BFh		; (020A:2ECC=57h)
020A:CF60  F6 06 2ECC 7F			test	data_455,7Fh		; (020A:2ECC=57h)
020A:CF65  74 06				jz	loc_2358		; Jump if zero
020A:CF67  FF 06 2ECD				inc	data_456		; (020A:2ECD=4E49h)
020A:CF6B  EB 06				jmp	short loc_2359		; (CF73)
020A:CF6D			loc_2358:
020A:CF6D  C7 06 2ECD FFFF			mov	data_456,0FFFFh		; (020A:2ECD=4E49h)
020A:CF73			loc_2359:
020A:CF73  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:CF78  74 02				je	loc_2360		; Jump if equal
020A:CF7A  EB 6D				jmp	short loc_2364		; (CFE9)
020A:CF7C			loc_2360:
020A:CF7C  52					push	dx
020A:CF7D  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:CF82  06					push	es
020A:CF83  BA 2853				mov	dx,2853h
020A:CF86  E8 AFCF				call	sub_113			; (7F58)
020A:CF89  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:CF8E  5A					pop	dx
020A:CF8F  8E C2				mov	es,dx
020A:CF91  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:CF96  5A					pop	dx
020A:CF97  75 0A				jnz	loc_2361		; Jump if not zero
020A:CF99  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:CF9E  74 03				je	loc_2361		; Jump if equal
020A:CFA0  E8 CF41				call	sub_168			; (9EE4)
020A:CFA3			loc_2361:
020A:CFA3  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 437

020A:CFA8  5A					pop	dx
020A:CFA9  EB 3E				jmp	short loc_2364		; (CFE9)
020A:CFAB			loc_2362:
020A:CFAB  A1 2ECD				mov	ax,data_456		; (020A:2ECD=4E49h)
020A:CFAE  A3 2D84				mov	data_424,ax		; (020A:2D84=735Ch)
020A:CFB1  C6 06 2ECC 00			mov	data_455,0		; (020A:2ECC=57h)
020A:CFB6  C6 06 2F01 00			mov	data_473,0		; (020A:2F01=44h)
020A:CFBB  C7 06 2ECD FFFF			mov	data_456,0FFFFh		; (020A:2ECD=4E49h)
020A:CFC1  C7 06 2A16 0000			mov	data_359,0		; (020A:2A16=20E0h)
020A:CFC7  80 0E 2D8D 05			or	data_429,5		; (020A:2D8D=3Bh)
020A:CFCC  C6 06 2A7A 00			mov	data_394,0		; (020A:2A7A=0A5h)
020A:CFD1  E8 BCFC				call	sub_139			; (8CD0)
020A:CFD4  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (AAAE:263E=0)
020A:CFD9  75 0B				jne	loc_2363		; Jump if not equal
020A:CFDB  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (AAAE:2D84=0)
020A:CFDE  BD 27CF				mov	bp,27CFh
020A:CFE1  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:CFE1  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:CFE6			loc_2363:
020A:CFE6  F9					stc				; Set carry flag
020A:CFE7  EB 01				jmp	short loc_2365		; (CFEA)
020A:CFE9			loc_2364:
020A:CFE9  F8					clc				; Clear carry flag
020A:CFEA			loc_2365:
020A:CFEA  C3					retn
020A:CFEB  90					nop
020A:CFEC  C7 06 2ECD FFFF			mov	data_456,0FFFFh		; (020A:2ECD=4E49h)
020A:CFF2  C6 06 2ECC 00			mov	data_455,0		; (020A:2ECC=57h)
020A:CFF7  C6 06 2F01 00			mov	data_473,0		; (020A:2F01=44h)
020A:CFFC  2E: C6 06 F5BA 90			mov	byte ptr cs:data_867,90h	; (020A:F5BA=75h)
020A:D002  2E: C6 06 F5BB 90			mov	byte ptr cs:data_868,90h	; (020A:F5BB=2Ah)
020A:D008  2E: C6 06 F5BC 90			mov	byte ptr cs:data_869,90h	; (020A:F5BC=78h)
020A:D00E  2E: C6 06 F5BD 90			mov	byte ptr cs:data_870,90h	; (020A:F5BD=75h)
020A:D014  C6 06 4201 20			mov	data_586,20h		; (020A:4201=0E8h) ' '
020A:D019  80 26 2ECA CF			and	byte ptr ds:[2ECAh],0CFh	; (020A:2ECA=3Ah)
020A:D01E  80 26 2ECA FC			and	byte ptr ds:[2ECAh],0FCh	; (020A:2ECA=3Ah)
020A:D023  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (020A:2ECA=3Ah)
020A:D028  74 05				jz	loc_2366		; Jump if zero
020A:D02A  80 0E 2ECA 03			or	byte ptr ds:[2ECAh],3	; (020A:2ECA=3Ah)
020A:D02F			loc_2366:
020A:D02F  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_194		proc	near
020A:D030  50					push	ax
020A:D031  53					push	bx
020A:D032  51					push	cx
020A:D033  52					push	dx
020A:D034  56					push	si
020A:D035  57					push	di
020A:D036  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D03B  06					push	es
020A:D03C  F6 06 2ECC 06			test	byte ptr ds:[2ECCh],6	; (9B68:2ECC=0AEh)
020A:D041  75 02				jnz	loc_2367		; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 438

020A:D043  EB 5B				jmp	short loc_2371		; (D0A0)
020A:D045			loc_2367:
020A:D045  FC					cld				; Clear direction
020A:D046  A0 2A75				mov	al,byte ptr ds:[2A75h]	; (9B68:2A75=0A0h)
020A:D049  A2 2A76				mov	byte ptr ds:[2A76h],al	; (9B68:2A76=0A9h)
020A:D04C  C6 06 2A75 34			mov	byte ptr ds:[2A75h],34h	; (9B68:2A75=0A0h) '4'
020A:D051  E8 CBBA				call	sub_162			; (9C0E)
020A:D054  BE 27FA				mov	si,27FAh
020A:D057  BF 2802				mov	di,2802h
020A:D05A  B9 0007				mov	cx,7
020A:D05D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:D05F  BD 27FA				mov	bp,27FAh
020A:D062  BE 30C5				mov	si,30C5h
020A:D065  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:D065  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:D06A  BD 27FD				mov	bp,27FDh
020A:D06D  F6 06 2ECC 04			test	byte ptr ds:[2ECCh],4	; (9B68:2ECC=0AEh)
020A:D072  75 0E				jnz	loc_2368		; Jump if not zero
020A:D074  8A C2				mov	al,dl
020A:D076  0C 01				or	al,1
020A:D078  3C 71				cmp	al,71h			; 'q'
020A:D07A  74 15				je	loc_2369		; Jump if equal
020A:D07C  3C 7B				cmp	al,7Bh			; '{'
020A:D07E  74 11				je	loc_2369		; Jump if equal
020A:D080  EB 1E				jmp	short loc_2371		; (D0A0)
020A:D082			loc_2368:
020A:D082  C6 06 2A75 35			mov	byte ptr ds:[2A75h],35h	; (9B68:2A75=0A0h) '5'
020A:D087  A0 340A				mov	al,byte ptr ds:[340Ah]	; (9B68:340A=6)
020A:D08A  3E: 88 46 00				mov	ds:[bp],al
020A:D08E  45					inc	bp
020A:D08F  EB 05				jmp	short loc_2370		; (D096)
020A:D091			loc_2369:
020A:D091  C6 06 2A75 69			mov	byte ptr ds:[2A75h],69h	; (9B68:2A75=0A0h) 'i'
020A:D096			loc_2370:
020A:D096  A0 3401				mov	al,byte ptr ds:[3401h]	; (9B68:3401=0Bh)
020A:D099  3E: 88 46 00				mov	ds:[bp],al
020A:D09D  45					inc	bp
020A:D09E  EB 00				jmp	short loc_2371		; (D0A0)
020A:D0A0			loc_2371:
020A:D0A0  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:D0A5  75 50				jnz	loc_2376		; Jump if not zero
020A:D0A7  8A 1E 2ECA				mov	bl,byte ptr ds:[2ECAh]	; (9B68:2ECA=20h)
020A:D0AB  80 E3 07				and	bl,7
020A:D0AE  80 FB 00				cmp	bl,0
020A:D0B1  74 65				je	loc_2379		; Jump if equal
020A:D0B3  80 FB 06				cmp	bl,6
020A:D0B6  74 60				je	loc_2379		; Jump if equal
020A:D0B8  80 FB 07				cmp	bl,7
020A:D0BB  75 07				jne	loc_2372		; Jump if not equal
020A:D0BD  F6 C2 01				test	dl,1
020A:D0C0  74 56				jz	loc_2379		; Jump if zero
020A:D0C2  EB 15				jmp	short loc_2374		; (D0D9)
020A:D0C4			loc_2372:
020A:D0C4  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:D0C9  74 07				jz	loc_2373		; Jump if zero
020A:D0CB  80 FB 07				cmp	bl,7
020A:D0CE  74 09				je	loc_2374		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 439

020A:D0D0  EB 25				jmp	short loc_2376		; (D0F7)
020A:D0D2			loc_2373:
020A:D0D2  80 FB 01				cmp	bl,1
020A:D0D5  74 02				je	loc_2374		; Jump if equal
020A:D0D7  EB 1E				jmp	short loc_2376		; (D0F7)
020A:D0D9			loc_2374:
020A:D0D9  BF 27FA				mov	di,27FAh
020A:D0DC  F6 06 2ECC 06			test	byte ptr ds:[2ECCh],6	; (9B68:2ECC=0AEh)
020A:D0E1  74 03				jz	loc_2375		; Jump if zero
020A:D0E3  BF 2802				mov	di,2802h
020A:D0E6			loc_2375:
020A:D0E6  A0 3413				mov	al,byte ptr ds:[3413h]	; (9B68:3413=0)
020A:D0E9  B9 0007				mov	cx,7
020A:D0EC  FC					cld				; Clear direction
020A:D0ED  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:D0EF  4F					dec	di
020A:D0F0  A0 3400				mov	al,byte ptr ds:[3400h]	; (9B68:3400=20h)
020A:D0F3  88 05				mov	[di],al
020A:D0F5  EB 21				jmp	short loc_2379		; (D118)
020A:D0F7			loc_2376:
020A:D0F7  BF 27FA				mov	di,27FAh
020A:D0FA  F6 06 2ECC 06			test	byte ptr ds:[2ECCh],6	; (9B68:2ECC=0AEh)
020A:D0FF  74 03				jz	loc_2377		; Jump if zero
020A:D101  BF 2802				mov	di,2802h
020A:D104			loc_2377:
020A:D104  A0 3413				mov	al,byte ptr ds:[3413h]	; (9B68:3413=0)
020A:D107  F6 C2 01				test	dl,1
020A:D10A  75 03				jnz	loc_2378		; Jump if not zero
020A:D10C  A0 33FE				mov	al,byte ptr ds:[33FEh]	; (9B68:33FE=0Ah)
020A:D10F			loc_2378:
020A:D10F  B9 0007				mov	cx,7
020A:D112  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:D114  4F					dec	di
020A:D115  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:D118			loc_2379:
020A:D118  BF 27FA				mov	di,27FAh
020A:D11B  F6 06 2ECC 06			test	byte ptr ds:[2ECCh],6	; (9B68:2ECC=0AEh)
020A:D120  74 03				jz	loc_2380		; Jump if zero
020A:D122  BF 2802				mov	di,2802h
020A:D125			loc_2380:
020A:D125  B9 0007				mov	cx,7
020A:D128  B0 20				mov	al,20h			; ' '
020A:D12A  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:D12C  8B EF				mov	bp,di
020A:D12E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D133  5A					pop	dx
020A:D134  8E C2				mov	es,dx
020A:D136  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D13B  5A					pop	dx
020A:D13C  75 0A				jnz	loc_2381		; Jump if not zero
020A:D13E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D143  74 03				je	loc_2381		; Jump if equal
020A:D145  E8 CD9C				call	sub_168			; (9EE4)
020A:D148			loc_2381:
020A:D148  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D14D  5F					pop	di
020A:D14E  5E					pop	si
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 440

020A:D14F  5A					pop	dx
020A:D150  59					pop	cx
020A:D151  5B					pop	bx
020A:D152  58					pop	ax
020A:D153  C3					retn
				sub_194		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_195		proc	near
020A:D154  80 3E 2A7E 01			cmp	byte ptr ds:[2A7Eh],1	; (D233:2A7E=0)
020A:D159  74 03				je	loc_2382		; Jump if equal
020A:D15B  E9 00F5				jmp	loc_2393		; (D253)
020A:D15E			loc_2382:
020A:D15E  50					push	ax
020A:D15F  53					push	bx
020A:D160  51					push	cx
020A:D161  56					push	si
020A:D162  32 ED				xor	ch,ch			; Zero register
020A:D164  A0 2A7D				mov	al,byte ptr ds:[2A7Dh]	; (D233:2A7D=0)
020A:D167  24 07				and	al,7
020A:D169  3C 05				cmp	al,5
020A:D16B  75 3D				jne	loc_2384		; Jump if not equal
020A:D16D  FE C5				inc	ch
020A:D16F  8A 26 2A7C				mov	ah,byte ptr ds:[2A7Ch]	; (D233:2A7C=0)
020A:D173  80 E4 C4				and	ah,0C4h
020A:D176  80 FC 04				cmp	ah,4
020A:D179  75 2F				jne	loc_2384		; Jump if not equal
020A:D17B  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=0BAh)
020A:D180  74 09				jz	loc_2383		; Jump if zero
020A:D182  8A 3E 2A62				mov	bh,byte ptr ds:[2A62h]	; (D233:2A62=1Fh)
020A:D186  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:D186  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:D18B			loc_2383:
020A:D18B  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:D190  45					inc	bp
020A:D191  A1 2ED2				mov	ax,word ptr ds:[2ED2h]	; (D233:2ED2=0E9E8h)
020A:D194  8B 1E 2ED0				mov	bx,word ptr ds:[2ED0h]	; (D233:2ED0=0FBAEh)
020A:D198  9A 16FA:01E8		;*		call	far ptr sub_229		;*(16FA:01E8)
020A:D198  9A E8 01 FA 16			db	 9Ah,0E8h, 01h,0FAh, 16h
020A:D19D  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:D1A2  45					inc	bp
020A:D1A3  80 26 2A7F FE			and	byte ptr ds:[2A7Fh],0FEh	; (D233:2A7F=0)
020A:D1A8  EB 42				jmp	short loc_2387		; (D1EC)
020A:D1AA			loc_2384:
020A:D1AA  8A E0				mov	ah,al
020A:D1AC  02 C4				add	al,ah
020A:D1AE  02 C4				add	al,ah
020A:D1B0  BE 2FA9				mov	si,2FA9h
020A:D1B3  32 E4				xor	ah,ah			; Zero register
020A:D1B5  03 F0				add	si,ax
020A:D1B7  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:D1BC  45					inc	bp
020A:D1BD  8B 04				mov	ax,[si]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 441

020A:D1BF  3E: 89 46 00				mov	ds:[bp],ax
020A:D1C3  83 C6 02				add	si,2
020A:D1C6  83 C5 02				add	bp,2
020A:D1C9  8A 04				mov	al,[si]
020A:D1CB  3E: 88 46 00				mov	ds:[bp],al
020A:D1CF  45					inc	bp
020A:D1D0  80 FD 01				cmp	ch,1
020A:D1D3  75 0E				jne	loc_2385		; Jump if not equal
020A:D1D5  80 3E 2ED0 00			cmp	byte ptr ds:[2ED0h],0	; (D233:2ED0=0AEh)
020A:D1DA  75 07				jne	loc_2385		; Jump if not equal
020A:D1DC  80 3E 2ECF 01			cmp	byte ptr ds:[2ECFh],1	; (D233:2ECF=0E8h)
020A:D1E1  74 03				je	loc_2386		; Jump if equal
020A:D1E3			loc_2385:
020A:D1E3  E8 00CA				call	sub_197			; (D2B0)
020A:D1E6			loc_2386:
020A:D1E6  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:D1EB  45					inc	bp
020A:D1EC			loc_2387:
020A:D1EC  A0 2A7D				mov	al,byte ptr ds:[2A7Dh]	; (D233:2A7D=0)
020A:D1EF  B1 03				mov	cl,3
020A:D1F1  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:D1F3  24 07				and	al,7
020A:D1F5  3C 04				cmp	al,4
020A:D1F7  74 56				je	loc_2392		; Jump if equal
020A:D1F9  8A E0				mov	ah,al
020A:D1FB  02 C4				add	al,ah
020A:D1FD  02 C4				add	al,ah
020A:D1FF  BE 2FA9				mov	si,2FA9h
020A:D202  32 E4				xor	ah,ah			; Zero register
020A:D204  03 F0				add	si,ax
020A:D206  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:D20B  45					inc	bp
020A:D20C  8B 04				mov	ax,[si]
020A:D20E  3E: 89 46 00				mov	ds:[bp],ax
020A:D212  83 C6 02				add	si,2
020A:D215  83 C5 02				add	bp,2
020A:D218  8A 04				mov	al,[si]
020A:D21A  3E: 88 46 00				mov	ds:[bp],al
020A:D21E  45					inc	bp
020A:D21F  A0 2A7D				mov	al,byte ptr ds:[2A7Dh]	; (D233:2A7D=0)
020A:D222  B1 06				mov	cl,6
020A:D224  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:D226  24 03				and	al,3
020A:D228  3C 00				cmp	al,0
020A:D22A  74 1D				je	loc_2391		; Jump if equal
020A:D22C  3E: C6 46 00 2A			mov	byte ptr ds:[bp],2Ah	; '*'
020A:D231  45					inc	bp
020A:D232  3C 01				cmp	al,1
020A:D234  75 04				jne	loc_2388		; Jump if not equal
020A:D236  B0 32				mov	al,32h			; '2'
020A:D238  EB 0A				jmp	short loc_2390		; (D244)
020A:D23A			loc_2388:
020A:D23A  3C 02				cmp	al,2
020A:D23C  75 04				jne	loc_2389		; Jump if not equal
020A:D23E  B0 34				mov	al,34h			; '4'
020A:D240  EB 02				jmp	short loc_2390		; (D244)
020A:D242			loc_2389:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 442

020A:D242  B0 38				mov	al,38h			; '8'
020A:D244			loc_2390:
020A:D244  3E: 88 46 00				mov	ds:[bp],al
020A:D248  45					inc	bp
020A:D249			loc_2391:
020A:D249  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:D24E  45					inc	bp
020A:D24F			loc_2392:
020A:D24F  5E					pop	si
020A:D250  59					pop	cx
020A:D251  5B					pop	bx
020A:D252  58					pop	ax
020A:D253			loc_2393:
020A:D253  C3					retn
				sub_195		endp
  
020A:D254  52					push	dx
020A:D255  51					push	cx
020A:D256  57					push	di
020A:D257  56					push	si
020A:D258  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D25D  06					push	es
020A:D25E  BE 27B5				mov	si,27B5h
020A:D261  80 3C 00				cmp	byte ptr [si],0
020A:D264  74 15				je	loc_2394		; Jump if equal
020A:D266  BF 27D5				mov	di,27D5h
020A:D269  E8 C508				call	sub_148			; (9774)
020A:D26C  B9 0015				mov	cx,15h
020A:D26F  E8 C99C				call	sub_162			; (9C0E)
020A:D272  FC					cld				; Clear direction
020A:D273  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:D275  BA 27CA				mov	dx,27CAh
020A:D278  E8 ACDD				call	sub_113			; (7F58)
020A:D27B			loc_2394:
020A:D27B  C6 06 27B5 00			mov	byte ptr ds:[27B5h],0	; (9B68:27B5=20h)
020A:D280  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D285  5A					pop	dx
020A:D286  8E C2				mov	es,dx
020A:D288  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D28D  5A					pop	dx
020A:D28E  75 0A				jnz	loc_2395		; Jump if not zero
020A:D290  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D295  74 03				je	loc_2395		; Jump if equal
020A:D297  E8 CC4A				call	sub_168			; (9EE4)
020A:D29A			loc_2395:
020A:D29A  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D29F  5E					pop	si
020A:D2A0  5F					pop	di
020A:D2A1  59					pop	cx
020A:D2A2  5A					pop	dx
020A:D2A3  C3					retn
020A:D2A4  01 87 90DB				add	data_720[bx],ax		; (020A:90DB=0F803h)
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 443

				sub_196		proc	near
020A:D2A8  2E: C6 06 8254 01			mov	cs:data_705,1		; (020A:8254=74h)
020A:D2AE  EB 06				jmp	short loc_2396		; (D2B6)
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_197:
020A:D2B0  2E: C6 06 8254 00			mov	cs:data_705,0		; (020A:8254=74h)
020A:D2B6			loc_2396:
020A:D2B6  80 3E 2ECF 00			cmp	byte ptr ds:[2ECFh],0	; (D233:2ECF=0E8h)
020A:D2BB  75 03				jne	loc_2397		; Jump if not equal
020A:D2BD  E9 00A3				jmp	loc_2405		; (D363)
020A:D2C0			loc_2397:
020A:D2C0  50					push	ax
020A:D2C1  53					push	bx
020A:D2C2  33 C0				xor	ax,ax			; Zero register
020A:D2C4  8B D8				mov	bx,ax
020A:D2C6  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:D2CB  80 3E 2ECF 01			cmp	byte ptr ds:[2ECFh],1	; (D233:2ECF=0E8h)
020A:D2D0  75 2F				jne	loc_2400		; Jump if not equal
020A:D2D2  A0 2ED0				mov	al,byte ptr ds:[2ED0h]	; (D233:2ED0=0AEh)
020A:D2D5  A8 80				test	al,80h
020A:D2D7  74 02				jz	loc_2398		; Jump if zero
020A:D2D9  FE CC				dec	ah
020A:D2DB			loc_2398:
020A:D2DB  2E: 80 3E 8254 01			cmp	cs:data_705,1		; (020A:8254=74h)
020A:D2E1  75 10				jne	loc_2399		; Jump if not equal
020A:D2E3  32 E4				xor	ah,ah			; Zero register
020A:D2E5  FE C8				dec	al
020A:D2E7  2A 06 2A7A				sub	al,byte ptr ds:[2A7Ah]	; (D233:2A7A=0)
020A:D2EB  FE C8				dec	al
020A:D2ED  A8 80				test	al,80h
020A:D2EF  74 02				jz	loc_2399		; Jump if zero
020A:D2F1  B4 FF				mov	ah,0FFh
020A:D2F3			loc_2399:
020A:D2F3  88 26 2ED3				mov	byte ptr ds:[2ED3h],ah	; (D233:2ED3=0E9h)
020A:D2F7  88 26 2ED2				mov	byte ptr ds:[2ED2h],ah	; (D233:2ED2=0E8h)
020A:D2FB  88 26 2ED1				mov	byte ptr ds:[2ED1h],ah	; (D233:2ED1=0FBh)
020A:D2FF  EB 37				jmp	short loc_2403		; (D338)
020A:D301			loc_2400:
020A:D301  80 3E 2ECF 02			cmp	byte ptr ds:[2ECFh],2	; (D233:2ECF=0E8h)
020A:D306  75 30				jne	loc_2403		; Jump if not equal
020A:D308  A1 2ED0				mov	ax,word ptr ds:[2ED0h]	; (D233:2ED0=0FBAEh)
020A:D30B  2E: 80 3E 8254 01			cmp	cs:data_705,1		; (020A:8254=74h)
020A:D311  75 12				jne	loc_2401		; Jump if not equal
020A:D313  2D 0002				sub	ax,2
020A:D316  83 3E 2A84 00			cmp	word ptr ds:[2A84h],0	; (D233:2A84=71Eh)
020A:D31B  75 08				jne	loc_2401		; Jump if not equal
020A:D31D  48					dec	ax
020A:D31E  2A 06 2A7A				sub	al,byte ptr ds:[2A7Ah]	; (D233:2A7A=0)
020A:D322  80 DC 00				sbb	ah,0
020A:D325			loc_2401:
020A:D325  A9 8000				test	ax,8000h
020A:D328  74 08				jz	loc_2402		; Jump if zero
020A:D32A  C7 06 2ED2 FFFF			mov	word ptr ds:[2ED2h],0FFFFh	; (D233:2ED2=0E9E8h)
020A:D330  EB 06				jmp	short loc_2403		; (D338)
020A:D332			loc_2402:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 444

020A:D332  C7 06 2ED2 0000			mov	word ptr ds:[2ED2h],0	; (D233:2ED2=0E9E8h)
020A:D338			loc_2403:
020A:D338  A1 2ED2				mov	ax,word ptr ds:[2ED2h]	; (D233:2ED2=0E9E8h)
020A:D33B  8B 1E 2ED0				mov	bx,word ptr ds:[2ED0h]	; (D233:2ED0=0FBAEh)
020A:D33F  A9 8000				test	ax,8000h
020A:D342  74 17				jz	loc_2404		; Jump if zero
020A:D344  A1 2ED0				mov	ax,word ptr ds:[2ED0h]	; (D233:2ED0=0FBAEh)
020A:D347  F7 D0				not	ax
020A:D349  15 0001				adc	ax,1
020A:D34C  8B D8				mov	bx,ax
020A:D34E  A1 2ED2				mov	ax,word ptr ds:[2ED2h]	; (D233:2ED2=0E9E8h)
020A:D351  F7 D0				not	ax
020A:D353  15 0000				adc	ax,0
020A:D356  3E: C6 46 00 2D			mov	byte ptr ds:[bp],2Dh	; '-'
020A:D35B			loc_2404:
020A:D35B  45					inc	bp
020A:D35C  9A 16FA:01E8		;*		call	far ptr sub_229		;*(16FA:01E8)
020A:D35C  9A E8 01 FA 16			db	 9Ah,0E8h, 01h,0FAh, 16h
020A:D361  5B					pop	bx
020A:D362  58					pop	ax
020A:D363			loc_2405:
020A:D363  C3					retn
				sub_196		endp
  
020A:D364  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:D369  75 41				jne	loc_2407		; Jump if not equal
020A:D36B  50					push	ax
020A:D36C  51					push	cx
020A:D36D  57					push	di
020A:D36E  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D373  06					push	es
020A:D374  E8 C897				call	sub_162			; (9C0E)
020A:D377  B9 0007				mov	cx,7
020A:D37A  BF 27FA				mov	di,27FAh
020A:D37D  B0 20				mov	al,20h			; ' '
020A:D37F  FC					cld				; Clear direction
020A:D380  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:D382  4F					dec	di
020A:D383  8A 0E 3400				mov	cl,byte ptr ds:[3400h]	; (9B68:3400=20h)
020A:D387  26: 88 0D				mov	es:[di],cl
020A:D38A  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D38F  5A					pop	dx
020A:D390  8E C2				mov	es,dx
020A:D392  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D397  5A					pop	dx
020A:D398  75 0A				jnz	loc_2406		; Jump if not zero
020A:D39A  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D39F  74 03				je	loc_2406		; Jump if equal
020A:D3A1  E8 CB40				call	sub_168			; (9EE4)
020A:D3A4			loc_2406:
020A:D3A4  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D3A9  5F					pop	di
020A:D3AA  59					pop	cx
020A:D3AB  58					pop	ax
020A:D3AC			loc_2407:
020A:D3AC  C3					retn
020A:D3AD  87 DB				xchg	bx,bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 445

020A:D3AF  90					nop
020A:D3B0  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (020A:263E=0Eh)
020A:D3B5  75 48				jne	loc_2409		; Jump if not equal
020A:D3B7  50					push	ax
020A:D3B8  51					push	cx
020A:D3B9  57					push	di
020A:D3BA  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D3BF  06					push	es
020A:D3C0  E8 C84B				call	sub_162			; (9C0E)
020A:D3C3  B9 0007				mov	cx,7
020A:D3C6  BF 27FA				mov	di,27FAh
020A:D3C9  A0 340C				mov	al,byte ptr ds:[340Ch]	; (9B68:340C=36h)
020A:D3CC  FC					cld				; Clear direction
020A:D3CD  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:D3CF  26: 8B 05				mov	ax,es:[di]
020A:D3D2  8A 0E 3400				mov	cl,byte ptr ds:[3400h]	; (9B68:3400=20h)
020A:D3D6  26: 88 0D				mov	es:[di],cl
020A:D3D9  47					inc	di
020A:D3DA  26: 89 05				mov	es:[di],ax
020A:D3DD  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D3E2  5A					pop	dx
020A:D3E3  8E C2				mov	es,dx
020A:D3E5  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D3EA  5A					pop	dx
020A:D3EB  75 0A				jnz	loc_2408		; Jump if not zero
020A:D3ED  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D3F2  74 03				je	loc_2408		; Jump if equal
020A:D3F4  E8 CAED				call	sub_168			; (9EE4)
020A:D3F7			loc_2408:
020A:D3F7  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D3FC  5F					pop	di
020A:D3FD  59					pop	cx
020A:D3FE  58					pop	ax
020A:D3FF			loc_2409:
020A:D3FF  C3					retn
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_198		proc	near
020A:D400  53					push	bx
020A:D401  51					push	cx
020A:D402  52					push	dx
020A:D403  1E					push	ds
020A:D404  B1 20				mov	cl,20h			; ' '
020A:D406  B8 0001				mov	ax,1
020A:D409  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:D40B  3D 0000				cmp	ax,0
020A:D40E  75 04				jne	loc_2410		; Jump if not equal
020A:D410  B0 01				mov	al,1
020A:D412  EB 4E				jmp	short loc_2414		; (D462)
020A:D414			loc_2410:
020A:D414  54					push	sp
020A:D415  58					pop	ax
020A:D416  3B C4				cmp	ax,sp
020A:D418  74 04				je	loc_2411		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 446

020A:D41A  B0 04				mov	al,4
020A:D41C  EB 44				jmp	short loc_2414		; (D462)
020A:D41E			loc_2411:
020A:D41E  80 3E 1311 00			cmp	byte ptr ds:[1311h],0	; (9B68:1311=0EBh)
020A:D423  74 04				je	loc_2412		; Jump if equal
020A:D425  B0 10				mov	al,10h
020A:D427  EB 56				jmp	short loc_2417		; (D47F)
020A:D429			loc_2412:
020A:D429  0F					pop	cs			; Dangerous 8088 only
020A:D42A  01 E0				add	ax,sp
020A:D42C  A9 0001				test	ax,1
020A:D42F  74 04				jz	loc_2413		; Jump if zero
020A:D431  B0 00				mov	al,0
020A:D433  EB 2D				jmp	short loc_2414		; (D462)
020A:D435			loc_2413:
020A:D435  B8 3506				mov	ax,3506h
020A:D438  CD 21				int	21h			; DOS Services  ah=function 35h
										;  get intrpt vector al in es:bx
020A:D43A  06					push	es
020A:D43B  53					push	bx
020A:D43C  B8 2506				mov	ax,2506h
020A:D43F  0E					push	cs
020A:D440  1F					pop	ds
020A:D441  BA 8402				mov	dx,8402h
020A:D444  CD 21				int	21h			; DOS Services  ah=function 25h
										;  set intrpt vector al to ds:dx
020A:D446  B0 10				mov	al,10h
020A:D448  66					db	66h
020A:D449  90					nop
020A:D44A  B0 20				mov	al,20h			; ' '
020A:D44C  0F					pop	cs			; Dangerous 8088 only
020A:D44D  09 B0 EB40				or	data_861[bx+si],si	; (020A:EB40=2EB3h)
020A:D451  03 59 59				add	bx,[bx+di+59h]
020A:D454  59					pop	cx
020A:D455  5A					pop	dx
020A:D456  1F					pop	ds
020A:D457  8A D8				mov	bl,al
020A:D459  B8 2506				mov	ax,2506h
020A:D45C  CD 21				int	21h			; DOS Services  ah=function 25h
										;  set intrpt vector al to ds:dx
020A:D45E  8A C3				mov	al,bl
020A:D460  EB 00				jmp	short loc_2414		; (D462)
020A:D462			loc_2414:
020A:D462  8A D8				mov	bl,al
020A:D464  E8 00A9				call	sub_200			; (D510)
020A:D467  80 FB 00				cmp	bl,0
020A:D46A  75 02				jne	loc_2415		; Jump if not equal
020A:D46C  8A D8				mov	bl,al
020A:D46E			loc_2415:
020A:D46E  3A C3				cmp	al,bl
020A:D470  74 04				je	loc_2416		; Jump if equal
020A:D472  72 02				jc	loc_2416		; Jump if carry Set
020A:D474  8A D8				mov	bl,al
020A:D476			loc_2416:
020A:D476  E8 000B				call	sub_199			; (D484)
020A:D479  3A C3				cmp	al,bl
020A:D47B  73 02				jae	loc_2417		; Jump if above or =
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 447

020A:D47D  8A C3				mov	al,bl
020A:D47F			loc_2417:
020A:D47F  1F					pop	ds
020A:D480  5A					pop	dx
020A:D481  59					pop	cx
020A:D482  5B					pop	bx
020A:D483  C3					retn
				sub_198		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_199		proc	near
020A:D484  9C					pushf				; Push flags
020A:D485  B1 20				mov	cl,20h			; ' '
020A:D487  B8 0001				mov	ax,1
020A:D48A  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:D48C  3D 0000				cmp	ax,0
020A:D48F  75 04				jne	loc_2418		; Jump if not equal
020A:D491  B0 01				mov	al,1
020A:D493  EB 79				jmp	short loc_2423		; (D50E)
020A:D495			loc_2418:
020A:D495  54					push	sp
020A:D496  58					pop	ax
020A:D497  3B C4				cmp	ax,sp
020A:D499  74 04				je	loc_2419		; Jump if equal
020A:D49B  B0 04				mov	al,4
020A:D49D  EB 6F				jmp	short loc_2423		; (D50E)
020A:D49F			loc_2419:
020A:D49F  FA					cli				; Disable interrupts
020A:D4A0  B0 01				mov	al,1
020A:D4A2  EB 0C				jmp	short loc_2420		; (D4B0)
020A:D4A4  87 DB				xchg	bx,bx
020A:D4A6  87 DB				xchg	bx,bx
020A:D4A8  87 DB				xchg	bx,bx
020A:D4AA  87 DB				xchg	bx,bx
020A:D4AC  87 DB				xchg	bx,bx
020A:D4AE  87 DB				xchg	bx,bx
020A:D4B0			loc_2420:
020A:D4B0  2E: C6 06 8467 01			mov	cs:data_706,1		; (020A:8467=47h)
020A:D4B6  B0 01				mov	al,1
020A:D4B8  90					nop
020A:D4B9  3C 10				cmp	al,10h
020A:D4BB  75 51				jne	loc_2423		; Jump if not equal
020A:D4BD  B0 20				mov	al,20h			; ' '
020A:D4BF  EB 0F				jmp	short loc_2421		; (D4D0)
020A:D4C1  87 DB				xchg	bx,bx
020A:D4C3  87 DB				xchg	bx,bx
020A:D4C5  87 DB				xchg	bx,bx
020A:D4C7  87 DB				xchg	bx,bx
020A:D4C9  87 DB				xchg	bx,bx
020A:D4CB  87 DB				xchg	bx,bx
020A:D4CD  87 DB				xchg	bx,bx
020A:D4CF  90					nop
020A:D4D0			loc_2421:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 448

020A:D4D0  2E: C6 06 848C 10			mov	cs:data_707,10h		; (020A:848C=8Bh)
020A:D4D6  90					nop
020A:D4D7  90					nop
020A:D4D8  90					nop
020A:D4D9  90					nop
020A:D4DA  90					nop
020A:D4DB  B0 20				mov	al,20h			; ' '
020A:D4DD  3C 20				cmp	al,20h			; ' '
020A:D4DF  75 2D				jne	loc_2423		; Jump if not equal
020A:D4E1  B0 20				mov	al,20h			; ' '
020A:D4E3  EB 0B				jmp	short loc_2422		; (D4F0)
020A:D4E5  87 DB				xchg	bx,bx
020A:D4E7  87 DB				xchg	bx,bx
020A:D4E9  87 DB				xchg	bx,bx
020A:D4EB  87 DB				xchg	bx,bx
020A:D4ED  87 DB				xchg	bx,bx
020A:D4EF  90					nop
020A:D4F0			loc_2422:
020A:D4F0  2E: C6 06 84BD 20			mov	byte ptr cs:[84BDh],20h	; (020A:84BD=0EAh) ' '
020A:D4F6  0016[90]				db	22 dup (90h)
020A:D50C  B0 40				mov	al,40h			; '@'
020A:D50E			loc_2423:
020A:D50E  9D					popf				; Pop flags
020A:D50F  C3					retn
				sub_199		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_200		proc	near
020A:D510  33 C0				xor	ax,ax			; Zero register
020A:D512  50					push	ax
020A:D513  9D					popf				; Pop flags
020A:D514  9C					pushf				; Push flags
020A:D515  58					pop	ax
020A:D516  25 F000				and	ax,0F000h
020A:D519  3D F000				cmp	ax,0F000h
020A:D51C  B0 01				mov	al,1
020A:D51E  74 1A				jz	loc_2425		; Jump if zero
020A:D520  54					push	sp
020A:D521  58					pop	ax
020A:D522  3B C4				cmp	ax,sp
020A:D524  74 04				je	loc_2424		; Jump if equal
020A:D526  B0 04				mov	al,4
020A:D528  EB 10				jmp	short loc_2425		; (D53A)
020A:D52A			loc_2424:
020A:D52A  B8 F000				mov	ax,0F000h
020A:D52D  50					push	ax
020A:D52E  9D					popf				; Pop flags
020A:D52F  9C					pushf				; Push flags
020A:D530  58					pop	ax
020A:D531  25 F000				and	ax,0F000h
020A:D534  B0 10				mov	al,10h
020A:D536  74 02				jz	loc_2425		; Jump if zero
020A:D538  B0 20				mov	al,20h			; ' '
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 449

020A:D53A			loc_2425:
020A:D53A  C3					retn
				sub_200		endp
  
020A:D53B  90					nop
020A:D53C  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (9B68:2638=0E0h)
020A:D541  75 07				jne	loc_2426		; Jump if not equal
020A:D543  F6 06 2D8D 02			test	byte ptr ds:[2D8Dh],2	; (9B68:2D8D=0A0h)
020A:D548  75 03				jnz	loc_2427		; Jump if not zero
020A:D54A			loc_2426:
020A:D54A  E9 007F				jmp	loc_2430		; (D5CC)
020A:D54D			loc_2427:
020A:D54D  50					push	ax
020A:D54E  53					push	bx
020A:D54F  52					push	dx
020A:D550  57					push	di
020A:D551  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D556  06					push	es
020A:D557  8B 1E 2D94				mov	bx,word ptr ds:[2D94h]	; (9B68:2D94=0A2AEh)
020A:D55B  A1 2D96				mov	ax,word ptr ds:[2D96h]	; (9B68:2D96=0A5A8h)
020A:D55E  BA 0004				mov	dx,4
020A:D561  E8 BA74				call	sub_143			; (8FD8)
020A:D564  73 43				jnc	loc_2428		; Jump if carry=0
020A:D566  26: 8A 45 32				mov	al,es:[di+32h]
020A:D56A  24 38				and	al,38h			; '8'
020A:D56C  3C 38				cmp	al,38h			; '8'
020A:D56E  74 39				je	loc_2428		; Jump if equal
020A:D570  26: 80 45 32 08			add	byte ptr es:[di+32h],8
020A:D575  80 26 2D8D FD			and	byte ptr ds:[2D8Dh],0FDh	; (9B68:2D8D=0A0h)
020A:D57A  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:D57F  75 28				jnz	loc_2428		; Jump if not zero
020A:D581  A1 2A40				mov	ax,word ptr ds:[2A40h]	; (9B68:2A40=2020h)
020A:D584  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:D588  3D 0018				cmp	ax,18h
020A:D58B  76 1C				jbe	loc_2428		; Jump if below or =
020A:D58D  B8 0018				mov	ax,18h
020A:D590  C6 06 47B5 01			mov	byte ptr ds:[47B5h],1	; (9B68:47B5=0)
020A:D595  9A 16FA:0AA4		;*		call	far ptr sub_247		;*(16FA:0AA4)
020A:D595  9A A4 0A FA 16			db	 9Ah,0A4h, 0Ah,0FAh, 16h
020A:D59A  C6 06 47B5 00			mov	byte ptr ds:[47B5h],0	; (9B68:47B5=0)
020A:D59F  3D 0017				cmp	ax,17h
020A:D5A2  72 05				jb	loc_2428		; Jump if below
020A:D5A4  26: 80 4D 05 20			or	byte ptr es:[di+5],20h	; ' '
020A:D5A9			loc_2428:
020A:D5A9  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D5AE  5A					pop	dx
020A:D5AF  8E C2				mov	es,dx
020A:D5B1  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D5B6  5A					pop	dx
020A:D5B7  75 0A				jnz	loc_2429		; Jump if not zero
020A:D5B9  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D5BE  74 03				je	loc_2429		; Jump if equal
020A:D5C0  E8 C921				call	sub_168			; (9EE4)
020A:D5C3			loc_2429:
020A:D5C3  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D5C8  5F					pop	di
020A:D5C9  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 450

020A:D5CA  5B					pop	bx
020A:D5CB  58					pop	ax
020A:D5CC			loc_2430:
020A:D5CC  C3					retn
020A:D5CD  87 DB				xchg	bx,bx
020A:D5CF  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_201		proc	near
020A:D5D0  50					push	ax
020A:D5D1  53					push	bx
020A:D5D2  51					push	cx
020A:D5D3  52					push	dx
020A:D5D4  56					push	si
020A:D5D5  57					push	di
020A:D5D6  55					push	bp
020A:D5D7  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D5DC  1E					push	ds
020A:D5DD  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D5E2  06					push	es
020A:D5E3  E8 C613				call	sub_157			; (9BF9)
020A:D5E6  E8 C640				call	sub_166			; (9C29)
020A:D5E9  8B D8				mov	bx,ax
020A:D5EB  A1 263F				mov	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:D5EE  8C C9				mov	cx,cs
020A:D5F0  2B D9				sub	bx,cx
020A:D5F2  2B C3				sub	ax,bx
020A:D5F4  B9 0006				mov	cx,6
020A:D5F7  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:D5F9  BD 06E6				mov	bp,6E6h
020A:D5FC  B3 01				mov	bl,1
020A:D5FE  3D 03E7				cmp	ax,3E7h
020A:D601  77 0D				ja	loc_2431		; Jump if above
020A:D603  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:D603  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:D608  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:D60C  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020A:D610			loc_2431:
020A:D610  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:D616  74 04				je	loc_2432		; Jump if equal
020A:D618  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020A:D61C			loc_2432:
020A:D61C  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D621  5A					pop	dx
020A:D622  8E C2				mov	es,dx
020A:D624  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D629  5A					pop	dx
020A:D62A  75 0A				jnz	loc_2433		; Jump if not zero
020A:D62C  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D631  74 03				je	loc_2433		; Jump if equal
020A:D633  E8 C8AE				call	sub_168			; (9EE4)
020A:D636			loc_2433:
020A:D636  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D63B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 451

020A:D640  5A					pop	dx
020A:D641  8E DA				mov	ds,dx
020A:D643  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D648  5A					pop	dx
020A:D649  75 0A				jnz	loc_2434		; Jump if not zero
020A:D64B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D650  74 03				je	loc_2434		; Jump if equal
020A:D652  E8 C88F				call	sub_168			; (9EE4)
020A:D655			loc_2434:
020A:D655  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D65A  5D					pop	bp
020A:D65B  5F					pop	di
020A:D65C  5E					pop	si
020A:D65D  5A					pop	dx
020A:D65E  59					pop	cx
020A:D65F  5B					pop	bx
020A:D660  58					pop	ax
020A:D661  C3					retn
				sub_201		endp
  
020A:D662  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_202		proc	near
020A:D664  50					push	ax
020A:D665  53					push	bx
020A:D666  51					push	cx
020A:D667  52					push	dx
020A:D668  56					push	si
020A:D669  57					push	di
020A:D66A  55					push	bp
020A:D66B  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D670  1E					push	ds
020A:D671  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D676  06					push	es
020A:D677  E8 C57F				call	sub_157			; (9BF9)
020A:D67A  E8 C5A9				call	sub_165			; (9C26)
020A:D67D  BB 1064				mov	bx,1064h
020A:D680  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:D682  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:D684  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:D686  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:D688  03 C3				add	ax,bx
020A:D68A  8B D8				mov	bx,ax
020A:D68C  A1 263F				mov	ax,word ptr ds:[263Fh]	; (9B68:263F=0E0A5h)
020A:D68F  8C C9				mov	cx,cs
020A:D691  2B D9				sub	bx,cx
020A:D693  2B C3				sub	ax,bx
020A:D695  B9 0006				mov	cx,6
020A:D698  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:D69A  8B D0				mov	dx,ax
020A:D69C  8B 1E 278F				mov	bx,word ptr ds:[278Fh]	; (9B68:278F=0A0Dh)
020A:D6A0  A1 278D				mov	ax,word ptr ds:[278Dh]	; (9B68:278D=0A0Dh)
020A:D6A3  B9 000A				mov	cx,0Ah
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 452

020A:D6A6  05 03FF				add	ax,3FFh
020A:D6A9  83 D3 00				adc	bx,0
020A:D6AC  F8					clc				; Clear carry flag
  
020A:D6AD			locloop_2435:
020A:D6AD  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:D6AF  D1 D8				rcr	ax,1			; Rotate thru carry
020A:D6B1  E2 FA				loop	locloop_2435		; Loop if cx > 0
  
020A:D6B3  92					xchg	ax,dx
020A:D6B4  2B C2				sub	ax,dx
020A:D6B6  3D 0000				cmp	ax,0
020A:D6B9  7D 02				jge	loc_2436		; Jump if > or =
020A:D6BB  33 C0				xor	ax,ax			; Zero register
020A:D6BD			loc_2436:
020A:D6BD  BD 06E8				mov	bp,6E8h
020A:D6C0  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:D6C6  3E: C6 46 02 20			mov	byte ptr ds:[bp+2],20h	; ' '
020A:D6CB  BD 06E6				mov	bp,6E6h
020A:D6CE  B3 01				mov	bl,1
020A:D6D0  3D 03E7				cmp	ax,3E7h
020A:D6D3  77 0D				ja	loc_2437		; Jump if above
020A:D6D5  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:D6D5  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:D6DA  8B 1E 1306				mov	bx,word ptr ds:[1306h]	; (9B68:1306=0AEAFh)
020A:D6DE  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020A:D6E2			loc_2437:
020A:D6E2  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:D6E8  74 04				je	loc_2438		; Jump if equal
020A:D6EA  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020A:D6EE			loc_2438:
020A:D6EE  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D6F3  5A					pop	dx
020A:D6F4  8E C2				mov	es,dx
020A:D6F6  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D6FB  5A					pop	dx
020A:D6FC  75 0A				jnz	loc_2439		; Jump if not zero
020A:D6FE  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D703  74 03				je	loc_2439		; Jump if equal
020A:D705  E8 C7DC				call	sub_168			; (9EE4)
020A:D708			loc_2439:
020A:D708  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D70D  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D712  5A					pop	dx
020A:D713  8E DA				mov	ds,dx
020A:D715  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D71A  5A					pop	dx
020A:D71B  75 0A				jnz	loc_2440		; Jump if not zero
020A:D71D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D722  74 03				je	loc_2440		; Jump if equal
020A:D724  E8 C7BD				call	sub_168			; (9EE4)
020A:D727			loc_2440:
020A:D727  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D72C  5D					pop	bp
020A:D72D  5F					pop	di
020A:D72E  5E					pop	si
020A:D72F  5A					pop	dx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 453

020A:D730  59					pop	cx
020A:D731  5B					pop	bx
020A:D732  58					pop	ax
020A:D733  C3					retn
				sub_202		endp
  
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_203		proc	near
020A:D734  06					push	es
020A:D735  57					push	di
020A:D736  51					push	cx
020A:D737  1E					push	ds
020A:D738  07					pop	es
020A:D739  BF 42D0				mov	di,42D0h
020A:D73C  B9 0010				mov	cx,10h
020A:D73F  B8 FFFF				mov	ax,0FFFFh
020A:D742  FC					cld				; Clear direction
020A:D743  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:D745  59					pop	cx
020A:D746  5F					pop	di
020A:D747  07					pop	es
020A:D748  B8 FFFF				mov	ax,0FFFFh
020A:D74B  39 06 42F9				cmp	data_624,ax		; (020A:42F9=4080h)
020A:D74F  74 6E				je	loc_2444		; Jump if equal
020A:D751  50					push	ax
020A:D752  53					push	bx
020A:D753  51					push	cx
020A:D754  52					push	dx
020A:D755  56					push	si
020A:D756  57					push	di
020A:D757  55					push	bp
020A:D758  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D75D  1E					push	ds
020A:D75E  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D763  06					push	es
020A:D764  8B 1E 42F7				mov	bx,data_623		; (020A:42F7=402h)
020A:D768  A1 42F9				mov	ax,data_624		; (020A:42F9=4080h)
020A:D76B  BA 0004				mov	dx,4
020A:D76E  E8 B867				call	sub_143			; (8FD8)
020A:D771  73 07				jnc	loc_2441		; Jump if carry=0
020A:D773  A1 42F3				mov	ax,data_621		; (020A:42F3=520h)
020A:D776  26: 89 45 07				mov	es:[di+7],ax
020A:D77A			loc_2441:
020A:D77A  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D77F  5A					pop	dx
020A:D780  8E C2				mov	es,dx
020A:D782  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D787  5A					pop	dx
020A:D788  75 0A				jnz	loc_2442		; Jump if not zero
020A:D78A  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D78F  74 03				je	loc_2442		; Jump if equal
020A:D791  E8 C750				call	sub_168			; (9EE4)
020A:D794			loc_2442:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 454

020A:D794  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D799  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D79E  5A					pop	dx
020A:D79F  8E DA				mov	ds,dx
020A:D7A1  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D7A6  5A					pop	dx
020A:D7A7  75 0A				jnz	loc_2443		; Jump if not zero
020A:D7A9  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D7AE  74 03				je	loc_2443		; Jump if equal
020A:D7B0  E8 C731				call	sub_168			; (9EE4)
020A:D7B3			loc_2443:
020A:D7B3  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D7B8  5D					pop	bp
020A:D7B9  5F					pop	di
020A:D7BA  5E					pop	si
020A:D7BB  5A					pop	dx
020A:D7BC  59					pop	cx
020A:D7BD  5B					pop	bx
020A:D7BE  58					pop	ax
020A:D7BF			loc_2444:
020A:D7BF  B8 FFFF				mov	ax,0FFFFh
020A:D7C2  A2 42F0				mov	data_619,al		; (020A:42F0=0Ch)
020A:D7C5  A3 42F7				mov	data_623,ax		; (020A:42F7=402h)
020A:D7C8  A3 42F9				mov	data_624,ax		; (020A:42F9=4080h)
020A:D7CB  33 C0				xor	ax,ax			; Zero register
020A:D7CD  A3 42F1				mov	data_620,ax		; (020A:42F1=0C40h)
020A:D7D0  A3 42F3				mov	data_621,ax		; (020A:42F3=520h)
020A:D7D3  C3					retn
				sub_203		endp
  
020A:D7D4  50					push	ax
020A:D7D5  53					push	bx
020A:D7D6  56					push	si
020A:D7D7  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D7DC  06					push	es
020A:D7DD  E8 C42B				call	sub_161			; (9C0B)
020A:D7E0  BE 3E04				mov	si,3E04h
020A:D7E3			loc_2445:
020A:D7E3  26: 3A 14				cmp	dl,es:[si]
020A:D7E6  74 0A				je	loc_2447		; Jump if equal
020A:D7E8  72 05				jc	loc_2446		; Jump if carry Set
020A:D7EA  83 C6 25				add	si,25h
020A:D7ED  EB F4				jmp	short loc_2445		; (D7E3)
020A:D7EF			loc_2446:
020A:D7EF  E9 00B4				jmp	loc_2460		; (D8A6)
020A:D7F2			loc_2447:
020A:D7F2  26: F6 44 02 C0			test	byte ptr es:[si+2],0C0h
020A:D7F7  74 28				jz	loc_2451		; Jump if zero
020A:D7F9  A1 2ED4				mov	ax,data_462		; (020A:2ED4=4554h)
020A:D7FC			loc_2448:
020A:D7FC  26: 3A 14				cmp	dl,es:[si]
020A:D7FF  75 EE				jne	loc_2446		; Jump if not equal
020A:D801  26: 8A 7C 03				mov	bh,es:[si+3]
020A:D805  26: 8A 5C 04				mov	bl,es:[si+4]
020A:D809  26: F6 44 02 20			test	byte ptr es:[si+2],20h	; ' '
020A:D80E  74 06				jz	loc_2449		; Jump if zero
020A:D810  86 DF				xchg	bl,bh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 455

020A:D812  3B C3				cmp	ax,bx
020A:D814  EB 02				jmp	short loc_2450		; (D818)
020A:D816			loc_2449:
020A:D816  3A E7				cmp	ah,bh
020A:D818			loc_2450:
020A:D818  74 07				je	loc_2451		; Jump if equal
020A:D81A  72 D3				jc	loc_2446		; Jump if carry Set
020A:D81C  83 C6 25				add	si,25h
020A:D81F  EB DB				jmp	short loc_2448		; (D7FC)
020A:D821			loc_2451:
020A:D821  8A 1E 2A77				mov	bl,data_391		; (020A:2A77=0A5h)
020A:D825  26: 22 5C 01				and	bl,es:[si+1]
020A:D829  74 7B				jz	loc_2460		; Jump if zero
020A:D82B  26: 8B 44 05				mov	ax,es:[si+5]
020A:D82F  A9 E0E0				test	ax,0E0E0h
020A:D832  74 72				jz	loc_2460		; Jump if zero
020A:D834  A9 E000				test	ax,0E000h
020A:D837  74 37				jz	loc_2456		; Jump if zero
020A:D839  53					push	bx
020A:D83A  8B 1E 2EF2				mov	bx,data_468		; (020A:2EF2=444Eh)
020A:D83E  89 1E 42F5				mov	data_622,bx		; (020A:42F5=1B01h)
020A:D842  5B					pop	bx
020A:D843  81 26 42F1 FF1F			and	data_620,0FF1Fh		; (020A:42F1=0C40h)
020A:D849  A9 8000				test	ax,8000h
020A:D84C  74 07				jz	loc_2452		; Jump if zero
020A:D84E  83 0E 42F1 20			or	data_620,20h		; (020A:42F1=0C40h)
020A:D853  EB 12				jmp	short loc_2454		; (D867)
020A:D855			loc_2452:
020A:D855  A9 4000				test	ax,4000h
020A:D858  74 07				jz	loc_2453		; Jump if zero
020A:D85A  83 0E 42F1 40			or	data_620,40h		; (020A:42F1=0C40h)
020A:D85F  EB 06				jmp	short loc_2454		; (D867)
020A:D861			loc_2453:
020A:D861  81 0E 42F1 0080			or	data_620,80h		; (020A:42F1=0C40h)
020A:D867			loc_2454:
020A:D867  50					push	ax
020A:D868  86 E0				xchg	ah,al
020A:D86A  24 07				and	al,7
020A:D86C  E8 04C9				call	sub_211			; (DD38)
020A:D86F  58					pop	ax
020A:D870			loc_2456:
020A:D870  A9 00E0				test	ax,0E0h
020A:D873  74 31				jz	loc_2460		; Jump if zero
020A:D875  8B 1E 2EF4				mov	bx,data_469		; (020A:2EF4=574Fh)
020A:D879  89 1E 42F5				mov	data_622,bx		; (020A:42F5=1B01h)
020A:D87D  81 26 42F1 FF1F			and	data_620,0FF1Fh		; (020A:42F1=0C40h)
020A:D883  A9 0080				test	ax,80h
020A:D886  74 07				jz	loc_2457		; Jump if zero
020A:D888  83 0E 42F1 20			or	data_620,20h		; (020A:42F1=0C40h)
020A:D88D  EB 12				jmp	short loc_2459		; (D8A1)
020A:D88F			loc_2457:
020A:D88F  A9 0040				test	ax,40h
020A:D892  74 07				jz	loc_2458		; Jump if zero
020A:D894  83 0E 42F1 40			or	data_620,40h		; (020A:42F1=0C40h)
020A:D899  EB 06				jmp	short loc_2459		; (D8A1)
020A:D89B			loc_2458:
020A:D89B  81 0E 42F1 0080			or	data_620,80h		; (020A:42F1=0C40h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 456

020A:D8A1			loc_2459:
020A:D8A1  24 07				and	al,7
020A:D8A3  E8 0492				call	sub_211			; (DD38)
020A:D8A6			loc_2460:
020A:D8A6  E8 FE8B				call	sub_203			; (D734)
020A:D8A9  C7 06 42F5 FFFF			mov	data_622,0FFFFh		; (020A:42F5=1B01h)
020A:D8AF  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D8B4  5A					pop	dx
020A:D8B5  8E C2				mov	es,dx
020A:D8B7  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D8BC  5A					pop	dx
020A:D8BD  75 0A				jnz	loc_2461		; Jump if not zero
020A:D8BF  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:D8C4  74 03				je	loc_2461		; Jump if equal
020A:D8C6  E8 C61B				call	sub_168			; (9EE4)
020A:D8C9			loc_2461:
020A:D8C9  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D8CE  5E					pop	si
020A:D8CF  5B					pop	bx
020A:D8D0  58					pop	ax
020A:D8D1  C3					retn
020A:D8D2  87 DB				xchg	bx,bx
020A:D8D4  80 3E 2A75 77			cmp	byte ptr ds:[2A75h],77h	; (020A:2A75=0ADh) 'w'
020A:D8D9  75 61				jne	loc_2465		; Jump if not equal
020A:D8DB  83 3E 2D84 00			cmp	data_424,0		; (020A:2D84=735Ch)
020A:D8E0  74 5A				je	loc_2465		; Jump if equal
020A:D8E2  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:D8E7  06					push	es
020A:D8E8  50					push	ax
020A:D8E9  56					push	si
020A:D8EA  8E 06 2D82				mov	es,data_423		; (020A:2D82=5357h)
020A:D8EE  8B 36 2DB6				mov	si,data_437		; (020A:2DB6=5845h)
020A:D8F2  26: 8A 04				mov	al,es:[si]
020A:D8F5  3C 68				cmp	al,68h			; 'h'
020A:D8F7  74 15				je	loc_2462		; Jump if equal
020A:D8F9  3C 50				cmp	al,50h			; 'P'
020A:D8FB  72 1D				jb	loc_2463		; Jump if below
020A:D8FD  3C 57				cmp	al,57h			; 'W'
020A:D8FF  77 19				ja	loc_2463		; Jump if above
020A:D901  24 07				and	al,7
020A:D903  C7 06 42F1 0044			mov	data_620,44h		; (020A:42F1=0C40h)
020A:D909  E8 042C				call	sub_211			; (DD38)
020A:D90C  EB 0C				jmp	short loc_2463		; (D91A)
020A:D90E			loc_2462:
020A:D90E  A1 2DB6				mov	ax,data_437		; (020A:2DB6=5845h)
020A:D911  C7 06 42F1 0044			mov	data_620,44h		; (020A:42F1=0C40h)
020A:D917  E8 009A				call	sub_206			; (D9B4)
020A:D91A			loc_2463:
020A:D91A  5E					pop	si
020A:D91B  58					pop	ax
020A:D91C  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:D921  5A					pop	dx
020A:D922  8E C2				mov	es,dx
020A:D924  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:D929  5A					pop	dx
020A:D92A  75 0A				jnz	loc_2464		; Jump if not zero
020A:D92C  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 457

020A:D931  74 03				je	loc_2464		; Jump if equal
020A:D933  E8 C5AE				call	sub_168			; (9EE4)
020A:D936			loc_2464:
020A:D936  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:D93B  C3					retn
020A:D93C			loc_2465:
020A:D93C  E8 FDF5				call	sub_203			; (D734)
020A:D93F  C3					retn
020A:D940  D8 D9				esc	0,cl			; coprocessor escape
020A:D942  DA DB				esc	2,bl			; coprocessor escape
020A:D944  DC DD				esc	4,ch			; coprocessor escape
020A:D946  DE DF				esc	6,bh			; coprocessor escape
020A:D948  26					db	26h
020A:D949  9B					db	9Bh
020A:D94A  90					nop
020A:D94B  90					nop
020A:D94C  F6 06 2A79 0F			test	data_393,0Fh		; (020A:2A79=0E0h)
020A:D951  74 5B				jz	loc_2473		; Jump if zero
020A:D953  F7 06 42CC 0001			test	data_601,1		; (020A:42CC=30h)
020A:D959  74 53				jz	loc_2473		; Jump if zero
020A:D95B  50					push	ax
020A:D95C  53					push	bx
020A:D95D  57					push	di
020A:D95E  06					push	es
020A:D95F  8B 1E 2D82				mov	bx,data_423		; (020A:2D82=5357h)
020A:D963  8E C3				mov	es,bx
020A:D965  8B 3E 2D84				mov	di,data_424		; (020A:2D84=735Ch)
020A:D969  A1 2A24				mov	ax,data_365		; (020A:2A24=0E0AFh)
020A:D96C  3D 0000				cmp	ax,0
020A:D96F  75 03				jne	loc_2466		; Jump if not equal
020A:D971  E8 C2B5				call	sub_166			; (9C29)
020A:D974			loc_2466:
020A:D974  3B D8				cmp	bx,ax
020A:D976  73 03				jae	loc_2467		; Jump if above or =
020A:D978  F8					clc				; Clear carry flag
020A:D979  EB 2E				jmp	short loc_2472		; (D9A9)
020A:D97B			loc_2467:
020A:D97B  B8 9B9B				mov	ax,9B9Bh
020A:D97E  26: 8B 1D				mov	bx,es:[di]
020A:D981  80 FB CD				cmp	bl,0CDh
020A:D984  74 03				je	loc_2468		; Jump if equal
020A:D986  F8					clc				; Clear carry flag
020A:D987  EB 20				jmp	short loc_2472		; (D9A9)
020A:D989			loc_2468:
020A:D989  8A DF				mov	bl,bh
020A:D98B  8A C3				mov	al,bl
020A:D98D  3C 3E				cmp	al,3Eh			; '>'
020A:D98F  72 03				jb	loc_2469		; Jump if below
020A:D991  F8					clc				; Clear carry flag
020A:D992  EB 15				jmp	short loc_2472		; (D9A9)
020A:D994			loc_2469:
020A:D994  2C 34				sub	al,34h			; '4'
020A:D996  BB 88F0				mov	bx,88F0h
020A:D999  2E: D7				xlat cs:[bx]			; al=[al+[bx]] table
020A:D99B  3C 9B				cmp	al,9Bh
020A:D99D  75 04				jne	loc_2470		; Jump if not equal
020A:D99F  B0 90				mov	al,90h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 458

020A:D9A1  EB 02				jmp	short loc_2471		; (D9A5)
020A:D9A3			loc_2470:
020A:D9A3  86 E0				xchg	ah,al
020A:D9A5			loc_2471:
020A:D9A5  26: 89 05				mov	es:[di],ax
020A:D9A8  F9					stc				; Set carry flag
020A:D9A9			loc_2472:
020A:D9A9  07					pop	es
020A:D9AA  5F					pop	di
020A:D9AB  5B					pop	bx
020A:D9AC  58					pop	ax
020A:D9AD  C3					retn
020A:D9AE			loc_2473:
020A:D9AE  F8					clc				; Clear carry flag
020A:D9AF  C3					retn
020A:D9B0  00 00				add	[bx+si],al
020A:D9B2  87 DB				xchg	bx,bx
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_206		proc	near
020A:D9B4  F7 06 42F1 00E0			test	data_620,0E0h		; (020A:42F1=0C40h)
020A:D9BA  75 01				jnz	loc_2474		; Jump if not zero
020A:D9BC  C3					retn
020A:D9BD			loc_2474:
020A:D9BD  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:D9C1  50					push	ax
020A:D9C2  53					push	bx
020A:D9C3  51					push	cx
020A:D9C4  52					push	dx
020A:D9C5  56					push	si
020A:D9C6  57					push	di
020A:D9C7  55					push	bp
020A:D9C8  E9 0172				jmp	loc_2491		; (DB3D)
020A:D9CB  90					nop
020A:D9CC  83 3E 42D0 FF			cmp	data_603,0FFFFh		; (020A:42D0=0)
020A:D9D1  74 09				je	loc_2475		; Jump if equal
020A:D9D3  F7 06 42F1 00E0			test	data_620,0E0h		; (020A:42F1=0C40h)
020A:D9D9  75 0B				jnz	loc_2476		; Jump if not zero
020A:D9DB  C3					retn
020A:D9DC			loc_2475:
020A:D9DC  50					push	ax
020A:D9DD  B0 01				mov	al,1
020A:D9DF  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:D9DF  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:D9E4  58					pop	ax
020A:D9E5  C3					retn
020A:D9E6			loc_2476:
020A:D9E6  50					push	ax
020A:D9E7  53					push	bx
020A:D9E8  51					push	cx
020A:D9E9  52					push	dx
020A:D9EA  56					push	si
020A:D9EB  57					push	di
020A:D9EC  55					push	bp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 459

020A:D9ED  A1 42D0				mov	ax,data_603		; (020A:42D0=0)
020A:D9F0  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:D9F4  A1 42D2				mov	ax,data_604		; (020A:42D2=0)
020A:D9F7  E9 0143				jmp	loc_2491		; (DB3D)
020A:D9FA  87 DB				xchg	bx,bx
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_207:
020A:D9FC  83 3E 42D4 FF			cmp	word ptr ds:[42D4h],0FFFFh	; (9B68:42D4=0)
020A:DA01  74 09				je	loc_2477		; Jump if equal
020A:DA03  F7 06 42F1 00E0			test	word ptr ds:[42F1h],0E0h	; (9B68:42F1=0)
020A:DA09  75 0B				jnz	loc_2478		; Jump if not zero
020A:DA0B  C3					retn
020A:DA0C			loc_2477:
020A:DA0C  50					push	ax
020A:DA0D  B0 02				mov	al,2
020A:DA0F  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:DA0F  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:DA14  58					pop	ax
020A:DA15  C3					retn
020A:DA16			loc_2478:
020A:DA16  50					push	ax
020A:DA17  53					push	bx
020A:DA18  51					push	cx
020A:DA19  52					push	dx
020A:DA1A  56					push	si
020A:DA1B  57					push	di
020A:DA1C  55					push	bp
020A:DA1D  A1 42D4				mov	ax,word ptr ds:[42D4h]	; (9B68:42D4=0)
020A:DA20  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DA24  A1 42D6				mov	ax,word ptr ds:[42D6h]	; (9B68:42D6=0)
020A:DA27  E9 0113				jmp	loc_2491		; (DB3D)
020A:DA2A  87 DB				xchg	bx,bx
020A:DA2C  83 3E 42D8 FF			cmp	word ptr ds:[42D8h],0FFFFh	; (9B68:42D8=0)
020A:DA31  74 09				je	loc_2479		; Jump if equal
020A:DA33  F7 06 42F1 00E0			test	word ptr ds:[42F1h],0E0h	; (9B68:42F1=0)
020A:DA39  75 0B				jnz	loc_2480		; Jump if not zero
020A:DA3B  C3					retn
020A:DA3C			loc_2479:
020A:DA3C  50					push	ax
020A:DA3D  B0 03				mov	al,3
020A:DA3F  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:DA3F  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:DA44  58					pop	ax
020A:DA45  C3					retn
020A:DA46			loc_2480:
020A:DA46  50					push	ax
020A:DA47  53					push	bx
020A:DA48  51					push	cx
020A:DA49  52					push	dx
020A:DA4A  56					push	si
020A:DA4B  57					push	di
020A:DA4C  55					push	bp
020A:DA4D  A1 42D8				mov	ax,word ptr ds:[42D8h]	; (9B68:42D8=0)
020A:DA50  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DA54  A1 42DA				mov	ax,word ptr ds:[42DAh]	; (9B68:42DA=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 460

020A:DA57  E9 00E3				jmp	loc_2491		; (DB3D)
020A:DA5A  87 DB				xchg	bx,bx
020A:DA5C  83 3E 42DC FF			cmp	word ptr ds:[42DCh],0FFFFh	; (9B68:42DC=0)
020A:DA61  74 09				je	loc_2481		; Jump if equal
020A:DA63  F7 06 42F1 00E0			test	word ptr ds:[42F1h],0E0h	; (9B68:42F1=0)
020A:DA69  75 0B				jnz	loc_2482		; Jump if not zero
020A:DA6B  C3					retn
020A:DA6C			loc_2481:
020A:DA6C  50					push	ax
020A:DA6D  B0 04				mov	al,4
020A:DA6F  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:DA6F  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:DA74  58					pop	ax
020A:DA75  C3					retn
020A:DA76			loc_2482:
020A:DA76  50					push	ax
020A:DA77  53					push	bx
020A:DA78  51					push	cx
020A:DA79  52					push	dx
020A:DA7A  56					push	si
020A:DA7B  57					push	di
020A:DA7C  55					push	bp
020A:DA7D  A1 42DC				mov	ax,word ptr ds:[42DCh]	; (9B68:42DC=0)
020A:DA80  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DA84  A1 42DE				mov	ax,word ptr ds:[42DEh]	; (9B68:42DE=0)
020A:DA87  E9 00B3				jmp	loc_2491		; (DB3D)
020A:DA8A  87 DB				xchg	bx,bx
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_208:
020A:DA8C  83 3E 42E4 FF			cmp	word ptr ds:[42E4h],0FFFFh	; (9B68:42E4=0)
020A:DA91  74 09				je	loc_2483		; Jump if equal
020A:DA93  F7 06 42F1 00E0			test	word ptr ds:[42F1h],0E0h	; (9B68:42F1=0)
020A:DA99  75 0B				jnz	loc_2484		; Jump if not zero
020A:DA9B  C3					retn
020A:DA9C			loc_2483:
020A:DA9C  50					push	ax
020A:DA9D  B0 06				mov	al,6
020A:DA9F  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:DA9F  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:DAA4  58					pop	ax
020A:DAA5  C3					retn
020A:DAA6			loc_2484:
020A:DAA6  50					push	ax
020A:DAA7  53					push	bx
020A:DAA8  51					push	cx
020A:DAA9  52					push	dx
020A:DAAA  56					push	si
020A:DAAB  57					push	di
020A:DAAC  55					push	bp
020A:DAAD  A1 42E4				mov	ax,word ptr ds:[42E4h]	; (9B68:42E4=0)
020A:DAB0  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DAB4  A1 42E6				mov	ax,word ptr ds:[42E6h]	; (9B68:42E6=0)
020A:DAB7  E9 0083				jmp	loc_2491		; (DB3D)
020A:DABA  87 DB				xchg	bx,bx
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 461

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_209:
020A:DABC  83 3E 42E0 FF			cmp	word ptr ds:[42E0h],0FFFFh	; (9B68:42E0=0)
020A:DAC1  74 09				je	loc_2485		; Jump if equal
020A:DAC3  F7 06 42F1 00E0			test	word ptr ds:[42F1h],0E0h	; (9B68:42F1=0)
020A:DAC9  75 0B				jnz	loc_2486		; Jump if not zero
020A:DACB  C3					retn
020A:DACC			loc_2485:
020A:DACC  50					push	ax
020A:DACD  B0 05				mov	al,5
020A:DACF  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:DACF  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:DAD4  58					pop	ax
020A:DAD5  C3					retn
020A:DAD6			loc_2486:
020A:DAD6  50					push	ax
020A:DAD7  53					push	bx
020A:DAD8  51					push	cx
020A:DAD9  52					push	dx
020A:DADA  56					push	si
020A:DADB  57					push	di
020A:DADC  55					push	bp
020A:DADD  A1 42E0				mov	ax,word ptr ds:[42E0h]	; (9B68:42E0=0)
020A:DAE0  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DAE4  A1 42E2				mov	ax,word ptr ds:[42E2h]	; (9B68:42E2=0)
020A:DAE7  EB 54				jmp	short loc_2491		; (DB3D)
020A:DAE9  87 DB				xchg	bx,bx
020A:DAEB  90					nop
020A:DAEC  83 3E 42EC FF			cmp	word ptr ds:[42ECh],0FFFFh	; (9B68:42EC=0)
020A:DAF1  74 08				je	loc_2487		; Jump if equal
020A:DAF3  F7 06 42F1 0060			test	word ptr ds:[42F1h],60h	; (9B68:42F1=0)
020A:DAF9  75 01				jnz	loc_2488		; Jump if not zero
020A:DAFB			loc_2487:
020A:DAFB  C3					retn
020A:DAFC			loc_2488:
020A:DAFC  50					push	ax
020A:DAFD  53					push	bx
020A:DAFE  51					push	cx
020A:DAFF  52					push	dx
020A:DB00  56					push	si
020A:DB01  57					push	di
020A:DB02  55					push	bp
020A:DB03  A1 42EC				mov	ax,word ptr ds:[42ECh]	; (9B68:42EC=0)
020A:DB06  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DB0A  A1 42EE				mov	ax,word ptr ds:[42EEh]	; (9B68:42EE=0)
020A:DB0D  EB 2E				jmp	short loc_2491		; (DB3D)
020A:DB0F  90					nop
  
				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
  
				sub_210:
020A:DB10  83 3E 42E8 FF			cmp	word ptr ds:[42E8h],0FFFFh	; (9B68:42E8=0)
020A:DB15  74 09				je	loc_2489		; Jump if equal
020A:DB17  F7 06 42F1 00E0			test	word ptr ds:[42F1h],0E0h	; (9B68:42F1=0)
020A:DB1D  75 0B				jnz	loc_2490		; Jump if not zero
020A:DB1F  C3					retn
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 462

020A:DB20			loc_2489:
020A:DB20  50					push	ax
020A:DB21  B0 07				mov	al,7
020A:DB23  9A 16FA:1530		;*		call	far ptr sub_272		;*(16FA:1530)
020A:DB23  9A 30 15 FA 16			db	 9Ah, 30h, 15h,0FAh, 16h
020A:DB28  58					pop	ax
020A:DB29  C3					retn
020A:DB2A			loc_2490:
020A:DB2A  50					push	ax
020A:DB2B  53					push	bx
020A:DB2C  51					push	cx
020A:DB2D  52					push	dx
020A:DB2E  56					push	si
020A:DB2F  57					push	di
020A:DB30  55					push	bp
020A:DB31  A1 42E8				mov	ax,word ptr ds:[42E8h]	; (9B68:42E8=0)
020A:DB34  2E: A3 8960				mov	word ptr cs:[8960h],ax	; (020A:8960=12FDh)
020A:DB38  A1 42EA				mov	ax,word ptr ds:[42EAh]	; (9B68:42EA=0)
020A:DB3B  EB 00				jmp	short loc_2491		; (DB3D)
020A:DB3D			loc_2491:
020A:DB3D  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:DB42  06					push	es
020A:DB43  FF 36 37A4				push	word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:DB47  FF 36 37A2				push	word ptr ds:[37A2h]	; (9B68:37A2=92E5h)
020A:DB4B  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (9B68:263E=0A4h)
020A:DB50  75 03				jne	loc_2492		; Jump if not equal
020A:DB52  E9 019C				jmp	loc_2512		; (DCF1)
020A:DB55			loc_2492:
020A:DB55  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:DB59  C6 06 4204 01			mov	byte ptr ds:[4204h],1	; (9B68:4204=0)
020A:DB5E  BA 0001				mov	dx,1
020A:DB61  E8 B474				call	sub_143			; (8FD8)
020A:DB64  73 43				jnc	loc_2496		; Jump if carry=0
020A:DB66			loc_2493:
020A:DB66  26: 8A 4D 04				mov	cl,es:[di+4]
020A:DB6A  80 E1 1F				and	cl,1Fh
020A:DB6D  80 F9 1F				cmp	cl,1Fh
020A:DB70  75 11				jne	loc_2494		; Jump if not equal
020A:DB72  26: 8A 4D 09				mov	cl,es:[di+9]
020A:DB76  80 F9 40				cmp	cl,40h			; '@'
020A:DB79  72 08				jb	loc_2494		; Jump if below
020A:DB7B  80 F9 44				cmp	cl,44h			; 'D'
020A:DB7E  77 03				ja	loc_2494		; Jump if above
020A:DB80  E9 016E				jmp	loc_2512		; (DCF1)
020A:DB83			loc_2494:
020A:DB83  50					push	ax
020A:DB84  53					push	bx
020A:DB85  BB 377F				mov	bx,377Fh
020A:DB88  26: 8A 45 05				mov	al,es:[di+5]
020A:DB8C  25 000F				and	ax,0Fh
020A:DB8F  D7					xlat				; al=[al+[bx]] table
020A:DB90  0A C0				or	al,al			; Zero ?
020A:DB92  75 04				jnz	loc_2495		; Jump if not zero
020A:DB94  26: 8A 45 06				mov	al,es:[di+6]
020A:DB98			loc_2495:
020A:DB98  03 F8				add	di,ax
020A:DB9A  5B					pop	bx
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 463

020A:DB9B  58					pop	ax
020A:DB9C  26: 3B 1D				cmp	bx,es:[di]
020A:DB9F  75 08				jne	loc_2496		; Jump if not equal
020A:DBA1  26: 3B 45 02				cmp	ax,es:[di+2]
020A:DBA5  75 02				jne	loc_2496		; Jump if not equal
020A:DBA7  EB BD				jmp	short loc_2493		; (DB66)
020A:DBA9			loc_2496:
020A:DBA9  BF 472B				mov	di,472Bh
020A:DBAC  89 1D				mov	[di],bx
020A:DBAE  89 45 02				mov	[di+2],ax
020A:DBB1  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:DBB5  C6 45 05 02				mov	byte ptr [di+5],2
020A:DBB9  C6 45 06 00				mov	byte ptr [di+6],0
020A:DBBD  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:DBC2  1E					push	ds
020A:DBC3  8E DB				mov	ds,bx
020A:DBC5  8B D8				mov	bx,ax
020A:DBC7  80 3F 8D				cmp	byte ptr [bx],8Dh
020A:DBCA  1F					pop	ds
020A:DBCB  75 18				jnz	loc_2497		; Jump if not zero
020A:DBCD  B0 0A				mov	al,0Ah
020A:DBCF  F7 06 42F1 0020			test	word ptr ds:[42F1h],20h	; (9B68:42F1=0)
020A:DBD5  75 24				jnz	loc_2498		; Jump if not zero
020A:DBD7  B0 09				mov	al,9
020A:DBD9  F7 06 42F1 0040			test	word ptr ds:[42F1h],40h	; (9B68:42F1=0)
020A:DBDF  75 1A				jnz	loc_2498		; Jump if not zero
020A:DBE1  B0 08				mov	al,8
020A:DBE3  EB 16				jmp	short loc_2498		; (DBFB)
020A:DBE5			loc_2497:
020A:DBE5  B0 44				mov	al,44h			; 'D'
020A:DBE7  F7 06 42F1 0020			test	word ptr ds:[42F1h],20h	; (9B68:42F1=0)
020A:DBED  75 0C				jnz	loc_2498		; Jump if not zero
020A:DBEF  B0 42				mov	al,42h			; 'B'
020A:DBF1  F7 06 42F1 0040			test	word ptr ds:[42F1h],40h	; (9B68:42F1=0)
020A:DBF7  75 02				jnz	loc_2498		; Jump if not zero
020A:DBF9  B0 40				mov	al,40h			; '@'
020A:DBFB			loc_2498:
020A:DBFB  88 45 09				mov	[di+9],al
020A:DBFE  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:DC01  F7 06 42F1 0004			test	word ptr ds:[42F1h],4	; (9B68:42F1=0)
020A:DC07  75 46				jnz	loc_2503		; Jump if not zero
020A:DC09  A1 42F5				mov	ax,word ptr ds:[42F5h]	; (9B68:42F5=0)
020A:DC0C  3D FFFF				cmp	ax,0FFFFh
020A:DC0F  75 3E				jne	loc_2503		; Jump if not equal
020A:DC11  A1 2EF4				mov	ax,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:DC14  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:DC19  74 34				jz	loc_2503		; Jump if zero
020A:DC1B  8A 0E 2F04				mov	cl,byte ptr ds:[2F04h]	; (9B68:2F04=0E8h)
020A:DC1F  80 F9 26				cmp	cl,26h			; '&'
020A:DC22  75 05				jne	loc_2499		; Jump if not equal
020A:DC24  A1 2EF2				mov	ax,word ptr ds:[2EF2h]	; (9B68:2EF2=2020h)
020A:DC27  EB 26				jmp	short loc_2503		; (DC4F)
020A:DC29			loc_2499:
020A:DC29  80 F9 2E				cmp	cl,2Eh			; '.'
020A:DC2C  75 05				jne	loc_2500		; Jump if not equal
020A:DC2E  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:DC31  EB 1C				jmp	short loc_2503		; (DC4F)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 464

020A:DC33			loc_2500:
020A:DC33  80 F9 36				cmp	cl,36h			; '6'
020A:DC36  75 05				jne	loc_2501		; Jump if not equal
020A:DC38  A1 2EFA				mov	ax,word ptr ds:[2EFAh]	; (9B68:2EFA=2020h)
020A:DC3B  EB 12				jmp	short loc_2503		; (DC4F)
020A:DC3D			loc_2501:
020A:DC3D  80 F9 64				cmp	cl,64h			; 'd'
020A:DC40  75 05				jne	loc_2502		; Jump if not equal
020A:DC42  A1 2EF6				mov	ax,word ptr ds:[2EF6h]	; (9B68:2EF6=2020h)
020A:DC45  EB 08				jmp	short loc_2503		; (DC4F)
020A:DC47			loc_2502:
020A:DC47  80 F9 65				cmp	cl,65h			; 'e'
020A:DC4A  75 03				jne	loc_2503		; Jump if not equal
020A:DC4C  A1 2EF8				mov	ax,word ptr ds:[2EF8h]	; (9B68:2EF8=2020h)
020A:DC4F			loc_2503:
020A:DC4F  89 45 0A				mov	[di+0Ah],ax
020A:DC52  F7 06 42CC 4000			test	word ptr ds:[42CCh],4000h	; (9B68:42CC=0)
020A:DC58  74 03				jz	loc_2504		; Jump if zero
020A:DC5A  E9 0094				jmp	loc_2512		; (DCF1)
020A:DC5D			loc_2504:
020A:DC5D  E8 D000				call	sub_174			; (AC60)
020A:DC60  BF 472B				mov	di,472Bh
020A:DC63  8B 5D 0A				mov	bx,[di+0Ah]
020A:DC66  2E: A1 8960				mov	ax,word ptr cs:[8960h]	; (020A:8960=12FDh)
020A:DC6A  9A 16FA:1308		;*		call	far ptr sub_265		;*(16FA:1308)
020A:DC6A  9A 08 13 FA 16			db	 9Ah, 08h, 13h,0FAh, 16h
020A:DC6F  89 1D				mov	[di],bx
020A:DC71  89 45 02				mov	[di+2],ax
020A:DC74  80 3E 14AD 01			cmp	byte ptr ds:[14ADh],1	; (D233:14AD=20h)
020A:DC79  77 04				ja	loc_2505		; Jump if above
020A:DC7B  80 4D 05 01				or	byte ptr [di+5],1
020A:DC7F			loc_2505:
020A:DC7F  F7 06 42F1 0020			test	word ptr ds:[42F1h],20h	; (D233:42F1=0D72h)
020A:DC85  75 4B				jnz	loc_2510		; Jump if not zero
020A:DC87  F7 06 42F1 0040			test	word ptr ds:[42F1h],40h	; (D233:42F1=0D72h)
020A:DC8D  75 08				jnz	loc_2506		; Jump if not zero
020A:DC8F  F7 06 42F1 0080			test	word ptr ds:[42F1h],80h	; (D233:42F1=0D72h)
020A:DC95  75 16				jnz	loc_2507		; Jump if not zero
020A:DC97			loc_2506:
020A:DC97  C6 06 4204 00			mov	byte ptr ds:[4204h],0	; (D233:4204=6Ah)
020A:DC9C  BA 0001				mov	dx,1
020A:DC9F  E8 B336				call	sub_143			; (8FD8)
020A:DCA2  72 4D				jc	loc_2512		; Jump if carry Set
020A:DCA4  BF 472B				mov	di,472Bh
020A:DCA7  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:DCAB  EB 41				jmp	short loc_2511		; (DCEE)
020A:DCAD			loc_2507:
020A:DCAD  BA 0004				mov	dx,4
020A:DCB0			loc_2508:
020A:DCB0  E8 B325				call	sub_143			; (8FD8)
020A:DCB3  72 3C				jc	loc_2512		; Jump if carry Set
020A:DCB5  BF 472B				mov	di,472Bh
020A:DCB8  C6 45 04 43				mov	byte ptr [di+4],43h	; 'C'
020A:DCBC  80 4D 05 08				or	byte ptr [di+5],8
020A:DCC0  57					push	di
020A:DCC1  1E					push	ds
020A:DCC2  07					pop	es
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 465

020A:DCC3  83 C7 09				add	di,9
020A:DCC6  BE 2ED4				mov	si,2ED4h
020A:DCC9  B9 0029				mov	cx,29h
020A:DCCC  FC					cld				; Clear direction
020A:DCCD  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:DCCF  5F					pop	di
020A:DCD0  EB 1C				jmp	short loc_2511		; (DCEE)
020A:DCD2			loc_2510:
020A:DCD2  BA 0002				mov	dx,2
020A:DCD5  E8 B300				call	sub_143			; (8FD8)
020A:DCD8  72 17				jc	loc_2512		; Jump if carry Set
020A:DCDA  BF 472B				mov	di,472Bh
020A:DCDD  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:DCE1  80 4D 05 04				or	byte ptr [di+5],4
020A:DCE5  C6 45 08 01				mov	byte ptr [di+8],1
020A:DCE9  C7 45 06 1000			mov	word ptr [di+6],1000h
020A:DCEE			loc_2511:
020A:DCEE  E8 CF6F				call	sub_174			; (AC60)
020A:DCF1			loc_2512:
020A:DCF1  C6 06 4204 00			mov	byte ptr ds:[4204h],0	; (D233:4204=6Ah)
020A:DCF6  8F 06 37A2				pop	word ptr ds:[37A2h]	; (D233:37A2=140Eh)
020A:DCFA  8F 06 37A4				pop	word ptr ds:[37A4h]	; (D233:37A4=3)
020A:DCFE  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:DD03  5A					pop	dx
020A:DD04  8E C2				mov	es,dx
020A:DD06  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:DD0B  5A					pop	dx
020A:DD0C  75 0A				jnz	loc_2513		; Jump if not zero
020A:DD0E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:DD13  74 03				je	loc_2513		; Jump if equal
020A:DD15  E8 C1CC				call	sub_168			; (9EE4)
020A:DD18			loc_2513:
020A:DD18  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:DD1D  5D					pop	bp
020A:DD1E  5F					pop	di
020A:DD1F  5E					pop	si
020A:DD20  5A					pop	dx
020A:DD21  59					pop	cx
020A:DD22  5B					pop	bx
020A:DD23  58					pop	ax
020A:DD24  C3					retn
				sub_206		endp
  
020A:DD25  7C 89				jl	loc_2508		; Jump if <
020A:DD27  DC 89 8A0C				esc	4,data_711[bx+di]	; (020A:8A0C=5Eh) coprocessor escape
020A:DD2B  AC					lodsb				; String [si] to al
020A:DD2C  89 9C C08A				mov	word ptr ds:[0C08Ah][si],bx	; (020A:C08A=0BAC0h)
020A:DD30  8A 6C 8A				mov	ch,[si-76h]
020A:DD33  3C 8A				cmp	al,8Ah
020A:DD35  87 DB				xchg	bx,bx
020A:DD37  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_211		proc	near
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 466

020A:DD38  53					push	bx
020A:DD39  33 DB				xor	bx,bx			; Zero register
020A:DD3B  8A D8				mov	bl,al
020A:DD3D  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:DD3F  2E: FF 97 8CD5			call	word ptr cs:[8CD5h][bx]	;*(020A:8CD5=2D84h)
020A:DD44  5B					pop	bx
020A:DD45  C3					retn
				sub_211		endp
  
020A:DD46  7C 89		;*		jl	loc_2509		;*Jump if <
020A:DD46  7C 89				db	 7Ch, 89h
020A:DD48  AC					lodsb				; String [si] to al
020A:DD49  89 DC				mov	sp,bx
020A:DD4B  89 0C				mov	[si],cx
020A:DD4D  8A 6C 8A				mov	ch,[si-76h]
020A:DD50  3C 8A				cmp	al,8Ah
020A:DD52  C0					db	0C0h
020A:DD53  8A 50 53				mov	dl,[bx+si+53h]
020A:DD56  51					push	cx
020A:DD57  52					push	dx
020A:DD58  56					push	si
020A:DD59  57					push	di
020A:DD5A  55					push	bp
020A:DD5B  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:DD60  1E					push	ds
020A:DD61  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:DD66  06					push	es
020A:DD67  A1 2D96				mov	ax,data_434		; (020A:2D96=5357h)
020A:DD6A  8B 1E 2D94				mov	bx,data_433		; (020A:2D94=4F44h)
020A:DD6E  BA 0004				mov	dx,4
020A:DD71  FF 36 37A4				push	word ptr ds:[37A4h]	; (020A:37A4=1A06h)
020A:DD75  FF 36 37A2				push	word ptr ds:[37A2h]	; (020A:37A2=806h)
020A:DD79  E8 B25C				call	sub_143			; (8FD8)
020A:DD7C  8F 06 37A2				pop	word ptr ds:[37A2h]	; (020A:37A2=806h)
020A:DD80  8F 06 37A4				pop	word ptr ds:[37A4h]	; (020A:37A4=1A06h)
020A:DD84  72 03				jc	loc_2515		; Jump if carry Set
020A:DD86			loc_2514:
020A:DD86  E9 00C9				jmp	loc_2524		; (DE52)
020A:DD89			loc_2515:
020A:DD89  26: 8B 55 07				mov	dx,es:[di+7]
020A:DD8D  F7 C2 0777				test	dx,777h
020A:DD91  74 F3				jz	loc_2514		; Jump if zero
020A:DD93  8B C2				mov	ax,dx
020A:DD95  25 000F				and	ax,0Fh
020A:DD98  A9 0007				test	ax,7
020A:DD9B  74 30				jz	loc_2518		; Jump if zero
020A:DD9D  8B 2E 2EF4				mov	bp,data_469		; (020A:2EF4=574Fh)
020A:DDA1  A9 0008				test	ax,8
020A:DDA4  74 04				jz	loc_2516		; Jump if zero
020A:DDA6  8B 2E 2EF2				mov	bp,data_468		; (020A:2EF2=444Eh)
020A:DDAA			loc_2516:
020A:DDAA  89 2E 42F5				mov	data_622,bp		; (020A:42F5=1B01h)
020A:DDAE  8B D8				mov	bx,ax
020A:DDB0  83 E3 07				and	bx,7
020A:DDB3  4B					dec	bx
020A:DDB4  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:DDB6  C7 06 42F1 0020			mov	data_620,20h		; (020A:42F1=0C40h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 467

020A:DDBC  F7 C2 1000				test	dx,1000h
020A:DDC0  74 06				jz	loc_2517		; Jump if zero
020A:DDC2  C7 06 42F1 0040			mov	data_620,40h		; (020A:42F1=0C40h)
020A:DDC8			loc_2517:
020A:DDC8  2E: FF 97 8CF6			call	word ptr cs:[8CF6h][bx]	;*(020A:8CF6=0A805h)
020A:DDCD			loc_2518:
020A:DDCD  8B C2				mov	ax,dx
020A:DDCF  B1 04				mov	cl,4
020A:DDD1  D3 C8				ror	ax,cl			; Rotate
020A:DDD3  25 000F				and	ax,0Fh
020A:DDD6  A9 0007				test	ax,7
020A:DDD9  74 30				jz	loc_2521		; Jump if zero
020A:DDDB  8B 2E 2EF4				mov	bp,data_469		; (020A:2EF4=574Fh)
020A:DDDF  A9 0008				test	ax,8
020A:DDE2  74 04				jz	loc_2519		; Jump if zero
020A:DDE4  8B 2E 2EF2				mov	bp,data_468		; (020A:2EF2=444Eh)
020A:DDE8			loc_2519:
020A:DDE8  89 2E 42F5				mov	data_622,bp		; (020A:42F5=1B01h)
020A:DDEC  8B D8				mov	bx,ax
020A:DDEE  83 E3 07				and	bx,7
020A:DDF1  4B					dec	bx
020A:DDF2  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:DDF4  C7 06 42F1 0020			mov	data_620,20h		; (020A:42F1=0C40h)
020A:DDFA  F7 C2 2000				test	dx,2000h
020A:DDFE  74 06				jz	loc_2520		; Jump if zero
020A:DE00  C7 06 42F1 0040			mov	data_620,40h		; (020A:42F1=0C40h)
020A:DE06			loc_2520:
020A:DE06  2E: FF 97 8CF6			call	word ptr cs:[8CF6h][bx]	;*(020A:8CF6=0A805h)
020A:DE0B			loc_2521:
020A:DE0B  8B C2				mov	ax,dx
020A:DE0D  B1 08				mov	cl,8
020A:DE0F  D3 C8				ror	ax,cl			; Rotate
020A:DE11  25 000F				and	ax,0Fh
020A:DE14  A9 0007				test	ax,7
020A:DE17  74 39				jz	loc_2524		; Jump if zero
020A:DE19  26: 8B 2D				mov	bp,es:[di]
020A:DE1C  F7 C2 8000				test	dx,8000h
020A:DE20  75 0D				jnz	loc_2522		; Jump if not zero
020A:DE22  8B 2E 2EF4				mov	bp,data_469		; (020A:2EF4=574Fh)
020A:DE26  A9 0008				test	ax,8
020A:DE29  74 04				jz	loc_2522		; Jump if zero
020A:DE2B  8B 2E 2EF2				mov	bp,data_468		; (020A:2EF2=444Eh)
020A:DE2F			loc_2522:
020A:DE2F  89 2E 42F5				mov	data_622,bp		; (020A:42F5=1B01h)
020A:DE33  8B D8				mov	bx,ax
020A:DE35  83 E3 07				and	bx,7
020A:DE38  4B					dec	bx
020A:DE39  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:DE3B  C7 06 42F1 0020			mov	data_620,20h		; (020A:42F1=0C40h)
020A:DE41  F7 C2 2000				test	dx,2000h
020A:DE45  74 06				jz	loc_2523		; Jump if zero
020A:DE47  C7 06 42F1 0040			mov	data_620,40h		; (020A:42F1=0C40h)
020A:DE4D			loc_2523:
020A:DE4D  2E: FF 97 8CF6			call	word ptr cs:[8CF6h][bx]	;*(020A:8CF6=0A805h)
020A:DE52			loc_2524:
020A:DE52  E8 F8DF				call	sub_203			; (D734)
020A:DE55  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 468

020A:DE5A  5A					pop	dx
020A:DE5B  8E C2				mov	es,dx
020A:DE5D  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:DE62  5A					pop	dx
020A:DE63  75 0A				jnz	loc_2525		; Jump if not zero
020A:DE65  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:DE6A  74 03				je	loc_2525		; Jump if equal
020A:DE6C  E8 C075				call	sub_168			; (9EE4)
020A:DE6F			loc_2525:
020A:DE6F  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:DE74  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:DE79  5A					pop	dx
020A:DE7A  8E DA				mov	ds,dx
020A:DE7C  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:DE81  5A					pop	dx
020A:DE82  75 0A				jnz	loc_2526		; Jump if not zero
020A:DE84  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:DE89  74 03				je	loc_2526		; Jump if equal
020A:DE8B  E8 C056				call	sub_168			; (9EE4)
020A:DE8E			loc_2526:
020A:DE8E  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:DE93  5D					pop	bp
020A:DE94  5F					pop	di
020A:DE95  5E					pop	si
020A:DE96  5A					pop	dx
020A:DE97  59					pop	cx
020A:DE98  5B					pop	bx
020A:DE99  58					pop	ax
020A:DE9A  C3					retn
020A:DE9B  00 00				add	[bx+si],al
020A:DE9D  00 00				add	[bx+si],al
020A:DE9F  00 01				add	[bx+di],al
020A:DEA1  87 DB				xchg	bx,bx
020A:DEA3  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_212		proc	near
020A:DEA4  C6 06 2A5C 00			mov	byte ptr ds:[2A5Ch],0	; (020A:2A5C=8Eh)
020A:DEA9  88 3E 2A62				mov	byte ptr ds:[2A62h],bh	; (020A:2A62=0E1h)
020A:DEAD  2E: 88 16 8E50			mov	byte ptr cs:[8E50h],dl	; (020A:8E50=45h)
020A:DEB2  B6 00				mov	dh,0
020A:DEB4  8A C2				mov	al,dl
020A:DEB6  8A D8				mov	bl,al
020A:DEB8			loc_2527:
020A:DEB8  50					push	ax
020A:DEB9  56					push	si
020A:DEBA  32 E4				xor	ah,ah			; Zero register
020A:DEBC  BE 8E82				mov	si,8E82h
020A:DEBF  03 F0				add	si,ax
020A:DEC1  2E: 8A 04				mov	al,cs:[si]
020A:DEC4  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:DEC6  BE 8F82				mov	si,8F82h
020A:DEC9  03 F0				add	si,ax
020A:DECB  2E: 8B 0C				mov	cx,cs:[si]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 469

020A:DECE  5E					pop	si
020A:DECF  58					pop	ax
020A:DED0  51					push	cx
020A:DED1  C3					retn
				sub_212		endp
  
020A:DED2  00 01				add	[bx+di],al
020A:DED4  02 03				add	al,[bp+di]
020A:DED6  0007[03]				db	7 dup (3)
020A:DEDD  0008[04]				db	8 dup (4)
020A:DEE5  0008[07]				db	8 dup (7)
020A:DEED  0008[16]				db	8 dup (16h)
020A:DEF5  1C 1C				sbb	al,1Ch
020A:DEF7  1C 05				sbb	al,5
020A:DEF9  06					push	es
020A:DEFA  08 09				or	[bx+di],cl
020A:DEFC  0007[00]				db	7 dup (0)
020A:DF03  0A 0A				or	cl,[bp+si]
020A:DF05  00 00				add	[bx+si],al
020A:DF07  0A 0A				or	cl,[bp+si]
020A:DF09  22 00				and	al,[bx+si]
020A:DF0B  00 00				add	[bx+si],al
020A:DF0D  00 00				add	[bx+si],al
020A:DF0F  0B 0C				or	cx,[si]
020A:DF11  00 0D				add	[di],cl
020A:DF13  0D 0000				or	ax,0
020A:DF16  0D 0D0D				or	ax,0D0Dh
020A:DF19  00 0D				add	[di],cl
020A:DF1B  0D 0000				or	ax,0
020A:DF1E  00 00				add	[bx+si],al
020A:DF20  00 00				add	[bx+si],al
020A:DF22  000C[0E]				db	12 dup (0Eh)
020A:DF2E  00 00				add	[bx+si],al
020A:DF30  00 0F				add	[bx],cl
020A:DF32  10 10				adc	[bx+si],dl
020A:DF34  1A 10				sbb	dl,[bx+si]
020A:DF36  1F					pop	ds
020A:DF37  1F					pop	ds
020A:DF38  00 00				add	[bx+si],al
020A:DF3A  05 1D06				add	ax,1D06h
020A:DF3D  1E					push	ds
020A:DF3E  00 00				add	[bx+si],al
020A:DF40  00 21				add	[bx+di],ah
020A:DF42  0008[12]				db	8 dup (12h)
020A:DF4A  00 00				add	[bx+si],al
020A:DF4C  11 11				adc	[bx+di],dx
020A:DF4E  11 11				adc	[bx+di],dx
020A:DF50  11 11				adc	[bx+di],dx
020A:DF52  0008[1B]				db	8 dup (1Bh)
020A:DF5A  000E[13]				db	14 dup (13h)
020A:DF68  17					pop	ss
020A:DF69  17					pop	ss
020A:DF6A  17					pop	ss
020A:DF6B  00 18				add	[bx+si],bl
020A:DF6D  18 18				sbb	[bx+si],bl
020A:DF6F  18 18				sbb	[bx+si],bl
020A:DF71  18 13				sbb	[bp+di],dl
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 470

020A:DF73  0007[13]				db	7 dup (13h)
020A:DF7A  20 20				and	[bx+si],ah
020A:DF7C  00 00				add	[bx+si],al
020A:DF7E  00 00				add	[bx+si],al
020A:DF80  00 00				add	[bx+si],al
020A:DF82  0008[14]				db	8 dup (14h)
020A:DF8A  00 00				add	[bx+si],al
020A:DF8C  19 19				sbb	[bx+di],bx
020A:DF8E  19 19				sbb	[bx+di],bx
020A:DF90  19 15				sbb	[di],dx
020A:DF92  0020[00]				db	32 dup (0)
020A:DFB2  0008[13]				db	8 dup (13h)
020A:DFBA  0018[00]				db	24 dup (0)
020A:DFD2  3E					db	3Eh
020A:DFD3  A5					movsw				; Mov [si] to es:[di]
020A:DFD4  C8					db	0C8h
020A:DFD5  8F					db	8Fh
020A:DFD6  D7					xlat				; al=[al+[bx]] table
020A:DFD7  8F					db	8Fh
020A:DFD8  2D 6E98				sub	ax,6E98h
020A:DFDB  98					cbw				; Convrt byte to word
020A:DFDC  E9 F88F		;*		jmp	loc_2455		;*(D86E)
020A:DFDC  E9 8F F8				db	0E9h, 8Fh,0F8h
020A:DFDF  8F					db	8Fh
020A:DFE0  AC					lodsb				; String [si] to al
020A:DFE1  98					cbw				; Convrt byte to word
020A:DFE2  47					inc	di
020A:DFE3  90					nop
020A:DFE4  56					push	si
020A:DFE5  90					nop
020A:DFE6  69					db	69h
020A:DFE7  9C					pushf				; Push flags
020A:DFE8  85 9E 9C39				test	bx,[bp-63C7h]
020A:DFEC  16					push	ss
020A:DFED  A0 948F				mov	al,byte ptr ds:[948Fh]	; (0000:948F=2Bh)
020A:DFF0  DB 94 91C2				esc	3,ds:[91C2h][si]	; (0000:91C2=73h) coprocessor escape
020A:DFF4  35 00A4				xor	ax,0A4h
020A:DFF7  A4					movsb				; Mov [si] to es:[di]
020A:DFF8  87 90 919D				xchg	dx,word ptr ds:[919Dh][bx+si]	; (0000:919D=2EC2h)
020A:DFFC  95					xchg	ax,bp
020A:DFFD  91					xchg	ax,cx
020A:DFFE  31 9C 912E				xor	word ptr ds:[912Eh][si],bx	; (0000:912E=92h)
020A:E002  48					dec	ax
020A:E003  91					xchg	ax,cx
020A:E004  3D 2D91				cmp	ax,2D91h
020A:E007  94					xchg	ax,sp
020A:E008  22 90 9174				and	dl,byte ptr ds:[9174h][bx+si]	; (0000:9174=0BFh)
020A:E00C  67					db	67h
020A:E00D  90					nop
020A:E00E  76 90		;*		jbe	loc_2528		;*Jump if below or =
020A:E00E  76 90				db	 76h, 90h
020A:E010  78 94		;*		js	loc_2529		;*Jump if sign=1
020A:E010  78 94				db	 78h, 94h
020A:E012  10 91 A3ED				adc	byte ptr ds:[0A3EDh][bx+di],dl	; (0000:A3ED=39h)
020A:E016  34 A6				xor	al,0A6h
020A:E018  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (0000:2A5E=0)
020A:E01D  26: 8A 5C 01				mov	bl,es:[si+1]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 471

020A:E021  B1 03				mov	cl,3
020A:E023  D2 CB				ror	bl,cl			; Rotate
020A:E025  EB 09				jmp	short loc_2530		; (E030)
020A:E027  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (0000:2A5E=0)
020A:E02C  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E030			loc_2530:
020A:E030  80 E3 07				and	bl,7
020A:E033  80 C3 88				add	bl,88h
020A:E036  E9 009E				jmp	loc_2538		; (E0D7)
020A:E039  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (0000:2A5E=0)
020A:E03E  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E042  B1 03				mov	cl,3
020A:E044  D2 CB				ror	bl,cl			; Rotate
020A:E046  EB 24				jmp	short loc_2532		; (E06C)
020A:E048  F7 06 42F1 0004			test	word ptr ds:[42F1h],4	; (0000:42F1=0)
020A:E04E  74 13				jz	loc_2531		; Jump if zero
020A:E050  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E054  80 E3 07				and	bl,7
020A:E057  80 3E 2638 06			cmp	byte ptr ds:[2638h],6	; (0000:2638=0F2h)
020A:E05C  72 05				jb	loc_2531		; Jump if below
020A:E05E  8A C3				mov	al,bl
020A:E060  E8 FCD5				call	sub_211			; (DD38)
020A:E063			loc_2531:
020A:E063  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (0000:2A5E=0)
020A:E068  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E06C			loc_2532:
020A:E06C  80 E3 07				and	bl,7
020A:E06F  80 C3 80				add	bl,80h
020A:E072  0C 01				or	al,1
020A:E074  3C 69				cmp	al,69h			; 'i'
020A:E076  74 1D				je	loc_2534		; Jump if equal
020A:E078  80 FA 82				cmp	dl,82h
020A:E07B  75 0E				jne	loc_2533		; Jump if not equal
020A:E07D  80 3E 2A75 50			cmp	byte ptr ds:[2A75h],50h	; (0000:2A75=0) 'P'
020A:E082  74 11				je	loc_2534		; Jump if equal
020A:E084  80 3E 2A75 52			cmp	byte ptr ds:[2A75h],52h	; (0000:2A75=0) 'R'
020A:E089  74 0A				je	loc_2534		; Jump if equal
020A:E08B			loc_2533:
020A:E08B  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (0000:2ECA=33h)
020A:E090  74 03				jz	loc_2534		; Jump if zero
020A:E092  80 C3 20				add	bl,20h			; ' '
020A:E095			loc_2534:
020A:E095  EB 40				jmp	short loc_2538		; (E0D7)
020A:E097  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (0000:2A5E=0)
020A:E09C  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E0A0  B1			data_819	db	0B1h			; Data table (indexed access)
020A:E0A1  03 D2				add	dx,dx
020A:E0A3  CB					retf
020A:E0A4  EB 09				jmp	short loc_2535		; (E0AF)
020A:E0A6  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (020A:2A5E=0E9h)
020A:E0AB  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E0AF			loc_2535:
020A:E0AF  80			data_821	db	80h
020A:E0B0  E3 07				jcxz	loc_2536		; Jump if cx=0
020A:E0B2  80 C3 90				add	bl,90h
020A:E0B5  EB 20				jmp	short loc_2538		; (E0D7)
020A:E0B7  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (020A:2A5E=0E9h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 472

020A:E0BC  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E0C0  B1 03				mov	cl,3
020A:E0C2  D2 CB				ror	bl,cl			; Rotate
020A:E0C4  EB 09				jmp	short loc_2537		; (E0CF)
020A:E0C6  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (020A:2A5E=0E9h)
020A:E0CB  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E0CF			loc_2537:
020A:E0CF  80 E3 07				and	bl,7
020A:E0D2  80 C3 A0				add	bl,0A0h
020A:E0D5  EB 00				jmp	short loc_2538		; (E0D7)
020A:E0D7			loc_2538:
020A:E0D7  80 3E 2F06 02			cmp	data_476,2		; (020A:2F06=4Eh)
020A:E0DC  75 07				jne	loc_2539		; Jump if not equal
020A:E0DE  80 FB 84				cmp	bl,84h
020A:E0E1  75 2D				jne	loc_2543		; Jump if not equal
020A:E0E3  EB 0C				jmp	short loc_2540		; (E0F1)
020A:E0E5			loc_2539:
020A:E0E5  80 3E 2F06 03			cmp	data_476,3		; (020A:2F06=4Eh)
020A:E0EA  75 24				jne	loc_2543		; Jump if not equal
020A:E0EC  80 FB 92				cmp	bl,92h
020A:E0EF  75 0E				jne	loc_2541		; Jump if not equal
020A:E0F1			loc_2540:
020A:E0F1  80 3E 2F08 01			cmp	byte ptr ds:[2F08h],1	; (020A:2F08=57h)
020A:E0F6  74 13				je	loc_2542		; Jump if equal
020A:E0F8  C6 06 2F06 04			mov	data_476,4		; (020A:2F06=4Eh)
020A:E0FD  EB 11				jmp	short loc_2543		; (E110)
020A:E0FF			loc_2541:
020A:E0FF  80 3E 2F05 01			cmp	data_475,1		; (020A:2F05=49h)
020A:E104  75 0A				jne	loc_2543		; Jump if not equal
020A:E106  80 FB 91				cmp	bl,91h
020A:E109  75 05				jne	loc_2543		; Jump if not equal
020A:E10B			loc_2542:
020A:E10B  C6 06 2F06 00			mov	data_476,0		; (020A:2F06=4Eh)
020A:E110			loc_2543:
020A:E110  32 FF				xor	bh,bh			; Zero register
020A:E112  80 FB E0				cmp	bl,0E0h
020A:E115  73 2D				jae	loc_2545		; Jump if above or =
020A:E117  80 FB 97				cmp	bl,97h
020A:E11A  76 12				jbe	loc_2544		; Jump if below or =
020A:E11C  57					push	di
020A:E11D  BF 33FD				mov	di,33FDh
020A:E120  83			data_822	db	83h
020A:E121  C7 04 058A				mov	word ptr [si],58Ah
020A:E125  5F					pop	di
020A:E126  3E: 88 46 00				mov	ds:[bp],al
020A:E12A  45					inc	bp
020A:E12B  80 EB 20				sub	bl,20h			; ' '
020A:E12E			loc_2544:
020A:E12E  80 EB 80				sub	bl,80h
020A:E131  88 1E 42F0				mov	data_619,bl		; (020A:42F0=0Ch)
020A:E135  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:E137  81 C3 2F0C				add	bx,2F0Ch
020A:E13B  8B 07				mov	ax,[bx]
020A:E13D  3E: 89 46 00				mov	ds:[bp],ax
020A:E141  45					inc	bp
020A:E142  EB 16				jmp	short loc_2546		; (E15A)
020A:E144			loc_2545:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 473

020A:E144  81 C3 2EE1				add	bx,2EE1h
020A:E148  8A 07				mov	al,[bx]
020A:E14A  3E: 88 46 00				mov	ds:[bp],al
020A:E14E  80 3E 2A75 EF			cmp	byte ptr ds:[2A75h],0EFh	; (020A:2A75=0ADh)
020A:E153  75 05				jne	loc_2546		; Jump if not equal
020A:E155  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (020A:2A5E=0E9h)
020A:E15A			loc_2546:
020A:E15A  45					inc	bp
020A:E15B  B6 00				mov	dh,0
020A:E15D  E9 1425				jmp	loc_2791		; (F585)
020A:E160  80 EB A8				sub	bl,0A8h
020A:E163  80 C3 14				add	bl,14h
020A:E166  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:E168  81 C3 2F0C				add	bx,2F0Ch
020A:E16C  8B 07				mov	ax,[bx]
020A:E16E  3E: 89 46 00				mov	ds:[bp],ax
020A:E172  C6 06 2A5E 00			mov	byte ptr ds:[2A5Eh],0	; (020A:2A5E=0E9h)
020A:E177  45					inc	bp
020A:E178  45					inc	bp
020A:E179  B6 00				mov	dh,0
020A:E17B  E9 1407				jmp	loc_2791		; (F585)
020A:E17E  8A C3				mov	al,bl
020A:E180  2C 96				sub	al,96h
020A:E182  3C 00				cmp	al,0
020A:E184  74 02				je	loc_2547		; Jump if equal
020A:E186  04 01				add	al,1
020A:E188			loc_2547:
020A:E188  BB 2F3C				mov	bx,2F3Ch
020A:E18B  EB 1A				jmp	short loc_2549		; (E1A7)
020A:E18D  8A C3				mov	al,bl
020A:E18F  2C BA				sub	al,0BAh
020A:E191  04 03				add	al,3
020A:E193  BB 2F91				mov	bx,2F91h
020A:E196  EB 0F				jmp	short loc_2549		; (E1A7)
020A:E198  8A C3				mov	al,bl
020A:E19A  2C 9A				sub	al,9Ah
020A:E19C  3C 03				cmp	al,3
020A:E19E  76 02				jbe	loc_2548		; Jump if below or =
020A:E1A0  04 02				add	al,2
020A:E1A2			loc_2548:
020A:E1A2  BB 2F54				mov	bx,2F54h
020A:E1A5  EB			data_823	db	0EBh			; Data table (indexed access)
020A:E1A6  00 32				add	[bp+si],dh
020A:E1A8  E4 24				in	al,24h			; port 24h
020A:E1AA  07					pop	es
020A:E1AB  03 D8				add	bx,ax
020A:E1AD  03 D8				add	bx,ax
020A:E1AF  03 D8				add	bx,ax
020A:E1B1  8B 07				mov	ax,[bx]
020A:E1B3  3E: 89 46 00				mov	ds:[bp],ax
020A:E1B7  45					inc	bp
020A:E1B8  45					inc	bp
020A:E1B9  8A 47 02				mov	al,[bx+2]
020A:E1BC  3E: 88 46 00				mov	ds:[bp],al
020A:E1C0  45					inc	bp
020A:E1C1  E9 13C1				jmp	loc_2791		; (F585)
020A:E1C4  8A C3				mov	al,bl
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 474

020A:E1C6  BB 2F3C				mov	bx,2F3Ch
020A:E1C9  3C 23				cmp	al,23h			; '#'
020A:E1CB  74 0A				je	loc_2550		; Jump if equal
020A:E1CD  BB 2F54				mov	bx,2F54h
020A:E1D0  3C 24				cmp	al,24h			; '$'
020A:E1D2  74 03				je	loc_2550		; Jump if equal
020A:E1D4  BB 2F91				mov	bx,2F91h
020A:E1D7			loc_2550:
020A:E1D7  26: 8A 44 01				mov	al,es:[si+1]
020A:E1DB  D0 C8				ror	al,1			; Rotate
020A:E1DD  D0 C8				ror	al,1			; Rotate
020A:E1DF  D0 C8				ror	al,1			; Rotate
020A:E1E1  24 07				and	al,7
020A:E1E3  EB C2		;*		jmp	short loc_2549		;*(E1A7)
020A:E1E3  EB C2				db	0EBh,0C2h
020A:E1E5  26: 8A 44 01				mov	al,es:[si+1]
020A:E1E9  24 07				and	al,7
020A:E1EB  04 B0				add	al,0B0h
020A:E1ED  56					push	si
020A:E1EE  BE 2F6C				mov	si,2F6Ch
020A:E1F1  B9 0002				mov	cx,2
020A:E1F4  2C B0				sub	al,0B0h
020A:E1F6  74 0C				jz	locloop_2551		; Jump if zero
020A:E1F8  FE C8				dec	al
020A:E1FA  B9 0005				mov	cx,5
020A:E1FD  F6 E1				mul	cl			; ax = reg * al
020A:E1FF  05 2F6E				add	ax,2F6Eh
020A:E202  8B F0				mov	si,ax
  
020A:E204			locloop_2551:
020A:E204  8A 04				mov	al,[si]
020A:E206  3E: 88 46 00				mov	ds:[bp],al
020A:E20A  46					inc	si
020A:E20B  45					inc	bp
020A:E20C  E2 F6				loop	locloop_2551		; Loop if cx > 0
  
020A:E20E  5E					pop	si
020A:E20F  E9 1373				jmp	loc_2791		; (F585)
020A:E212  9A 16FA:1344		;*		call	far ptr sub_267		;*(16FA:1344)
020A:E212  9A 44 13 FA 16			db	 9Ah, 44h, 13h,0FAh, 16h
020A:E217  26: 8A 5C 01				mov	bl,es:[si+1]
020A:E21B  B2 36				mov	dl,36h			; '6'
020A:E21D  B6 02				mov	dh,2
020A:E21F  3C 63				cmp	al,63h			; 'c'
020A:E221  74 09				je	loc_2552		; Jump if equal
020A:E223  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (020A:2ECA=3Ah)
020A:E228  74 0B				jz	loc_2553		; Jump if zero
020A:E22A  EB 35				jmp	short loc_2557		; (E261)
020A:E22C			loc_2552:
020A:E22C  F6 06 2ECA 03			test	byte ptr ds:[2ECAh],3	; (020A:2ECA=3Ah)
020A:E231  74 02				jz	loc_2553		; Jump if zero
020A:E233  EB 2C				jmp	short loc_2557		; (E261)
020A:E235			loc_2553:
020A:E235  8A E3				mov	ah,bl
020A:E237  80 E4 C7				and	ah,0C7h
020A:E23A  80 FC 06				cmp	ah,6
020A:E23D  74 17				je	loc_2555		; Jump if equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 475

020A:E23F  80 E4 C0				and	ah,0C0h
020A:E242  80 FC 40				cmp	ah,40h			; '@'
020A:E245  75 06				jne	loc_2554		; Jump if not equal
020A:E247  B2 32				mov	dl,32h			; '2'
020A:E249  B6 01				mov	dh,1
020A:E24B  EB 09				jmp	short loc_2555		; (E256)
020A:E24D			loc_2554:
020A:E24D  80 FC 00				cmp	ah,0
020A:E250  75 04				jne	loc_2555		; Jump if not equal
020A:E252  B2 3D				mov	dl,3Dh			; '='
020A:E254  B6 00				mov	dh,0
020A:E256			loc_2555:
020A:E256  3C 61				cmp	al,61h			; 'a'
020A:E258  74 02				je	loc_2556		; Jump if equal
020A:E25A  B6 00				mov	dh,0
020A:E25C			loc_2556:
020A:E25C  8A C2				mov	al,dl
020A:E25E  E9 FC57				jmp	loc_2527		; (DEB8)
020A:E261			loc_2557:
020A:E261  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (020A:2A5E=0E9h)
020A:E266  88 1E 2A7C				mov	data_395,bl		; (020A:2A7C=0A8h)
020A:E26A  C6 06 2A7E 00			mov	data_397,0		; (020A:2A7E=0A0h)
020A:E26F  C6 06 2ECF 00			mov	data_457,0		; (020A:2ECF=44h)
020A:E274  C6 06 2A80 00			mov	data_399,0		; (020A:2A80=0E1h)
020A:E279  C6 06 2A7F 00			mov	data_398,0		; (020A:2A7F=20h)
020A:E27E  8A 26 2A7C				mov	ah,data_395		; (020A:2A7C=0A8h)
020A:E282  80 E4 07				and	ah,7
020A:E285  80 FC 04				cmp	ah,4
020A:E288  75 11				jne	loc_2558		; Jump if not equal
020A:E28A  26: 8A 64 02				mov	ah,es:[si+2]
020A:E28E  88 26 2A7D				mov	data_396,ah		; (020A:2A7D=0ACh)
020A:E292  C6 06 2A7E 01			mov	data_397,1		; (020A:2A7E=0A0h)
020A:E297  FE 06 2A5C				inc	byte ptr ds:[2A5Ch]	; (020A:2A5C=8Eh)
020A:E29B			loc_2558:
020A:E29B  8A 26 2A7C				mov	ah,data_395		; (020A:2A7C=0A8h)
020A:E29F  80 E4 C7				and	ah,0C7h
020A:E2A2  80 FC 05				cmp	ah,5
020A:E2A5  74			data_825	db	74h			; Data table (indexed access)
020A:E2A6  5D					pop	bp
020A:E2A7  F6 C4 C0				test	ah,0C0h
020A:E2AA  75 58				jnz	loc_2565		; Jump if not zero
020A:E2AC  80 3E 2A7E 01			cmp	data_397,1		; (020A:2A7E=0A0h)
020A:E2B1  75 11				jne	loc_2560		; Jump if not equal
020A:E2B3  8A 26 2A7D				mov	ah,data_396		; (020A:2A7D=0ACh)
020A:E2B7  80 E4 07				and	ah,7
020A:E2BA  80 FC 05				cmp	ah,5
020A:E2BD  74 45				je	loc_2565		; Jump if equal
020A:E2BF  EB 03				jmp	short loc_2560		; (E2C4)
020A:E2C1			loc_2559:
020A:E2C1  E9 019E				jmp	loc_2581		; (E462)
020A:E2C4			loc_2560:
020A:E2C4  80 26 2A7F FE			and	data_398,0FEh		; (020A:2A7F=20h)
020A:E2C9  F6 06 2D8C 80			test	data_428,80h		; (020A:2D8C=32h)
020A:E2CE  75 05				jnz	loc_2561		; Jump if not zero
020A:E2D0  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:E2D0  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:E2D5			loc_2561:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 476

020A:E2D5  F6 06 2ECC 08			test	data_455,8		; (020A:2ECC=57h)
020A:E2DA  74 05				jz	loc_2562		; Jump if zero
020A:E2DC  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:E2DC  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:E2E1			loc_2562:
020A:E2E1  80 3E 2A7E 01			cmp	data_397,1		; (020A:2A7E=0A0h)
020A:E2E6  74 D9				je	loc_2559		; Jump if equal
020A:E2E8  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (020A:2ECA=3Ah)
020A:E2ED  74 07				jz	loc_2563		; Jump if zero
020A:E2EF  9A 16FA:10F8		;*		call	far ptr sub_257		;*(16FA:10F8)
020A:E2EF  9A F8 10 FA 16			db	 9Ah,0F8h, 10h,0FAh, 16h
020A:E2F4  EB 09				jmp	short loc_2564		; (E2FF)
020A:E2F6			loc_2563:
020A:E2F6  8A 1E 2A7C				mov	bl,data_395		; (020A:2A7C=0A8h)
020A:E2FA  33 D2				xor	dx,dx			; Zero register
020A:E2FC  E9 0C24				jmp	loc_2703		; (EF23)
020A:E2FF			loc_2564:
020A:E2FF  33 D2				xor	dx,dx			; Zero register
020A:E301  E9 1281				jmp	loc_2791		; (F585)
020A:E304			loc_2565:
020A:E304  80 0E 2A7F 01			or	data_398,1		; (020A:2A7F=20h)
020A:E309  8A 3E 2A62				mov	bh,byte ptr ds:[2A62h]	; (020A:2A62=0E1h)
020A:E30D  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:E30D  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:E312  C6 06 2A80 01			mov	data_399,1		; (020A:2A80=0E1h)
020A:E317  F6 06 2ECC 08			test	data_455,8		; (020A:2ECC=57h)
020A:E31C  74 05				jz	loc_2566		; Jump if zero
020A:E31E  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:E31E  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:E323			loc_2566:
020A:E323  A1 2EF4				mov	ax,data_469		; (020A:2EF4=574Fh)
020A:E326  A3 3796				mov	data_545,ax		; (020A:3796=2506h)
020A:E329  B6 04				mov	dh,4
020A:E32B  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (020A:2ECA=3Ah)
020A:E330  75 02				jnz	loc_2567		; Jump if not zero
020A:E332  B6 02				mov	dh,2
020A:E334			loc_2567:
020A:E334  A0 2A7C				mov	al,data_395		; (020A:2A7C=0A8h)
020A:E337  24 C0				and	al,0C0h
020A:E339  3C 40				cmp	al,40h			; '@'
020A:E33B  75 02				jne	loc_2568		; Jump if not equal
020A:E33D  B6 01				mov	dh,1
020A:E33F			loc_2568:
020A:E33F  00 36 2A5C				add	byte ptr ds:[2A5Ch],dh	; (020A:2A5C=8Eh)
020A:E343  88 36 2ECF				mov	data_457,dh		; (020A:2ECF=44h)
020A:E347  9A 16FA:06B0		;*		call	far ptr sub_243		;*(16FA:06B0)
020A:E347  9A B0 06 FA 16			db	 9Ah,0B0h, 06h,0FAh, 16h
020A:E34C  56					push	si
020A:E34D  46					inc	si
020A:E34E  46					inc	si
020A:E34F  80 3E 2A7E 01			cmp	data_397,1		; (020A:2A7E=0A0h)
020A:E354  75 01				jne	loc_2569		; Jump if not equal
020A:E356  46					inc	si
020A:E357			loc_2569:
020A:E357  80 FE 01				cmp	dh,1
020A:E35A  75 03				jne	loc_2570		; Jump if not equal
020A:E35C  E9 008E				jmp	loc_2576		; (E3ED)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 477

020A:E35F			loc_2570:
020A:E35F  26: 8B 04				mov	ax,es:[si]
020A:E362  A3 2ED0				mov	data_458,ax		; (020A:2ED0=574Fh)
020A:E365  80 FE 02				cmp	dh,2
020A:E368  74 0F				je	loc_2571		; Jump if equal
020A:E36A  26: 8B 44 02				mov	ax,es:[si+2]
020A:E36E  A3 2ED2				mov	data_460,ax		; (020A:2ED2=53h)
020A:E371  3D 0000				cmp	ax,0
020A:E374  74 03				je	loc_2571		; Jump if equal
020A:E376  E9 00A6				jmp	loc_2578		; (E41F)
020A:E379			loc_2571:
020A:E379  80 3E 2A7E 01			cmp	data_397,1		; (020A:2A7E=0A0h)
020A:E37E  75 19				jne	loc_2572		; Jump if not equal
020A:E380  80 FE 01				cmp	dh,1
020A:E383  75 14				jne	loc_2572		; Jump if not equal
020A:E385  3D 0000				cmp	ax,0
020A:E388  75 0F				jne	loc_2572		; Jump if not equal
020A:E38A  8A 1E 2A7D				mov	bl,data_396		; (020A:2A7D=0ACh)
020A:E38E  80 E3 07				and	bl,7
020A:E391  80 FB 05				cmp	bl,5
020A:E394  75 03				jne	loc_2572		; Jump if not equal
020A:E396  E9 00C8				jmp	loc_2580		; (E461)
020A:E399			loc_2572:
020A:E399  A1 2ED0				mov	ax,data_458		; (020A:2ED0=574Fh)
020A:E39C  8A 1E 2A7C				mov	bl,data_395		; (020A:2A7C=0A8h)
020A:E3A0  8A 3E 2A62				mov	bh,byte ptr ds:[2A62h]	; (020A:2A62=0E1h)
020A:E3A4  C6 06 2A29 01			mov	byte ptr ds:[2A29h],1	; (020A:2A29=0A5h)
020A:E3A9  E8 CCB4				call	sub_177			; (B060)
020A:E3AC  C6 06 2ECF 00			mov	byte ptr ds:[2ECFh],0	; (D233:2ECF=0E8h)
020A:E3B1  80 3E 2A7E 01			cmp	byte ptr ds:[2A7Eh],1	; (D233:2A7E=0)
020A:E3B6  74 27				je	loc_2575		; Jump if equal
020A:E3B8  A0 2A7C				mov	al,byte ptr ds:[2A7Ch]	; (D233:2A7C=0)
020A:E3BB  24 C7				and	al,0C7h
020A:E3BD  3C 05				cmp	al,5
020A:E3BF  74 18				je	loc_2574		; Jump if equal
020A:E3C1  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (D233:2ECA=81h)
020A:E3C6  74 07				jz	loc_2573		; Jump if zero
020A:E3C8  9A 16FA:10F8		;*		call	far ptr sub_257		;*(16FA:10F8)
020A:E3C8  9A F8 10 FA 16			db	 9Ah,0F8h, 10h,0FAh, 16h
020A:E3CD  EB 0A				jmp	short loc_2574		; (E3D9)
020A:E3CF			loc_2573:
020A:E3CF  5E					pop	si
020A:E3D0  33 D2				xor	dx,dx			; Zero register
020A:E3D2  8A 1E 2A7C				mov	bl,byte ptr ds:[2A7Ch]	; (D233:2A7C=0)
020A:E3D6  E9 0B4A				jmp	loc_2703		; (EF23)
020A:E3D9			loc_2574:
020A:E3D9  5E					pop	si
020A:E3DA  33 D2				xor	dx,dx			; Zero register
020A:E3DC  E9 11A6				jmp	loc_2791		; (F585)
020A:E3DF			loc_2575:
020A:E3DF  80 3E 42B6 00			cmp	byte ptr ds:[42B6h],0	; (D233:42B6=12h)
020A:E3E4  74 7B				je	loc_2580		; Jump if equal
020A:E3E6  C6 06 2ECF 04			mov	byte ptr ds:[2ECFh],4	; (D233:2ECF=0E8h)
020A:E3EB  EB 74				jmp	short loc_2580		; (E461)
020A:E3ED			loc_2576:
020A:E3ED  33 C0				xor	ax,ax			; Zero register
020A:E3EF  26: 8A 04				mov	al,es:[si]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 478

020A:E3F2  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (D233:2ED0=0FBAEh)
020A:E3F5  33 C0				xor	ax,ax			; Zero register
020A:E3F7  A3 2ED2				mov	word ptr ds:[2ED2h],ax	; (D233:2ED2=0E9E8h)
020A:E3FA  80 3E 2A7E 01			cmp	byte ptr ds:[2A7Eh],1	; (D233:2A7E=0)
020A:E3FF  75 02				jne	loc_2577		; Jump if not equal
020A:E401  EB 5E				jmp	short loc_2580		; (E461)
020A:E403			loc_2577:
020A:E403  9A 16FA:10F8		;*		call	far ptr sub_257		;*(16FA:10F8)
020A:E403  9A F8 10 FA 16			db	 9Ah,0F8h, 10h,0FAh, 16h
020A:E408  4D					dec	bp
020A:E409  26: 8A 04				mov	al,es:[si]
020A:E40C  A2 2ED0				mov	byte ptr ds:[2ED0h],al	; (D233:2ED0=0AEh)
020A:E40F  E8 EE9E				call	sub_197			; (D2B0)
020A:E412  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:E417  45					inc	bp
020A:E418  C6 06 42B6 00			mov	byte ptr ds:[42B6h],0	; (D233:42B6=12h)
020A:E41D  EB 42				jmp	short loc_2580		; (E461)
020A:E41F			loc_2578:
020A:E41F  80 3E 2A7E 01			cmp	byte ptr ds:[2A7Eh],1	; (D233:2A7E=0)
020A:E424  74 3B				je	loc_2580		; Jump if equal
020A:E426  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (D233:2ECC=0BAh)
020A:E42B  74 05				jz	loc_2579		; Jump if zero
020A:E42D  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:E42D  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:E432			loc_2579:
020A:E432  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:E437  45					inc	bp
020A:E438  53					push	bx
020A:E439  26: 8B 44 02				mov	ax,es:[si+2]
020A:E43D  26: 8B 1C				mov	bx,es:[si]
020A:E440  9A 16FA:01E8		;*		call	far ptr sub_229		;*(16FA:01E8)
020A:E440  9A E8 01 FA 16			db	 9Ah,0E8h, 01h,0FAh, 16h
020A:E445  5B					pop	bx
020A:E446  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:E44B  45					inc	bp
020A:E44C  A0 2A7C				mov	al,byte ptr ds:[2A7Ch]	; (D233:2A7C=0)
020A:E44F  24 C7				and	al,0C7h
020A:E451  3C 05				cmp	al,5
020A:E453  74 0C				je	loc_2580		; Jump if equal
020A:E455  80 3E 2A7E 01			cmp	byte ptr ds:[2A7Eh],1	; (D233:2A7E=0)
020A:E45A  74 05				je	loc_2580		; Jump if equal
020A:E45C  9A 16FA:10F8		;*		call	far ptr sub_257		;*(16FA:10F8)
020A:E45C  9A F8 10 FA 16			db	 9Ah,0F8h, 10h,0FAh, 16h
020A:E461			loc_2580:
020A:E461  5E					pop	si
020A:E462			loc_2581:
020A:E462  E8 ECEF				call	sub_195			; (D154)
020A:E465  02 36 2A7E				add	dh,byte ptr ds:[2A7Eh]	; (D233:2A7E=0)
020A:E469  2E: 80 3E 8E50 60			cmp	byte ptr cs:[8E50h],60h	; (020A:8E50=45h) '`'
020A:E46F  74 07				je	loc_2582		; Jump if equal
020A:E471  F6 06 2A7F 01			test	byte ptr ds:[2A7Fh],1	; (D233:2A7F=0)
020A:E476  75 02				jnz	loc_2583		; Jump if not zero
020A:E478			loc_2582:
020A:E478  33 D2				xor	dx,dx			; Zero register
020A:E47A			loc_2583:
020A:E47A  E9 1108				jmp	loc_2791		; (F585)
020A:E47D  26: 8A 5C 01				mov	bl,es:[si+1]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 479

020A:E481  C6 06 2A7B 02			mov	byte ptr ds:[2A7Bh],2	; (D233:2A7B=0)
020A:E486  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (D233:2ECA=81h)
020A:E48B  74 11				jz	loc_2584		; Jump if zero
020A:E48D  C6 06 2A7B 04			mov	byte ptr ds:[2A7Bh],4	; (D233:2A7B=0)
020A:E492  88 1E 2A7C				mov	byte ptr ds:[2A7Ch],bl	; (D233:2A7C=0)
020A:E496  26: 8A 64 02				mov	ah,es:[si+2]
020A:E49A  88 26 2A7D				mov	byte ptr ds:[2A7Dh],ah	; (D233:2A7D=0)
020A:E49E			loc_2584:
020A:E49E  8A E3				mov	ah,bl
020A:E4A0  80 E4 C7				and	ah,0C7h
020A:E4A3  80 FC 06				cmp	ah,6
020A:E4A6  74 1B				je	loc_2586		; Jump if equal
020A:E4A8  80 E4 C0				and	ah,0C0h
020A:E4AB  80 FC 40				cmp	ah,40h			; '@'
020A:E4AE  75 09				jne	loc_2585		; Jump if not equal
020A:E4B0  B2 32				mov	dl,32h			; '2'
020A:E4B2  C6 06 2A7B 01			mov	byte ptr ds:[2A7Bh],1	; (D233:2A7B=0)
020A:E4B7  EB 0A				jmp	short loc_2586		; (E4C3)
020A:E4B9			loc_2585:
020A:E4B9  80 FC 00				cmp	ah,0
020A:E4BC  75 05				jne	loc_2586		; Jump if not equal
020A:E4BE  C6 06 2A7B 00			mov	byte ptr ds:[2A7Bh],0	; (D233:2A7B=0)
020A:E4C3			loc_2586:
020A:E4C3  B0 60				mov	al,60h			; '`'
020A:E4C5  E9 F9F0				jmp	loc_2527		; (DEB8)
020A:E4C8  56					push	si
020A:E4C9  BE 3052				mov	si,3052h
020A:E4CC  F6 C2 01				test	dl,1
020A:E4CF  74 03				jz	loc_2587		; Jump if zero
020A:E4D1  BE 3048				mov	si,3048h
020A:E4D4			loc_2587:
020A:E4D4  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:E4D4  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:E4D9  5E					pop	si
020A:E4DA  B0 60				mov	al,60h			; '`'
020A:E4DC  E9 F9D9				jmp	loc_2527		; (DEB8)
020A:E4DF  83 3E 2A82 00			cmp	word ptr ds:[2A82h],0	; (D233:2A82=5756h)
020A:E4E4  77 0C				ja	loc_2588		; Jump if above
020A:E4E6  C7 06 2A82 0001			mov	word ptr ds:[2A82h],1	; (D233:2A82=5756h)
020A:E4EC  C7 06 2A84 0001			mov	word ptr ds:[2A84h],1	; (D233:2A84=71Eh)
020A:E4F2			loc_2588:
020A:E4F2  C6 06 2A5E 00			mov	byte ptr ds:[2A5Eh],0	; (D233:2A5E=0BEh)
020A:E4F7  56					push	si
020A:E4F8  8B 0E 2A82				mov	cx,word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E4FC  3C 52				cmp	al,52h			; 'R'
020A:E4FE  75 03				jne	loc_2589		; Jump if not equal
020A:E500  E9 0081				jmp	loc_2598		; (E584)
020A:E503			loc_2589:
020A:E503  83 F9 06				cmp	cx,6
020A:E506  76 03				jbe	loc_2590		; Jump if below or =
020A:E508  B9 0006				mov	cx,6
020A:E50B			loc_2590:
020A:E50B  3C 51				cmp	al,51h			; 'Q'
020A:E50D  74 39				je	loc_2595		; Jump if equal
020A:E50F  3C 53				cmp	al,53h			; 'S'
020A:E511  75 03				jne	loc_2591		; Jump if not equal
020A:E513  E9 00A7				jmp	loc_2601		; (E5BD)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 480

020A:E516			loc_2591:
020A:E516  3C 54				cmp	al,54h			; 'T'
020A:E518  75 03				jne	loc_2592		; Jump if not equal
020A:E51A  E9 0184				jmp	loc_2613		; (E6A1)
020A:E51D			loc_2592:
020A:E51D  3C 55				cmp	al,55h			; 'U'
020A:E51F  75 03				jne	loc_2593		; Jump if not equal
020A:E521  E9 01A9				jmp	loc_2614		; (E6CD)
020A:E524			loc_2593:
020A:E524  3C 56				cmp	al,56h			; 'V'
020A:E526  72 18				jb	loc_2594		; Jump if below
020A:E528  E9 01D0				jmp	loc_2615		; (E6FB)
020A:E52B  56					push	si
020A:E52C  45					inc	bp
020A:E52D  8B 0E 2A84				mov	cx,word ptr ds:[2A84h]	; (D233:2A84=71Eh)
020A:E531  03 F1				add	si,cx
020A:E533  46					inc	si
020A:E534  8B 0E 42C1				mov	cx,word ptr ds:[42C1h]	; (D233:42C1=0EB80h)
020A:E538  89 0E 2A82				mov	word ptr ds:[2A82h],cx	; (D233:2A82=5756h)
020A:E53C  01 0E 2A84				add	word ptr ds:[2A84h],cx	; (D233:2A84=71Eh)
020A:E540			loc_2594:
020A:E540  9A 16FA:140C		;*		call	far ptr sub_270		;*(16FA:140C)
020A:E540  9A 0C 14 FA 16			db	 9Ah, 0Ch, 14h,0FAh, 16h
020A:E545  E9 0331				jmp	loc_2636		; (E879)
020A:E548			loc_2595:
020A:E548  83 3E 2A82 02			cmp	word ptr ds:[2A82h],2	; (D233:2A82=5756h)
020A:E54D  75 0F				jne	locloop_2596		; Jump if not equal
020A:E54F  80 3E 2C3F 01			cmp	byte ptr ds:[2C3Fh],1	; (D233:2C3F=0C7h)
020A:E554  76 08				jbe	locloop_2596		; Jump if below or =
020A:E556  83 2E 2A82 02			sub	word ptr ds:[2A82h],2	; (D233:2A82=5756h)
020A:E55B  E9 03E3				jmp	loc_2643		; (E941)
  
020A:E55E			locloop_2596:
020A:E55E  26: 8B 04				mov	ax,es:[si]
020A:E561  46					inc	si
020A:E562  46					inc	si
020A:E563  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E563  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E568  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E56C  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E570  74 0F				jz	loc_2597		; Jump if zero
020A:E572  83 F9 02				cmp	cx,2
020A:E575  74 0A				je	loc_2597		; Jump if equal
020A:E577  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:E57C  45					inc	bp
020A:E57D  45					inc	bp
020A:E57E  49					dec	cx
020A:E57F  E2 DD				loop	locloop_2596		; Loop if cx > 0
  
020A:E581			loc_2597:
020A:E581  E9 02F5				jmp	loc_2636		; (E879)
020A:E584			loc_2598:
020A:E584  26: 8B 44 02				mov	ax,es:[si+2]
020A:E588  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E588  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E58D  4D					dec	bp
020A:E58E  3E: 80 7E 00 48			cmp	byte ptr ds:[bp],48h	; 'H'
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 481

020A:E593  73 01				jae	loc_2599		; Jump if above or =
020A:E595  45					inc	bp
020A:E596			loc_2599:
020A:E596  26: 8B 04				mov	ax,es:[si]
020A:E599  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:E599  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:E59E  A0 3047				mov	al,byte ptr ds:[3047h]	; (D233:3047=0C1h)
020A:E5A1  3E: 88 46 00				mov	ds:[bp],al
020A:E5A5  83 3E 2A82 04			cmp	word ptr ds:[2A82h],4	; (D233:2A82=5756h)
020A:E5AA  73 09				jae	loc_2600		; Jump if above or =
020A:E5AC  C7 06 2A82 0000			mov	word ptr ds:[2A82h],0	; (D233:2A82=5756h)
020A:E5B2  E9 02C4				jmp	loc_2636		; (E879)
020A:E5B5			loc_2600:
020A:E5B5  83 2E 2A82 04			sub	word ptr ds:[2A82h],4	; (D233:2A82=5756h)
020A:E5BA  E9 02BC				jmp	loc_2636		; (E879)
020A:E5BD			loc_2601:
020A:E5BD  52					push	dx
020A:E5BE  56					push	si
020A:E5BF  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:E5C4  06					push	es
020A:E5C5  8B 36 2D84				mov	si,word ptr ds:[2D84h]	; (D233:2D84=0AC09h)
020A:E5C9  A1 2D82				mov	ax,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:E5CC  8E C0				mov	es,ax
020A:E5CE  8B 16 2A82				mov	dx,word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E5D2  8B CD				mov	cx,bp
020A:E5D4  C7 06 2A88 0000			mov	word ptr ds:[2A88h],0	; (D233:2A88=0BFF2h)
020A:E5DA  B4 00				mov	ah,0
020A:E5DC			loc_2602:
020A:E5DC  26: 8A 04				mov	al,es:[si]
020A:E5DF  3C FF				cmp	al,0FFh
020A:E5E1  74 18				je	loc_2603		; Jump if equal
020A:E5E3  3C 27				cmp	al,27h			; '''
020A:E5E5  74 14				je	loc_2603		; Jump if equal
020A:E5E7  3C 7F				cmp	al,7Fh
020A:E5E9  74 10				je	loc_2603		; Jump if equal
020A:E5EB  F7			data_829	db	0F7h
020A:E5EC  06					push	es
020A:E5ED  CE					into				; Int 4 on overflow
020A:E5EE  42					inc	dx
020A:E5EF  80 00 74				add	byte ptr [bx+si],74h	; 't'
020A:E5F2  04 3C				add	al,3Ch			; '<'
020A:E5F4  80 73 04 3C				xor	byte ptr [bp+di+4],3Ch	; '<'
020A:E5F8  20 73 28				and	[bp+di+28h],dh
020A:E5FB			loc_2603:
020A:E5FB  3B CD				cmp	cx,bp
020A:E5FD  74 12				je	loc_2605		; Jump if equal
020A:E5FF  80 FC 00				cmp	ah,0
020A:E602  75 06				jne	loc_2604		; Jump if not equal
020A:E604  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:E609  45					inc	bp
020A:E60A			loc_2604:
020A:E60A  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:E60F  45					inc	bp
020A:E610  45					inc	bp
020A:E611			loc_2605:
020A:E611  9A 16FA:0034		;*		call	far ptr sub_223		;*(16FA:0034)
020A:E611  9A 34 00 FA 16			db	 9Ah, 34h, 00h,0FAh, 16h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 482

020A:E616  B4 01				mov	ah,1
020A:E618  3C 00				cmp	al,0
020A:E61A  75 3B				jne	loc_2609		; Jump if not equal
020A:E61C  8B CD				mov	cx,bp
020A:E61E  83 E9 21				sub	cx,21h
020A:E621  EB 34				jmp	short loc_2609		; (E657)
020A:E623  80 FC 00				cmp	ah,0
020A:E626  74 0B				je	loc_2606		; Jump if equal
020A:E628  B4 00				mov	ah,0
020A:E62A  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:E62F  45					inc	bp
020A:E630  45					inc	bp
020A:E631  EB 04				jmp	short loc_2607		; (E637)
020A:E633			loc_2606:
020A:E633  3B CD				cmp	cx,bp
020A:E635  75 06				jne	loc_2608		; Jump if not equal
020A:E637			loc_2607:
020A:E637  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:E63C  45					inc	bp
020A:E63D			loc_2608:
020A:E63D  3E: 88 46 00				mov	ds:[bp],al
020A:E641  45					inc	bp
020A:E642  3C 24				cmp	al,24h			; '$'
020A:E644  75 11				jne	loc_2609		; Jump if not equal
020A:E646  83 FA 01				cmp	dx,1
020A:E649  76 0C				jbe	loc_2609		; Jump if below or =
020A:E64B  26: 80 7C 01 24			cmp	byte ptr es:[si+1],24h	; '$'
020A:E650  74 05				je	loc_2609		; Jump if equal
020A:E652  8B CD				mov	cx,bp
020A:E654  83 E9 21				sub	cx,21h
020A:E657			loc_2609:
020A:E657  46					inc	si
020A:E658  FF 06 2A88				inc	word ptr ds:[2A88h]	; (D233:2A88=0BFF2h)
020A:E65C  4A					dec	dx
020A:E65D  74 0C				jz	loc_2610		; Jump if zero
020A:E65F  8B DD				mov	bx,bp
020A:E661  2B D9				sub	bx,cx
020A:E663  83 FB 20				cmp	bx,20h
020A:E666  77 03				ja	loc_2610		; Jump if above
020A:E668  E9 FF71				jmp	loc_2602		; (E5DC)
020A:E66B			loc_2610:
020A:E66B  80 FC 01				cmp	ah,1
020A:E66E  74 06				je	loc_2611		; Jump if equal
020A:E670  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:E675  45					inc	bp
020A:E676			loc_2611:
020A:E676  A1 2A88				mov	ax,word ptr ds:[2A88h]	; (D233:2A88=0BFF2h)
020A:E679  29 06 2A82				sub	word ptr ds:[2A82h],ax	; (D233:2A82=5756h)
020A:E67D  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:E682  5A					pop	dx
020A:E683  8E C2				mov	es,dx
020A:E685  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:E68A  5A					pop	dx
020A:E68B  75 0A				jnz	loc_2612		; Jump if not zero
020A:E68D  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:E692  74 03				je	loc_2612		; Jump if equal
020A:E694  E8 B84D				call	sub_168			; (9EE4)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 483

020A:E697			loc_2612:
020A:E697  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:E69C  5E					pop	si
020A:E69D  5A					pop	dx
020A:E69E  E9 01D8				jmp	loc_2636		; (E879)
020A:E6A1			loc_2613:
020A:E6A1  C7 06 2A82 0000			mov	word ptr ds:[2A82h],0	; (D233:2A82=5756h)
020A:E6A7  A1 2A84				mov	ax,word ptr ds:[2A84h]	; (D233:2A84=71Eh)
020A:E6AA  B3 00				mov	bl,0
020A:E6AC  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:E6AC  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:E6B1  45					inc	bp
020A:E6B2  56					push	si
020A:E6B3  BE 309B				mov	si,309Bh
020A:E6B6  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:E6B6  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:E6BB  5E					pop	si
020A:E6BC  26: 8A 04				mov	al,es:[si]
020A:E6BF  9A 16FA:0034		;*		call	far ptr sub_223		;*(16FA:0034)
020A:E6BF  9A 34 00 FA 16			db	 9Ah, 34h, 00h,0FAh, 16h
020A:E6C4  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:E6C9  45					inc	bp
020A:E6CA  E9 01AC				jmp	loc_2636		; (E879)
020A:E6CD			loc_2614:
020A:E6CD  C7 06 2A82 0000			mov	word ptr ds:[2A82h],0	; (D233:2A82=5756h)
020A:E6D3  A1 2A84				mov	ax,word ptr ds:[2A84h]	; (D233:2A84=71Eh)
020A:E6D6  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:E6D8  B3 00				mov	bl,0
020A:E6DA  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:E6DA  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:E6DF  45					inc	bp
020A:E6E0  56					push	si
020A:E6E1  BE 309B				mov	si,309Bh
020A:E6E4  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:E6E4  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:E6E9  5E					pop	si
020A:E6EA  26: 8B 04				mov	ax,es:[si]
020A:E6ED  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E6ED  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E6F2  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:E6F7  45					inc	bp
020A:E6F8  E9 017E				jmp	loc_2636		; (E879)
020A:E6FB			loc_2615:
020A:E6FB  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E6FF  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E703  A8 01				test	al,1
020A:E705  75 10				jnz	loc_2616		; Jump if not zero
020A:E707  26: 83 3C 00				cmp	word ptr es:[si],0
020A:E70B  75 0A				jne	loc_2616		; Jump if not equal
020A:E70D  33 C0				xor	ax,ax			; Zero register
020A:E70F  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E70F  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E714  E9 0162				jmp	loc_2636		; (E879)
020A:E717			loc_2616:
020A:E717  3C 5A				cmp	al,5Ah			; 'Z'
020A:E719  72 03				jb	loc_2617		; Jump if below
020A:E71B  E9 00B1				jmp	loc_2626		; (E7CF)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 484

020A:E71E			loc_2617:
020A:E71E  56					push	si
020A:E71F  BE 30B1				mov	si,30B1h
020A:E722  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:E722  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:E727  5E					pop	si
020A:E728  8A 1E 2A75				mov	bl,byte ptr ds:[2A75h]	; (D233:2A75=0)
020A:E72C  88 1E 3C7B				mov	byte ptr ds:[3C7Bh],bl	; (D233:3C7B=0FBh)
020A:E730  32 C9				xor	cl,cl			; Zero register
020A:E732  A8 02				test	al,2
020A:E734  74 07				jz	loc_2618		; Jump if zero
020A:E736  C6 06 2A75 4F			mov	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:E73B  B1 02				mov	cl,2
020A:E73D			loc_2618:
020A:E73D  F6 06 2D90 40			test	byte ptr ds:[2D90h],40h	; (D233:2D90=0BEh) '@'
020A:E742  74 06				jz	loc_2619		; Jump if zero
020A:E744  8B 1E 2D91				mov	bx,word ptr ds:[2D91h]	; (D233:2D91=65FAh)
020A:E748  EB 04				jmp	short loc_2620		; (E74E)
020A:E74A			loc_2619:
020A:E74A  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:E74E			loc_2620:
020A:E74E  A8 01				test	al,1
020A:E750  74 0F				jz	loc_2621		; Jump if zero
020A:E752  26: 8B 5C 02				mov	bx,es:[si+2]
020A:E756  80 C9 01				or	cl,1
020A:E759  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E75D  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (D233:2A82=5756h)
020A:E761			loc_2621:
020A:E761  50					push	ax
020A:E762  26: 8B 04				mov	ax,es:[si]
020A:E765  53					push	bx
020A:E766  51					push	cx
020A:E767  C6 06 2ECF 02			mov	byte ptr ds:[2ECFh],2	; (D233:2ECF=0E8h)
020A:E76C  E8 CE75				call	sub_178			; (B5E4)
020A:E76F  80 3E 42B7 01			cmp	byte ptr ds:[42B7h],1	; (9B68:42B7=0)
020A:E774  75 0F				jne	loc_2622		; Jump if not equal
020A:E776  C6 06 42B7 00			mov	byte ptr ds:[42B7h],0	; (9B68:42B7=0)
020A:E77B  C6 06 2EB7 00			mov	byte ptr ds:[2EB7h],0	; (9B68:2EB7=0A2h)
020A:E780  C6 06 42B9 01			mov	byte ptr ds:[42B9h],1	; (9B68:42B9=0)
020A:E785			loc_2622:
020A:E785  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (9B68:42B9=0)
020A:E78A  75 0A				jne	loc_2623		; Jump if not equal
020A:E78C  9A 16FA:12EC		;*		call	far ptr sub_264		;*(16FA:12EC)
020A:E78C  9A EC 12 FA 16			db	 9Ah,0ECh, 12h,0FAh, 16h
020A:E791  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E791  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E796			loc_2623:
020A:E796  59					pop	cx
020A:E797  5B					pop	bx
020A:E798  58					pop	ax
020A:E799  A8 01				test	al,1
020A:E79B  74 29				jz	loc_2625		; Jump if zero
020A:E79D  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:E7A2  45					inc	bp
020A:E7A3  45					inc	bp
020A:E7A4  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (9B68:42B9=0)
020A:E7A9  75 0B				jne	loc_2624		; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 485

020A:E7AB  26: 8B 44 02				mov	ax,es:[si+2]
020A:E7AF  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E7AF  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E7B4  EB 10				jmp	short loc_2625		; (E7C6)
020A:E7B6			loc_2624:
020A:E7B6  56					push	si
020A:E7B7  BE 30B9				mov	si,30B9h
020A:E7BA  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:E7BA  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:E7BF  5E					pop	si
020A:E7C0  26: 8B 04				mov	ax,es:[si]
020A:E7C3  E8 CE1E				call	sub_178			; (B5E4)
020A:E7C6			loc_2625:
020A:E7C6  A0 3C7B				mov	al,byte ptr ds:[3C7Bh]	; (9B68:3C7B=0)
020A:E7C9  A2 2A75				mov	byte ptr ds:[2A75h],al	; (9B68:2A75=0A0h)
020A:E7CC  E9 00AA				jmp	loc_2636		; (E879)
020A:E7CF			loc_2626:
020A:E7CF  F6 06 2D90 40			test	byte ptr ds:[2D90h],40h	; (9B68:2D90=20h) '@'
020A:E7D4  74 06				jz	loc_2627		; Jump if zero
020A:E7D6  8B 0E 2D91				mov	cx,word ptr ds:[2D91h]	; (9B68:2D91=0E193h)
020A:E7DA  EB 04				jmp	short loc_2628		; (E7E0)
020A:E7DC			loc_2627:
020A:E7DC  8B 0E 2D82				mov	cx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:E7E0			loc_2628:
020A:E7E0  A8 01				test	al,1
020A:E7E2  74 0C				jz	loc_2629		; Jump if zero
020A:E7E4  26: 8B 4C 02				mov	cx,es:[si+2]
020A:E7E8  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (9B68:2A82=0A5A2h)
020A:E7EC  FF 0E 2A82				dec	word ptr ds:[2A82h]	; (9B68:2A82=0A5A2h)
020A:E7F0			loc_2629:
020A:E7F0  FF 36 3796				push	word ptr ds:[3796h]	; (9B68:3796=92h)
020A:E7F4  FF 36 2EF4				push	word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:E7F8  8A 26 152A				mov	ah,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:E7FC  50					push	ax
020A:E7FD  C6 06 152A 00			mov	byte ptr ds:[152Ah],0	; (9B68:152A=20h)
020A:E802  C6 06 2D93 02			mov	byte ptr ds:[2D93h],2	; (9B68:2D93=0ABh)
020A:E807  8A 1E 2F04				mov	bl,byte ptr ds:[2F04h]	; (9B68:2F04=0E8h)
020A:E80B  88 1E 3C73				mov	byte ptr ds:[3C73h],bl	; (9B68:3C73=0)
020A:E80F  C6 06 2F04 90			mov	byte ptr ds:[2F04h],90h	; (9B68:2F04=0E8h)
020A:E814  33 DB				xor	bx,bx			; Zero register
020A:E816  89 0E 3796				mov	word ptr ds:[3796h],cx	; (9B68:3796=92h)
020A:E81A  89 0E 2EF4				mov	word ptr ds:[2EF4h],cx	; (9B68:2EF4=2020h)
020A:E81E  26: 8B 04				mov	ax,es:[si]
020A:E821  E8 C83C				call	sub_177			; (B060)
020A:E824  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (D233:42B9=72h)
020A:E829  75 0A				jne	loc_2633		; Jump if not equal
020A:E82B  9A 16FA:12EC		;*		call	far ptr sub_264		;*(16FA:12EC)
020A:E82B  9A EC 12 FA 16			db	 9Ah,0ECh, 12h,0FAh, 16h
020A:E830  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E830  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E835			loc_2633:
020A:E835  58					pop	ax
020A:E836  50					push	ax
020A:E837  A8 01				test	al,1
020A:E839  74 26				jz	loc_2635		; Jump if zero
020A:E83B  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:E840  45					inc	bp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 486

020A:E841  45					inc	bp
020A:E842  26: 8B 04				mov	ax,es:[si]
020A:E845  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (D233:42B9=72h)
020A:E84A  75 0B				jne	loc_2634		; Jump if not equal
020A:E84C  26: 8B 44 02				mov	ax,es:[si+2]
020A:E850  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:E850  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:E855  EB 0A				jmp	short loc_2635		; (E861)
020A:E857			loc_2634:
020A:E857  33 DB				xor	bx,bx			; Zero register
020A:E859  C6 06 2D93 03			mov	byte ptr ds:[2D93h],3	; (D233:2D93=0E8h)
020A:E85E  E8 C7FF				call	sub_177			; (B060)
020A:E861			loc_2635:
020A:E861  58					pop	ax
020A:E862  88 26 152A				mov	byte ptr ds:[152Ah],ah	; (D233:152A=45h)
020A:E866  C6 06 2D93 00			mov	byte ptr ds:[2D93h],0	; (D233:2D93=0E8h)
020A:E86B  A0 3C73				mov	al,byte ptr ds:[3C73h]	; (D233:3C73=3)
020A:E86E  A2 2F04				mov	byte ptr ds:[2F04h],al	; (D233:2F04=0E9h)
020A:E871  8F 06 2EF4				pop	word ptr ds:[2EF4h]	; (D233:2EF4=0B809h)
020A:E875  8F 06 3796				pop	word ptr ds:[3796h]	; (D233:3796=1475h)
020A:E879			loc_2636:
020A:E879  5E					pop	si
020A:E87A  E9 0D08				jmp	loc_2791		; (F585)
020A:E87D  9A 16FA:1378		;*		call	far ptr sub_268		;*(16FA:1378)
020A:E87D  9A 78 13 FA 16			db	 9Ah, 78h, 13h,0FAh, 16h
020A:E882  C6 06 2A5C 01			mov	byte ptr ds:[2A5Ch],1	; (D233:2A5C=0Ah)
020A:E887  56					push	si
020A:E888  2C 02				sub	al,2
020A:E88A  32 E4				xor	ah,ah			; Zero register
020A:E88C  03 F0				add	si,ax
020A:E88E  26: 8A 04				mov	al,es:[si]
020A:E891  5E					pop	si
020A:E892  9A 16FA:0034		;*		call	far ptr sub_223		;*(16FA:0034)
020A:E892  9A 34 00 FA 16			db	 9Ah, 34h, 00h,0FAh, 16h
020A:E897  80 3E 2A75 56			cmp	byte ptr ds:[2A75h],56h	; (D233:2A75=0) 'V'
020A:E89C  74 1D				je	loc_2637		; Jump if equal
020A:E89E  3C 20				cmp	al,20h			; ' '
020A:E8A0  72 19				jb	loc_2637		; Jump if below
020A:E8A2  3C 7F				cmp	al,7Fh
020A:E8A4  73 15				jae	loc_2637		; Jump if above or =
020A:E8A6  55					push	bp
020A:E8A7  E8 ADDA				call	sub_147			; (9684)
020A:E8AA  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:E8AF  45					inc	bp
020A:E8B0  3E: 88 46 00				mov	ds:[bp],al
020A:E8B4  45					inc	bp
020A:E8B5  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:E8BA  5D					pop	bp
020A:E8BB			loc_2637:
020A:E8BB  E9 0CC7				jmp	loc_2791		; (F585)
020A:E8BE  C6 06 2A5C 01			mov	byte ptr ds:[2A5Ch],1	; (9B68:2A5C=0A8h)
020A:E8C3  56					push	si
020A:E8C4  2C 0A				sub	al,0Ah
020A:E8C6  32 E4				xor	ah,ah			; Zero register
020A:E8C8  03 F0				add	si,ax
020A:E8CA  26: 8A 04				mov	al,es:[si]
020A:E8CD  98					cbw				; Convrt byte to word
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 487

020A:E8CE  5E					pop	si
020A:E8CF  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (9B68:2ECA=20h)
020A:E8D4  74 13				jz	loc_2639		; Jump if zero
020A:E8D6  33 DB				xor	bx,bx			; Zero register
020A:E8D8  A9 8000				test	ax,8000h
020A:E8DB  74 03				jz	loc_2638		; Jump if zero
020A:E8DD  BB FFFF				mov	bx,0FFFFh
020A:E8E0			loc_2638:
020A:E8E0  93					xchg	ax,bx
020A:E8E1  9A 16FA:01E8		;*		call	far ptr sub_229		;*(16FA:01E8)
020A:E8E1  9A E8 01 FA 16			db	 9Ah,0E8h, 01h,0FAh, 16h
020A:E8E6  E9 0C9C				jmp	loc_2791		; (F585)
020A:E8E9			loc_2639:
020A:E8E9  E9 0281				jmp	loc_2664		; (EB6D)
020A:E8EC  2C 99				sub	al,99h
020A:E8EE  3E					db	3Eh
020A:E8EF  99					cwd				; Word to double word
020A:E8F0  47					inc	di
020A:E8F1  99					cwd				; Word to double word
020A:E8F2  35 6299				xor	ax,6299h
020A:E8F5  99					cwd				; Word to double word
020A:E8F6  6B					db	6Bh
020A:E8F7  99					cwd				; Word to double word
020A:E8F8  50					push	ax
020A:E8F9  99			data_831	db	99h
020A:E8FA  59					pop	cx
020A:E8FB  99					cwd				; Word to double word
020A:E8FC  C6 06 2A5C 02			mov	byte ptr ds:[2A5Ch],2	; (9B68:2A5C=0A8h)
020A:E901  80 3E 2A75 77			cmp	byte ptr ds:[2A75h],77h	; (9B68:2A75=0A0h) 'w'
020A:E906  74 0C				je	loc_2641		; Jump if equal
020A:E908  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (9B68:2ECA=20h)
020A:E90D  74 05				jz	loc_2641		; Jump if zero
020A:E90F  04 08				add	al,8
020A:E911  E9 F5A4				jmp	loc_2527		; (DEB8)
020A:E914			loc_2641:
020A:E914  9A 16FA:1378		;*		call	far ptr sub_268		;*(16FA:1378)
020A:E914  9A 78 13 FA 16			db	 9Ah, 78h, 13h,0FAh, 16h
020A:E919  56					push	si
020A:E91A  26: 8A 0C				mov	cl,es:[si]
020A:E91D  2C 12				sub	al,12h
020A:E91F  32 E4				xor	ah,ah			; Zero register
020A:E921  03 F0				add	si,ax
020A:E923  F6 06 42BF 01			test	byte ptr ds:[42BFh],1	; (9B68:42BF=0)
020A:E928  74 17				jz	loc_2643		; Jump if zero
020A:E92A  26: 83 3C 7F				cmp	word ptr es:[si],7Fh
020A:E92E  72 06				jb	loc_2642		; Jump if below
020A:E930  26: 83 3C 80				cmp	word ptr es:[si],0FF80h
020A:E934  72 0B				jb	loc_2643		; Jump if below
020A:E936			loc_2642:
020A:E936  F6 06 42BE 01			test	byte ptr ds:[42BEh],1	; (9B68:42BE=0)
020A:E93B  75 04				jnz	loc_2643		; Jump if not zero
020A:E93D  FE 06 42C0				inc	byte ptr ds:[42C0h]	; (9B68:42C0=0)
020A:E941			loc_2643:
020A:E941  26: 8B 04				mov	ax,es:[si]
020A:E944  F7 06 42F1 0001			test	word ptr ds:[42F1h],1	; (9B68:42F1=0)
020A:E94A  74 78				jz	loc_2645		; Jump if zero
020A:E94C  80 3E 42F0 08			cmp	byte ptr ds:[42F0h],8	; (9B68:42F0=0)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 488

020A:E951  73 71				jae	loc_2645		; Jump if above or =
020A:E953  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (9B68:263E=0A4h)
020A:E958  74 6A				je	loc_2645		; Jump if equal
020A:E95A  80 3E 2638 06			cmp	byte ptr ds:[2638h],6	; (9B68:2638=0E0h)
020A:E95F  72 63				jb	loc_2645		; Jump if below
020A:E961  53					push	bx
020A:E962  52					push	dx
020A:E963  F7 06 42CC 4000			test	word ptr ds:[42CCh],4000h	; (9B68:42CC=0)
020A:E969  75 57				jnz	loc_2644		; Jump if not zero
020A:E96B  8B 16 2D84				mov	dx,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:E96F  33 DB				xor	bx,bx			; Zero register
020A:E971  8A 1E 42F0				mov	bl,byte ptr ds:[42F0h]	; (9B68:42F0=0)
020A:E975  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:E977  2E: FF A7 989C			jmp	word ptr cs:[989Ch][bx]	;*(020A:989C=8307h)
020A:E97C  89 16 42D2				mov	word ptr ds:[42D2h],dx	; (9B68:42D2=0)
020A:E980  D0A3 EB42		data_832	dw	0D0A3h, 0EB42h
020A:E984  893D D616		data_833	dw	893Dh, 0D616h
020A:E988  A342 42D4		data_834	dw	0A342h, 42D4h
020A:E98C  34EB 1689		data_835	dw	34EBh, 1689h
020A:E990  42DA D8A3		data_836	dw	42DAh, 0D8A3h
020A:E994  EB42 892B		data_837	dw	0EB42h, 892Bh
020A:E998  DE16 A342		data_838	dw	0DE16h, 0A342h
020A:E99C  42DC 22EB		data_839	dw	42DCh, 22EBh
020A:E9A0  1689 42E2		data_840	dw	1689h, 42E2h
020A:E9A4  E0A3 EB42		data_841	dw	0E0A3h, 0EB42h
020A:E9A8  8919 E616		data_842	dw	8919h, 0E616h
020A:E9AC  A342 42E4		data_843	dw	0A342h, 42E4h
020A:E9B0  10EB 1689		data_844	dw	10EBh, 1689h
020A:E9B4  42EE ECA3		data_845	dw	42EEh, 0ECA3h
020A:E9B8  EB42 8907		data_846	dw	0EB42h, 8907h
020A:E9BC  EA16 A342		data_847	dw	0EA16h, 0A342h
020A:E9C0  42E8 5B5A		data_848	dw	42E8h, 5B5Ah
020A:E9C4			loc_2645:
020A:E9C4  3E80 263E		data_849	dw	3E80h, 263Eh
020A:E9C8  7501 8072		data_850	dw	7501h, 8072h
020A:E9CC  223E 0014		data_851	dw	223Eh, 14h
020A:E9D0  0774 3E80		data_852	dw	774h, 3E80h
020A:E9D4  2C40 7503		data_853	dw	2C40h, 7503h
020A:E9D8  8064 903E		data_854	dw	8064h, 903Eh
020A:E9DC  002D 5D75		data_855	dw	2Dh, 5D75h
020A:E9E0  3E80 2C3F		data_856	dw	3E80h, 2C3Fh
020A:E9E4  7601 E903		data_857	dw	7601h, 0E903h
020A:E9E8  00F3 003D		data_858	dw	0F3h, 3Dh
020A:E9EC  7400 3D4E		data_859	dw	7400h, 3D4Eh
020A:E9F0  FFFF 4974		data_860	dw	0FFFFh, 4974h
020A:E9F4  80 E1 B8				and	cl,0B8h
020A:E9F7  80 F9 B8				cmp	cl,0B8h
020A:E9FA  75 41				jne	loc_2650		; Jump if not equal
020A:E9FC			loc_2646:
020A:E9FC  5E					pop	si
020A:E9FD  56					push	si
020A:E9FE  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:EA03  06					push	es
020A:EA04  53					push	bx
020A:EA05  8B DE				mov	bx,si
020A:EA07  E8 B1FB				call	sub_159			; (9C05)
020A:EA0A  BE 0000				mov	si,0
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 489

020A:EA0D  8A 0E 2A2B				mov	cl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
020A:EA11  32 ED				xor	ch,ch			; Zero register
  
020A:EA13			locloop_2647:
020A:EA13  26: 39 04				cmp	es:[si],ax
  
				;ÄÄÄÄÄ Indexed Entry Point ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  
020A:EA16			loc_2648:
020A:EA16  74 28				je	loc_2651		; Jump if equal
020A:EA18  83 C6 15				add	si,15h
020A:EA1B  E2 F6				loop	locloop_2647		; Loop if cx > 0
  
020A:EA1D  5B					pop	bx
020A:EA1E  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:EA23  5A					pop	dx
020A:EA24  8E C2				mov	es,dx
020A:EA26  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:EA2B  5A					pop	dx
020A:EA2C  75 0A				jnz	loc_2649		; Jump if not zero
020A:EA2E  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:EA33  74 03				je	loc_2649		; Jump if equal
020A:EA35  E8 B4AC				call	sub_168			; (9EE4)
020A:EA38			loc_2649:
020A:EA38  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:EA3D			loc_2650:
020A:EA3D  E9 012C				jmp	loc_2663		; (EB6C)
020A:EA40			loc_2651:
020A:EA40  80 3F B9				cmp	byte ptr [bx],0B9h
020A:EA43  72 2B				jb	loc_2652		; Jump if below
020A:EA45  80 3F BF				cmp	byte ptr [bx],0BFh
020A:EA48  77 26				ja	loc_2652		; Jump if above
020A:EA4A  56					push	si
020A:EA4B  BE 30B9				mov	si,30B9h
020A:EA4E  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:EA4E  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:EA53  5E					pop	si
020A:EA54  80 3F B9				cmp	byte ptr [bx],0B9h
020A:EA57  74 17				je	loc_2652		; Jump if equal
020A:EA59  F7 06 139F 0002			test	word ptr ds:[139Fh],2	; (9B68:139F=2E5Bh)
020A:EA5F  74 0F				jz	loc_2652		; Jump if zero
020A:EA61  56					push	si
020A:EA62  55					push	bp
020A:EA63  BE 30B9				mov	si,30B9h
020A:EA66  BD 27FD				mov	bp,27FDh
020A:EA69  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:EA69  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:EA6E  5D					pop	bp
020A:EA6F  5E					pop	si
020A:EA70			loc_2652:
020A:EA70  26: 8B 44 0A				mov	ax,es:[si+0Ah]
020A:EA74  26: 8B 5C 0C				mov	bx,es:[si+0Ch]
020A:EA78  0A 1E 2EB8				or	bl,byte ptr ds:[2EB8h]	; (9B68:2EB8=0AAh)
020A:EA7C  80 FF 20				cmp	bh,20h			; ' '
020A:EA7F  74 04				je	loc_2653		; Jump if equal
020A:EA81  0A 3E 2EB8				or	bh,byte ptr ds:[2EB8h]	; (9B68:2EB8=0AAh)
020A:EA85			loc_2653:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 490

020A:EA85  BE 30A1				mov	si,30A1h
020A:EA88  24 03				and	al,3
020A:EA8A  3C 03				cmp	al,3
020A:EA8C  75 05				jne	loc_2654		; Jump if not equal
020A:EA8E  BE 30A6				mov	si,30A6h
020A:EA91  EB 12				jmp	short loc_2655		; (EAA5)
020A:EA93			loc_2654:
020A:EA93  80 3E 2C40 03			cmp	byte ptr ds:[2C40h],3	; (9B68:2C40=0E3h)
020A:EA98  74 0B				je	loc_2655		; Jump if equal
020A:EA9A  80 3E 1422 00			cmp	byte ptr ds:[1422h],0	; (9B68:1422=0A0h)
020A:EA9F  75 04				jne	loc_2655		; Jump if not equal
020A:EAA1  5B					pop	bx
020A:EAA2  E9 00C7				jmp	loc_2663		; (EB6C)
020A:EAA5			loc_2655:
020A:EAA5  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:EAA5  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:EAAA  3E: 88 5E 00				mov	ds:[bp],bl
020A:EAAE  45					inc	bp
020A:EAAF  80 FF 20				cmp	bh,20h			; ' '
020A:EAB2  74 05				je	loc_2656		; Jump if equal
020A:EAB4  3E: 88 7E 00				mov	ds:[bp],bh
020A:EAB8  45					inc	bp
020A:EAB9			loc_2656:
020A:EAB9  5B					pop	bx
020A:EABA  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:EABF  5A					pop	dx
020A:EAC0  8E C2				mov	es,dx
020A:EAC2  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:EAC7  5A					pop	dx
020A:EAC8  75 0A				jnz	loc_2657		; Jump if not zero
020A:EACA  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:EACF  74 03				je	loc_2657		; Jump if equal
020A:EAD1  E8 B410				call	sub_168			; (9EE4)
020A:EAD4			loc_2657:
020A:EAD4  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:EAD9  5E					pop	si
020A:EADA  E9 0AA8				jmp	loc_2791		; (F585)
020A:EADD  80 FA 51				cmp	dl,51h			; 'Q'
020A:EAE0  75 04				jne	loc_2658		; Jump if not equal
020A:EAE2  33 D2				xor	dx,dx			; Zero register
020A:EAE4  EB 05				jmp	short loc_2659		; (EAEB)
020A:EAE6			loc_2658:
020A:EAE6  80 EA 12				sub	dl,12h
020A:EAE9  32 F6				xor	dh,dh			; Zero register
020A:EAEB			loc_2659:
020A:EAEB  50					push	ax
020A:EAEC  57					push	di
020A:EAED  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:EAF2  06					push	es
020A:EAF3  E8 B121				call	sub_164			; (9C17)
020A:EAF6  A1 2D84				mov	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:EAF9  03 C2				add	ax,dx
020A:EAFB  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:EAFF  8A 16 4204				mov	dl,byte ptr ds:[4204h]	; (9B68:4204=0)
020A:EB03  52					push	dx
020A:EB04  C6 06 4204 01			mov	byte ptr ds:[4204h],1	; (9B68:4204=0)
020A:EB09  BA 0040				mov	dx,40h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 491

020A:EB0C  E8 A4C9				call	sub_143			; (8FD8)
020A:EB0F  5A					pop	dx
020A:EB10  88 16 4204				mov	byte ptr ds:[4204h],dl	; (9B68:4204=0)
020A:EB14  73 35				jnc	loc_2661		; Jump if carry=0
020A:EB16  26: 8A 45 04				mov	al,es:[di+4]
020A:EB1A  24 5F				and	al,5Fh			; '_'
020A:EB1C  3C 5F				cmp	al,5Fh			; '_'
020A:EB1E  75 2B				jne	loc_2661		; Jump if not equal
020A:EB20  26: F6 45 05 0F			test	byte ptr es:[di+5],0Fh
020A:EB25  75 24				jnz	loc_2661		; Jump if not zero
020A:EB27  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:EB2C  5A					pop	dx
020A:EB2D  8E C2				mov	es,dx
020A:EB2F  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:EB34  5A					pop	dx
020A:EB35  75 0A				jnz	loc_2660		; Jump if not zero
020A:EB37  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:EB3C  74 03				je	loc_2660		; Jump if equal
020A:EB3E  E8 B3A3				call	sub_168			; (9EE4)
020A:EB41			loc_2660:
020A:EB41  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:EB46  5F					pop	di
020A:EB47  58					pop	ax
020A:EB48  E9 FEB1				jmp	loc_2646		; (E9FC)
020A:EB4B			loc_2661:
020A:EB4B  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:EB50  5A					pop	dx
020A:EB51  8E C2				mov	es,dx
020A:EB53  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:EB58  5A					pop	dx
020A:EB59  75 0A				jnz	loc_2662		; Jump if not zero
020A:EB5B  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:EB60  74 03				je	loc_2662		; Jump if equal
020A:EB62  E8 B37F				call	sub_168			; (9EE4)
020A:EB65			loc_2662:
020A:EB65  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:EB6A  5F					pop	di
020A:EB6B  58					pop	ax
020A:EB6C			loc_2663:
020A:EB6C  5E					pop	si
020A:EB6D			loc_2664:
020A:EB6D  80 3E 2D90 00			cmp	byte ptr ds:[2D90h],0	; (9B68:2D90=20h)
020A:EB72  75 08				jne	loc_2665		; Jump if not equal
020A:EB74  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:EB74  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:EB79  E9 0A09				jmp	loc_2791		; (F585)
020A:EB7C			loc_2665:
020A:EB7C  56					push	si
020A:EB7D  57					push	di
020A:EB7E  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:EB83  06					push	es
020A:EB84  E8 B087				call	sub_162			; (9C0E)
020A:EB87  B9 0024				mov	cx,24h
020A:EB8A  BE 282A				mov	si,282Ah
020A:EB8D  BF 29EE				mov	di,29EEh
020A:EB90  FC					cld				; Clear direction
020A:EB91  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 492

020A:EB93  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:EB98  5A					pop	dx
020A:EB99  8E C2				mov	es,dx
020A:EB9B  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:EBA0  5A					pop	dx
020A:EBA1  75 0A				jnz	loc_2666		; Jump if not zero
020A:EBA3  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:EBA8  74 03				je	loc_2666		; Jump if equal
020A:EBAA  E8 B337				call	sub_168			; (9EE4)
020A:EBAD			loc_2666:
020A:EBAD  2E			data_862	db	2Eh
020A:EBAE  8B 16 0092				mov	dx,word ptr ds:[92h]	; (9B68:0092=5DC1h)
020A:EBB2  5F					pop	di
020A:EBB3  5E					pop	si
020A:EBB4  80 3E 2D90 44			cmp	byte ptr ds:[2D90h],44h	; (9B68:2D90=20h) 'D'
020A:EBB9  75 59				jne	loc_2668		; Jump if not equal
020A:EBBB  C6 06 2D93 02			mov	byte ptr ds:[2D93h],2	; (9B68:2D93=0ABh)
020A:EBC0  FF 36 3796				push	word ptr ds:[3796h]	; (9B68:3796=92h)
020A:EBC4  FF 36 2EF4				push	word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:EBC8  8A 1E 2A32				mov	bl,byte ptr ds:[2A32h]	; (9B68:2A32=4Fh)
020A:EBCC  53					push	bx
020A:EBCD  C6 06 2A32 00			mov	byte ptr ds:[2A32h],0	; (9B68:2A32=4Fh)
020A:EBD2  8A 1E 2F04				mov	bl,byte ptr ds:[2F04h]	; (9B68:2F04=0E8h)
020A:EBD6  88 1E 3C73				mov	byte ptr ds:[3C73h],bl	; (9B68:3C73=0)
020A:EBDA  C6 06 2F04 90			mov	byte ptr ds:[2F04h],90h	; (9B68:2F04=0E8h)
020A:EBDF  33 DB				xor	bx,bx			; Zero register
020A:EBE1  8B 0E 2D82				mov	cx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:EBE5  83 3E 2D91 FF			cmp	word ptr ds:[2D91h],0FFFFh	; (9B68:2D91=0E193h)
020A:EBEA  74 04				je	loc_2667		; Jump if equal
020A:EBEC  8B 0E 2D91				mov	cx,word ptr ds:[2D91h]	; (9B68:2D91=0E193h)
020A:EBF0			loc_2667:
020A:EBF0  89 0E 3796				mov	word ptr ds:[3796h],cx	; (9B68:3796=92h)
020A:EBF4  89 0E 2EF4				mov	word ptr ds:[2EF4h],cx	; (9B68:2EF4=2020h)
020A:EBF8  E8 C465				call	sub_177			; (B060)
020A:EBFB  58					pop	ax
020A:EBFC  A2 2A32				mov	byte ptr ds:[2A32h],al	; (D233:2A32=0C8h)
020A:EBFF  8F 06 2EF4				pop	word ptr ds:[2EF4h]	; (D233:2EF4=0B809h)
020A:EC03  8F 06 3796				pop	word ptr ds:[3796h]	; (D233:3796=1475h)
020A:EC07  C6 06 2D93 00			mov	byte ptr ds:[2D93h],0	; (D233:2D93=0E8h)
020A:EC0C  A0 3C73				mov	al,byte ptr ds:[3C73h]	; (D233:3C73=3)
020A:EC0F  A2 2F04				mov	byte ptr ds:[2F04h],al	; (D233:2F04=0E9h)
020A:EC12  EB 46				jmp	short loc_2671		; (EC5A)
020A:EC14			loc_2668:
020A:EC14  56					push	si
020A:EC15  BE 30B1				mov	si,30B1h
020A:EC18  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:EC18  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:EC1D  5E					pop	si
020A:EC1E  8A 2E 2A75				mov	ch,byte ptr ds:[2A75h]	; (D233:2A75=0)
020A:EC22  8A 0E 2D8D				mov	cl,byte ptr ds:[2D8Dh]	; (D233:2D8D=5Ch)
020A:EC26  51					push	cx
020A:EC27  C6 06 2A75 00			mov	byte ptr ds:[2A75h],0	; (D233:2A75=0)
020A:EC2C  80 3E 2D90 40			cmp	byte ptr ds:[2D90h],40h	; (D233:2D90=0BEh) '@'
020A:EC31  75 05				jne	loc_2669		; Jump if not equal
020A:EC33  C6 06 2A75 4F			mov	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:EC38			loc_2669:
020A:EC38  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 493

020A:EC3C  83 3E 2D91 FF			cmp	word ptr ds:[2D91h],0FFFFh	; (D233:2D91=65FAh)
020A:EC41  74 04				je	loc_2670		; Jump if equal
020A:EC43  8B 1E 2D91				mov	bx,word ptr ds:[2D91h]	; (D233:2D91=65FAh)
020A:EC47			loc_2670:
020A:EC47  B1 00				mov	cl,0
020A:EC49  C6 06 2ECF 02			mov	byte ptr ds:[2ECFh],2	; (D233:2ECF=0E8h)
020A:EC4E  E8 C993				call	sub_178			; (B5E4)
020A:EC51  59					pop	cx
020A:EC52  88 0E 2D8D				mov	byte ptr ds:[2D8Dh],cl	; (9B68:2D8D=0A0h)
020A:EC56  88 2E 2A75				mov	byte ptr ds:[2A75h],ch	; (9B68:2A75=0A0h)
020A:EC5A			loc_2671:
020A:EC5A  81 FD 282A				cmp	bp,282Ah
020A:EC5E  72 1E				jb	loc_2674		; Jump if below
020A:EC60  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:EC65  45					inc	bp
020A:EC66  56					push	si
020A:EC67  BE 29EE				mov	si,29EEh
020A:EC6A  B9 0024				mov	cx,24h
  
020A:EC6D			locloop_2672:
020A:EC6D  8A 04				mov	al,[si]
020A:EC6F  3E: 88 46 00				mov	ds:[bp],al
020A:EC73  46					inc	si
020A:EC74  45					inc	bp
020A:EC75  81 FD 284E				cmp	bp,284Eh
020A:EC79  73 02				jae	loc_2673		; Jump if above or =
020A:EC7B  E2 F0				loop	locloop_2672		; Loop if cx > 0
  
020A:EC7D			loc_2673:
020A:EC7D  5E					pop	si
020A:EC7E			loc_2674:
020A:EC7E  E9 0904				jmp	loc_2791		; (F585)
020A:EC81  9A 16FA:139C		;*		call	far ptr sub_269		;*(16FA:139C)
020A:EC81  9A 9C 13 FA 16			db	 9Ah, 9Ch, 13h,0FAh, 16h
020A:EC86  E9 08FC				jmp	loc_2791		; (F585)
020A:EC89  8B 0E 2EF4				mov	cx,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:EC8D  89 0E 3796				mov	word ptr ds:[3796h],cx	; (9B68:3796=92h)
020A:EC91  56					push	si
020A:EC92  BE 312C				mov	si,312Ch
020A:EC95  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:EC95  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:EC9A  C6 06 2D93 02			mov	byte ptr ds:[2D93h],2	; (9B68:2D93=0ABh)
020A:EC9F  C6 06 152B 01			mov	byte ptr ds:[152Bh],1	; (9B68:152B=20h)
020A:ECA4  5E					pop	si
020A:ECA5  56					push	si
020A:ECA6  C6 06 2A5C 01			mov	byte ptr ds:[2A5Ch],1	; (9B68:2A5C=0A8h)
020A:ECAB  03 36 2A84				add	si,word ptr ds:[2A84h]	; (9B68:2A84=0AC20h)
020A:ECAF  4E					dec	si
020A:ECB0  9A 16FA:06B0		;*		call	far ptr sub_243		;*(16FA:06B0)
020A:ECB0  9A B0 06 FA 16			db	 9Ah,0B0h, 06h,0FAh, 16h
020A:ECB5  46					inc	si
020A:ECB6  E9 00A0				jmp	loc_2681		; (ED59)
020A:ECB9  8B 0E 2EF4				mov	cx,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:ECBD  89 0E 3796				mov	word ptr ds:[3796h],cx	; (9B68:3796=92h)
020A:ECC1  C6 06 2A5C 01			mov	byte ptr ds:[2A5Ch],1	; (9B68:2A5C=0A8h)
020A:ECC6  3C 31				cmp	al,31h			; '1'
020A:ECC8  75 02				jne	loc_2675		; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 494

020A:ECCA  EB 7A				jmp	short loc_2680		; (ED46)
020A:ECCC			loc_2675:
020A:ECCC  3C 32				cmp	al,32h			; '2'
020A:ECCE  74 76				je	loc_2680		; Jump if equal
020A:ECD0  FE 06 2A5C				inc	byte ptr ds:[2A5Ch]	; (9B68:2A5C=0A8h)
020A:ECD4  56					push	si
020A:ECD5  46					inc	si
020A:ECD6  3C 35				cmp	al,35h			; '5'
020A:ECD8  74 06				je	loc_2676		; Jump if equal
020A:ECDA  9A 16FA:06B0		;*		call	far ptr sub_243		;*(16FA:06B0)
020A:ECDA  9A B0 06 FA 16			db	 9Ah,0B0h, 06h,0FAh, 16h
020A:ECDF  46					inc	si
020A:ECE0			loc_2676:
020A:ECE0  26: 8B 04				mov	ax,es:[si]
020A:ECE3  5E					pop	si
020A:ECE4  32 DB				xor	bl,bl			; Zero register
020A:ECE6  80 FA 36				cmp	dl,36h			; '6'
020A:ECE9  75 27				jne	loc_2678		; Jump if not equal
020A:ECEB  26: 8A 5C 01				mov	bl,es:[si+1]
020A:ECEF  80 CB 08				or	bl,8
020A:ECF2  F7 06 139F 0008			test	word ptr ds:[139Fh],8	; (9B68:139F=2E5Bh)
020A:ECF8  75 18				jnz	loc_2678		; Jump if not zero
020A:ECFA  3D 007F				cmp	ax,7Fh
020A:ECFD  72 05				jb	loc_2677		; Jump if below
020A:ECFF  3D FF80				cmp	ax,0FF80h
020A:ED02  72 0E				jb	loc_2678		; Jump if below
020A:ED04			loc_2677:
020A:ED04  80 0E 42BF 40			or	byte ptr ds:[42BFh],40h	; (9B68:42BF=0) '@'
020A:ED09  3D 0000				cmp	ax,0
020A:ED0C  75 04				jne	loc_2678		; Jump if not equal
020A:ED0E  FE 06 42C0				inc	byte ptr ds:[42C0h]	; (9B68:42C0=0)
020A:ED12			loc_2678:
020A:ED12  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:ED17  74 2B				jz	loc_2679		; Jump if zero
020A:ED19  C6 06 2A5C 04			mov	byte ptr ds:[2A5Ch],4	; (9B68:2A5C=0A8h)
020A:ED1E  26: 8B 44 03				mov	ax,es:[si+3]
020A:ED22  3D 0000				cmp	ax,0
020A:ED25  74 1D				je	loc_2679		; Jump if equal
020A:ED27  9A 16FA:14DC		;*		call	far ptr sub_271		;*(16FA:14DC)
020A:ED27  9A DC 14 FA 16			db	 9Ah,0DCh, 14h,0FAh, 16h
020A:ED2C  26: 8B 5C 01				mov	bx,es:[si+1]
020A:ED30  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:ED35  45					inc	bp
020A:ED36  9A 16FA:01E8		;*		call	far ptr sub_229		;*(16FA:01E8)
020A:ED36  9A E8 01 FA 16			db	 9Ah,0E8h, 01h,0FAh, 16h
020A:ED3B  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:ED40  45					inc	bp
020A:ED41  E9 0841				jmp	loc_2791		; (F585)
020A:ED44			loc_2679:
020A:ED44  EB 76				jmp	short loc_2686		; (EDBC)
020A:ED46			loc_2680:
020A:ED46  56					push	si
020A:ED47  46					inc	si
020A:ED48  3C 31				cmp	al,31h			; '1'
020A:ED4A  74 0D				je	loc_2681		; Jump if equal
020A:ED4C  9A 16FA:06B0		;*		call	far ptr sub_243		;*(16FA:06B0)
020A:ED4C  9A B0 06 FA 16			db	 9Ah,0B0h, 06h,0FAh, 16h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 495

020A:ED51  46					inc	si
020A:ED52  F6 06 42B3 10			test	byte ptr ds:[42B3h],10h	; (9B68:42B3=0)
020A:ED57  75 50				jnz	loc_2684		; Jump if not zero
020A:ED59			loc_2681:
020A:ED59  26: 8A 04				mov	al,es:[si]
020A:ED5C  5E					pop	si
020A:ED5D  FF 36 2EC0				push	word ptr ds:[2EC0h]	; (9B68:2EC0=20A9h)
020A:ED61  FF 36 2EC2				push	word ptr ds:[2EC2h]	; (9B68:2EC2=0A4AEh)
020A:ED65  C7 06 2EC0 FF80			mov	word ptr ds:[2EC0h],0FF80h	; (9B68:2EC0=20A9h)
020A:ED6B  C7 06 2EC2 007F			mov	word ptr ds:[2EC2h],7Fh	; (9B68:2EC2=0A4AEh)
020A:ED71  32 DB				xor	bl,bl			; Zero register
020A:ED73  80 FA 32				cmp	dl,32h			; '2'
020A:ED76  75 07				jne	loc_2682		; Jump if not equal
020A:ED78  26: 8A 5C 01				mov	bl,es:[si+1]
020A:ED7C  80 CB 08				or	bl,8
020A:ED7F			loc_2682:
020A:ED7F  98					cbw				; Convrt byte to word
020A:ED80  C6 06 2A29 01			mov	byte ptr ds:[2A29h],1	; (9B68:2A29=0A9h)
020A:ED85  F6 C3 08				test	bl,8
020A:ED88  75 09				jnz	loc_2683		; Jump if not zero
020A:ED8A  3B 06 2A33				cmp	ax,word ptr ds:[2A33h]	; (9B68:2A33=4F54h)
020A:ED8E  73 03				jae	loc_2683		; Jump if above or =
020A:ED90  A3 2A33				mov	word ptr ds:[2A33h],ax	; (9B68:2A33=4F54h)
020A:ED93			loc_2683:
020A:ED93  C6 06 2A53 00			mov	byte ptr ds:[2A53h],0	; (9B68:2A53=20h)
020A:ED98  8A 3E 2A62				mov	bh,byte ptr ds:[2A62h]	; (9B68:2A62=0A7h)
020A:ED9C  E8 C2C1				call	sub_177			; (B060)
020A:ED9F  8F 06 2EC2				pop	word ptr ds:[2EC2h]	; (D233:2EC2=6C7h)
020A:EDA3  8F 06 2EC0				pop	word ptr ds:[2EC0h]	; (D233:2EC0=675h)
020A:EDA7  EB 41				jmp	short loc_2688		; (EDEA)
020A:EDA9			loc_2684:
020A:EDA9  26: 8A 04				mov	al,es:[si]
020A:EDAC  5E					pop	si
020A:EDAD  32 DB				xor	bl,bl			; Zero register
020A:EDAF  80 FA 32				cmp	dl,32h			; '2'
020A:EDB2  75 07				jne	loc_2685		; Jump if not equal
020A:EDB4  26: 8A 5C 01				mov	bl,es:[si+1]
020A:EDB8  80 CB 08				or	bl,8
020A:EDBB			loc_2685:
020A:EDBB  98					cbw				; Convrt byte to word
020A:EDBC			loc_2686:
020A:EDBC  C6 06 2A29 01			mov	byte ptr ds:[2A29h],1	; (D233:2A29=46h)
020A:EDC1  F6 06 42B3 10			test	byte ptr ds:[42B3h],10h	; (D233:42B3=0FCh)
020A:EDC6  75 57				jnz	loc_2691		; Jump if not zero
020A:EDC8  F6 C3 08				test	bl,8
020A:EDCB  75 09				jnz	loc_2687		; Jump if not zero
020A:EDCD  3B 06 2A33				cmp	ax,word ptr ds:[2A33h]	; (D233:2A33=0B8h)
020A:EDD1  73 03				jae	loc_2687		; Jump if above or =
020A:EDD3  A3 2A33				mov	word ptr ds:[2A33h],ax	; (D233:2A33=0B8h)
020A:EDD6			loc_2687:
020A:EDD6  C6 06 2A53 00			mov	byte ptr ds:[2A53h],0	; (D233:2A53=8Eh)
020A:EDDB  E8 C282				call	sub_177			; (B060)
020A:EDDE  F6 06 42BF 40			test	byte ptr ds:[42BFh],40h	; (D233:42BF=8Ah) '@'
020A:EDE3  74 05				jz	loc_2688		; Jump if zero
020A:EDE5  80 0E 42BF 80			or	byte ptr ds:[42BFh],80h	; (D233:42BF=8Ah)
020A:EDEA			loc_2688:
020A:EDEA  80 3E 42B6 01			cmp	byte ptr ds:[42B6h],1	; (D233:42B6=12h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 496

020A:EDEF  74 1E				je	loc_2689		; Jump if equal
020A:EDF1  F6 06 2A53 02			test	byte ptr ds:[2A53h],2	; (D233:2A53=8Eh)
020A:EDF6  75 17				jnz	loc_2689		; Jump if not zero
020A:EDF8  A1 2EF4				mov	ax,word ptr ds:[2EF4h]	; (D233:2EF4=0B809h)
020A:EDFB  3B 06 3796				cmp	ax,word ptr ds:[3796h]	; (D233:3796=1475h)
020A:EDFF  75 0E				jne	loc_2689		; Jump if not equal
020A:EE01  3B 06 2A50				cmp	ax,word ptr ds:[2A50h]	; (D233:2A50=3306h)
020A:EE05  74 08				je	loc_2689		; Jump if equal
020A:EE07  C6 06 2A53 01			mov	byte ptr ds:[2A53h],1	; (D233:2A53=8Eh)
020A:EE0C  A3 2A50				mov	word ptr ds:[2A50h],ax	; (D233:2A50=3306h)
020A:EE0F			loc_2689:
020A:EE0F  80 FA 32				cmp	dl,32h			; '2'
020A:EE12  74 08				je	loc_2690		; Jump if equal
020A:EE14  80 FA 36				cmp	dl,36h			; '6'
020A:EE17  74 03				je	loc_2690		; Jump if equal
020A:EE19  E9 0769				jmp	loc_2791		; (F585)
020A:EE1C			loc_2690:
020A:EE1C  E9 00F0				jmp	loc_2701		; (EF0F)
020A:EE1F			loc_2691:
020A:EE1F  F6 06 42B3 0F			test	byte ptr ds:[42B3h],0Fh	; (D233:42B3=0FCh)
020A:EE24  75 54				jnz	loc_2695		; Jump if not zero
020A:EE26  80 26 42B3 EF			and	byte ptr ds:[42B3h],0EFh	; (D233:42B3=0FCh)
020A:EE2B  80 FA 32				cmp	dl,32h			; '2'
020A:EE2E  74 05				je	loc_2692		; Jump if equal
020A:EE30  80 FA 36				cmp	dl,36h			; '6'
020A:EE33  75 28				jne	loc_2694		; Jump if not equal
020A:EE35			loc_2692:
020A:EE35  26: 8A 5C 01				mov	bl,es:[si+1]
020A:EE39  80 E3 C7				and	bl,0C7h
020A:EE3C  80 FB 06				cmp	bl,6
020A:EE3F  74 1C				je	loc_2694		; Jump if equal
020A:EE41  F6 06 42BF 40			test	byte ptr ds:[42BFh],40h	; (D233:42BF=8Ah) '@'
020A:EE46  74 05				jz	loc_2693		; Jump if zero
020A:EE48  80 0E 42BF 80			or	byte ptr ds:[42BFh],80h	; (D233:42BF=8Ah)
020A:EE4D			loc_2693:
020A:EE4D  80 26 42BF FB			and	byte ptr ds:[42BFh],0FBh	; (D233:42BF=8Ah)
020A:EE52  A3 37A4				mov	word ptr ds:[37A4h],ax	; (D233:37A4=3)
020A:EE55  C6 06 42B6 01			mov	byte ptr ds:[42B6h],1	; (D233:42B6=12h)
020A:EE5A  E9 00B2				jmp	loc_2701		; (EF0F)
020A:EE5D			loc_2694:
020A:EE5D  80 0E 42BF 10			or	byte ptr ds:[42BFh],10h	; (D233:42BF=8Ah)
020A:EE62  56					push	si
020A:EE63  BE 3118				mov	si,3118h
020A:EE66  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:EE66  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:EE6B  5E					pop	si
020A:EE6C  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:EE6C  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:EE71  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:EE76  45					inc	bp
020A:EE77  E9 070B				jmp	loc_2791		; (F585)
020A:EE7A			loc_2695:
020A:EE7A  8B 0E 2D82				mov	cx,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:EE7E  83 3E 42B1 FF			cmp	word ptr ds:[42B1h],0FFFFh	; (D233:42B1=8019h)
020A:EE83  74 04				je	loc_2696		; Jump if equal
020A:EE85  8B 0E 42B1				mov	cx,word ptr ds:[42B1h]	; (D233:42B1=8019h)
020A:EE89			loc_2696:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 497

020A:EE89  80 3E 42B3 1A			cmp	byte ptr ds:[42B3h],1Ah	; (D233:42B3=0FCh)
020A:EE8E  75 25				jne	loc_2697		; Jump if not equal
020A:EE90  FF 36 3796				push	word ptr ds:[3796h]	; (D233:3796=1475h)
020A:EE94  FF 36 2EF4				push	word ptr ds:[2EF4h]	; (D233:2EF4=0B809h)
020A:EE98  89 0E 3796				mov	word ptr ds:[3796h],cx	; (D233:3796=1475h)
020A:EE9C  89 0E 2EF4				mov	word ptr ds:[2EF4h],cx	; (D233:2EF4=0B809h)
020A:EEA0  32 FF				xor	bh,bh			; Zero register
020A:EEA2  E8 C1BB				call	sub_177			; (B060)
020A:EEA5  8F 06 2EF4				pop	word ptr ds:[2EF4h]	; (D233:2EF4=0B809h)
020A:EEA9  8F 06 3796				pop	word ptr ds:[3796h]	; (D233:3796=1475h)
020A:EEAD  C6 06 2D93 00			mov	byte ptr ds:[2D93h],0	; (D233:2D93=0E8h)
020A:EEB2  E9 FF5A				jmp	loc_2689		; (EE0F)
020A:EEB5			loc_2697:
020A:EEB5  8B D9				mov	bx,cx
020A:EEB7  8A 0E 2A75				mov	cl,byte ptr ds:[2A75h]	; (D233:2A75=0)
020A:EEBB  51					push	cx
020A:EEBC  B1 02				mov	cl,2
020A:EEBE  80 3E 42B3 18			cmp	byte ptr ds:[42B3h],18h	; (D233:42B3=0FCh)
020A:EEC3  75 05				jne	loc_2698		; Jump if not equal
020A:EEC5  C6 06 2A75 4F			mov	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:EECA			loc_2698:
020A:EECA  E8 C717				call	sub_178			; (B5E4)
020A:EECD  59					pop	cx
020A:EECE  88 0E 2A75				mov	byte ptr ds:[2A75h],cl	; (9B68:2A75=0A0h)
020A:EED2  E9 FF3A				jmp	loc_2689		; (EE0F)
020A:EED5  8B 0E 2EF4				mov	cx,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:EED9  89 0E 3796				mov	word ptr ds:[3796h],cx	; (9B68:3796=92h)
020A:EEDD  F6 06 2D8C 80			test	byte ptr ds:[2D8Ch],80h	; (9B68:2D8C=0AAh)
020A:EEE2  75 05				jnz	loc_2699		; Jump if not zero
020A:EEE4  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:EEE4  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:EEE9			loc_2699:
020A:EEE9  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:EEEE  74 05				jz	loc_2700		; Jump if zero
020A:EEF0  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:EEF0  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:EEF5			loc_2700:
020A:EEF5  26: 8A 5C 01				mov	bl,es:[si+1]
020A:EEF9  9A 16FA:1650		;*		call	far ptr sub_273		;*(16FA:1650)
020A:EEF9  9A 50 16 FA 16			db	 9Ah, 50h, 16h,0FAh, 16h
020A:EEFE  C6 06 2F08 01			mov	byte ptr ds:[2F08h],1	; (9B68:2F08=0AEh)
020A:EF03  80 3E 2F06 04			cmp	byte ptr ds:[2F06h],4	; (9B68:2F06=0A1h)
020A:EF08  75 05				jne	loc_2701		; Jump if not equal
020A:EF0A  C6 06 2F06 00			mov	byte ptr ds:[2F06h],0	; (9B68:2F06=0A1h)
020A:EF0F			loc_2701:
020A:EF0F  26: 8A 5C 01				mov	bl,es:[si+1]
020A:EF13  9A 16FA:0FA8		;*		call	far ptr sub_251		;*(16FA:0FA8)
020A:EF13  9A A8 0F FA 16			db	 9Ah,0A8h, 0Fh,0FAh, 16h
020A:EF18  73 05				jnc	loc_2702		; Jump if carry=0
020A:EF1A  C6 06 2F0A 01			mov	byte ptr ds:[2F0Ah],1	; (9B68:2F0A=0A0h)
020A:EF1F			loc_2702:
020A:EF1F  26: 8A 5C 01				mov	bl,es:[si+1]
020A:EF23			loc_2703:
020A:EF23  80 E3 C7				and	bl,0C7h
020A:EF26  80 FB 06				cmp	bl,6
020A:EF29  75 03				jne	loc_2704		; Jump if not equal
020A:EF2B  E9 0657				jmp	loc_2791		; (F585)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 498

020A:EF2E			loc_2704:
020A:EF2E  80 E3 07				and	bl,7
020A:EF31  B9 0008				mov	cx,8
020A:EF34  F6 C3 04				test	bl,4
020A:EF37  74 03				jz	loc_2705		; Jump if zero
020A:EF39  B9 0005				mov	cx,5
020A:EF3C			loc_2705:
020A:EF3C  8A C3				mov	al,bl
020A:EF3E  24 03				and	al,3
020A:EF40  F6 E1				mul	cl			; ax = reg * al
020A:EF42  F6 C3 04				test	bl,4
020A:EF45  74 0B				jz	loc_2706		; Jump if zero
020A:EF47  51					push	cx
020A:EF48  B9 2FE9				mov	cx,2FE9h
020A:EF4B  81 E9 2FC9				sub	cx,2FC9h
020A:EF4F  03 C1				add	ax,cx
020A:EF51  59					pop	cx
020A:EF52			loc_2706:
020A:EF52  53					push	bx
020A:EF53  8B D8				mov	bx,ax
020A:EF55  49					dec	cx
  
020A:EF56			locloop_2707:
020A:EF56  8A 87 2FC9				mov	al,byte ptr ds:[2FC9h][bx]	; (9B68:2FC9=52h)
020A:EF5A  3E: 88 46 00				mov	ds:[bp],al
020A:EF5E  43					inc	bx
020A:EF5F  45					inc	bp
020A:EF60  E2 F4				loop	locloop_2707		; Loop if cx > 0
  
020A:EF62  8A 87 2FC9				mov	al,byte ptr ds:[2FC9h][bx]	; (9B68:2FC9=52h)
020A:EF66  A2 2F09				mov	byte ptr ds:[2F09h],al	; (9B68:2F09=0ADh)
020A:EF69  80 FA 32				cmp	dl,32h			; '2'
020A:EF6C  74 05				je	loc_2708		; Jump if equal
020A:EF6E  80 FA 36				cmp	dl,36h			; '6'
020A:EF71  75 72				jne	loc_2713		; Jump if not equal
020A:EF73			loc_2708:
020A:EF73  80 3E 42B6 00			cmp	byte ptr ds:[42B6h],0	; (9B68:42B6=0)
020A:EF78  74 29				je	loc_2710		; Jump if equal
020A:EF7A  4D					dec	bp
020A:EF7B  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:EF80  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:EF83  A9 8000				test	ax,8000h
020A:EF86  74 08				jz	loc_2709		; Jump if zero
020A:EF88  3E: C6 46 00 2D			mov	byte ptr ds:[bp],2Dh	; '-'
020A:EF8D  F7 D0				not	ax
020A:EF8F  40					inc	ax
020A:EF90			loc_2709:
020A:EF90  45					inc	bp
020A:EF91  9A 16FA:0088		;*		call	far ptr sub_226		;*(16FA:0088)
020A:EF91  9A 88 00 FA 16			db	 9Ah, 88h, 00h,0FAh, 16h
020A:EF96  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:EF9B  45					inc	bp
020A:EF9C  C6 06 42B6 00			mov	byte ptr ds:[42B6h],0	; (9B68:42B6=0)
020A:EFA1  EB 42				jmp	short loc_2713		; (EFE5)
020A:EFA3			loc_2710:
020A:EFA3  F6 06 2F09 01			test	byte ptr ds:[2F09h],1	; (9B68:2F09=0ADh)
020A:EFA8  74 07				jz	loc_2711		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 499

020A:EFAA  83 3E 37A4 00			cmp	word ptr ds:[37A4h],0	; (9B68:37A4=0)
020A:EFAF  74 34				je	loc_2713		; Jump if equal
020A:EFB1			loc_2711:
020A:EFB1  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:EFB6  06					push	es
020A:EFB7  8B 1E 3796				mov	bx,word ptr ds:[3796h]	; (9B68:3796=92h)
020A:EFBB  E8 AF5A				call	sub_169			; (9F18)
020A:EFBE  8B 1E 2A8F				mov	bx,word ptr ds:[2A8Fh]	; (9B68:2A8F=0A58Ch)
020A:EFC2  26: 80 0F 80				or	byte ptr es:[bx],80h
020A:EFC6  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:EFCB  5A					pop	dx
020A:EFCC  8E C2				mov	es,dx
020A:EFCE  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:EFD3  5A					pop	dx
020A:EFD4  75 0A				jnz	loc_2712		; Jump if not zero
020A:EFD6  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:EFDB  74 03				je	loc_2712		; Jump if equal
020A:EFDD  E8 AF04				call	sub_168			; (9EE4)
020A:EFE0			loc_2712:
020A:EFE0  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:EFE5			loc_2713:
020A:EFE5  5B					pop	bx
020A:EFE6  33 C0				xor	ax,ax			; Zero register
020A:EFE8  F6 06 2F09 08			test	byte ptr ds:[2F09h],8	; (9B68:2F09=0ADh)
020A:EFED  74 07				jz	loc_2714		; Jump if zero
020A:EFEF  E8 EA9A				call	sub_208			; (DA8C)
020A:EFF2  03 06 2EE8				add	ax,word ptr ds:[2EE8h]	; (9B68:2EE8=0E2A0h)
020A:EFF6			loc_2714:
020A:EFF6  F6 06 2F09 04			test	byte ptr ds:[2F09h],4	; (9B68:2F09=0ADh)
020A:EFFB  74 09				jz	loc_2715		; Jump if zero
020A:EFFD  E8 EABC				call	sub_209			; (DABC)
020A:F000  03 06 2EE4				add	ax,word ptr ds:[2EE4h]	; (9B68:2EE4=0A7ECh)
020A:F004  72 35				jc	loc_2719		; Jump if carry Set
020A:F006			loc_2715:
020A:F006  F6 06 2F09 02			test	byte ptr ds:[2F09h],2	; (9B68:2F09=0ADh)
020A:F00B  74 09				jz	loc_2716		; Jump if zero
020A:F00D  E8 E9EC				call	sub_207			; (D9FC)
020A:F010  03 06 2ED8				add	ax,word ptr ds:[2ED8h]	; (9B68:2ED8=8C20h)
020A:F014  72 25				jc	loc_2719		; Jump if carry Set
020A:F016			loc_2716:
020A:F016  F6 06 2F09 01			test	byte ptr ds:[2F09h],1	; (9B68:2F09=0ADh)
020A:F01B  74 09				jz	loc_2717		; Jump if zero
020A:F01D  E8 EAF0				call	sub_210			; (DB10)
020A:F020  03 06 2EEC				add	ax,word ptr ds:[2EECh]	; (9B68:2EEC=200Ah)
020A:F024  72 15				jc	loc_2719		; Jump if carry Set
020A:F026			loc_2717:
020A:F026  80 FA 3D				cmp	dl,3Dh			; '='
020A:F029  74 06				je	loc_2718		; Jump if equal
020A:F02B  03 06 37A4				add	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:F02F  72 0A				jc	loc_2719		; Jump if carry Set
020A:F031			loc_2718:
020A:F031  F6 C7 20				test	bh,20h			; ' '
020A:F034  74 2D				jz	loc_2722		; Jump if zero
020A:F036  3D FFFD				cmp	ax,0FFFDh
020A:F039  72 08				jb	loc_2720		; Jump if below
020A:F03B			loc_2719:
020A:F03B  C6 06 2F06 00			mov	byte ptr ds:[2F06h],0	; (9B68:2F06=0A1h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 500

020A:F040  E9 0542				jmp	loc_2791		; (F585)
020A:F043			loc_2720:
020A:F043  83 3E 3796 00			cmp	word ptr ds:[3796h],0	; (9B68:3796=92h)
020A:F048  74 19				je	loc_2722		; Jump if equal
020A:F04A  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:F04F  74 07				je	loc_2721		; Jump if equal
020A:F051  80 3E 2A75 79			cmp	byte ptr ds:[2A75h],79h	; (9B68:2A75=0A0h) 'y'
020A:F056  75 0B				jne	loc_2722		; Jump if not equal
020A:F058			loc_2721:
020A:F058  F7 06 42CC 0020			test	word ptr ds:[42CCh],20h	; (9B68:42CC=0)
020A:F05E  75 03				jnz	loc_2722		; Jump if not zero
020A:F060  E8 B16D				call	sub_172			; (A1D0)
020A:F063			loc_2722:
020A:F063  E9 051F				jmp	loc_2791		; (F585)
020A:F066  3C 40				cmp	al,40h			; '@'
020A:F068  75 2B				jne	loc_2724		; Jump if not equal
020A:F06A  C6 06 2ECF 01			mov	byte ptr ds:[2ECFh],1	; (D233:2ECF=0E8h)
020A:F06F  80 3E 2A75 78			cmp	byte ptr ds:[2A75h],78h	; (D233:2A75=0) 'x'
020A:F074  74 15				je	loc_2723		; Jump if equal
020A:F076  80 3E 2A75 F5			cmp	byte ptr ds:[2A75h],0F5h	; (D233:2A75=0)
020A:F07B  74 0E				je	loc_2723		; Jump if equal
020A:F07D  F6 06 2A77 E0			test	byte ptr ds:[2A77h],0E0h	; (D233:2A77=0)
020A:F082  74 11				jz	loc_2724		; Jump if zero
020A:F084  26: F6 44 01 80			test	byte ptr es:[si+1],80h
020A:F089  75 0A				jnz	loc_2724		; Jump if not zero
020A:F08B			loc_2723:
020A:F08B  56					push	si
020A:F08C  BE 30BE				mov	si,30BEh
020A:F08F  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F08F  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F094  5E					pop	si
020A:F095			loc_2724:
020A:F095  56					push	si
020A:F096  C6 06 2A5E 00			mov	byte ptr ds:[2A5Eh],0	; (D233:2A5E=0BEh)
020A:F09B  8A D0				mov	dl,al
020A:F09D  46					inc	si
020A:F09E  F6 C2 01				test	dl,1
020A:F0A1  74 06				jz	loc_2725		; Jump if zero
020A:F0A3  46					inc	si
020A:F0A4  C6 06 2A5E 01			mov	byte ptr ds:[2A5Eh],1	; (D233:2A5E=0BEh)
020A:F0A9			loc_2725:
020A:F0A9  FE 06 2A5C				inc	byte ptr ds:[2A5Ch]	; (D233:2A5C=0Ah)
020A:F0AD  80 FA 41				cmp	dl,41h			; 'A'
020A:F0B0  77 0F				ja	loc_2727		; Jump if above
020A:F0B2  26: 8A 04				mov	al,es:[si]
020A:F0B5  98					cbw				; Convrt byte to word
020A:F0B6  C6 06 2ECF 01			mov	byte ptr ds:[2ECFh],1	; (D233:2ECF=0E8h)
020A:F0BB  E9 00FC				jmp	loc_2734		; (F1BA)
020A:F0BE			loc_2726:
020A:F0BE  E9 014A				jmp	loc_2740		; (F20B)
020A:F0C1			loc_2727:
020A:F0C1  C6 06 2ECF 02			mov	byte ptr ds:[2ECFh],2	; (D233:2ECF=0E8h)
020A:F0C6  FE 06 2A5C				inc	byte ptr ds:[2A5Ch]	; (D233:2A5C=0Ah)
020A:F0CA  80 FA 46				cmp	dl,46h			; 'F'
020A:F0CD  77 EF				ja	loc_2726		; Jump if above
020A:F0CF  74 03				jz	loc_2728		; Jump if zero
020A:F0D1  E9 0087				jmp	loc_2731		; (F15B)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 501

020A:F0D4			loc_2728:
020A:F0D4  C6 06 2ECF 02			mov	byte ptr ds:[2ECFh],2	; (D233:2ECF=0E8h)
020A:F0D9  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (D233:2ECA=81h)
020A:F0DE  74 23				jz	loc_2729		; Jump if zero
020A:F0E0  C6 06 2ECF 04			mov	byte ptr ds:[2ECFh],4	; (D233:2ECF=0E8h)
020A:F0E5  26: 8B 04				mov	ax,es:[si]
020A:F0E8  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (D233:2ED0=0FBAEh)
020A:F0EB  26: 8B 44 02				mov	ax,es:[si+2]
020A:F0EF  A3 2ED2				mov	word ptr ds:[2ED2h],ax	; (D233:2ED2=0E9E8h)
020A:F0F2  80 06 2A5C 02			add	byte ptr ds:[2A5Ch],2	; (D233:2A5C=0Ah)
020A:F0F7  3D 0000				cmp	ax,0
020A:F0FA  74 07				je	loc_2729		; Jump if equal
020A:F0FC  3D FFFF				cmp	ax,0FFFFh
020A:F0FF  74 02				je	loc_2729		; Jump if equal
020A:F101  EB 33				jmp	short loc_2730		; (F136)
020A:F103			loc_2729:
020A:F103  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (D233:2D82=74C0h)
020A:F107  26: 8B 04				mov	ax,es:[si]
020A:F10A  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (D233:2ED0=0FBAEh)
020A:F10D  5E					pop	si
020A:F10E  56					push	si
020A:F10F  8A 16 2ECF				mov	dl,byte ptr ds:[2ECFh]	; (D233:2ECF=0E8h)
020A:F113  32 F6				xor	dh,dh			; Zero register
020A:F115  03 C2				add	ax,dx
020A:F117  40					inc	ax
020A:F118  02 06 2A7A				add	al,byte ptr ds:[2A7Ah]	; (D233:2A7A=0)
020A:F11C  80 D4 00				adc	ah,0
020A:F11F  8B D0				mov	dx,ax
020A:F121  03 06 2D84				add	ax,word ptr ds:[2D84h]	; (D233:2D84=0AC09h)
020A:F125  3B 06 2A42				cmp	ax,word ptr ds:[2A42h]	; (D233:2A42=0DB0Bh)
020A:F129  72 0B				jb	loc_2730		; Jump if below
020A:F12B  3B 06 2A44				cmp	ax,word ptr ds:[2A44h]	; (D233:2A44=174h)
020A:F12F  77 05				ja	loc_2730		; Jump if above
020A:F131  32 F6				xor	dh,dh			; Zero register
020A:F133  E9 01A3				jmp	loc_2749		; (F2D9)
020A:F136			loc_2730:
020A:F136  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:F13B  45					inc	bp
020A:F13C  33 C0				xor	ax,ax			; Zero register
020A:F13E  A0 2ECF				mov	al,byte ptr ds:[2ECFh]	; (D233:2ECF=0E8h)
020A:F141  40					inc	ax
020A:F142  02 06 2A7A				add	al,byte ptr ds:[2A7Ah]	; (D233:2A7A=0)
020A:F146  80 D4 00				adc	ah,0
020A:F149  01 06 2ED0				add	word ptr ds:[2ED0h],ax	; (D233:2ED0=0FBAEh)
020A:F14D  83 16 2ED2 00			adc	word ptr ds:[2ED2h],0	; (D233:2ED2=0E9E8h)
020A:F152  E8 E153				call	sub_196			; (D2A8)
020A:F155  5E					pop	si
020A:F156  33 D2				xor	dx,dx			; Zero register
020A:F158  E9 042A				jmp	loc_2791		; (F585)
020A:F15B			loc_2731:
020A:F15B  80 FA 44				cmp	dl,44h			; 'D'
020A:F15E  75 2D				jne	loc_2733		; Jump if not equal
020A:F160  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (D233:2ECA=81h)
020A:F165  74 26				jz	loc_2733		; Jump if zero
020A:F167  26: 8B 04				mov	ax,es:[si]
020A:F16A  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (D233:2ED0=0FBAEh)
020A:F16D  26: 8B 44 02				mov	ax,es:[si+2]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 502

020A:F171  A3 2ED2				mov	word ptr ds:[2ED2h],ax	; (D233:2ED2=0E9E8h)
020A:F174  C6 06 2ECF 04			mov	byte ptr ds:[2ECFh],4	; (D233:2ECF=0E8h)
020A:F179  C6 06 2A5C 04			mov	byte ptr ds:[2A5Ch],4	; (D233:2A5C=0Ah)
020A:F17E  3D 0000				cmp	ax,0
020A:F181  74 07				je	loc_2732		; Jump if equal
020A:F183  3D FFFF				cmp	ax,0FFFFh
020A:F186  74 02				je	loc_2732		; Jump if equal
020A:F188  EB AC				jmp	short loc_2730		; (F136)
020A:F18A			loc_2732:
020A:F18A  E9 FF76				jmp	loc_2729		; (F103)
020A:F18D			loc_2733:
020A:F18D  C6 06 3BEA 01			mov	byte ptr ds:[3BEAh],1	; (D233:3BEA=58h)
020A:F192  26: 8B 04				mov	ax,es:[si]
020A:F195  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (D233:263E=0ABh)
020A:F19A  75 1E				jne	loc_2734		; Jump if not equal
020A:F19C  80 FA 44				cmp	dl,44h			; 'D'
020A:F19F  75 19				jne	loc_2734		; Jump if not equal
020A:F1A1  F7 06 139F 0004			test	word ptr ds:[139Fh],4	; (D233:139F=0FF66h)
020A:F1A7  75 11				jnz	loc_2734		; Jump if not zero
020A:F1A9  3D FF80				cmp	ax,0FF80h
020A:F1AC  72 0C				jb	loc_2734		; Jump if below
020A:F1AE  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (D233:2A75=0) 'O'
020A:F1B3  74 05				je	loc_2734		; Jump if equal
020A:F1B5  C6 06 42C4 01			mov	byte ptr ds:[42C4h],1	; (D233:42C4=0BFh)
020A:F1BA			loc_2734:
020A:F1BA  8B 1E 2A3C				mov	bx,word ptr ds:[2A3Ch]	; (D233:2A3C=8010h)
020A:F1BE  80 FA 45				cmp	dl,45h			; 'E'
020A:F1C1  73 05				jae	loc_2735		; Jump if above or =
020A:F1C3  80 FA 41				cmp	dl,41h			; 'A'
020A:F1C6  75 03				jne	loc_2736		; Jump if not equal
020A:F1C8			loc_2735:
020A:F1C8  E9 010E				jmp	loc_2749		; (F2D9)
020A:F1CB			loc_2736:
020A:F1CB  5E					pop	si
020A:F1CC  56					push	si
020A:F1CD  32 F6				xor	dh,dh			; Zero register
020A:F1CF  8A 16 2A5C				mov	dl,byte ptr ds:[2A5Ch]	; (D233:2A5C=0Ah)
020A:F1D3  A3 2ED0				mov	word ptr ds:[2ED0h],ax	; (D233:2ED0=0FBAEh)
020A:F1D6  03 C2				add	ax,dx
020A:F1D8  40					inc	ax
020A:F1D9  02 06 2A7A				add	al,byte ptr ds:[2A7Ah]	; (D233:2A7A=0)
020A:F1DD  80 D4 00				adc	ah,0
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_213		proc	near
020A:F1E0  8B D0				mov	dx,ax
020A:F1E2  03 06 2D84				add	ax,data_424		; (020A:2D84=735Ch)
020A:F1E6  3B 06 2A42				cmp	ax,data_376		; (020A:2A42=0A720h)
020A:F1EA  72 1C				jb	loc_2739		; Jump if below
020A:F1EC  53					push	bx
020A:F1ED  8B 1E 2A44				mov	bx,data_377		; (020A:2A44=0AFA0h)
020A:F1F1  83 FB F1				cmp	bx,0FFF1h
020A:F1F4  73 05				jae	loc_2737		; Jump if above or =
020A:F1F6  83 C3 0F				add	bx,0Fh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 503

020A:F1F9  EB 03				jmp	short loc_2738		; (F1FE)
020A:F1FB			loc_2737:
020A:F1FB  BB FFFF				mov	bx,0FFFFh
020A:F1FE			loc_2738:
020A:F1FE  3B C3				cmp	ax,bx
020A:F200  5B					pop	bx
020A:F201  77 05				ja	loc_2739		; Jump if above
020A:F203  32 F6				xor	dh,dh			; Zero register
020A:F205  E9 00D1				jmp	loc_2749		; (F2D9)
020A:F208			loc_2739:
020A:F208  E9 FF2B				jmp	loc_2730		; (F136)
020A:F20B			loc_2740:
020A:F20B  C6 06 2A5C 04			mov	byte ptr ds:[2A5Ch],4	; (020A:2A5C=8Eh)
020A:F210  26: 8B 04				mov	ax,es:[si]
020A:F213  46					inc	si
020A:F214  46					inc	si
020A:F215  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (020A:2ECA=3Ah)
020A:F21A  74 15				jz	loc_2741		; Jump if zero
020A:F21C  80 06 2A5C 02			add	byte ptr ds:[2A5Ch],2	; (020A:2A5C=8Eh)
020A:F221  46					inc	si
020A:F222  46					inc	si
020A:F223  26: 83 7C FE 00			cmp	word ptr es:[si-2],0
020A:F228  74 07				je	loc_2741		; Jump if equal
020A:F22A  50					push	ax
020A:F22B  B0 46				mov	al,46h			; 'F'
020A:F22D  E8 8C90				call	sub_112			; (7EC0)
020A:F230  58					pop	ax
020A:F231			loc_2741:
020A:F231  26: 8B 1C				mov	bx,es:[si]
020A:F234  83 FB 6F				cmp	bx,6Fh
020A:F237  77 1D				ja	loc_2742		; Jump if above
020A:F239  51					push	cx
020A:F23A  8B 0E 2D84				mov	cx,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:F23E  41					inc	cx
020A:F23F  02 0E 2A5C				add	cl,byte ptr ds:[2A5Ch]	; (9B68:2A5C=0A8h)
020A:F243  80 D5 00				adc	ch,0
020A:F246  3B C8				cmp	cx,ax
020A:F248  59					pop	cx
020A:F249  75 0B				jnz	loc_2742		; Jump if not zero
020A:F24B  8B 1E 2D82				mov	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:F24F  50					push	ax
020A:F250  B0 47				mov	al,47h			; 'G'
020A:F252  E8 8C6B				call	sub_112			; (7EC0)
020A:F255  58					pop	ax
020A:F256			loc_2742:
020A:F256  80 3E 2638 04			cmp	byte ptr ds:[2638h],4	; (9B68:2638=0E0h)
020A:F25B  75 6E				jne	loc_2748		; Jump if not equal
020A:F25D  3D 000F				cmp	ax,0Fh
020A:F260  77 69				ja	loc_2748		; Jump if above
020A:F262  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:F267  06					push	es
020A:F268  56					push	si
020A:F269  53					push	bx
020A:F26A  50					push	ax
020A:F26B  E8 A997				call	sub_159			; (9C05)
020A:F26E  BE 0000				mov	si,0
020A:F271  8A 0E 2A2B				mov	cl,byte ptr ds:[2A2Bh]	; (9B68:2A2B=0A0h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 504

020A:F275  32 ED				xor	ch,ch			; Zero register
  
020A:F277			locloop_2743:
020A:F277  26: 39 1C				cmp	es:[si],bx
020A:F27A  75 0C				jne	loc_2744		; Jump if not equal
020A:F27C  26: 39 44 02				cmp	es:[si+2],ax
020A:F280  77 06				ja	loc_2744		; Jump if above
020A:F282  26: 39 44 04				cmp	es:[si+4],ax
020A:F286  73 07				jae	loc_2745		; Jump if above or =
020A:F288			loc_2744:
020A:F288  83 C6 15				add	si,15h
020A:F28B  E2 EA				loop	locloop_2743		; Loop if cx > 0
  
020A:F28D  EB 1A				jmp	short loc_2746		; (F2A9)
020A:F28F			loc_2745:
020A:F28F  26: 8A 5C 0B				mov	bl,es:[si+0Bh]
020A:F293  80 E3 1E				and	bl,1Eh
020A:F296  D0 CB				ror	bl,1			; Rotate
020A:F298  3A C3				cmp	al,bl
020A:F29A  77 0D				ja	loc_2746		; Jump if above
020A:F29C  D0 C0				rol	al,1			; Rotate
020A:F29E  0C 20				or	al,20h			; ' '
020A:F2A0  26: 80 64 0B E1			and	byte ptr es:[si+0Bh],0E1h
020A:F2A5  26: 08 44 0B				or	es:[si+0Bh],al
020A:F2A9			loc_2746:
020A:F2A9  58					pop	ax
020A:F2AA  5B					pop	bx
020A:F2AB  5E					pop	si
020A:F2AC  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:F2B1  5A					pop	dx
020A:F2B2  8E C2				mov	es,dx
020A:F2B4  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:F2B9  5A					pop	dx
020A:F2BA  75 0A				jnz	loc_2747		; Jump if not zero
020A:F2BC  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:F2C1  74 03				je	loc_2747		; Jump if equal
020A:F2C3  E8 AC1E				call	sub_168			; (9EE4)
020A:F2C6			loc_2747:
020A:F2C6  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:F2CB			loc_2748:
020A:F2CB  56					push	si
020A:F2CC  BE 3088				mov	si,3088h
020A:F2CF  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F2CF  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F2D4  5E					pop	si
020A:F2D5  B1 01				mov	cl,1
020A:F2D7  EB 02				jmp	short loc_2750		; (F2DB)
020A:F2D9			loc_2749:
020A:F2D9  B1 00				mov	cl,0
020A:F2DB			loc_2750:
020A:F2DB  80 3E 2A75 2A			cmp	byte ptr ds:[2A75h],2Ah	; (9B68:2A75=0A0h) '*'
020A:F2E0  72 18				jb	loc_2752		; Jump if below
020A:F2E2  80 3E 2A75 2C			cmp	byte ptr ds:[2A75h],2Ch	; (9B68:2A75=0A0h) ','
020A:F2E7  76 0E				jbe	loc_2751		; Jump if below or =
020A:F2E9  80 3E 2A75 F2			cmp	byte ptr ds:[2A75h],0F2h	; (9B68:2A75=0A0h)
020A:F2EE  72 0A				jb	loc_2752		; Jump if below
020A:F2F0  80 3E 2A75 F4			cmp	byte ptr ds:[2A75h],0F4h	; (9B68:2A75=0A0h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 505

020A:F2F5  77 03				ja	loc_2752		; Jump if above
020A:F2F7			loc_2751:
020A:F2F7  80 C9 08				or	cl,8
020A:F2FA			loc_2752:
020A:F2FA  80 F9 01				cmp	cl,1
020A:F2FD  74 09				je	loc_2753		; Jump if equal
020A:F2FF  3B 06 2A33				cmp	ax,word ptr ds:[2A33h]	; (9B68:2A33=4F54h)
020A:F303  73 03				jae	loc_2753		; Jump if above or =
020A:F305  A3 2A33				mov	word ptr ds:[2A33h],ax	; (9B68:2A33=4F54h)
020A:F308			loc_2753:
020A:F308  E8 02AD				call	sub_214			; (F5B8)
020A:F30B  E8 C2D6				call	sub_178			; (B5E4)
020A:F30E  C6 06 3BEA 00			mov	byte ptr ds:[3BEAh],0	; (9B68:3BEA=0)
020A:F313  80 3E 263E 01			cmp	byte ptr ds:[263Eh],1	; (9B68:263E=0A4h)
020A:F318  75 3D				jne	loc_2756		; Jump if not equal
020A:F31A  80 3E 42B9 01			cmp	byte ptr ds:[42B9h],1	; (9B68:42B9=0)
020A:F31F  75 39				jne	loc_2757		; Jump if not equal
020A:F321  80 3E 2A5C 02			cmp	byte ptr ds:[2A5Ch],2	; (9B68:2A5C=0A8h)
020A:F326  75 2F				jne	loc_2756		; Jump if not equal
020A:F328  A1 37A4				mov	ax,word ptr ds:[37A4h]	; (9B68:37A4=0)
020A:F32B  2B 06 2D84				sub	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:F32F  48					dec	ax
020A:F330  2A 06 2A7A				sub	al,byte ptr ds:[2A7Ah]	; (9B68:2A7A=0A2h)
020A:F334  80 DC 00				sbb	ah,0
020A:F337  2A 06 2A5C				sub	al,byte ptr ds:[2A5Ch]	; (9B68:2A5C=0A8h)
020A:F33B  80 DC 00				sbb	ah,0
020A:F33E  A9 8000				test	ax,8000h
020A:F341  74 02				jz	loc_2754		; Jump if zero
020A:F343  F7 D0				not	ax
020A:F345			loc_2754:
020A:F345  3D 007F				cmp	ax,7Fh
020A:F348  76 03				jbe	loc_2755		; Jump if below or =
020A:F34A  E9 0092				jmp	loc_2765		; (F3DF)
020A:F34D			loc_2755:
020A:F34D  C6 06 2EB7 01			mov	byte ptr ds:[2EB7h],1	; (9B68:2EB7=0A2h)
020A:F352  C6 06 42B7 01			mov	byte ptr ds:[42B7h],1	; (9B68:42B7=0)
020A:F357			loc_2756:
020A:F357  E9 0085				jmp	loc_2765		; (F3DF)
020A:F35A			loc_2757:
020A:F35A  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:F35F  06					push	es
020A:F360  8B 36 42BC				mov	si,word ptr ds:[42BCh]	; (9B68:42BC=0)
020A:F364  8B 1E 37A2				mov	bx,word ptr ds:[37A2h]	; (9B68:37A2=92E5h)
020A:F368  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:F36D  75 05				jne	loc_2758		; Jump if not equal
020A:F36F  E8 AC8E				call	sub_171			; (A000)
020A:F372  EB 03				jmp	short loc_2759		; (F377)
020A:F374			loc_2758:
020A:F374  E8 AC15				call	sub_170			; (9F8C)
020A:F377			loc_2759:
020A:F377  26: F6 44 05 40			test	byte ptr es:[si+5],40h	; '@'
020A:F37C  75 42				jnz	loc_2763		; Jump if not zero
020A:F37E  26: 8B 04				mov	ax,es:[si]
020A:F381  3B 06 2D82				cmp	ax,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:F385  77 0C				ja	loc_2760		; Jump if above
020A:F387  72 28				jc	loc_2762		; Jump if carry Set
020A:F389  26: 8B 44 02				mov	ax,es:[si+2]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 506

020A:F38D  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:F391  72 1E				jb	loc_2762		; Jump if below
020A:F393			loc_2760:
020A:F393  80 3E 263D 0A			cmp	byte ptr ds:[263Dh],0Ah	; (9B68:263D=0AEh)
020A:F398  72 26				jb	loc_2763		; Jump if below
020A:F39A  80 3E 2A75 4F			cmp	byte ptr ds:[2A75h],4Fh	; (9B68:2A75=0A0h) 'O'
020A:F39F  74 09				je	loc_2761		; Jump if equal
020A:F3A1  26: F6 44 04 80			test	byte ptr es:[si+4],80h
020A:F3A6  74 09				jz	loc_2762		; Jump if zero
020A:F3A8  EB 16				jmp	short loc_2763		; (F3C0)
020A:F3AA			loc_2761:
020A:F3AA  26: F6 44 04 20			test	byte ptr es:[si+4],20h	; ' '
020A:F3AF  75 0F				jnz	loc_2763		; Jump if not zero
020A:F3B1			loc_2762:
020A:F3B1  C6 06 2EB7 01			mov	byte ptr ds:[2EB7h],1	; (9B68:2EB7=0A2h)
020A:F3B6  C6 06 42B7 01			mov	byte ptr ds:[42B7h],1	; (9B68:42B7=0)
020A:F3BB  80 26 42C4 FE			and	byte ptr ds:[42C4h],0FEh	; (9B68:42C4=0)
020A:F3C0			loc_2763:
020A:F3C0  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:F3C5  5A					pop	dx
020A:F3C6  8E C2				mov	es,dx
020A:F3C8  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:F3CD  5A					pop	dx
020A:F3CE  75 0A				jnz	loc_2764		; Jump if not zero
020A:F3D0  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:F3D5  74 03				je	loc_2764		; Jump if equal
020A:F3D7  E8 AB0A				call	sub_168			; (9EE4)
020A:F3DA			loc_2764:
020A:F3DA  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:F3DF			loc_2765:
020A:F3DF  5E					pop	si
020A:F3E0  E9 01A2				jmp	loc_2791		; (F585)
020A:F3E3			loc_2766:
020A:F3E3  56					push	si
020A:F3E4  57					push	di
020A:F3E5  E8 DC48				call	sub_194			; (D030)
020A:F3E8  A0 2ECA				mov	al,byte ptr ds:[2ECAh]	; (9B68:2ECA=20h)
020A:F3EB  24 07				and	al,7
020A:F3ED  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:F3F2  74 0A				jz	loc_2767		; Jump if zero
020A:F3F4  3C 06				cmp	al,6
020A:F3F6  74 10				je	loc_2768		; Jump if equal
020A:F3F8  3C 07				cmp	al,7
020A:F3FA  74 0C				je	loc_2768		; Jump if equal
020A:F3FC  EB 0C				jmp	short loc_2769		; (F40A)
020A:F3FE			loc_2767:
020A:F3FE  3C 00				cmp	al,0
020A:F400  74 06				je	loc_2768		; Jump if equal
020A:F402  3C 01				cmp	al,1
020A:F404  74 02				je	loc_2768		; Jump if equal
020A:F406  EB 02				jmp	short loc_2769		; (F40A)
020A:F408			loc_2768:
020A:F408  EB 2E				jmp	short loc_2772		; (F438)
020A:F40A			loc_2769:
020A:F40A  BE 3052				mov	si,3052h
020A:F40D  BF 30EA				mov	di,30EAh
020A:F410  F6 C2 01				test	dl,1
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 507

020A:F413  74 0D				jz	loc_2770		; Jump if zero
020A:F415  BE 3048				mov	si,3048h
020A:F418  F6 06 2ECA 01			test	byte ptr ds:[2ECAh],1	; (9B68:2ECA=20h)
020A:F41D  74 03				jz	loc_2770		; Jump if zero
020A:F41F  BE 305C				mov	si,305Ch
020A:F422			loc_2770:
020A:F422  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F427  74 03				jz	loc_2771		; Jump if zero
020A:F429  BF 30F9				mov	di,30F9h
020A:F42C			loc_2771:
020A:F42C  57					push	di
020A:F42D  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F42D  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F432  5E					pop	si
020A:F433  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F433  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F438			loc_2772:
020A:F438  5F					pop	di
020A:F439  5E					pop	si
020A:F43A  E9 0148				jmp	loc_2791		; (F585)
020A:F43D  80 3E 2638 06			cmp	byte ptr ds:[2638h],6	; (9B68:2638=0E0h)
020A:F442  72 0A				jb	loc_2773		; Jump if below
020A:F444  F6 06 2ECA 07			test	byte ptr ds:[2ECAh],7	; (9B68:2ECA=20h)
020A:F449  75 03				jnz	loc_2773		; Jump if not zero
020A:F44B  E8 E5AE				call	sub_207			; (D9FC)
020A:F44E			loc_2773:
020A:F44E  EB 55				jmp	short loc_2776		; (F4A5)
020A:F450  80 3E 2638 06			cmp	byte ptr ds:[2638h],6	; (9B68:2638=0E0h)
020A:F455  72 26				jb	loc_2774		; Jump if below
020A:F457  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F45C  75 1F				jnz	loc_2774		; Jump if not zero
020A:F45E  C7 06 42F5 FFFF			mov	word ptr ds:[42F5h],0FFFFh	; (9B68:42F5=0)
020A:F464  E8 E655				call	sub_209			; (DABC)
020A:F467  80 FA 76				cmp	dl,76h			; 'v'
020A:F46A  73 11				jae	loc_2774		; Jump if above or =
020A:F46C  8A C2				mov	al,dl
020A:F46E  0C 01				or	al,1
020A:F470  3C 73				cmp	al,73h			; 's'
020A:F472  74 09				je	loc_2774		; Jump if equal
020A:F474  A1 2EF2				mov	ax,word ptr ds:[2EF2h]	; (9B68:2EF2=2020h)
020A:F477  A3 42F5				mov	word ptr ds:[42F5h],ax	; (9B68:42F5=0)
020A:F47A  E8 E60F				call	sub_208			; (DA8C)
020A:F47D			loc_2774:
020A:F47D  C7 06 42F5 FFFF			mov	word ptr ds:[42F5h],0FFFFh	; (9B68:42F5=0)
020A:F483  EB 20				jmp	short loc_2776		; (F4A5)
020A:F485  80 3E 2638 06			cmp	byte ptr ds:[2638h],6	; (9B68:2638=0E0h)
020A:F48A  72 10				jb	loc_2775		; Jump if below
020A:F48C  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F491  75 09				jnz	loc_2775		; Jump if not zero
020A:F493  A1 2EF2				mov	ax,word ptr ds:[2EF2h]	; (9B68:2EF2=2020h)
020A:F496  A3 42F5				mov	word ptr ds:[42F5h],ax	; (9B68:42F5=0)
020A:F499  E8 E5F0				call	sub_208			; (DA8C)
020A:F49C			loc_2775:
020A:F49C  C7 06 42F5 FFFF			mov	word ptr ds:[42F5h],0FFFFh	; (9B68:42F5=0)
020A:F4A2  E9 FF3E				jmp	loc_2766		; (F3E3)
020A:F4A5			loc_2776:
020A:F4A5  E8 DB88				call	sub_194			; (D030)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 508

020A:F4A8  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:F4AD  75 28				jnz	loc_2779		; Jump if not zero
020A:F4AF  A0 2ECA				mov	al,byte ptr ds:[2ECAh]	; (9B68:2ECA=20h)
020A:F4B2  24 07				and	al,7
020A:F4B4  F6 06 2ECA 04			test	byte ptr ds:[2ECAh],4	; (9B68:2ECA=20h)
020A:F4B9  74 0A				jz	loc_2777		; Jump if zero
020A:F4BB  3C 06				cmp	al,6
020A:F4BD  74 10				je	loc_2778		; Jump if equal
020A:F4BF  3C 07				cmp	al,7
020A:F4C1  74 0C				je	loc_2778		; Jump if equal
020A:F4C3  EB 12				jmp	short loc_2779		; (F4D7)
020A:F4C5			loc_2777:
020A:F4C5  3C 00				cmp	al,0
020A:F4C7  74 06				je	loc_2778		; Jump if equal
020A:F4C9  3C 01				cmp	al,1
020A:F4CB  74 02				je	loc_2778		; Jump if equal
020A:F4CD  EB 08				jmp	short loc_2779		; (F4D7)
020A:F4CF			loc_2778:
020A:F4CF  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:F4D2  74 03				je	loc_2779		; Jump if equal
020A:F4D4  E9 00AE				jmp	loc_2791		; (F585)
020A:F4D7			loc_2779:
020A:F4D7  56					push	si
020A:F4D8  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:F4DB  74 36				je	loc_2782		; Jump if equal
020A:F4DD  80 FA 76				cmp	dl,76h			; 'v'
020A:F4E0  72 08				jb	loc_2780		; Jump if below
020A:F4E2  BE 30E0				mov	si,30E0h
020A:F4E5  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F4E5  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F4EA			loc_2780:
020A:F4EA  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:F4EA  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:F4EF  8A C2				mov	al,dl
020A:F4F1  0C 01				or	al,1
020A:F4F3  3C 75				cmp	al,75h			; 'u'
020A:F4F5  75 1C				jne	loc_2782		; Jump if not equal
020A:F4F7  BE 30CD				mov	si,30CDh
020A:F4FA  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F4FF  74 03				jz	loc_2781		; Jump if zero
020A:F501  BE 30D6				mov	si,30D6h
020A:F504			loc_2781:
020A:F504  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F504  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F509  F6 C7 80				test	bh,80h
020A:F50C  74 05				jz	loc_2782		; Jump if zero
020A:F50E  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:F50E  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:F513			loc_2782:
020A:F513  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:F518  74 05				jz	loc_2783		; Jump if zero
020A:F51A  9A 16FA:102C		;*		call	far ptr sub_254		;*(16FA:102C)
020A:F51A  9A 2C 10 FA 16			db	 9Ah, 2Ch, 10h,0FAh, 16h
020A:F51F			loc_2783:
020A:F51F  BE 310D				mov	si,310Dh
020A:F522  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F527  74 03				jz	loc_2784		; Jump if zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 509

020A:F529  BE 3112				mov	si,3112h
020A:F52C			loc_2784:
020A:F52C  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:F52F  74 3E				je	loc_2788		; Jump if equal
020A:F531  BE 3102				mov	si,3102h
020A:F534  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F539  74 03				jz	loc_2785		; Jump if zero
020A:F53B  BE 3107				mov	si,3107h
020A:F53E			loc_2785:
020A:F53E  8A C2				mov	al,dl
020A:F540  0C 01				or	al,1
020A:F542  3C 71				cmp	al,71h			; 'q'
020A:F544  75 29				jne	loc_2788		; Jump if not equal
020A:F546  BE 30E4				mov	si,30E4h
020A:F549  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F54E  74 03				jz	loc_2786		; Jump if zero
020A:F550  BE 30F2				mov	si,30F2h
020A:F553			loc_2786:
020A:F553  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F553  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F558  BE 30EA				mov	si,30EAh
020A:F55B  F6 06 2ECA 02			test	byte ptr ds:[2ECAh],2	; (9B68:2ECA=20h)
020A:F560  74 03				jz	loc_2787		; Jump if zero
020A:F562  BE 30F9				mov	si,30F9h
020A:F565			loc_2787:
020A:F565  F6 C7 80				test	bh,80h
020A:F568  74 05				jz	loc_2788		; Jump if zero
020A:F56A  9A 16FA:0370		;*		call	far ptr sub_235		;*(16FA:0370)
020A:F56A  9A 70 03 FA 16			db	 9Ah, 70h, 03h,0FAh, 16h
020A:F56F			loc_2788:
020A:F56F  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:F572  75 07				jne	loc_2789		; Jump if not equal
020A:F574  F6 06 2ECC 08			test	byte ptr ds:[2ECCh],8	; (9B68:2ECC=0AEh)
020A:F579  74 05				jz	loc_2790		; Jump if zero
020A:F57B			loc_2789:
020A:F57B  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F57B  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F580			loc_2790:
020A:F580  5E					pop	si
020A:F581  B6 00				mov	dh,0
020A:F583  EB 00				jmp	short loc_2791		; (F585)
020A:F585			loc_2791:
020A:F585  C6 06 2A29 00			mov	byte ptr ds:[2A29h],0	; (9B68:2A29=0A9h)
020A:F58A  A0 2A5C				mov	al,byte ptr ds:[2A5Ch]	; (9B68:2A5C=0A8h)
020A:F58D  C3					retn
				sub_213		endp
  
020A:F58E  9A 16FA:0000		;*		call	far ptr sub_221		;*(16FA:0000)
020A:F58E  9A 00 00 FA 16			db	 9Ah, 00h, 00h,0FAh, 16h
020A:F593  57					push	di
020A:F594  BF 23B3				mov	di,23B3h
020A:F597  89 1D				mov	[di],bx
020A:F599  5F					pop	di
020A:F59A  55					push	bp
020A:F59B  BD 23BA				mov	bp,23BAh
020A:F59E  A1 2D82				mov	ax,data_423		; (020A:2D82=5357h)
020A:F5A1  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 510

020A:F5A1  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F5A6  45					inc	bp
020A:F5A7  A1 2D84				mov	ax,data_424		; (020A:2D84=735Ch)
020A:F5AA  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F5AA  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F5AF  5D					pop	bp
020A:F5B0  B0 30				mov	al,30h			; '0'
020A:F5B2  E8 961B				call	sub_135			; (8BD0)
020A:F5B5  EB CE				jmp	short loc_2791		; (F585)
020A:F5B7  90					nop
  
				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;			       SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
  
				sub_214		proc	near
020A:F5B8  80 3E 2A75 78			cmp	byte ptr ds:[2A75h],78h	; (9B68:2A75=0A0h) 'x'
020A:F5BD  75			data_870	db	75h
020A:F5BE  1A 80 383E				sbb	al,byte ptr ds:[383Eh][bx+si]	; (9B68:383E=93h)
020A:F5C2  26					db	26h
020A:F5C3  04 72				add	al,72h			; 'r'
020A:F5C5  13 80 3E3E				adc	ax,word ptr ds:[3E3Eh][bx+si]	; (9B68:3E3E=0)
020A:F5C9  26: 01 74 0C				add	es:[si+0Ch],si
020A:F5CD  3B 1E 2D82				cmp	bx,word ptr ds:[2D82h]	; (9B68:2D82=0AAAEh)
020A:F5D1  75 09				jne	loc_2792		; Jump if not equal
020A:F5D3  3B 06 2D84				cmp	ax,word ptr ds:[2D84h]	; (9B68:2D84=31A0h)
020A:F5D7  72 03				jb	loc_2792		; Jump if below
020A:F5D9  E9 00A4				jmp	loc_2799		; (F680)
020A:F5DC			loc_2792:
020A:F5DC  50					push	ax
020A:F5DD  53					push	bx
020A:F5DE  51					push	cx
020A:F5DF  52					push	dx
020A:F5E0  57					push	di
020A:F5E1  C6 06 4204 01			mov	byte ptr ds:[4204h],1	; (9B68:4204=0)
020A:F5E6  BA 0001				mov	dx,1
020A:F5E9  E8 99EC				call	sub_143			; (8FD8)
020A:F5EC  C6 06 4204 00			mov	byte ptr ds:[4204h],0	; (9B68:4204=0)
020A:F5F1  8B CB				mov	cx,bx
020A:F5F3  8B D0				mov	dx,ax
020A:F5F5  73 3C				jnc	loc_2796		; Jump if carry=0
020A:F5F7  26: 8B 0D				mov	cx,es:[di]
020A:F5FA  26: 8B 55 02				mov	dx,es:[di+2]
020A:F5FE			loc_2793:
020A:F5FE  26: 8A 45 04				mov	al,es:[di+4]
020A:F602  24 5F				and	al,5Fh			; '_'
020A:F604  3C 5F				cmp	al,5Fh			; '_'
020A:F606  75 09				jne	loc_2794		; Jump if not equal
020A:F608  26: 80 7D 09 07			cmp	byte ptr es:[di+9],7
020A:F60D  75 02				jne	loc_2794		; Jump if not equal
020A:F60F  74 6A				jz	loc_2798		; Jump if zero
020A:F611			loc_2794:
020A:F611  BB 377F				mov	bx,377Fh
020A:F614  26: 8A 45 05				mov	al,es:[di+5]
020A:F618  25 000F				and	ax,0Fh
020A:F61B  D7					xlat				; al=[al+[bx]] table
020A:F61C  0A C0				or	al,al			; Zero ?
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 511

020A:F61E  75 04				jnz	loc_2795		; Jump if not zero
020A:F620  26: 8A 45 06				mov	al,es:[di+6]
020A:F624			loc_2795:
020A:F624  03 F8				add	di,ax
020A:F626  26: 39 0D				cmp	es:[di],cx
020A:F629  75 08				jne	loc_2796		; Jump if not equal
020A:F62B  26: 39 55 02				cmp	es:[di+2],dx
020A:F62F  75 02				jne	loc_2796		; Jump if not equal
020A:F631  EB CB				jmp	short loc_2793		; (F5FE)
020A:F633			loc_2796:
020A:F633  8B D9				mov	bx,cx
020A:F635  8B C2				mov	ax,dx
020A:F637  BF 472B				mov	di,472Bh
020A:F63A  89 1D				mov	[di],bx
020A:F63C  89 45 02				mov	[di+2],ax
020A:F63F  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:F643  C6 45 05 02				mov	byte ptr [di+5],2
020A:F647  C6 45 06 00				mov	byte ptr [di+6],0
020A:F64B  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:F650  C6 45 09 07				mov	byte ptr [di+9],7
020A:F654  A1 2EF4				mov	ax,word ptr ds:[2EF4h]	; (9B68:2EF4=2020h)
020A:F657  89 45 0A				mov	[di+0Ah],ax
020A:F65A  A1 2EF2				mov	ax,word ptr ds:[2EF2h]	; (9B68:2EF2=2020h)
020A:F65D  89 45 0C				mov	[di+0Ch],ax
020A:F660  A1 2ED4				mov	ax,word ptr ds:[2ED4h]	; (9B68:2ED4=0AEABh)
020A:F663  89 45 0E				mov	[di+0Eh],ax
020A:F666  A1 2ED8				mov	ax,word ptr ds:[2ED8h]	; (9B68:2ED8=8C20h)
020A:F669  89 45 10				mov	[di+10h],ax
020A:F66C  A1 2EE4				mov	ax,word ptr ds:[2EE4h]	; (9B68:2EE4=0A7ECh)
020A:F66F  89 45 12				mov	[di+12h],ax
020A:F672  A1 2EE8				mov	ax,word ptr ds:[2EE8h]	; (9B68:2EE8=0E2A0h)
020A:F675  89 45 14				mov	[di+14h],ax
020A:F678  E8 B5E5				call	sub_174			; (AC60)
020A:F67B			loc_2798:
020A:F67B  5F					pop	di
020A:F67C  5A					pop	dx
020A:F67D  59					pop	cx
020A:F67E  5B					pop	bx
020A:F67F  58					pop	ax
020A:F680			loc_2799:
020A:F680  C3					retn
				sub_214		endp
  
020A:F681  87 DB				xchg	bx,bx
020A:F683  90					nop
020A:F684  F7 06 42C6 0004			test	word ptr ds:[42C6h],4	; (D233:42C6=0EB04h)
020A:F68A  74 1D				jz	loc_2802		; Jump if zero
020A:F68C  B9 3429				mov	cx,3429h
020A:F68F  BF 2F0C				mov	di,2F0Ch
020A:F692  2B CF				sub	cx,di
020A:F694  4F					dec	di
  
020A:F695			locloop_2800:
020A:F695  47					inc	di
020A:F696  BB 47DD				mov	bx,47DDh
020A:F699  8A 05				mov	al,[di]
020A:F69B  3C 20				cmp	al,20h			; ' '
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 512

020A:F69D  76 08				jbe	loc_2801		; Jump if below or =
020A:F69F  D7					xlat				; al=[al+[bx]] table
020A:F6A0  0A C0				or	al,al			; Zero ?
020A:F6A2  75 03				jnz	loc_2801		; Jump if not zero
020A:F6A4  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:F6A7			loc_2801:
020A:F6A7  E2 EC				loop	locloop_2800		; Loop if cx > 0
  
020A:F6A9			loc_2802:
020A:F6A9  FC					cld				; Clear direction
020A:F6AA  B8 070F				mov	ax,70Fh
020A:F6AD  BF 8E62				mov	di,8E62h
020A:F6B0  8E C0				mov	es,ax
020A:F6B2  B9 0002				mov	cx,2
020A:F6B5  BE A66B				mov	si,0A66Bh
020A:F6B8  F3/ 2E: A4				rep	movs byte ptr es:[di],cs:[si]	; Rep when cx >0 Mov [si] to es:[di]
020A:F6BB  B6 00				mov	dh,0
020A:F6BD  90					nop
020A:F6BE  BE 42F0				mov	si,42F0h
020A:F6C1  C3					retn
020A:F6C2  000E[00]				db	14 dup (0)
020A:F6D0  1E					push	ds
020A:F6D1  E8 A525				call	sub_157			; (9BF9)
020A:F6D4  B0 33				mov	al,33h			; '3'
020A:F6D6  E8 87E7				call	sub_112			; (7EC0)
020A:F6D9  E8 A529				call	sub_159			; (9C05)
020A:F6DC  BF 0000				mov	di,0
020A:F6DF			loc_2803:
020A:F6DF  BD 5BBA				mov	bp,5BBAh
020A:F6E2  B9 5BFA				mov	cx,5BFAh
020A:F6E5  2B CD				sub	cx,bp
020A:F6E7  D1 E9				shr	cx,1			; Shift w/zeros fill
  
020A:F6E9			locloop_2804:
020A:F6E9  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:F6EF  45					inc	bp
020A:F6F0  45					inc	bp
020A:F6F1  E2 F6				loop	locloop_2804		; Loop if cx > 0
  
020A:F6F3  BD 5BBA				mov	bp,5BBAh
020A:F6F6  26: 8B 1D				mov	bx,es:[di]
020A:F6F9  26: 8B 45 02				mov	ax,es:[di+2]
020A:F6FD  E8 0C58				call	sub_11			; (0358)
020A:F700  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:F705  45					inc	bp
020A:F706  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F706  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F70B  BD 5BC7				mov	bp,5BC7h
020A:F70E  26: 8B 45 04				mov	ax,es:[di+4]
020A:F712  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F712  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F717  26: 8B 4D 0A				mov	cx,es:[di+0Ah]
020A:F71B  80 F9 02				cmp	cl,2
020A:F71E  74 1F				je	loc_2805		; Jump if equal
020A:F720  80 F9 03				cmp	cl,3
020A:F723  74 1A				je	loc_2805		; Jump if equal
020A:F725  BD 5BCF				mov	bp,5BCFh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 513

020A:F728  26: 8B 5D 06				mov	bx,es:[di+6]
020A:F72C  33 C0				xor	ax,ax			; Zero register
020A:F72E  E8 0C7B				call	sub_12			; (03AC)
020A:F731  BD 5BD6				mov	bp,5BD6h
020A:F734  26: 8B 5D 08				mov	bx,es:[di+8]
020A:F738  33 C0				xor	ax,ax			; Zero register
020A:F73A  E8 0C6F				call	sub_12			; (03AC)
020A:F73D  EB 14				jmp	short loc_2806		; (F753)
020A:F73F			loc_2805:
020A:F73F  33 C0				xor	ax,ax			; Zero register
020A:F741  BD 5BCF				mov	bp,5BCFh
020A:F744  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F744  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F749  33 C0				xor	ax,ax			; Zero register
020A:F74B  BD 5BD6				mov	bp,5BD6h
020A:F74E  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F74E  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F753			loc_2806:
020A:F753  26: 8B 4D 0A				mov	cx,es:[di+0Ah]
020A:F757  8A C1				mov	al,cl
020A:F759  B3 06				mov	bl,6
020A:F75B  F6 E3				mul	bl			; ax = reg * al
020A:F75D  BE 33C9				mov	si,33C9h
020A:F760  03 F0				add	si,ax
020A:F762  BD 5BDD				mov	bp,5BDDh
020A:F765  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F765  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F76A  BD 5BE3				mov	bp,5BE3h
020A:F76D  BE 3417				mov	si,3417h
020A:F770  26: F6 45 0E 01			test	byte ptr es:[di+0Eh],1
020A:F775  74 03				jz	loc_2807		; Jump if zero
020A:F777  BE 341D				mov	si,341Dh
020A:F77A			loc_2807:
020A:F77A  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F77A  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F77F  BD 5BEB				mov	bp,5BEBh
020A:F782  26: 8B 05				mov	ax,es:[di]
020A:F785  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:F78B  83 C5 02				add	bp,2
020A:F78E  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F78E  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F793  83 3E 2EC4 02			cmp	word ptr ds:[2EC4h],2	; (9B68:2EC4=0ADA8h)
020A:F798  73 09				jae	loc_2808		; Jump if above or =
020A:F79A  F6 06 2EB1 04			test	byte ptr ds:[2EB1h],4	; (9B68:2EB1=0A0h)
020A:F79F  75 02				jnz	loc_2808		; Jump if not zero
020A:F7A1  EB 50				jmp	short loc_2809		; (F7F3)
020A:F7A3			loc_2808:
020A:F7A3  2E: 80 3E 4860 00			cmp	byte ptr cs:[4860h],0	; (020A:4860=93h)
020A:F7A9  74 48				je	loc_2809		; Jump if equal
020A:F7AB  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:F7B0  45					inc	bp
020A:F7B1  3E: C7 46 00 3A44			mov	word ptr ds:[bp],3A44h
020A:F7B7  83 C5 02				add	bp,2
020A:F7BA  26: 8B 45 11				mov	ax,es:[di+11h]
020A:F7BE  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F7BE  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F7C3  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 514

020A:F7C8  45					inc	bp
020A:F7C9  3E: C7 46 00 3A4C			mov	word ptr ds:[bp],3A4Ch
020A:F7CF  83 C5 02				add	bp,2
020A:F7D2  26: 8B 45 13				mov	ax,es:[di+13h]
020A:F7D6  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F7D6  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F7DB  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:F7E0  45					inc	bp
020A:F7E1  3E: C7 46 00 3A53			mov	word ptr ds:[bp],3A53h
020A:F7E7  83 C5 02				add	bp,2
020A:F7EA  26: 8B 45 0F				mov	ax,es:[di+0Fh]
020A:F7EE  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:F7EE  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:F7F3			loc_2809:
020A:F7F3  B0 34				mov	al,34h			; '4'
020A:F7F5  E8 86C8				call	sub_112			; (7EC0)
020A:F7F8  83 C7 15				add	di,15h
020A:F7FB  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:F7FF  74 03				je	loc_2810		; Jump if equal
020A:F801  E9 FEDB				jmp	loc_2803		; (F6DF)
020A:F804			loc_2810:
020A:F804  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:F809  74 03				je	loc_2811		; Jump if equal
020A:F80B  E9 FED1				jmp	loc_2803		; (F6DF)
020A:F80E			loc_2811:
020A:F80E  1F					pop	ds
020A:F80F  C3					retn
020A:F810  1E					push	ds
020A:F811  E8 A3E5				call	sub_157			; (9BF9)
020A:F814  B0 4D				mov	al,4Dh			; 'M'
020A:F816  E8 86A7				call	sub_112			; (7EC0)
020A:F819  E8 A3E9				call	sub_159			; (9C05)
020A:F81C  BF 0000				mov	di,0
020A:F81F  83 C7 15				add	di,15h
020A:F822			loc_2812:
020A:F822  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:F826  74 02				je	loc_2813		; Jump if equal
020A:F828  EB 07				jmp	short loc_2814		; (F831)
020A:F82A			loc_2813:
020A:F82A  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:F82F  74 14				je	loc_2815		; Jump if equal
020A:F831			loc_2814:
020A:F831  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:F835  A3 6BA3				mov	word ptr ds:[6BA3h],ax	; (9B68:6BA3=0)
020A:F838  A3 6BC8				mov	word ptr ds:[6BC8h],ax	; (9B68:6BC8=0)
020A:F83B  B0 4E				mov	al,4Eh			; 'N'
020A:F83D  E8 8680				call	sub_112			; (7EC0)
020A:F840  83 C7 15				add	di,15h
020A:F843  EB DD				jmp	short loc_2812		; (F822)
020A:F845			loc_2815:
020A:F845  1F					pop	ds
020A:F846  C3					retn
020A:F847  90					nop
020A:F848  E8 A3C3				call	sub_162			; (9C0E)
020A:F84B  A0 2EBA				mov	al,byte ptr ds:[2EBAh]	; (9B68:2EBA=0EEh)
020A:F84E  A2 2EBB				mov	byte ptr ds:[2EBBh],al	; (9B68:2EBB=0E7h)
020A:F851  C6 06 2EBA 02			mov	byte ptr ds:[2EBAh],2	; (9B68:2EBA=0EEh)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 515

020A:F856  B0 3F				mov	al,3Fh			; '?'
020A:F858  E8 8665				call	sub_112			; (7EC0)
020A:F85B  E8 9F16				call	sub_148			; (9774)
020A:F85E  BD 27EA				mov	bp,27EAh
020A:F861  BE 34B8				mov	si,34B8h
020A:F864  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F864  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F869  8B 16 42CC				mov	dx,word ptr ds:[42CCh]	; (9B68:42CC=0)
020A:F86D  B9 0010				mov	cx,10h
020A:F870  B0 41				mov	al,41h			; 'A'
020A:F872  B7 20				mov	bh,20h			; ' '
  
020A:F874			locloop_2816:
020A:F874  8A D8				mov	bl,al
020A:F876  D1 D2				rcl	dx,1			; Rotate thru carry
020A:F878  72 03				jc	loc_2817		; Jump if carry Set
020A:F87A  80 C3 20				add	bl,20h			; ' '
020A:F87D			loc_2817:
020A:F87D  3E: 89 5E 00				mov	ds:[bp],bx
020A:F881  45					inc	bp
020A:F882  45					inc	bp
020A:F883  FE C0				inc	al
020A:F885  E2 ED				loop	locloop_2816		; Loop if cx > 0
  
020A:F887  8A 16 430B				mov	dl,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:F88B  D0 CA				ror	dl,1			; Rotate
020A:F88D  D0 CA				ror	dl,1			; Rotate
020A:F88F  B1 04				mov	cl,4
020A:F891  B0 51				mov	al,51h			; 'Q'
020A:F893  B7 20				mov	bh,20h			; ' '
  
020A:F895			locloop_2818:
020A:F895  8A D8				mov	bl,al
020A:F897  F6 C2 01				test	dl,1
020A:F89A  75 03				jnz	loc_2819		; Jump if not zero
020A:F89C  80 C3 20				add	bl,20h			; ' '
020A:F89F			loc_2819:
020A:F89F  3E: 89 5E 00				mov	ds:[bp],bx
020A:F8A3  45					inc	bp
020A:F8A4  45					inc	bp
020A:F8A5  FE C0				inc	al
020A:F8A7  D0 C2				rol	dl,1			; Rotate
020A:F8A9  E2 EA				loop	locloop_2818		; Loop if cx > 0
  
020A:F8AB  8B 16 42CE				mov	dx,word ptr ds:[42CEh]	; (9B68:42CE=0)
020A:F8AF  B9 0006				mov	cx,6
020A:F8B2  B0 55				mov	al,55h			; 'U'
020A:F8B4  B7 20				mov	bh,20h			; ' '
  
020A:F8B6			locloop_2820:
020A:F8B6  8A D8				mov	bl,al
020A:F8B8  D0 D2				rcl	dl,1			; Rotate thru carry
020A:F8BA  72 03				jc	loc_2821		; Jump if carry Set
020A:F8BC  80 C3 20				add	bl,20h			; ' '
020A:F8BF			loc_2821:
020A:F8BF  3E: 89 5E 00				mov	ds:[bp],bx
020A:F8C3  45					inc	bp
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 516

020A:F8C4  45					inc	bp
020A:F8C5  FE C0				inc	al
020A:F8C7  E2 ED				loop	locloop_2820		; Loop if cx > 0
  
020A:F8C9  BA 27CA				mov	dx,27CAh
020A:F8CC  E8 8689				call	sub_113			; (7F58)
020A:F8CF  E8 9EA2				call	sub_148			; (9774)
020A:F8D2  BD 27EA				mov	bp,27EAh
020A:F8D5  BE 34CC				mov	si,34CCh
020A:F8D8  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F8D8  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F8DD  A0 2A77				mov	al,byte ptr ds:[2A77h]	; (9B68:2A77=0ABh)
020A:F8E0  BE 361E				mov	si,361Eh
020A:F8E3  A8 01				test	al,1
020A:F8E5  75 34				jnz	loc_2823		; Jump if not zero
020A:F8E7  BE 3623				mov	si,3623h
020A:F8EA  A8 02				test	al,2
020A:F8EC  75 2D				jnz	loc_2823		; Jump if not zero
020A:F8EE  BE 362B				mov	si,362Bh
020A:F8F1  A8 04				test	al,4
020A:F8F3  75 26				jnz	loc_2823		; Jump if not zero
020A:F8F5  BE 3631				mov	si,3631h
020A:F8F8  A8 10				test	al,10h
020A:F8FA  75 15				jnz	loc_2822		; Jump if not zero
020A:F8FC  BE 3635				mov	si,3635h
020A:F8FF  A8 20				test	al,20h			; ' '
020A:F901  75 0E				jnz	loc_2822		; Jump if not zero
020A:F903  BE 3639				mov	si,3639h
020A:F906  A8 40				test	al,40h			; '@'
020A:F908  75 07				jnz	loc_2822		; Jump if not zero
020A:F90A  BE 363D				mov	si,363Dh
020A:F90D  A8 80				test	al,80h
020A:F90F  75 00				jnz	loc_2822		; Jump if not zero
020A:F911			loc_2822:
020A:F911  A8 08				test	al,8
020A:F913  74 06				jz	loc_2823		; Jump if zero
020A:F915  3E: C6 46 00 50			mov	byte ptr ds:[bp],50h	; 'P'
020A:F91A  45					inc	bp
020A:F91B			loc_2823:
020A:F91B  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F91B  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F920  BA 27CA				mov	dx,27CAh
020A:F923  E8 8632				call	sub_113			; (7F58)
020A:F926  F6 06 2A79 0F			test	byte ptr ds:[2A79h],0Fh	; (9B68:2A79=20h)
020A:F92B  74 14				jz	loc_2824		; Jump if zero
020A:F92D  E8 9E44				call	sub_148			; (9774)
020A:F930  BD 27EA				mov	bp,27EAh
020A:F933  BE 3641				mov	si,3641h
020A:F936  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F936  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F93B  BA 27CA				mov	dx,27CAh
020A:F93E  E8 8617				call	sub_113			; (7F58)
020A:F941			loc_2824:
020A:F941  E8 9E30				call	sub_148			; (9774)
020A:F944  BD 27EA				mov	bp,27EAh
020A:F947  BE 34E0				mov	si,34E0h
020A:F94A  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 517

020A:F94A  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F94F  A1 2C39				mov	ax,word ptr ds:[2C39h]	; (9B68:2C39=0E220h)
020A:F952  3E: 89 46 00				mov	ds:[bp],ax
020A:F956  83 C5 02				add	bp,2
020A:F959  A0 2C3B				mov	al,byte ptr ds:[2C3Bh]	; (9B68:2C3B=0AEh)
020A:F95C  3E: 88 46 00				mov	ds:[bp],al
020A:F960  BA 27CA				mov	dx,27CAh
020A:F963  E8 85F2				call	sub_113			; (7F58)
020A:F966  80 3E 2EB8 00			cmp	byte ptr ds:[2EB8h],0	; (9B68:2EB8=0AAh)
020A:F96B  75 14				jne	loc_2825		; Jump if not equal
020A:F96D  E8 9E04				call	sub_148			; (9774)
020A:F970  BD 27EA				mov	bp,27EAh
020A:F973  BE 35E5				mov	si,35E5h
020A:F976  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F976  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F97B  BA 27CA				mov	dx,27CAh
020A:F97E  E8 85D7				call	sub_113			; (7F58)
020A:F981			loc_2825:
020A:F981  80 3E 2A1F 03			cmp	byte ptr ds:[2A1Fh],3	; (9B68:2A1F=0AAh)
020A:F986  77 3B				ja	loc_2827		; Jump if above
020A:F988  80 3E 2A1F 00			cmp	byte ptr ds:[2A1Fh],0	; (9B68:2A1F=0AAh)
020A:F98D  74 34				je	loc_2827		; Jump if equal
020A:F98F  E8 9DE2				call	sub_148			; (9774)
020A:F992  BD 27EA				mov	bp,27EAh
020A:F995  BE 3581				mov	si,3581h
020A:F998  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F998  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F99D  A0 2A1F				mov	al,byte ptr ds:[2A1Fh]	; (9B68:2A1F=0AAh)
020A:F9A0  BE 367B				mov	si,367Bh
020A:F9A3  3C 01				cmp	al,1
020A:F9A5  74 11				je	loc_2826		; Jump if equal
020A:F9A7  BE 3684				mov	si,3684h
020A:F9AA  3C 02				cmp	al,2
020A:F9AC  74 0A				je	loc_2826		; Jump if equal
020A:F9AE  BE 3680				mov	si,3680h
020A:F9B1  3C 03				cmp	al,3
020A:F9B3  74 03				je	loc_2826		; Jump if equal
020A:F9B5  BE 3735				mov	si,3735h
020A:F9B8			loc_2826:
020A:F9B8  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F9B8  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F9BD  BA 27CA				mov	dx,27CAh
020A:F9C0  E8 8595				call	sub_113			; (7F58)
020A:F9C3			loc_2827:
020A:F9C3  E8 9DAE				call	sub_148			; (9774)
020A:F9C6  BD 27EA				mov	bp,27EAh
020A:F9C9  BE 3595				mov	si,3595h
020A:F9CC  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F9CC  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F9D1  A0 14AD				mov	al,byte ptr ds:[14ADh]	; (9B68:14AD=0E3h)
020A:F9D4  BE 3689				mov	si,3689h
020A:F9D7  3C 00				cmp	al,0
020A:F9D9  74 11				je	loc_2828		; Jump if equal
020A:F9DB  BE 3691				mov	si,3691h
020A:F9DE  3C 01				cmp	al,1
020A:F9E0  74 0A				je	loc_2828		; Jump if equal
020A:F9E2  BE 369B				mov	si,369Bh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 518

020A:F9E5  3C 02				cmp	al,2
020A:F9E7  74 03				je	loc_2828		; Jump if equal
020A:F9E9  BE 36AC				mov	si,36ACh
020A:F9EC			loc_2828:
020A:F9EC  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:F9EC  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:F9F1  BA 27CA				mov	dx,27CAh
020A:F9F4  E8 8561				call	sub_113			; (7F58)
020A:F9F7  E8 9D7A				call	sub_148			; (9774)
020A:F9FA  BD 27EA				mov	bp,27EAh
020A:F9FD  BE 35A9				mov	si,35A9h
020A:FA00  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FA00  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FA05  A0 152A				mov	al,byte ptr ds:[152Ah]	; (9B68:152A=20h)
020A:FA08  BE 36C4				mov	si,36C4h
020A:FA0B  3C 00				cmp	al,0
020A:FA0D  74 34				je	loc_2829		; Jump if equal
020A:FA0F  BE 36C9				mov	si,36C9h
020A:FA12  3C 01				cmp	al,1
020A:FA14  74 2D				je	loc_2829		; Jump if equal
020A:FA16  BE 36D9				mov	si,36D9h
020A:FA19  3C 02				cmp	al,2
020A:FA1B  74 26				je	loc_2829		; Jump if equal
020A:FA1D  BE 3727				mov	si,3727h
020A:FA20  3C 03				cmp	al,3
020A:FA22  74 1F				je	loc_2829		; Jump if equal
020A:FA24  BE 36EE				mov	si,36EEh
020A:FA27  3C 04				cmp	al,4
020A:FA29  74 18				je	loc_2829		; Jump if equal
020A:FA2B  BE 3710				mov	si,3710h
020A:FA2E  3C 05				cmp	al,5
020A:FA30  74 11				je	loc_2829		; Jump if equal
020A:FA32  BE 36FE				mov	si,36FEh
020A:FA35  3C 06				cmp	al,6
020A:FA37  74 0A				je	loc_2829		; Jump if equal
020A:FA39  BE 36FA				mov	si,36FAh
020A:FA3C  3C 07				cmp	al,7
020A:FA3E  74 03				je	loc_2829		; Jump if equal
020A:FA40  BE 3735				mov	si,3735h
020A:FA43			loc_2829:
020A:FA43  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FA43  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FA48  BA 27CA				mov	dx,27CAh
020A:FA4B  E8 850A				call	sub_113			; (7F58)
020A:FA4E  80 3E 2EBC 01			cmp	byte ptr ds:[2EBCh],1	; (9B68:2EBC=0A0h)
020A:FA53  74 14				je	loc_2830		; Jump if equal
020A:FA55  E8 9D1C				call	sub_148			; (9774)
020A:FA58  BD 27EA				mov	bp,27EAh
020A:FA5B  BE 35F6				mov	si,35F6h
020A:FA5E  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FA5E  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FA63  BA 27CA				mov	dx,27CAh
020A:FA66  E8 84EF				call	sub_113			; (7F58)
020A:FA69			loc_2830:
020A:FA69  E8 9D08				call	sub_148			; (9774)
020A:FA6C  BD 27EA				mov	bp,27EAh
020A:FA6F  BE 360A				mov	si,360Ah
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 519

020A:FA72  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FA72  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FA77  BE 13A1				mov	si,13A1h
020A:FA7A  A0 139E				mov	al,byte ptr ds:[139Eh]	; (9B68:139E=20h)
020A:FA7D  32 C9				xor	cl,cl			; Zero register
020A:FA7F			loc_2831:
020A:FA7F  3A 04				cmp	al,[si]
020A:FA81  74 0F				je	loc_2833		; Jump if equal
020A:FA83  FE C1				inc	cl
020A:FA85  80 F9 08				cmp	cl,8
020A:FA88  73 05				jae	loc_2832		; Jump if above or =
020A:FA8A  83 C6 0F				add	si,0Fh
020A:FA8D  EB F0				jmp	short loc_2831		; (FA7F)
020A:FA8F			loc_2832:
020A:FA8F  BE 13A1				mov	si,13A1h
020A:FA92			loc_2833:
020A:FA92  8D 4C 0D				lea	cx,[si+0Dh]		; Load effective addr
020A:FA95  8D 74 01				lea	si,[si+1]		; Load effective addr
020A:FA98  2B CE				sub	cx,si
020A:FA9A  FC					cld				; Clear direction
  
020A:FA9B			locloop_2834:
020A:FA9B  AC					lodsb				; String [si] to al
020A:FA9C  3E: 88 46 00				mov	ds:[bp],al
020A:FAA0  45					inc	bp
020A:FAA1  E2 F8				loop	locloop_2834		; Loop if cx > 0
  
020A:FAA3  BA 27CA				mov	dx,27CAh
020A:FAA6  E8 84AF				call	sub_113			; (7F58)
020A:FAA9  80 3E 2EBF 3B			cmp	byte ptr ds:[2EBFh],3Bh	; (9B68:2EBF=0A8h) ';'
020A:FAAE  75 07				jne	loc_2835		; Jump if not equal
020A:FAB0  80 3E 2EBB 02			cmp	byte ptr ds:[2EBBh],2	; (9B68:2EBB=0E7h)
020A:FAB5  74 42				je	loc_2837		; Jump if equal
020A:FAB7			loc_2835:
020A:FAB7  E8 9CBA				call	sub_148			; (9774)
020A:FABA  BD 27EA				mov	bp,27EAh
020A:FABD  BE 35BD				mov	si,35BDh
020A:FAC0  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FAC0  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FAC5  32 E4				xor	ah,ah			; Zero register
020A:FAC7  8A DC				mov	bl,ah
020A:FAC9  A0 2EBF				mov	al,byte ptr ds:[2EBFh]	; (9B68:2EBF=0A8h)
020A:FACC  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:FACC  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:FAD1  80 3E 2EBB 02			cmp	byte ptr ds:[2EBBh],2	; (9B68:2EBB=0E7h)
020A:FAD6  74 1B				je	loc_2836		; Jump if equal
020A:FAD8  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:FADD  45					inc	bp
020A:FADE  3E: C7 46 00 6320			mov	word ptr ds:[bp],6320h
020A:FAE4  83 C5 02				add	bp,2
020A:FAE7  32 E4				xor	ah,ah			; Zero register
020A:FAE9  8A DC				mov	bl,ah
020A:FAEB  A0 2EBB				mov	al,byte ptr ds:[2EBBh]	; (9B68:2EBB=0E7h)
020A:FAEE  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:FAEE  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:FAF3			loc_2836:
020A:FAF3  BA 27CA				mov	dx,27CAh
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 520

020A:FAF6  E8 845F				call	sub_113			; (7F58)
020A:FAF9			loc_2837:
020A:FAF9  83 3E 2A22 00			cmp	word ptr ds:[2A22h],0	; (9B68:2A22=0AEADh)
020A:FAFE  74 1C				je	loc_2838		; Jump if equal
020A:FB00  71E8			data_872	dw	71E8h			; Data table (indexed access)
020A:FB02  9C					pushf				; Push flags
020A:FB03  BD 27EA				mov	bp,27EAh
020A:FB06  BE 35D1				mov	si,35D1h
020A:FB09  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FB09  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FB0E  A1 2A22				mov	ax,word ptr ds:[2A22h]	; (9B68:2A22=0AEADh)
020A:FB11  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:FB11  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:FB16  BA 27CA				mov	dx,27CAh
020A:FB19  E8 843C				call	sub_113			; (7F58)
020A:FB1C			loc_2838:
020A:FB1C  BF 2BB2				mov	di,2BB2h
020A:FB1F  B0 2E				mov	al,2Eh			; '.'
020A:FB21  B9 0040				mov	cx,40h
020A:FB24  FC					cld				; Clear direction
020A:FB25  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:FB27  E3 2E				jcxz	loc_2841		; Jump if cx=0
020A:FB29  8B 05				mov	ax,[di]
020A:FB2B  25 DFDF				and	ax,0DFDFh
020A:FB2E  3D 4544				cmp	ax,4544h
020A:FB31  74 24				je	loc_2841		; Jump if equal
020A:FB33  E8 9C3E				call	sub_148			; (9774)
020A:FB36  BD 27EA				mov	bp,27EAh
020A:FB39  BE 3559				mov	si,3559h
020A:FB3C  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FB3C  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FB41  BE 2BB2				mov	si,2BB2h
020A:FB44  8B FD				mov	di,bp
020A:FB46  B9 0040				mov	cx,40h
  
020A:FB49			locloop_2839:
020A:FB49  AC					lodsb				; String [si] to al
020A:FB4A  3C 00				cmp	al,0
020A:FB4C  74 03				je	loc_2840		; Jump if equal
020A:FB4E  AA					stosb				; Store al to es:[di]
020A:FB4F  E2 F8				loop	locloop_2839		; Loop if cx > 0
  
020A:FB51			loc_2840:
020A:FB51  BA 27CA				mov	dx,27CAh
020A:FB54  E8 8401				call	sub_113			; (7F58)
020A:FB57			loc_2841:
020A:FB57  E8 9C1A				call	sub_148			; (9774)
020A:FB5A  BD 27EA				mov	bp,27EAh
020A:FB5D  BE 351D				mov	si,351Dh
020A:FB60  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FB60  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FB65  A0 2C40				mov	al,byte ptr ds:[2C40h]	; (9B68:2C40=0E3h)
020A:FB68  BE 3649				mov	si,3649h
020A:FB6B  3C 01				cmp	al,1
020A:FB6D  74 23				je	loc_2842		; Jump if equal
020A:FB6F  BE 3652				mov	si,3652h
020A:FB72  3C 02				cmp	al,2
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 521

020A:FB74  74 1C				je	loc_2842		; Jump if equal
020A:FB76  BE 3656				mov	si,3656h
020A:FB79  3C 03				cmp	al,3
020A:FB7B  74 15				je	loc_2842		; Jump if equal
020A:FB7D  BE 365A				mov	si,365Ah
020A:FB80  3C 04				cmp	al,4
020A:FB82  74 0E				je	loc_2842		; Jump if equal
020A:FB84  BE 3665				mov	si,3665h
020A:FB87  3C 05				cmp	al,5
020A:FB89  74 07				je	loc_2842		; Jump if equal
020A:FB8B  BE 3673				mov	si,3673h
020A:FB8E  3C 06				cmp	al,6
020A:FB90  74 00				je	loc_2842		; Jump if equal
020A:FB92			loc_2842:
020A:FB92  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FB92  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FB97  BA 27CA				mov	dx,27CAh
020A:FB9A  E8 83BB				call	sub_113			; (7F58)
020A:FB9D  E8 9BD4				call	sub_148			; (9774)
020A:FBA0  BD 27EA				mov	bp,27EAh
020A:FBA3  BF 0358				mov	di,358h
020A:FBA6  B0 20				mov	al,20h			; ' '
020A:FBA8  B9 0020				mov	cx,20h
020A:FBAB  FC					cld				; Clear direction
020A:FBAC  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:FBAE  E3 1B				jcxz	loc_2843		; Jump if cx=0
020A:FBB0  BE 3531				mov	si,3531h
020A:FBB3  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FBB3  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FBB8  B9 0010				mov	cx,10h
020A:FBBB  BE 0358				mov	si,358h
020A:FBBE  8B FD				mov	di,bp
020A:FBC0  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:FBC2  83 C5 20				add	bp,20h
020A:FBC5  BA 27CA				mov	dx,27CAh
020A:FBC8  E8 838D				call	sub_113			; (7F58)
020A:FBCB			loc_2843:
020A:FBCB  E8 9BA6				call	sub_148			; (9774)
020A:FBCE  BD 27EA				mov	bp,27EAh
020A:FBD1  BE 3545				mov	si,3545h
020A:FBD4  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FBD4  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FBD9  A0 2A94				mov	al,byte ptr ds:[2A94h]	; (9B68:2A94=20h)
020A:FBDC  04 41				add	al,41h			; 'A'
020A:FBDE  3E: 88 46 00				mov	ds:[bp],al
020A:FBE2  BA 27CA				mov	dx,27CAh
020A:FBE5  E8 8370				call	sub_113			; (7F58)
020A:FBE8  E8 9B89				call	sub_148			; (9774)
020A:FBEB  BD 27EA				mov	bp,27EAh
020A:FBEE  BE 356D				mov	si,356Dh
020A:FBF1  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FBF1  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FBF6  BE 2BF5				mov	si,2BF5h
020A:FBF9  8B FD				mov	di,bp
020A:FBFB  B9 0029				mov	cx,29h
020A:FBFE  FC					cld				; Clear direction
  
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 522

020A:FBFF			locloop_2844:
020A:FBFF  AC					lodsb				; String [si] to al
020A:FC00  3C 00				cmp	al,0
020A:FC02  74 03				je	loc_2845		; Jump if equal
020A:FC04  AA					stosb				; Store al to es:[di]
020A:FC05  E2 F8				loop	locloop_2844		; Loop if cx > 0
  
020A:FC07			loc_2845:
020A:FC07  B0 2E				mov	al,2Eh			; '.'
020A:FC09  8B FD				mov	di,bp
020A:FC0B  B9 0029				mov	cx,29h
020A:FC0E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:FC10  BE 2C39				mov	si,2C39h
020A:FC13  B9 0003				mov	cx,3
020A:FC16  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:FC18  BA 27CA				mov	dx,27CAh
020A:FC1B  E8 833A				call	sub_113			; (7F58)
020A:FC1E  E8 9B53				call	sub_148			; (9774)
020A:FC21  BD 27EA				mov	bp,27EAh
020A:FC24  BE 34F4				mov	si,34F4h
020A:FC27  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FC27  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FC2C  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:FC2F  D0 E8				shr	al,1			; Shift w/zeros fill
020A:FC31  32 DB				xor	bl,bl			; Zero register
020A:FC33  8A E3				mov	ah,bl
020A:FC35  9A 16FA:00D4		;*		call	far ptr sub_227		;*(16FA:00D4)
020A:FC35  9A D4 00 FA 16			db	 9Ah,0D4h, 00h,0FAh, 16h
020A:FC3A  BA 27CA				mov	dx,27CAh
020A:FC3D  E8 8318				call	sub_113			; (7F58)
020A:FC40  A0 430B				mov	al,byte ptr ds:[430Bh]	; (9B68:430B=0)
020A:FC43  24 07				and	al,7
020A:FC45  3C 00				cmp	al,0
020A:FC47  74 06				je	loc_2846		; Jump if equal
020A:FC49  3C 07				cmp	al,7
020A:FC4B  74 02				je	loc_2846		; Jump if equal
020A:FC4D  EB 31				jmp	short loc_2849		; (FC80)
020A:FC4F			loc_2846:
020A:FC4F  E8 9B22				call	sub_148			; (9774)
020A:FC52  BD 27EA				mov	bp,27EAh
020A:FC55  BE 3508				mov	si,3508h
020A:FC58  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FC58  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FC5D  A0 263D				mov	al,byte ptr ds:[263Dh]	; (9B68:263D=0AEh)
020A:FC60  D0 E8				shr	al,1			; Shift w/zeros fill
020A:FC62  3C 05				cmp	al,5
020A:FC64  72 0E				jb	loc_2847		; Jump if below
020A:FC66  F6 06 430B 07			test	byte ptr ds:[430Bh],7	; (9B68:430B=0)
020A:FC6B  74 07				jz	loc_2847		; Jump if zero
020A:FC6D  3E: C6 46 00 4E			mov	byte ptr ds:[bp],4Eh	; 'N'
020A:FC72  EB 06				jmp	short loc_2848		; (FC7A)
020A:FC74			loc_2847:
020A:FC74  3E: C7 46 00 4646			mov	word ptr ds:[bp],4646h
020A:FC7A			loc_2848:
020A:FC7A  BA 27CA				mov	dx,27CAh
020A:FC7D  E8 82D8				call	sub_113			; (7F58)
020A:FC80			loc_2849:
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 523

020A:FC80  E8 9AF1				call	sub_148			; (9774)
020A:FC83  BD 27EA				mov	bp,27EAh
020A:FC86  BA 27CA				mov	dx,27CAh
020A:FC89  E8 82CC				call	sub_113			; (7F58)
020A:FC8C  BD 27EA				mov	bp,27EAh
020A:FC8F  BA 27CA				mov	dx,27CAh
020A:FC92  E8 82C3				call	sub_113			; (7F58)
020A:FC95  A0 2EBB				mov	al,byte ptr ds:[2EBBh]	; (9B68:2EBB=0E7h)
020A:FC98  A2 2EBA				mov	byte ptr ds:[2EBAh],al	; (9B68:2EBA=0EEh)
020A:FC9B  C3					retn
020A:FC9C  50					push	ax
020A:FC9D  53					push	bx
020A:FC9E  51					push	cx
020A:FC9F  52					push	dx
020A:FCA0  56					push	si
020A:FCA1  57					push	di
020A:FCA2  55					push	bp
020A:FCA3  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:FCA8  1E					push	ds
020A:FCA9  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:FCAE  06					push	es
020A:FCAF  FC					cld				; Clear direction
020A:FCB0  BF 0008				mov	di,8
020A:FCB3			loc_2850:
020A:FCB3  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:FCB7  75 0A				jne	loc_2851		; Jump if not equal
020A:FCB9  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:FCBE  75 03				jne	loc_2851		; Jump if not equal
020A:FCC0  E9 0145				jmp	loc_2868		; (FE08)
020A:FCC3			loc_2851:
020A:FCC3  26: 8A 45 04				mov	al,es:[di+4]
020A:FCC7  A8 60				test	al,60h			; '`'
020A:FCC9  75 03				jnz	loc_2852		; Jump if not zero
020A:FCCB  E9 0122				jmp	loc_2866		; (FDF0)
020A:FCCE			loc_2852:
020A:FCCE  E8 9AA3				call	sub_148			; (9774)
020A:FCD1  BD 27EA				mov	bp,27EAh
020A:FCD4  26: 8B 1D				mov	bx,es:[di]
020A:FCD7  26: 8B 45 02				mov	ax,es:[di+2]
020A:FCDB  E8 067A				call	sub_11			; (0358)
020A:FCDE  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FCE3  45					inc	bp
020A:FCE4  26: 8B 45 02				mov	ax,es:[di+2]
020A:FCE8  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:FCE8  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:FCED  8B C5				mov	ax,bp
020A:FCEF  2D 27EA				sub	ax,27EAh
020A:FCF2  3D 000C				cmp	ax,0Ch
020A:FCF5  73 06				jae	loc_2853		; Jump if above or =
020A:FCF7  BD 27EA				mov	bp,27EAh
020A:FCFA  83 C5 0B				add	bp,0Bh
020A:FCFD			loc_2853:
020A:FCFD  45					inc	bp
020A:FCFE  BE 3140				mov	si,3140h
020A:FD01  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FD01  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FD06  26: F6 45 04 80			test	byte ptr es:[di+4],80h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 524

020A:FD0B  74 08				jz	loc_2854		; Jump if zero
020A:FD0D  BE 317F				mov	si,317Fh
020A:FD10  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FD10  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FD15			loc_2854:
020A:FD15  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:FD1A  75 10				jnz	loc_2855		; Jump if not zero
020A:FD1C  26: 8A 45 32				mov	al,es:[di+32h]
020A:FD20  D0 C8				ror	al,1			; Rotate
020A:FD22  D0 C8				ror	al,1			; Rotate
020A:FD24  D0 C8				ror	al,1			; Rotate
020A:FD26  24 07				and	al,7
020A:FD28  3C 07				cmp	al,7
020A:FD2A  75 08				jne	loc_2856		; Jump if not equal
020A:FD2C			loc_2855:
020A:FD2C  BE 3198				mov	si,3198h
020A:FD2F  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FD2F  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FD34			loc_2856:
020A:FD34  26: 8A 45 05				mov	al,es:[di+5]
020A:FD38  24 03				and	al,3
020A:FD3A  3C 03				cmp	al,3
020A:FD3C  74 15				je	loc_2857		; Jump if equal
020A:FD3E  26: 8A 45 06				mov	al,es:[di+6]
020A:FD42  0A C0				or	al,al			; Zero ?
020A:FD44  74 0D				jz	loc_2857		; Jump if zero
020A:FD46  BE 31A5				mov	si,31A5h
020A:FD49  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FD49  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FD4E  9A 16FA:0078		;*		call	far ptr sub_225		;*(16FA:0078)
020A:FD4E  9A 78 00 FA 16			db	 9Ah, 78h, 00h,0FAh, 16h
020A:FD53			loc_2857:
020A:FD53  8B C5				mov	ax,bp
020A:FD55  2D 27EA				sub	ax,27EAh
020A:FD58  3D 001F				cmp	ax,1Fh
020A:FD5B  73 06				jae	loc_2858		; Jump if above or =
020A:FD5D  BD 27EA				mov	bp,27EAh
020A:FD60  83 C5 1E				add	bp,1Eh
020A:FD63			loc_2858:
020A:FD63  45					inc	bp
020A:FD64  26: 8A 45 05				mov	al,es:[di+5]
020A:FD68  A8 02				test	al,2
020A:FD6A  74 08				jz	loc_2859		; Jump if zero
020A:FD6C  B9 003B				mov	cx,3Bh
020A:FD6F  E8 8F7A				call	sub_140			; (8CEC)
020A:FD72  EB 14				jmp	short loc_2860		; (FD88)
020A:FD74			loc_2859:
020A:FD74  BD 282A				mov	bp,282Ah
020A:FD77  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:FD7D  83 C5 02				add	bp,2
020A:FD80  B9 003B				mov	cx,3Bh
020A:FD83  E8 8F66				call	sub_140			; (8CEC)
020A:FD86  EB 3B				jmp	short loc_2864		; (FDC3)
020A:FD88			loc_2860:
020A:FD88  26: 8A 45 05				mov	al,es:[di+5]
020A:FD8C  24 03				and	al,3
020A:FD8E  3C 03				cmp	al,3
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 525

020A:FD90  74 02				je	loc_2861		; Jump if equal
020A:FD92  EB 2F				jmp	short loc_2864		; (FDC3)
020A:FD94			loc_2861:
020A:FD94  8B C5				mov	ax,bp
020A:FD96  2D 27EA				sub	ax,27EAh
020A:FD99  3D 002F				cmp	ax,2Fh
020A:FD9C  73 06				jae	loc_2862		; Jump if above or =
020A:FD9E  BD 27EA				mov	bp,27EAh
020A:FDA1  83 C5 2E				add	bp,2Eh
020A:FDA4			loc_2862:
020A:FDA4  45					inc	bp
020A:FDA5  8D 75 48				lea	si,[di+48h]		; Load effective addr
020A:FDA8  32 ED				xor	ch,ch			; Zero register
020A:FDAA  26: 8A 4D 06				mov	cl,es:[di+6]
020A:FDAE  80 E9 48				sub	cl,48h			; 'H'
020A:FDB1  83 F9 40				cmp	cx,40h
020A:FDB4  76 04				jbe	locloop_2863		; Jump if below or =
020A:FDB6  B9 0040				mov	cx,40h
020A:FDB9  FC					cld				; Clear direction
  
020A:FDBA			locloop_2863:
020A:FDBA  26: AC				lods byte ptr es:[si]		; String [si] to al
020A:FDBC  3E: 88 46 00				mov	ds:[bp],al
020A:FDC0  45					inc	bp
020A:FDC1  E2 F7				loop	locloop_2863		; Loop if cx > 0
  
020A:FDC3			loc_2864:
020A:FDC3  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:FDC8  06					push	es
020A:FDC9  57					push	di
020A:FDCA  BA 27CA				mov	dx,27CAh
020A:FDCD  E8 8188				call	sub_113			; (7F58)
020A:FDD0  5F					pop	di
020A:FDD1  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:FDD6  5A					pop	dx
020A:FDD7  8E C2				mov	es,dx
020A:FDD9  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:FDDE  5A					pop	dx
020A:FDDF  75 0A				jnz	loc_2865		; Jump if not zero
020A:FDE1  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:FDE6  74 03				je	loc_2865		; Jump if equal
020A:FDE8  E8 A0F9				call	sub_168			; (9EE4)
020A:FDEB			loc_2865:
020A:FDEB  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:FDF0			loc_2866:
020A:FDF0  BB 377F				mov	bx,377Fh
020A:FDF3  26: 8A 45 05				mov	al,es:[di+5]
020A:FDF7  25 000F				and	ax,0Fh
020A:FDFA  D7					xlat				; al=[al+[bx]] table
020A:FDFB  0A C0				or	al,al			; Zero ?
020A:FDFD  75 04				jnz	loc_2867		; Jump if not zero
020A:FDFF  26: 8A 45 06				mov	al,es:[di+6]
020A:FE03			loc_2867:
020A:FE03  03 F8				add	di,ax
020A:FE05  E9 FEAB				jmp	loc_2850		; (FCB3)
020A:FE08			loc_2868:
020A:FE08  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 526

020A:FE0D  5A					pop	dx
020A:FE0E  8E C2				mov	es,dx
020A:FE10  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:FE15  5A					pop	dx
020A:FE16  75 0A				jnz	loc_2869		; Jump if not zero
020A:FE18  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:FE1D  74 03				je	loc_2869		; Jump if equal
020A:FE1F  E8 A0C2				call	sub_168			; (9EE4)
020A:FE22			loc_2869:
020A:FE22  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:FE27  2E: 89 16 0092			mov	cs:data_113,dx		; (020A:0092=4D00h)
020A:FE2C  5A					pop	dx
020A:FE2D  8E DA				mov	ds,dx
020A:FE2F  2E: 3B 16 4861			cmp	dx,cs:data_648		; (020A:4861=0D233h)
020A:FE34  5A					pop	dx
020A:FE35  75 0A				jnz	loc_2870		; Jump if not zero
020A:FE37  2E: 3B 16 4863			cmp	dx,cs:data_649		; (020A:4863=0B9E8h)
020A:FE3C  74 03				je	loc_2870		; Jump if equal
020A:FE3E  E8 A0A3				call	sub_168			; (9EE4)
020A:FE41			loc_2870:
020A:FE41  2E: 8B 16 0092			mov	dx,cs:data_113		; (020A:0092=4D00h)
020A:FE46  5D					pop	bp
020A:FE47  5F					pop	di
020A:FE48  5E					pop	si
020A:FE49  5A					pop	dx
020A:FE4A  59					pop	cx
020A:FE4B  5B					pop	bx
020A:FE4C  58					pop	ax
020A:FE4D  C3					retn
020A:FE4E  87 DB				xchg	bx,bx
020A:FE50  50					push	ax
020A:FE51  53					push	bx
020A:FE52  51					push	cx
020A:FE53  52					push	dx
020A:FE54  56					push	si
020A:FE55  57					push	di
020A:FE56  55					push	bp
020A:FE57  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:FE5C  1E					push	ds
020A:FE5D  2E: FF 36 4863			push	cs:data_649		; (020A:4863=0B9E8h)
020A:FE62  06					push	es
020A:FE63  FC					cld				; Clear direction
020A:FE64  BF 0008				mov	di,8
020A:FE67  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:FE6B  75 0A				jne	loc_2872		; Jump if not equal
020A:FE6D  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:FE72  75 03				jne	loc_2872		; Jump if not equal
020A:FE74  E9 026C		;*		jmp	loc_10			;*(00E3)
020A:FE74  E9 6C 02				db	0E9h, 6Ch, 02h
020A:FE77			loc_2872:
020A:FE77  26: 8A 45 04				mov	al,es:[di+4]
020A:FE7B  A8 40				test	al,40h			; '@'
020A:FE7D  75 03				jnz	loc_2873		; Jump if not zero
020A:FE7F  E9 0249				jmp	loc_9			; (00CB)
020A:FE82			loc_2873:
020A:FE82  26: F6 45 05 0F			test	byte ptr es:[di+5],0Fh
020A:FE87  75 03				jnz	loc_2874		; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 527

020A:FE89  E9 023F				jmp	loc_9			; (00CB)
020A:FE8C			loc_2874:
020A:FE8C  E8 98E5				call	sub_148			; (9774)
020A:FE8F  BD 27EA				mov	bp,27EAh
020A:FE92  26: 8B 1D				mov	bx,es:[di]
020A:FE95  26: 8B 45 02				mov	ax,es:[di+2]
020A:FE99  E8 04BC				call	sub_11			; (0358)
020A:FE9C  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FEA1  45					inc	bp
020A:FEA2  26: 8B 45 02				mov	ax,es:[di+2]
020A:FEA6  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:FEA6  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:FEAB  26: 8A 45 04				mov	al,es:[di+4]
020A:FEAF  3C 5F				cmp	al,5Fh			; '_'
020A:FEB1  75 02				jne	loc_2875		; Jump if not equal
020A:FEB3  EB 38				jmp	short loc_2877		; (FEED)
020A:FEB5			loc_2875:
020A:FEB5  8B C5				mov	ax,bp
020A:FEB7  2D 27EA				sub	ax,27EAh
020A:FEBA  3D 000C				cmp	ax,0Ch
020A:FEBD  73 06				jae	loc_2876		; Jump if above or =
020A:FEBF  BD 27EA				mov	bp,27EAh
020A:FEC2  83 C5 0B				add	bp,0Bh
020A:FEC5			loc_2876:
020A:FEC5  45					inc	bp
020A:FEC6  BE 3144				mov	si,3144h
020A:FEC9  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FEC9  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FECE  26: 8A 45 05				mov	al,es:[di+5]
020A:FED2  B1 04				mov	cl,4
020A:FED4  D2 C8				ror	al,cl			; Rotate
020A:FED6  25 0003				and	ax,3
020A:FED9  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:FEDB  BB AE95				mov	bx,0AE95h
020A:FEDE  03 D8				add	bx,ax
020A:FEE0  2E: 8B 1F				mov	bx,cs:[bx]
020A:FEE3  FF E3				jmp	bx			;*
020A:FEE5  6A					db	6Ah
020A:FEE6  AF					scasw				; Scan es:[di] for ax
020A:FEE7  60					db	60h
020A:FEE8  AF					scasw				; Scan es:[di] for ax
020A:FEE9  56					push	si
020A:FEEA  AF					scasw				; Scan es:[di] for ax
020A:FEEB  4C					dec	sp
020A:FEEC  AF					scasw				; Scan es:[di] for ax
020A:FEED			loc_2877:
020A:FEED  8B C5				mov	ax,bp
020A:FEEF  2D 27EA				sub	ax,27EAh
020A:FEF2  3D 000C				cmp	ax,0Ch
020A:FEF5  73 06				jae	loc_2878		; Jump if above or =
020A:FEF7  BD 27EA				mov	bp,27EAh
020A:FEFA  83 C5 0B				add	bp,0Bh
020A:FEFD			loc_2878:
020A:FEFD  45					inc	bp
020A:FEFE  BE 3148				mov	si,3148h
020A:FF01  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FF01  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 528

020A:FF06  26: 8A 45 09				mov	al,es:[di+9]
020A:FF0A  BE 461D				mov	si,461Dh
020A:FF0D			loc_2879:
020A:FF0D  80 3C FF				cmp	byte ptr [si],0FFh
020A:FF10  74 1D				je	loc_2883		; Jump if equal
020A:FF12  3A 04				cmp	al,[si]
020A:FF14  74 05				je	loc_2880		; Jump if equal
020A:FF16  83 C6 05				add	si,5
020A:FF19  EB F2				jmp	short loc_2879		; (FF0D)
020A:FF1B			loc_2880:
020A:FF1B  56					push	si
020A:FF1C  8B 74 03				mov	si,[si+3]
020A:FF1F  83 FE 00				cmp	si,0
020A:FF22  74 05				je	loc_2882		; Jump if equal
020A:FF24  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FF24  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FF29			loc_2882:
020A:FF29  5E					pop	si
020A:FF2A  8B 5C 01				mov	bx,[si+1]
020A:FF2D  FF E3				jmp	bx			;*Register jump
020A:FF2F			loc_2883:
020A:FF2F  BE 316E				mov	si,316Eh
020A:FF32  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FF32  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FF37  E9 012A		;*		jmp	loc_7			;*(0064)
020A:FF37  E9 2A 01				db	0E9h, 2Ah, 01h
020A:FF3A  E9 0127		;*		jmp	loc_7			;*(0064)
020A:FF3A  E9 27 01				db	0E9h, 27h, 01h
020A:FF3D  E9 018B				jmp	loc_9			; (00CB)
020A:FF40  26: 83 7D 0A FF			cmp	word ptr es:[di+0Ah],0FFFFh
020A:FF45  75 03				jne	loc_2884		; Jump if not equal
020A:FF47  E9 011A		;*		jmp	loc_7			;*(0064)
020A:FF47  E9 1A 01				db	0E9h, 1Ah, 01h
020A:FF4A			loc_2884:
020A:FF4A  45					inc	bp
020A:FF4B  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:FF4F  E8 045A				call	sub_12			; (03AC)
020A:FF52  E9 010F		;*		jmp	loc_7			;*(0064)
020A:FF52  E9 0F 01				db	0E9h, 0Fh, 01h
020A:FF55  45					inc	bp
020A:FF56  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:FF5A  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:FF5E  9A 16FA:0218		;*		call	far ptr sub_230		;*(16FA:0218)
020A:FF5E  9A 18 02 FA 16			db	 9Ah, 18h, 02h,0FAh, 16h
020A:FF63  E9 00FE		;*		jmp	loc_7			;*(0064)
020A:FF63  E9 FE 00				db	0E9h,0FEh, 00h
020A:FF66  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:FF6A  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:FF6E  45					inc	bp
020A:FF6F  E8 03E6				call	sub_11			; (0358)
020A:FF72  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FF77  45					inc	bp
020A:FF78  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:FF7C  9A 16FA:0068		;*		call	far ptr sub_224		;*(16FA:0068)
020A:FF7C  9A 68 00 FA 16			db	 9Ah, 68h, 00h,0FAh, 16h
020A:FF81  45					inc	bp
020A:FF82  26: 8A 45 0E				mov	al,es:[di+0Eh]
     Temp.lst						 Sourcer Listing v3.07    10-Sep-22  11:48 am   Page 529

020A:FF86  32 E4				xor	ah,ah			; Zero register
020A:FF88  9A 16FA:0184		;*		call	far ptr sub_228		;*(16FA:0184)
020A:FF88  9A 84 01 FA 16			db	 9Ah, 84h, 01h,0FAh, 16h
020A:FF8D  E9 00D4		;*		jmp	loc_7			;*(0064)
020A:FF8D  E9 D4 00				db	0E9h,0D4h, 00h
020A:FF90  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:FF94  9A 16FA:0184		;*		call	far ptr sub_228		;*(16FA:0184)
020A:FF94  9A 84 01 FA 16			db	 9Ah, 84h, 01h,0FAh, 16h
020A:FF99  E9 00C8		;*		jmp	loc_7			;*(0064)
020A:FF99  E9 C8 00				db	0E9h,0C8h, 00h
020A:FF9C  BE 317F				mov	si,317Fh
020A:FF9F  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FF9F  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FFA4  EB 66				jmp	short loc_4		; (000C)
020A:FFA6  BE 3185				mov	si,3185h
020A:FFA9  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FFA9  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FFAE  EB 5C				jmp	short loc_4		; (000C)
020A:FFB0  BE 3192				mov	si,3192h
020A:FFB3  9A 16FA:1004		;*		call	far ptr sub_252		;*(16FA:1004)
020A:FFB3  9A 04 10 FA 16			db	 9Ah, 04h, 10h,0FAh, 16h
020A:FFB8  EB 52				jmp	short loc_4		; (000C)
020A:FFBA  EB 50				jmp	short loc_4		; (000C)
020A:FFBC  45					inc	bp
020A:FFBD  26: 8B 55 0A				mov	dx,es:[di+0Ah]
020A:FFC1  B9 0010				mov	cx,10h
020A:FFC4  B0 41				mov	al,41h			; 'A'
  
020A:FFC6			locloop_2885:
020A:FFC6  8A D8				mov	bl,al
020A:FFC8  26: D1 55 0A				rcl	word ptr es:[di+0Ah],1	; Rotate thru carry
020A:FFCC  73 05				jnc	loc_2886		; Jump if carry=0
020A:FFCE  3E: 88 5E 00				mov	ds:[bp],bl
020A:FFD2  45					inc	bp
020A:FFD3			loc_2886:
020A:FFD3  80 C3 20				add	bl,20h			; ' '
020A:FFD6  26: D1 55 0D				rcl	word ptr es:[di+0Dh],1	; Rotate thru carry
020A:FFDA  72 05				jc	loc_2887		; Jump if carry Set
020A:FFDC  3E: 88 5E 00				mov	ds:[bp],bl
020A:FFE0  45					inc	bp
020A:FFE1			loc_2887:
020A:FFE1  FE C0				inc	al
020A:FFE3  E2 E1				loop	locloop_2885		; Loop if cx > 0
  
020A:FFE5  B9 0006				mov	cx,6
020A:FFE8  B0 55				mov	al,55h			; 'U'
020A:FFEA  8A D8				mov	bl,al
020A:FFEC  26: D0 55 0C				rcl	byte ptr es:[di+0Ch],1	; Rotate thru carry
020A:FFF0  73 05				jnc	loc_2888		; Jump if carry=0
020A:FFF2  3E: 88 5E 00				mov	ds:[bp],bl
020A:FFF6  45					inc	bp
020A:FFF7			loc_2888:
020A:FFF7  80 C3 20				add	bl,20h			; ' '
020A:FFFA  26: D0 55 0F				rcl	byte ptr es:[di+0Fh],1	; Rotate thru carry
020A:FFFE  72 05		;*		jc	loc_3			;*Jump if carry Set
020A:FFFE  72 05				db	 72h, 05h
  
